{"version":3,"file":"mtproto.worker.d557b1ca923ad81e06f6.chunk.js","mappings":"uBAAIA,ECEIC,EACAC,EACAC,EACAC,ECLJC,E,mCCQG,MAAMC,EAAyE,CAAC,GAAK,CAAC,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,IAAK,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,GAAI,GAAG,CAAC,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,KAAM,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,IAAK,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,MAAO,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,OAAO,MAAO,OAAO,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAckBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,MAAO,kBAAkB,MAAO,QAAQ,MAAO,kBAAkB,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,wCAAwC,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,GAAI,QAAQ,IAAK,QAAQ,IAAK,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkiBAAiB,KAAM,iBAAiB,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,IAEp35EC,EAAmCD,EAAc,IACvD,IAAI,MAAME,KAAWF,EAChBE,GACDC,OAAOC,OAAOH,EAAOD,EAAcE,IAIvC,W,uECTO,MAAMG,EAAaC,UAAYA,UAAUC,UAAY,KAU/CC,GATWF,UAAUC,UAAUE,OAAO,yBACzBH,UAAUC,UAAUG,cAAcC,QAAQ,WACzC,SAASC,KAAKN,UAAUC,YAAc,aAAaK,KAAKN,UAAUO,SAG7D,mBAAmBD,KAAKN,UAAUQ,WACxC,aAAvBR,UAAUQ,UAA2BR,UAAUS,eAAiB,IAC/D,gBAEwB,oBAAuBV,KAAe,yBAAyBO,KAAKP,IAAkBA,EAAWW,MAAM,YAAcX,EAAWW,MAAM,aACrJC,EAAaX,UAAUC,UAAUG,cAAcC,QAAQ,YAAc,EAIbL,UAAUS,eAAiB,GAAKT,UAAUC,UAAUE,OAAO,mH,uDCVzH,MAAMS,EAAa,4CACpBC,EAAS,YAETC,EAA6B,CACjC,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,IAAK,KAqBQ,SAASC,EAAgBC,EAAcC,GAAW,GAC/D,OAAOC,EAAkBF,EAAM,CAC7BG,eAAe,EACfF,SAAAA,EACAG,YAAY,IAWT,SAASF,EAAkBF,EAAcK,EAAoC,IAClF,MAAMC,EAASD,EAAQE,YAAiC,MAAnBP,EAAKQ,OAAO,GAC3CC,EAAeT,EAMrB,OALGK,EAAQF,gBAAeH,EApCrB,SAA8BA,GACnC,OAAOA,EAAKU,QAAQd,EAAY,IAAIc,QAAQb,EAAQ,IAmCnBc,CAAqBX,IACnDK,EAAQJ,WAAUD,EA1BhB,SAAwBA,GAC7B,OAAOA,EAAKU,QAAQ,iBAAkBE,IACpC,MAAMC,EAAa,IAAYD,GAC/B,OAAOC,MAAAA,EAAAA,EAAcD,KAuBKE,CAAed,IACxCK,EAAQD,aAAYJ,EAAOA,EAAKZ,eAChCkB,IAAQN,EAAO,IAAMA,GACrBK,EAAQJ,WAAUD,GAAQ,IApCxB,SAAqBA,GAC1B,OAAOA,EAAKZ,cAAcsB,QAAQ,YAAaE,IAC7C,MAAMC,EAAaf,EAAIc,GACvB,OAAOC,MAAAA,EAAAA,EAAcD,KAiCeG,CAAYN,IAC3CT,I,wCCpFT,MAAMgB,EAAkB,IAEjB,SAASC,EAAsBC,EAAoDb,GAIxF,MACMc,EADW,MACaC,OAAS,IAAM,GAE7C,IAAIC,EACJ,OAAOH,EAASI,GACd,IAAK,yBACHD,EAAM,CAAC,QANM,GAMY,GAAIH,EAASK,GAAIL,EAASM,YAAYC,OAAOC,SAASC,KAAKX,GACpF,MAGF,IAAK,4BACHK,EAAM,CAAC,WAXM,GAWe,GAAIH,EAASK,GAAIL,EAASM,YAAYC,OAAOC,SAASC,KAAKX,GACvF,MAGF,IAAK,6BACHK,EAAM,CAAC,YAAaH,EAASU,SAAUV,EAASW,OAAOC,IAAM,MAAQ,SAASH,KAAKX,GACnF,MAEF,IAAK,uBAKHK,EAAM,CAAC,kBAJKH,EAASa,WAAiDR,IACnEL,EAASa,WAAwDC,YACjEd,EAASa,WAAmDE,UAC7Df,EAASa,WAAWT,EACQJ,EAASgB,eAAeP,KAAKX,GAC3D,MAGF,IAAK,oBACHK,EAAMH,EAASiB,UAAY,IAAMjB,EAASkB,SAC1C,MAGF,IAAK,uBACHf,EAAM,CAAC,UAAWH,EAASmB,KAAKV,KAAKX,GACrC,MAGF,QACEsB,QAAQC,MAAM,yBAA0BrB,GACxCG,EAAM,GAKV,OAAOA,IAAOhB,MAAAA,OAAO,EAAPA,EAASmC,YAAa,YAAc,KAAOrB,EAAM,IAAMA,EAAMA,GAItE,SAASsB,EAAWC,EAAmBrC,GAM5C,OAAmBqC,EAAO,IAHVC,mBAAmBC,KAAKC,UAAUxC,M,oFC3B7C,MAAMyC,EAUXC,YAAYC,IACV,OAAWC,KAAMD,GAEd,WACDC,KAAKC,MAAQ,SAGfD,KAAKE,oBAAqB,EAC1BF,KAAKG,KAAM,QAAO,CAAC,MAAOJ,EAAGE,MAAMvB,KAAK,MACxCsB,KAAKG,IAAI,eAETH,KAAKI,cAAa,GAElBP,EAAIQ,UAAUC,KAAKN,MAGdO,cACL,OAAOP,KAAKE,mBAGPE,aAAaI,GAAY,GAC9B,GAAGR,KAAKS,gBAAkBD,EACxB,OAAOR,KAAKS,cAGd,MAAMC,EAAgB,CAACC,EAAoBC,K,MACzC,MAAMC,EAAaC,MAAMC,KAAKJ,EAAGE,YACjC,IAAI,MAAMG,KAAaH,EACrBF,EAAGM,YAAYD,GAGjB,GAAiB,QAAb,EAAAJ,EAAMM,eAAO,eAAE/C,OAInB,IAAI,MAAMgD,KAASP,EAAMM,QACpBP,EAAGE,WAAWO,SAASD,EAAMH,YAIhCL,EAAGU,YAAYF,EAAMH,UAAWG,EAAMG,QAASH,EAAMI,mBASzD,IACE,IAAIC,EAAUC,UAAUC,KAAK1B,KAAKC,KAAMD,KAAKrE,SAE7C,IAAI6F,EACF,OAAOG,QAAQC,SAEjB,MAAMtC,GAGN,OAFAU,KAAKG,IAAIb,MAAM,mBAAqBA,EAAgBuC,SACpD7B,KAAKE,oBAAqB,EACnByB,QAAQC,OAAOtC,GAGxB,IAAIwC,GAAW,EAOf,OANAC,YAAW,KACLD,GACFN,EAAQQ,SAAQ,OAAU,yBAE3B,KAEIhC,KAAKS,cAAgB,IAAIkB,SAAqB,CAACM,EAASL,KAC7DJ,EAAQU,UAAaC,IACnBL,GAAW,EACX,MAAM/B,EAAKyB,EAAQY,OACnB,IAAIC,GAAY,EAEhBrC,KAAKG,IAAI,UAETJ,EAAGiC,QAAW1C,IACZU,KAAKE,oBAAqB,EAC1BF,KAAKG,IAAIb,MAAM,8CAA+CA,GAC9DsC,EAAOtC,IAGTS,EAAGuC,QAAWC,IACZvC,KAAKG,IAAIb,MAAM,UAAWiD,IACzBF,GAAarC,KAAKI,gBAGrBL,EAAGyC,QAAWD,IACZvC,KAAKG,IAAIb,MAAM,SAAUiD,GACzB,MAAME,EAAcF,EAAEG,OAEtB1C,KAAKI,aAAaiC,GAAY,GAE3BI,EAAYT,SACbS,EAAYT,QAAQO,GAGtBxC,EAAG4C,SAGL5C,EAAG6C,gBAAmBL,IACpBvC,KAAKG,IAAIb,MAAM,0BAGjB2C,EAAQjC,KAAKD,GAAKA,IAGpByB,EAAQQ,QAAWG,IACjBL,GAAW,EACX9B,KAAKE,oBAAqB,EAC1BF,KAAKG,IAAIb,MAAM,8CAA+C6C,GAC9DP,EAAOO,IAGTX,EAAQqB,gBAAmBV,IACzBL,GAAW,EACX9B,KAAKG,IAAI2C,KAAK,8BAA+BX,EAAMY,WAAY,KAAMZ,EAAMa,YAE3E,MAAMN,EAASP,EAAMO,OACf3C,EAAK2C,EAAON,OAClBpC,KAAKiD,OAAOC,SAAStC,IAOnB,GAAIb,EAAGoD,iBAAiB/B,SAASR,EAAMX,MAEhC,CACL,MACMU,EADM+B,EAAOD,YACJW,YAAYxC,EAAMX,MACjCS,EAAcC,EAAIC,OAxFA,EAACb,EAAiBa,KAC1C,MAAMD,EAAKZ,EAAGsD,kBAAkBzC,EAAMX,MACtCS,EAAcC,EAAIC,IAkFZyC,CAAkBtD,EAAIa,UAWzB0C,cAAuCvD,G,MAC5C,OAAmE,QAA5D,EAAAC,KAAKK,UAAUkD,MAAMC,GAAaA,EAASvD,OAASF,EAAGE,cAAK,QAAI,IAAIJ,EAAIE,GAG1EuD,sBAAsBG,GAC3BzD,KAAKK,UAAU6C,SAASQ,IACtB,GAAGD,GAAYA,IAAaC,EAC1B,OAGF,MAAM3D,EAAK2D,EAAQ3D,GAChBA,IACDA,EAAGuC,QAAU,OACbvC,EAAG4C,aAjKM,EAAAtC,UAAmB,GAuKrB,MAAMsD,EAKnB7D,YAAYC,EAAO6D,GACjB5D,KAAK4D,UAAYA,EACjB5D,KAAKG,KAAM,QAAO,CAAC,MAAOJ,EAAGE,KAAM2D,GAAWlF,KAAK,MACnDsB,KAAK6D,IAAMhE,EAAIiE,OAAO/D,GAqCjBgE,OAAOC,EAA8BJ,GAM1C,OAJI9C,MAAMmD,QAAQD,KAChBA,EAAY,GAAGE,OAAOF,IAGjBhE,KAAKmE,eAAe,aAAcf,GAC/BY,EAAuBI,KAAKJ,GAAcZ,EAAYW,OAAOC,MACxB,GAAIJ,GAG9CS,MAAMT,GACX,OAAO5D,KAAKmE,eAAe,aAAcf,GAAgBA,EAAYiB,SAA2B,GAAIT,GAG/FU,KAAKN,EAA8BO,EAAoBX,GAiB5D,OALI9C,MAAMmD,QAAQD,KAChBA,EAAY,GAAGE,OAAOF,GACtBO,EAAQ,GAAGL,OAAOK,IAGbvE,KAAKmE,eAAe,aAAcf,GAC/BY,EAAuBI,KAAI,CAACJ,EAAWQ,IAAQpB,EAAYqB,IAAIF,EAAMC,GAAMR,MACxC,GAAIJ,GA8E5Cc,IAAOV,EAA8BJ,GAO1C,OAJI9C,MAAMmD,QAAQD,KAChBA,EAAY,GAAGE,OAAOF,IAGpBA,EAAU7F,OAIP6B,KAAKmE,eAAkB,YAAaf,GACjCY,EAAuBI,KAAKJ,GAAcZ,EAAYsB,IAAIV,MACxB,GAAIJ,GALvCjC,QAAQM,QAAQ,IAQnBkC,eACNQ,EACAC,EACAzE,EACAyD,EAAY5D,KAAK4D,WAEjB,IAAIiB,EAOJ,OALG1E,IACD0E,EAAOC,YAAYC,MACnB/E,KAAKG,IAAIA,EAAM,YAGVH,KAAK6D,IAAIzD,eAAe4E,MAAMjF,GAC5B,IAAI4B,SAAW,CAACM,EAASL,KAK9B,MAAMa,EAAc1C,EAAG0C,YAAY,CAACmB,GAAYe,GAE1CM,EAAU,KACdC,aAAaC,GACbvD,EAAOa,EAAYnD,QAIf8F,EAAa,KACjBF,aAAaC,GAEVhF,GACDH,KAAKG,IAAIA,EAAM,QAAS2E,YAAYC,MAAQF,GAQ9C,MAAMQ,EAAUC,EAASlB,KAAKmB,GAAMA,EAAEnD,SACtCH,EAAQgC,EAAUoB,EAAUA,EAAQ,KAGtC5C,EAAYT,QAAUiD,EAGtB,MAAMO,EAAsC,cAATb,EAChCa,IACD/C,EAAYgD,WAAa,IAAML,KAGjC,MAAMD,EAAUpD,YAAW,KACzB/B,KAAKG,IAAIb,MAAM,2BAA4BmD,EAAatC,KACvD,KAOGuF,EAAiBd,EAASnC,EAAYW,YAAYQ,IAElDK,EAAUnD,MAAMmD,QAAQyB,GACxBJ,EAAyBrB,EAAUyB,EAAiB,GAAGxB,OAAOwB,GAEpE,GAAGF,EACD,OAGF,MAAMrH,EAASmH,EAASnH,OACxB,IAAIwH,EAAOxH,EAEX,MAAMyH,EAAoB,KACrBnD,EAAYnD,SAITqG,GACJP,KAIJ,IAAI,IAAIS,EAAI,EAAGA,EAAI1H,IAAU0H,EAAG,CAC9B,MAAMrE,EAAU8D,EAASO,GACzBrE,EAAQQ,QAAUiD,EAClBzD,EAAQU,UAAY0D,QAMrBE,OAAUlC,GACf,OAAO5D,KAAKmE,eAAoB,YAAaf,GAAgBA,EAAY0C,UAA6B,GAAIlC,M,uECvd9G,IAAImC,EACG,SAASC,IACd,OAAOD,EAGF,SAASE,EAAeC,GAC7B,OAAOH,EAAcG,E,qDCsJhB,MAAMC,UAAkB,IAO7BrG,cACEsG,QAEApG,KAAKqG,KAAO,KACZrG,KAAKsG,iBAAmB,GACxBtG,KAAKuG,SAAU,EAEfvG,KAAKwG,iBAAiB,aAAa,EAAElI,GAAAA,MACnC0B,KAAKqG,KAAO/H,EAAGmI,cAGjBzG,KAAKwG,iBAAiB,kBAAmBE,IACvC1G,KAAKuG,QAAUG,KAGjB1G,KAAKwG,iBAAiB,4BAA6BG,IACjD3G,KAAKsG,iBAAiBK,EAAO1G,MAAQ0G,KAGvC3G,KAAK4G,cAAgB,CAACrE,KAAMsE,KAC1BT,MAAMQ,cAAcrE,KAAMsE,GAC1B,kBAAiCC,WAAW,QAAS,CAAC7G,KAAMsC,EAAasE,KAAAA,KAGvE,MACF7G,KAAKwG,iBAAiB,oBAAoB,EAAEO,SAAAA,MAC1C/G,KAAK+G,SAAWA,KAKfC,sBACL,OAAOhH,KAAKsG,iBAGPW,aACL,OAAOjH,KAAKuG,QAGPW,uBAAuBL,GAE5BT,MAAMQ,iBAAiBC,IAI3B,MAAM,EAAY,IAAIV,EACtB,eAA2B,EAC3B,U,wBCrJA,MACA,EADwB,IAnDjB,MAAP,cACU,KAAAgB,MAAe,GACf,KAAAzD,QAAU0D,EAAA,EAOXC,WACL,OAAO1F,QAAQM,QAAQjC,KAAKmH,OAGvBG,SAASC,EAAahD,ICvBhB,SAAyBiD,EAAaD,EAAahD,GAChE,MAAMkD,EAAWF,EAAIG,MAAM,MAC3B,EAAAC,EAAA,GAAgBH,EAAQC,EAASG,MAAM,GAAI,GAAGlJ,KAAK,MAAM+I,EAASI,OAAStD,EDsBzEuD,CAAgB9H,KAAKmH,MAAOI,EAAKhD,GAEjC,MAAMwD,EAAQR,EAAIG,MAAM,KAAK,GAChB,aAAVK,GACD,gBAAwB,mBAAoB,CAACR,IAAAA,EAAKhD,MAAAA,EAAOwC,SAAU/G,KAAKmH,MAAMJ,WAGhF/G,KAAKgI,YAAYD,EAAO/H,KAAKmH,MAAMY,IAG9BC,YAAmCT,EAAQhD,EAAiB0D,GAAS,EAAMC,GAC7ED,IACDjI,KAAKmH,MAAMI,GAAOhD,GAGpBvE,KAAKmI,qBAAqBZ,EAAKhD,EAAO2D,GAGjCC,qBAA4CZ,EAAQhD,EAAkBvE,KAAKmH,MAAMI,GAAMW,GAC5F,kBAAwCpB,WAAW,SAAU,CAAC7G,KAAM,QAASsH,IAAAA,EAAKhD,MAAAA,IAElFvE,KAAK0D,QAAQ0E,IAAI,CACf,CAACb,GAAMhD,GACN2D,K,gEE/BQ,MAAMG,EAenBvI,YAAsBwI,EAAsBlJ,EAAamJ,GAAnC,KAAAD,KAAAA,EAAsB,KAAAlJ,IAAAA,EAXpC,KAAAoJ,QAIH,GAQHxI,KAAKyI,MAAQ,YAAe,EAE5B,IAAIC,EAAW,WAAiB,KAAAC,IAC7B3I,KAAKyI,QAAOC,GAAY,YAE3B1I,KAAKG,KAAM,EAAAyI,EAAA,IAAO,QAAQN,IAASC,EAAWG,GAC9C1I,KAAKG,IAAI,eAETH,KAAK6I,WAAY,EAGZC,MAAMC,EAAkBpE,GAC7B,MAAMxG,EAAS4K,EAAK5K,OAIpB,OAHA6B,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,0BAA2BtK,GAGjD6K,MAAMhJ,KAAKZ,IAAK,CAAC6J,OAAQ,OAAQF,KAAAA,EAAMpE,KAAAA,IAAOK,MAAMkE,IACzD,GAAuB,MAApBA,EAASvC,SAAmBhC,EAM7B,MALAuE,EAASC,cAAcnE,MAAMoE,IAC3BpJ,KAAKG,IAAIb,MAAM,UACb,IAAI+J,YAAY,SAASC,OAAO,IAAIC,WAAWH,QAG7CF,EAUR,OAPAlJ,KAAKwJ,cAAa,GAOXN,EAASC,cAAcnE,MAAMoE,GAE3B,IAAIG,WAAWH,QAEtBK,IAEF,MADAzJ,KAAKwJ,cAAa,GACZC,KAIFD,aAAaX,GAChB7I,KAAK6I,YAAcA,GAAa7I,KAAK0J,YAIxC1J,KAAK6I,UAAYA,EAGjB,oBAAsC,QAASA,IAI1Cc,UACL3J,KAAKwJ,cAAa,GAClBxJ,KAAK0J,WAAY,EACjB1J,KAAKwI,QAAQtF,SAASsF,GAAYA,EAAQ5G,WAC1C5B,KAAKwI,QAAQrK,OAAS,EAGjByL,KAAKb,GACV,GAAG/I,KAAK6J,UACN,OAAO7J,KAAK8I,MAAMC,GACb,CACL,MAAMe,EAAU,IAAInI,SAAqB,CAACM,EAASL,KACjD5B,KAAKwI,QAAQlI,KAAK,CAAC2B,QAAAA,EAASL,OAAAA,EAAQmH,KAAAA,OAKtC,OAFA/I,KAAK+J,iBAEED,GAIGC,iB,qCACZ,IAAG/J,KAAKgK,UAAR,CAEAhK,KAAKgK,WAAY,EAEjB,IAAI,IAAInE,EAAI,EAAGA,EAAI7F,KAAKwI,QAAQrK,SAAU0H,EAAG,CAC3C,MAAM2C,EAAUxI,KAAKwI,QAAQ3C,IACvB,KAACkD,EAAI,QAAE9G,GAAWuG,EAExB,IAEEvG,QADqBjC,KAAK8I,MAAMC,IAEhC/I,KAAKwI,QAAQyB,OAAOpE,EAAG,GACvB,MAAM4D,GACNzJ,KAAKG,IAAIb,MAAM,4BAA6BmK,SACtC,EAAAS,EAAA,GAAM,OAGZrE,EAGJ7F,KAAKgK,WAAY,I,gSCrHN,MAAMG,UAAe,IASlCrK,YAAsBwI,EAAwBlJ,EAAamJ,GACzDnC,QADoB,KAAAkC,KAAAA,EAAwB,KAAAlJ,IAAAA,EAFtC,KAAAqJ,MAAQ,YAAe,EAuDvB,KAAA2B,WAAa,KACnBpK,KAAKG,IAAI,UAETH,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,uBAC7BzI,KAAK4G,cAAc,SAGb,KAAAyD,YAAe9H,IACrBvC,KAAKG,IAAIb,MAAM,cAAeiD,GAC9BvC,KAAK2C,SAGC,KAAA2H,YAAe/H,IACrBvC,KAAKG,IAAI,SAAUoC,GAEnBvC,KAAKuK,kBACLvK,KAAK4G,cAAc,UAGb,KAAA4D,cAAiBrI,IACvBnC,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,KAAM,gBAA8BtG,EAAMsI,KAAKC,YAE5E1K,KAAK4G,cAAc,UAAWzE,EAAMsI,OAG/B,KAAAb,KAAQb,IACb/I,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,0BAA2BM,EAAK5K,QAE7D6B,KAAK2K,GAAGf,KAAKb,IA9Eb,IAAIL,EAAW,WAAiB,KAAAC,IAMhC,OALG3I,KAAKyI,QAAOC,GAAY,YAC3B1I,KAAKG,KAAM,EAAAyI,EAAA,IAAO,MAAMN,IAASC,EAAWG,GAC5C1I,KAAKG,IAAI,eACTH,KAAK4K,UAEE5K,KAGDuK,kBACFvK,KAAK2K,KAIT3K,KAAK2K,GAAGE,oBAAoB,OAAQ7K,KAAKoK,YACzCpK,KAAK2K,GAAGE,oBAAoB,QAAS7K,KAAKsK,aAC1CtK,KAAK2K,GAAGE,oBAAoB,QAAS7K,KAAKqK,aAC1CrK,KAAK2K,GAAGE,oBAAoB,UAAW7K,KAAKwK,eAC5CxK,KAAK2K,QAAKG,GAGJF,UACN5K,KAAK2K,GAAK,IAAII,UAAU/K,KAAKZ,IAAK,UAClCY,KAAK2K,GAAGK,WAAa,cACrBhL,KAAK2K,GAAGnE,iBAAiB,OAAQxG,KAAKoK,YACtCpK,KAAK2K,GAAGnE,iBAAiB,QAASxG,KAAKsK,aACvCtK,KAAK2K,GAAGnE,iBAAiB,QAASxG,KAAKqK,aACvCrK,KAAK2K,GAAGnE,iBAAiB,UAAWxG,KAAKwK,eAQpC7H,QACL,GAAI3C,KAAK2K,GAAT,CAIA3K,KAAKG,IAAI,mBAET,IACEH,KAAK2K,GAAGhI,QACR,MAAM8G,IAGRzJ,KAAKsK,gBCzEM,SAASW,EAAqCC,GAC3D,IAAGC,UAAU,oBAAqBA,QAGhC,MAAM,IAAIC,MAAM,oBAGlB,OALED,OAAOE,gBAAgBH,GAKlBA,E,0SCOM,MAAMI,EAArB,cAgJU,KAAAC,SAAW,CAACd,EAAkBe,IAC7BC,EAAA,kBAAkC,CACvCxC,OAAQ,kBACRpC,KAAM,CAAC,CAACvI,GAAI0B,KAAK1B,GAAImM,KAAAA,EAAMe,UAAAA,IAC3BE,SAAU,CAACjB,EAAKrB,UAnIPuC,KAAKC,G,8CACMd,IAAnB9K,KAAK6L,WACN7L,KAAK8L,UAGP,MAAMC,EAAc,IAAIxC,WAAW,IAGnC,IAFA0B,EAAUc,KAEE,CACV,MAAMC,EAAOD,EAAY,IAAM,GAAOA,EAAY,IAAM,GAAOA,EAAY,IAAM,EAAKA,EAAY,GAC5FE,EAAQF,EAAY,IAAM,GAAOA,EAAY,IAAM,GAAOA,EAAY,IAAM,EAAKA,EAAY,GACnG,GAAsB,MAAnBA,EAAY,IACH,aAARC,GACQ,aAARA,GACQ,YAARA,GACQ,aAARA,GACQ,aAARA,GACQ,aAARA,GACS,IAATC,EAEF,MAEFhB,EAAUc,GAOZ,MAAMG,EAAkBH,EAAYnE,QAAQuE,UAEtCC,EAASL,EAAYnE,MAAM,EAAG,IAC9ByE,EAA2BN,EAAYnE,MAAM,GAAI,IACjD0E,EAASJ,EAAgBtE,MAAM,EAAG,IAClC2E,EAA2BL,EAAgBtE,MAAM,GAAI,IAQrDiE,EAAY7L,KAAK6L,UAAYJ,EAAA,eAA+B,kBAAmB,CACnFW,OAAAA,EACAC,MAAAA,EACAC,OAAAA,EACAC,MAAAA,IAGFvM,KAAKwM,QAAU,CAAM/B,EAAMe,IAAc,kCAEvC,aADMK,EACC7L,KAAKuL,SAASd,EAAMe,MAG7BxL,KAAK1B,SAAWuN,EAEhB7L,KAAKwM,QAAUxM,KAAKuL,SA2BpBQ,EAAY3D,IAAIwD,EAAMa,aAAc,IACpC,MAAMC,QAAkB1M,KAAK2M,OAAOZ,EAAYnE,SAMhD,OAFAmE,EAAY3D,IAAIsE,EAAU9E,MAAM,GAAI,IAAK,IAElCmE,KA6CFY,OAAOC,GASZ,OAAO5M,KAAKwM,QAAQI,EAAS,WAGxBtD,OAAOsD,GACZ,OAAO5M,KAAKwM,QAAQI,EAAS,WAGlBd,U,yCACX,MAAMD,EAAY7L,KAAK6L,UACvB,QAAiBf,IAAde,EACD,OAGF7L,KAAK1B,QAAKwM,EACV9K,KAAK6L,eAAYf,EAEjB,MAAMxM,QAAWuN,EACjBJ,EAAA,eAA+B,kBAAmBnN,MAG7CqL,UACL3J,KAAK8L,WC5JT,YA/BA,oBACS,KAAAe,IAAM,IACN,KAAAJ,aAAe,IAAIlD,WAAW,CAACvJ,KAAK6M,IAAK7M,KAAK6M,IAAK7M,KAAK6M,IAAK7M,KAAK6M,MAElEC,aAAarC,GAClB,MAAMsC,EAAMtC,EAAKC,YAAc,EAC/B,IAAIsC,EASJ,OAPEA,EADCD,EAAM,IACE,IAAIxD,WAAW,CAACwD,IAGhB,IAAIxD,WAAW,CAAC,IAAY,IAANwD,EAAaA,GAAO,EAAK,IAAOA,GAAO,GAAM,MAIvEC,EAAO9I,OAAOuG,GAIhBwC,WAAWxC,GAChB,IAAItM,EAASsM,EAAK,GAClB,OAAGtM,GAAU,KACXA,EAASsM,EAAK,GAAMA,EAAK,IAAM,EAAMA,EAAK,IAAM,GAEzCA,EAAK7C,MAAM,EAAGzJ,GAAU,IAG1BsM,EAAK7C,MAAM,EAAGzJ,GAAU,K,cCpCpB,SAAS+O,EAAWC,GACjC,MAAMhP,EAASgP,EAAMhP,OACf+M,EAAgB,IAAIpK,MAAM3C,GAChC,IAAI,IAAI0H,EAAI,EAAGA,EAAI1H,IAAU0H,EAC3BqF,EAAIrF,IAAMsH,EAAMtH,GAAK,GAAK,IAAM,KAAOsH,EAAMtH,IAAM,GAAGuH,SAAS,IAEjE,OAAOlC,EAAIxM,KAAK,I,oTCiBH,MAAM2O,EAyBnBvN,YACUwN,EACAhF,EACAlJ,EACAmJ,EACAgF,GAJA,KAAAD,WAAAA,EACA,KAAAhF,KAAAA,EACA,KAAAlJ,IAAAA,EACA,KAAAmJ,UAAAA,EACA,KAAAgF,aAAAA,EA7BF,KAAA3B,MAAQ4B,EACR,KAAAC,YAAc,IAAInC,EAGlB,KAAA9C,QAMF,GAEE,KAAAC,MAAQ,YAAe,EAExB,KAAAI,WAAY,EAIX,KAAA6E,eAAgB,EAqBhB,KAAAC,OAAS,IAAW,kCAC1B3N,KAAK6I,WAAY,EAGjB,qBAAuC,aAGvC,MAAMkD,QAAoB/L,KAAKyN,YAAY9B,KAAK3L,KAAK4L,OACjD5L,KAAK6I,YAIT7I,KAAK4N,WAAWhE,KAAKmC,GAElB/L,KAAK6J,YACN7J,KAAKwI,QAAQrK,OAAS,EACtB6B,KAAK6J,UAAUgE,oBAAoB,eACnC7N,KAAK6J,UAAUiE,cACf9N,KAAK6J,UAAUkE,UASjBhM,YAAW,KACT/B,KAAK+J,mBACJ,OAGG,KAAAiE,UAAkB5E,GAAwB,kCAGhD,IAAIqB,QAAazK,KAAKyN,YAAYnE,OAAO,IAAIC,WAAWH,IAGxD,GAFAqB,EAAOzK,KAAK4L,MAAMqB,WAAWxC,GAE1BzK,KAAK6J,UAmBN,OAhBA7J,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,2BAA4BgC,EAAKtM,aAC9D6B,KAAK6J,UAAUoE,cAAcxD,GAAMzF,MAAMkE,IACvClJ,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,qCAAsCS,GAEnE,IACElJ,KAAK6J,UAAUqE,eAAehF,EAASA,SAAUA,EAASiF,UAAWjF,EAASkF,WAC9E,MAAM3E,GACNzJ,KAAKG,IAAIb,MAAM,+CAAgDmK,OAIhE4E,OAAO5E,IACRzJ,KAAKG,IAAIb,MAAM,8CAA+CmK,MAQlE,MAAMjB,EAAUxI,KAAKwI,QAAQ8F,QACzB9F,EAKJA,EAAQvG,QAAQwI,GAJdzK,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,sBAAuByE,EAAWzC,OAO3D,KAAA8D,QAAU,KAGhB,IAAIC,EAAqBC,EACzB,GAHAzO,KAAKqE,QAGFrE,KAAK0N,cAAe,CACrB,MAAMgB,EAAOC,KAAK5J,MACZ6J,EAAOF,EAAO1O,KAAK6O,cACzBL,GAAeM,MAAMF,IAASA,EAAO5O,KAAKuN,aAAevN,KAAKuN,aAAeqB,EAAO,EACpFH,EAAUC,EAAOF,EAGhBxO,KAAK6J,YACN7J,KAAK6J,UAAUgE,oBAAoB,WAAyBY,GAC5DzO,KAAKwI,QAAQrK,OAAS,GAGrB6B,KAAK0N,eACN1N,KAAKG,IAAI,uCAAwCqO,EAAc,KAC/DxO,KAAK+O,iBAAmBC,EAAA,aAAehP,KAAKiP,UAAWT,IAEvDxO,KAAKG,IAAI,2BAwBN,KAAA8O,UAAY,KAMjB,QAL6BnE,IAA1B9K,KAAK+O,mBACN7J,aAAalF,KAAK+O,kBAClB/O,KAAK+O,sBAAmBjE,IAGvB9K,KAAK4N,WAAR,CAOA,GAHA5N,KAAKG,IAAI,0BACTH,KAAK6O,cAAgBF,KAAK5J,MAEtB/E,KAAK6J,UAOP7J,KAAK6J,UAAUgE,oBAAoB,qBANnC,IAAI,MAAMrF,KAAWxI,KAAKwI,QACrBA,EAAQ0G,WACT1G,EAAQ0G,UAAW,GAOzBlP,KAAK4K,YAjJL,IAAIlC,EAAW,WAAiB,KAAAC,IAC7B3I,KAAKyI,QAAOC,GAAY,YAC3B1I,KAAKG,KAAM,EAAAyI,EAAA,IAAO,OAAON,IAASC,EAAWG,GAC7C1I,KAAKG,IAAI,eAETH,KAAK4K,UAiGAvG,QAEFrE,KAAK6I,WACN,qBAAuC,aAIzC7I,KAAK6I,WAAY,EAEd7I,KAAK4N,aACN5N,KAAK4N,WAAW/C,oBAAoB,OAAQ7K,KAAK2N,QACjD3N,KAAK4N,WAAW/C,oBAAoB,QAAS7K,KAAKuO,SAClDvO,KAAK4N,WAAW/C,oBAAoB,UAAW7K,KAAKgO,WACpDhO,KAAK4N,gBAAa9C,GAiCfqE,iBACLnP,KAAK2C,QACL3C,KAAKiP,YAGAtF,UACL3J,KAAKoP,kBAAiB,GACtBpP,KAAK2C,QAEF3C,KAAKyN,aACNzN,KAAKyN,YAAY9D,UAGnB3J,KAAKwI,QAAQtF,SAASsF,IACjBA,EAAQ5G,QACT4G,EAAQ5G,YAGZ5B,KAAKwI,QAAQrK,OAAS,EAGjBwE,QACL,MAAMiL,EAAa5N,KAAK4N,WACxB,GAAGA,EAAY,CACb,MAAM/E,EAAY7I,KAAK6I,UACvB7I,KAAKqE,QACFwE,IACD+E,EAAWpH,iBAAiB,UAAWxG,KAAKgO,WAC5CJ,EAAWpH,iBAAiB,SAAS,KACnCoH,EAAW/C,oBAAoB,UAAW7K,KAAKgO,aAC9C,CAACqB,MAAM,IACVzB,EAAWjL,UASVyM,iBAAiBE,GACtBtP,KAAK0N,cAAgB4B,EAEjBA,EAKOtP,KAAK4N,iBAAwC9C,IAA1B9K,KAAK+O,kBACjC/O,KAAKiP,iBALwBnE,IAA1B9K,KAAK+O,mBACN7J,aAAalF,KAAK+O,kBAClB/O,KAAK+O,sBAAmBjE,GAOtBF,UACH5K,KAAK4N,YACN5N,KAAK2C,QAGP3C,KAAK4N,WAAa,IAAI5N,KAAKsN,WAAWtN,KAAKsI,KAAMtI,KAAKZ,IAAKY,KAAKuI,WAChEvI,KAAK4N,WAAWpH,iBAAiB,OAAQxG,KAAK2N,QAC9C3N,KAAK4N,WAAWpH,iBAAiB,QAASxG,KAAKuO,SAC/CvO,KAAK4N,WAAWpH,iBAAiB,UAAWxG,KAAKgO,WAG5CuB,UAAUnQ,GACZY,KAAKZ,MAAQA,IAIhBY,KAAKZ,IAAMA,EACXY,KAAKmP,kBAGCK,WAAWzG,GACjB,MAAM0G,EAAWzP,KAAK4L,MAAMkB,aAAa/D,GAMzC,OAHgB/I,KAAKyN,YAAYd,OAAO8C,GAMnC7F,KAAKb,GACV/I,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,6BAA8BM,EAAK5K,QAEhE,MAAMuR,OAAsE5E,EAI5E,IAAG9K,KAAK6J,UAGD,CACL,MAAMC,EAAU,IAAInI,SAAqB,CAACM,EAASL,KACjD5B,KAAKwI,QAAQlI,KAAK,CAAC2B,QAAAA,EAASL,OAAAA,EAAQmH,KAAAA,EAAM2G,QAAAA,OAK5C,OAFA1P,KAAK+J,iBAEED,EATP9J,KAAKwI,QAAQlI,KAAK,CAACyI,KAAAA,EAAM2G,QAAAA,IACzB1P,KAAK+J,iBAYKA,iB,+CACZ,IAAI/J,KAAK6I,WAAa7I,KAAK2P,iBAEzB,OAGF3P,KAAK2P,kBAAmB,EAQxB,IAAIxR,EAAS6B,KAAKwI,QAAQrK,OACtByR,GAAO,EAEX,IAAI,IAAI/J,EAAI,EAAGA,EAAI1H,IAAU0H,EAAG,CAC9B,MAAM2C,EAAUxI,KAAKwI,QAAQ3C,GAC7B,IAAI2C,EACF,MAGF,MAAM,KAACO,EAAI,SAAEmG,GAAY1G,EACzB,GAAGO,IAASmG,EAAU,CAGpBlP,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,0BAA2BM,EAAK5K,QAM7D,MAAMuR,EAAyB,QAAlB,EAAGlH,EAAQkH,eAAO,QAAflH,EAAQkH,cAAkB1P,KAAKwP,WAAWzG,GAC1D,IAAI/I,KAAK6I,UACP,MAIF7I,KAAK4N,WAAWhE,KAAK8F,GAEjBlH,EAAQvG,QAIVuG,EAAQ0G,UAAW,GAHnBlP,KAAKwI,QAAQyB,OAAOpE,IAAK,GACzB1H,KAKFyR,GAAO,GAKX5P,KAAK2P,sBAAmB7E,EAErB9K,KAAKwI,QAAQrK,QAAUyR,GACxB5P,KAAK+J,qBChUX,MAAM8F,EAAc,SAAa,QAAU,GAGpC,SAASC,EAA4BC,GAC1C,MAA0B,WAAnBA,EAA8B,GAAK,KAIrC,SAASC,EAA8B1H,EAAYyH,EAAgCxJ,GACxF,MAAM0J,EAASH,EAA4BC,GACrCG,EAA0B,WAAnBH,EAA8B,QAAUF,GAAetJ,EAT/C,WAS0E,IAAO,QAAUsJ,EAGhH,MAFqB,SAAS,6BAA6BvH,IAAO2H,sBAA2BC,IAMxF,MAAMC,EAAb,cACU,KAAAC,cAAgB,CAAC,QAAS,QAAS,SAAU,QAAS,SAEtD,KAAAC,UAAY,SAClB,CACE,CAAC/R,GAAI,EAAGgS,KAAM,iBAAmBC,KAAM,IACvC,CAACjS,GAAI,EAAGgS,KAAM,iBAAmBC,KAAM,IACvC,CAACjS,GAAI,EAAGgS,KAAM,kBAAmBC,KAAM,KAEzC,CACE,CAACjS,GAAI,EAAGgS,KAAM,iBAAmBC,KAAM,IACvC,CAACjS,GAAI,EAAGgS,KAAM,iBAAmBC,KAAM,IACvC,CAACjS,GAAI,EAAGgS,KAAM,kBAAmBC,KAAM,IACvC,CAACjS,GAAI,EAAGgS,KAAM,iBAAmBC,KAAM,IACvC,CAACjS,GAAI,EAAGgS,KAAM,gBAAmBC,KAAM,KAGpC,KAAAC,cAAyB,GAGxB,KAAAC,gBAAkB,CAACnI,EAAYyH,EAAgCxJ,KACrE,MAAMmK,EAAeV,EAA8B1H,EAAMyH,EAAgBxJ,GAKzE,IAAIoK,EAOJ,OALAA,EAAiBxG,EAKV,IAAIkD,EAAcsD,EAAgBrI,EAAMoI,EAXV,WAAnBX,EAA8B,KAA0B,aAAnBA,EAAgC,KAAO,GAE3C,MAc7C,KAAAa,cAAgB,CAACtI,EAAYyH,EAAgCxJ,KACnE,IAAImK,EACJ,GAAG,UAAc,SAAY,CAC3B,MAAMT,EAASH,EAA4BC,GAG3CW,EAAe,YAFG1Q,KAAKoQ,cAAc9H,EAAO,GAAK2H,GAET,sBAD3B,SAAa,aAAe,cAGzC,IAAI,MAAMY,KAAY7Q,KAAKqQ,UACzB,GAAGQ,EAASvS,KAAOgK,EAAM,CACvBoI,EAAe,UAAYG,EAASP,MAA0B,KAAlBO,EAASN,KAAc,IAAMM,EAASN,KAAO,IAAM,SAC/F,MAMN,OAAO,IAAIlI,EAAKC,EAAMoI,EADe,WAAnBX,EAA8B,KAA0B,aAAnBA,EAAgC,KAAO,KAKzFe,aACLxI,EACAyH,EAAiC,SACjCgB,EAA+B,cAC/BC,GAAQ,EACRzK,GAMIvG,KAAKwQ,cAAcS,eAAeF,KACpC/Q,KAAKwQ,cAAcO,GAAiB,CAClCG,OAAQ,GACRC,SAAU,GACVC,OAAQ,KAIZ,MAAMC,EAAUrR,KAAKwQ,cAAcO,GAAehB,GAE7CzH,KAAQ+I,IACXA,EAAQ/I,GAAQ,IAGlB,MAAMgJ,EAAaD,EAAQ/I,GAE3B,IAAIgJ,EAAWnT,SAAW6S,EAAkD,CAC1E,IAAIO,EAUJ,OAPAA,GAA+B,cAAlBR,EAAgC/Q,KAAKyQ,gBAAkBzQ,KAAK4Q,eAAetI,EAAMyH,EAAgBxJ,GAO1GgL,GAKDP,GACDM,EAAWhR,KAAKiR,GAGXA,IARLlS,QAAQC,MAAM,mBAAoBgJ,GAC3B,MAUX,OAAOgJ,EAAW,GAGbhO,uBAA0BkO,EAAUD,GACzC,IAAI,MAAMR,KAAiBS,EAEzB,IAAI,MAAMzB,KAAkByB,EAAIT,GAE9B,IAAI,MAAMzI,KAAQkJ,EAAIT,GAAehB,GAAiB,CAEpD,MAAMuB,EAAkBE,EAAIT,GAAehB,GAAgBzH,IAC3D,EAAAmJ,EAAA,GAAiBH,EAAYC,K,0SCrKhC,MAAMG,UAA8B,IASzC5R,cACEsG,OAAM,GAENpG,KAAK2R,OAAS,IAAIC,IAKlB5R,KAAKwG,iBAAiB,UAAWmL,IAC3BA,EAAOjN,IAAI,cACb1E,KAAK6R,sBASEC,iB,+CACX,MAAMC,EAAoC,QAAtB,EAAG/R,KAAK+R,sBAAc,QAAnB/R,KAAK+R,eAAmB,IAAI5B,EAE7CmB,EAAmDtR,KAAKsR,WAAa,CACzEU,MAAOD,EAAejB,aAAa,aAAc,SAAU,SAAS,GACpEmB,UAAWF,EAAejB,aAAa,aAAc,SAAU,aAAa,IAGxEoB,GAAc,SAClBlS,KAAKsR,WAAWU,MAAelJ,MAAM,IAAIS,WAAc,WACxDvE,MAAK,IAAMkN,EAAYjQ,SAAQ,KAAO,IAAMiQ,EAAYjQ,SAAQ,KACjEF,YAAW,IAAMmQ,EAAYjQ,SAAQ,IATrB,KAWhB,MAAMkQ,GAAmB,SACnBC,EAASd,EAAWW,UAC1BG,EAAOhD,kBAAiB,GACxBgD,EAAOxE,WAAWpH,iBAAiB,SAAS,IAAM2L,EAAiBlQ,SAAQ,IAAQ,CAACoN,MAAM,IAC1F+C,EAAOxE,WAAWpH,iBAAiB,QAAQ,IAAM2L,EAAiBlQ,SAAQ,IAAO,CAACoN,MAAM,IACxFtN,YAAW,KACNoQ,EAAiBE,aAAeF,EAAiBG,aAIjDF,EAAOxE,YACRwE,EAAOxE,WAAWjL,QAGpBwP,EAAiBlQ,SAAQ,MAzBX,KA4BhB,MAAOsQ,EAAiBC,SAA8B7Q,QAAQ8Q,IAAI,CAACP,EAAaC,IAEhF,IAAI,MAAMpB,KAAiBO,EACPA,EAAWP,GACnBpH,UASZ,MANe,CACbqI,MAAOO,GAAmBvS,KAAK2R,OAAOjN,IAAI,SAAW,EACrDuN,UAAWO,GAAwBxS,KAAK2R,OAAOjN,IAAI,aAAe,MAOzDmN,mB,yCACX,IAAG7R,KAAK0S,QAAR,CAGA,IAFA1S,KAAK0S,SAAU,IAEH,CACV,MAAM,MAACV,EAAK,UAAEC,SAAmBjS,KAAK8R,iBAKtC,IAJGE,GAASC,IACVjS,KAAK4G,cAAc,YAAaqL,IAAcD,EAAQ,YAAc,SAGnEC,EACD,YAGI,EAAA/H,EAAA,GAAM,KAGdlK,KAAK0S,SAAU,MAGVC,kBAAkBlT,EAAqB8E,GAC5C,IAAIpG,EAAS6B,KAAK2R,OAAOjN,IAAIjF,IAAS,EACtCtB,GAAUoG,EAAQ,GAAK,EAEvBvE,KAAK2R,OAAOvJ,IAAI3I,EAAMtB,GACtB6B,KAAK4G,cAAc,SAAU5G,KAAK2R,QAG7BiB,mBAAmBnT,GACxB,OAAOO,KAAK2S,kBAAkBlT,GAAM,GAG/BoT,mBAAmBpT,GACxB,OAAOO,KAAK2S,kBAAkBlT,GAAM,IAIxC,MACA,EAD4B,IAAIiS,ECpHhC,GAD+E,S,cCsCxE,MAAMoB,EA4CJC,YAAYC,GACjBpX,OAAOC,OAAOmE,KAAMgT,I,kCC3CxB,IAAIlJ,EACW,SAASmJ,EAAaC,GACnC,OAAOpJ,MAAAA,EAAAA,EAAAA,EAlCT,SAAiCoJ,G,qCAC/B,MAAMC,GAAgB,QAAmB,EAAAvK,EAAA,IAAO,oBAC1CwK,EAAexX,OAAOyX,KAAKH,GAC3BI,EAAmCF,EAAahP,KAAKmD,IACzD,MAAMuC,EAAUoJ,EAAS3L,GAAKzB,SAC9B,OAAOqN,EAAcrJ,EAAS,WAAcvC,MAGxCgM,EAIF,GACErI,QAAYvJ,QAAQ8Q,IAAIa,GAC9B,IAAI,IAAIzN,EAAI,EAAG1H,EAASiV,EAAajV,OAAQ0H,EAAI1H,IAAU0H,EACzD0N,EAAgBH,EAAavN,IAAMqF,EAAIrF,GAGzCqF,EAAIjB,OAAO,EAAGmJ,EAAajV,QAE3B,MAAMqV,QAAsB,EAC5B,GAAGA,EAAcC,KAAM,CACrB,IAAI,MAAMlM,KAAOiM,EACfD,EAAgBhM,GAAKpJ,OAAS,EAGhCqV,EAAcnP,QAGhB,OAAOkP,G,+RAKYG,CAAkBR,GCxChC,MAAMS,UAA2Bb,EAOtChT,cACEsG,QAEApG,KAAKG,KAAM,EAAAyI,EAAA,IAAO,YAClB5I,KAAKkT,SCJM,WACb,MAAMU,EAAoC,CAAC,QAAS,QAAS,WACvDV,EAA6B,GACnC,IAAI,MAAMjT,KAAQ2T,EAEhBV,EAASjT,GAAQ,IAAI,IAAW,IAAgBA,GAGlD,OAAOiT,EDJWW,GAIXZ,eACL,OAAOA,EAAajT,KAAKkT,UAYdY,YAA4D7T,G,qCACvE,OAAOD,KAAKiT,eAAejO,MAAMuO,IACxB,CACL7P,QAAS1D,KAAKkT,SAASjT,GACvBoF,QAASkO,EAAgBtT,Q,gSE5B1B,MAAM8T,UAAwBjB,EAC5BzL,WACL,OAAOrH,KAAKgU,WAAWC,UAAU,uBAAuBjP,MAAM5C,GACrDA,IAIJ8R,eAAenN,EAKlB,IAIF,OAAO/G,KAAKqH,WAAWrC,MAAMmC,IAC3B,IAAIgN,EACAC,EACJ,MAAMC,EAAwC,CAC5CC,SAAU,KACVC,aAAc,CACZlW,EAAG,gCACHmW,KAAMzN,EAASyN,KACfC,MAAO1N,EAAS0N,QAKlBN,EADCpN,EAAS2N,gBACW1U,KAAK2U,aAAaC,aAAa,aAAc7N,EAAS2N,gBAAiBvN,GAAO,GAE9ExF,QAAQM,QAAQ,CACnC5D,EAAG,4BAKP,MAAMwW,EAAU1N,EAAM2N,SAChBC,EAAQ,IAAIxL,WAAWsL,EAAQE,MAAM5W,OAAS,IAWpD,OAVA8M,EAAU8J,GACVA,EAAM3M,IAAIyM,EAAQE,MAAO,GACzBF,EAAQE,MAAQA,EAGdX,EADCrN,EAASiO,YACOhV,KAAK2U,aAAaC,aAAa,aAAc7N,EAASiO,YAAa7N,GAAO,GAE1ExF,QAAQM,QAAQ,IAAIsH,YAGhC5H,QAAQ8Q,IAAI,CAAC0B,EAAoBC,IAAiBpP,MAAMiQ,IAC7DZ,EAAOC,SAAWW,EAAO,GACzBZ,EAAOE,aAAaO,SAAWD,EAC/BR,EAAOE,aAAaW,kBAAoBD,EAAO,GAExCjV,KAAKgU,WAAWC,UAAU,iCAAkCI,SAKlEc,sBAAsBb,EAAkBnN,GAC7C,OAAOnH,KAAK2U,aAAaC,aAAa,aAAcN,EAAUnN,GAAO,GAGhEiO,MAAMd,EAAkBnN,EAAwB/J,EAAe,IACpE,OAAO4C,KAAKmV,sBAAsBb,EAAUnN,GAAOnC,MAAMqQ,GAEhDrV,KAAKgU,WAAWC,UAAU,qBAAsB,CACrDK,SAAUe,GACTjY,GAAS4H,MAAMsQ,IACF,uBAAXA,EAAKjX,GACN2B,KAAKgU,WAAWuB,QAAQD,EAAKE,MAGxBF,OAKNG,qBAAqBC,GAC1B,OAAO1V,KAAKgU,WAAWC,UAAU,+BAAgC,CAACyB,KAAAA,IAG7DC,sBACL,OAAO3V,KAAKgU,WAAWC,UAAU,+BAG5B2B,sBACL,OAAO5V,KAAKgU,WAAWC,UAAU,gC,wBCpD9B,MAAM4B,WAA0B/C,EAAvC,c,oBACU,KAAAgD,SAAmD,IAAIlE,IAEvD,KAAAmE,MAAyC,GACzC,KAAA5V,KAAM,EAAAyI,EAAA,IAAO,UAAMkC,GAAW,GAoB/BkL,YAAYC,EAA2BC,EAA2BJ,IACtEA,EAAUG,GAAajW,KAAKmW,YAAYF,GACrCH,IACFA,EAAW,IAAIM,IACfpW,KAAK8V,SAAS1N,IAAI6N,EAAWH,IAG/B9V,KAAK+V,MAAM7I,EAAW+I,IAAcA,EACpC,IAAI,MAAMI,KAAYP,EACpB,IAAG,EAAAQ,EAAA,GAAUD,EAAUH,GACrB,OAIJJ,EAASS,IAAIL,GAGRM,mBAAmBP,GACxB,OAAOjW,KAAK+V,MAAM7I,EAAW+I,IAGxBE,YAAYF,GAEjB,MAAO,CADUjW,KAAK8V,SAASpR,IAAIuR,KAAeA,EAAYjW,KAAKwW,mBAAmBP,IAAcA,EAAWjW,KAAK8V,SAASpR,IAAIuR,IAC/GA,GAGbQ,WAAWR,GAChB,MAAMH,EAAW9V,KAAKmW,YAAYF,GAClC,OAAOH,EAAS,GAAK,CAACA,EAAS,GAAGY,SAASlb,OAAO+I,MAAOuR,EAAS,SAAMhL,EAGnE6L,cAAcV,EAA2BC,EAA2BJ,GAEzE,IADCA,EAAUG,GAAajW,KAAKmW,YAAYF,GACtCH,EACD,IAAI,MAAMO,KAAYP,EACpB,IAAG,EAAAQ,EAAA,GAAUD,EAAUH,GAMrB,OALAJ,EAAS/R,OAAOsS,GACZP,EAASrC,OACXzT,KAAK8V,SAAS/R,OAAOkS,UACdjW,KAAK+V,MAAM7I,EAAW+I,MAExB,EAKb,OAAO,EAGFW,iBAAiBX,EAA2BC,GAEjD,GADAlW,KAAKG,IAAI,0BAA2B8V,EAAUrO,QAASsO,IACnDA,EAAS,CACX,MAAMW,EAAI7W,KAAKyW,WAAWR,GAC1B,IAAIY,EAEF,OADA7W,KAAKG,IAAI,kDAAmD8V,EAAUrO,SAC/DjG,QAAQC,OAAO,eAGvBsU,EAASD,GAAaY,EAGzB,IAAI/M,EACJ,OAAOoM,MAAAA,OAAO,EAAPA,EAASzW,MACd,IAAK,UACHqK,EAAU9J,KAAK8W,mBAAmBC,eAAeb,EAAQc,OAAQd,EAAQ/H,WAAW,GACpF,MAMF,IAAK,gBACHrE,EAAU9J,KAAKiX,6BAA+BjX,KAAKkX,mBAAmBC,wBAAuB,GAAMnS,MAAK,KACtGhF,KAAKiX,iCAA8BnM,KAErC,MAGF,IAAK,WACHhB,EAAUnI,QAAQM,QAAQjC,KAAKoX,kBAAkBC,WAAWnB,EAAQoB,QAAQ,IAC5E,MAGF,IAAK,cACHxN,EAAU9J,KAAKuX,gBAAgBC,wBAAwB,CAACtB,EAAQuB,QAGlE,QAEE,OADAzX,KAAKG,IAAI2C,KAAK,4CAA6CoT,GACpDvU,QAAQC,SAInB,MAAM8V,EAAMxK,EAAW+I,GAEvB,OADAjW,KAAKG,IAAI,0CAA2CuX,GAC7C5N,EAAQ9E,MAAK,KAClB,MAAM2S,EAASzK,EAAW+I,GAE1B,GADAjW,KAAKG,IAAI,iDAAkDuX,EAAK,SAAUC,GACvED,IAAQC,EACT,OAAO1B,EAGTjW,KAAK2W,cAAcV,EAAWC,GAE9B,MAAM0B,EAAa5X,KAAKyW,WAAWR,GACnC,GAAG2B,EACD,OAAO5X,KAAK4W,iBAAiBX,EAAW2B,EAAW,IAKrD,MAFA5X,KAAKG,IAAIb,MAAM,sDAAuDoY,EAAK,SAAUC,EAAQzB,IAEvF,EAAA2B,EAAA,GAAU,sB,0DCzLP,SAASC,GAAkBC,EAAgBC,GACxD,IAAID,EACF,OAAOC,EAGT,IAAI,IAAIzQ,KAAOwQ,EACTC,EAAU/G,eAAe1J,WACpBwQ,EAAUxQ,GAIrB,IAAI,IAAIA,KAAOyQ,EAEbD,EAAUxQ,GAAOyQ,EAAUzQ,GAI7B,OAAOwQ,E,sECRM,SAASE,GAAsBpW,G,QAC5C,MAAMqW,EAAoB,CACxBrW,EAAQsW,OACRtW,EAAQuW,SACPvW,EAA4BwW,WAGzBC,EAASzW,EAA4ByW,MAC3C,GAAGA,EAAO,CACR,MAAMC,EAAiBD,EAA2CE,aAC7C1N,IAAlByN,GACDL,EAAQ5X,KAAKiY,EAAc9R,YAG7B,MAAMpB,EAAWiT,EAAwCjT,QACnDoT,EAAepT,MAAAA,OAAO,EAAPA,EAASqT,eAC3BD,MAAAA,OAAY,EAAZA,EAActa,SACf+Z,EAAQ5X,QAAQmY,EAAarU,KAAKkT,GAAWA,EAAO7Q,cAIxD,MAAMkS,EAA0D,QAAvC,EAAC9W,EAAqC,iBAAC,eAAE+W,kBAC/DD,MAAAA,OAAe,EAAfA,EAAiBxa,SAClB+Z,EAAQ5X,QAAQqY,EAAgBvU,KAAKyU,IAAa,EAAAC,GAAA,GAAUD,EAASE,YAGvE,MAAMC,EAAUnX,EAAmCmX,OACnD,GAAGA,EAAQ,CACT,MAAMC,EAAoB,IACnBD,EAAkDE,OAAS,GAC/DF,EAAqDR,QACrDQ,EAAuDG,YAE1DjB,EAAQ5X,QAAQ2Y,EAAQza,OAAOC,SAAS2F,KAAKkT,GAAWA,EAAO7Q,cAE/D,MAAM2S,EAAoB,CACvBJ,EAAoDK,WACpDL,EAAyDM,SAE5DpB,EAAQ5X,QAAQ8Y,EAAQ5a,OAAOC,SAAS2F,KAAKmV,GAAWA,EAAO9S,UAAS,MAG1E,MAAM+S,EAAuD,QAArC,EAAC3X,EAAmC,eAAC,eAAE4X,gBAK/D,OAJGD,MAAAA,OAAc,EAAdA,EAAgBrb,SACjB+Z,EAAQ5X,QAAQkZ,EAAepV,KAAKsV,IAAU,EAAAZ,GAAA,GAAUY,MAGnD,IAAItD,IAAI8B,EAAQ1Z,OAAOC,UCxDjB,SAASkb,GAA4CnI,EAAQoC,GAE1E,MAAMgG,EAAQ,CAACC,UAAU,EAAMC,cAAc,GACvCC,EAA0C,GAChDnG,EAAM1Q,SAASjD,IACTuR,EAAIP,eAAehR,KACrB8Z,EAAI9Z,GAAQ2Z,MAGhBhe,OAAOoe,iBAAiBxI,EAAKuI,GCAhB,SAASE,GACtBC,EACAC,EACAhZ,GAEA,OAAO+Y,EAAOC,GAAYhZ,ECqCrB,MAAMiZ,QAAmCtP,EAGjC,MAAMuP,WAAuBvH,EAA5C,c,oBAKU,KAAAwH,QAAwC,GA4KzC,KAAAjW,MAAQ,CAACsH,GAAO,KACrB,GAAIA,EAWG,CACL3L,KAAKua,iBAAmB,GACxBva,KAAKwa,aAAe,GACpB,IAAI,MAAMC,KAAY,KACpBza,KAAKwa,aAAaC,GAAY,OAfxB,CACRza,KAAK0D,QAAQW,QAEbrE,KAAK0a,iBAAiB,MAAe,GACrC1a,KAAK0a,iBAAiB,MAAmB,GACzC1a,KAAK0a,iBAAiBN,IAAkB,GAExC,IAAI,MAAMK,KAAY,KACpBza,KAAK2a,iBAAiBF,GAExBza,KAAK4a,mBASP5a,KAAKsa,QAAU,GACfta,KAAK6a,kBAAoB,GACzB7a,KAAK8a,WAAa,EAClB9a,KAAK+a,aAAe,IAAI,KAAY,CAClC7d,eAAe,EACfC,YAAY,EACZH,UAAU,EACVM,YAAY,IAEd0C,KAAKgb,cAAgB,CACnBC,MAAO,GACPC,MAAO,EACPC,QAAS,GACTV,SAAU,IA21BN,KAAAW,oBAAuBC,IAEfA,EAAOC,aAEfpY,SAASqY,I,MACb,MAAM,UAACC,EAAS,KAAEC,GAAQF,EAEpBvE,EAAShX,KAAK0b,gBAAgB5C,UAAU2C,GACxCvB,EAASla,KAAK2b,WAAW3E,GAAQ,GACpCkD,KACe,QAAb,EAAAA,EAAOtb,cAAM,eAAEgd,SAChB5b,KAAK6b,sBAAsB3B,EAAQsB,GAGrCtB,EAAOsB,UAAYA,EACnBxb,KAAK8b,uBAAuB5B,GAC5Bla,KAAK+b,WAAW7B,IAGlBla,KAAK8W,mBAAmBkF,yBAAyBhF,EAAQkD,OAIrD,KAAA+B,qBAAwBZ,I,MAC9B,MAAMZ,EAA2B,QAAhB,EAAAY,EAAOG,iBAAS,QAAI,KAE/BxE,EAAShX,KAAK0b,gBAAgB5C,UAAWuC,EAAOI,KAA+BA,MAC/EvB,EAASla,KAAKkc,cAAclF,GAY/BkD,IACGmB,EAAOzc,OAAOgd,OAGhB1B,EAAOtb,OAAOgd,QAAS,EAFvB5b,KAAK6b,sBAAsB3B,EAAQO,GAKrCza,KAAK8b,uBAAuB5B,IAG9Bla,KAAK8W,mBAAmBkF,yBAAyBhF,EAAQkD,IAGnD,KAAAiC,sBAAyBd,I,MAC/B,MAAMZ,EAA2B,QAAhB,EAAAY,EAAOG,iBAAS,QAAI,KAE/BY,EAAeC,IACnBrc,KAAK2a,iBAAiBF,GACtBza,KAAKwa,aAAaC,GAAUna,QAAQ+b,GACpCrc,KAAK4a,mBACLyB,EAAMlQ,UACNkQ,EAAMnZ,SAAS8T,IACbsF,EAAUtF,IAAU,EAEpB,MAAMkD,EAASla,KAAKkc,cAAclF,GAClChX,KAAK8W,mBAAmBkF,yBAAyBhF,EAAQkD,GACrDA,IAIJA,EAAOtb,OAAOgd,QAAS,EACvB5b,KAAK8b,uBAAuB5B,OAG9B,MAAMiB,EAAUnb,KAAKuc,iBAAiB9B,GAAU,GAChD,IAAI,MAAMP,KAAUiB,EAAS,CAC3B,IAAIjB,EAAOtb,OAAOgd,OAChB,MAGF,MAAM5E,EAASkD,EAAOlD,OAClBsF,EAAUtF,IACZhX,KAAK8W,mBAAmBkF,yBAAyBhF,KAMjDsF,EAAsC,GACxCjB,EAAOgB,MA6BXD,EAAYf,EAAOgB,MAAMjY,KAAKqX,GAASzb,KAAK0b,gBAAgB5C,UAAW2C,EAA+BA,SA5BpGzb,KAAKgU,WAAWC,UAAU,4BAA6B,CACrDuH,UAAWf,IACVzV,MAAMwX,IAIPxc,KAAKyc,aAAaD,GAElBJ,EAAYI,EAAcrB,QAAQ/W,KAAKsY,GAAMA,EAAE1F,cAznC3C2F,QACR3c,KAAKqE,OAAM,GAEXrE,KAAK4c,UAAUpW,iBAAiB,mBAAmB,KACjD,MAAMwQ,EAAShX,KAAK6c,gBAAgBC,UAAUxe,GAAGmI,UAAS,GAE1D,GADezG,KAAKkc,cAAclF,GACvB,CACT,MAAM+F,EAAW/c,KAAK0b,gBAAgBsB,kBAAkBhG,GACxDhX,KAAK+a,aAAakC,YAAYjG,EAAQ+F,OAI1C,MAAMG,EAAkB1e,IACtB,MAAM2c,EAAUnb,KAAKmd,kBAAiB,GACtC,IAAI,IAAItX,EAAI,EAAGA,EAAIsV,EAAQhd,SAAU0H,EACnC7F,KAAKod,uBAAuBjC,EAAQtV,GAAIrH,IA8D5C,OA1DAwB,KAAK4c,UAAUpW,iBAAiB,gBAAgB,KAC9C,MAAM2U,EAAUnb,KAAKmd,kBAAiB,GAEtC,IAAI,MAAME,KAAYrd,KAAKsa,SACrB+C,EAAW,UACNrd,KAAKsa,QAAQ+C,GAMxB,IAAI,IAAIxX,EAAI,EAAGA,EAAIsV,EAAQhd,SAAU0H,EAAG,CACtC,MAAMqU,EAASiB,EAAQtV,GAKvB7F,KAAKsd,wBAAwBpD,OAIjCla,KAAK4c,UAAUpW,iBAAiB,gBAAiB0W,GACjDld,KAAK4c,UAAUpW,iBAAiB,aAAc0W,GAE9Cld,KAAK4c,UAAUpW,iBAAiB,iBAAkBhI,IAChD,MAAM2c,EAAUnb,KAAKmd,kBAAiB,GAEhChD,EAAWna,KAAKud,4BAA4B/e,EAAOF,IACzD,IAAI,IAAIuH,EAAI,EAAGA,EAAIsV,EAAQhd,SAAU0H,SACpBsV,EAAQtV,GACTsU,UAGTna,KAAKsa,QAAQ9b,EAAOF,OAG7B0B,KAAK4c,UAAUpW,iBAAiB,0BAA2B0T,IACzDla,KAAKsd,wBAAwBpD,GAC7Bla,KAAKwd,kCAAkCtD,EAAvCla,MAGFA,KAAK4c,UAAUpW,iBAAiB,eAAgB+S,IAC9C,MAAMkE,EAAkBzd,KAAK0d,gBAAgBC,QAAQpE,GAE/CvC,EAASuC,EAAO9S,UAAS,GAC5BgX,EAAK7e,OAAO+G,MAAQ3F,KAAKkc,cAAclF,IACxChX,KAAK4d,qBAAqB5G,MAI9BhX,KAAK6d,kBAAkBC,2BAA2B,CAChDC,kBAAmB/d,KAAKob,oBAExB4C,mBAAoBhe,KAAKic,qBAEzBgC,oBAAqBje,KAAKmc,wBAGrBxa,QAAQ8Q,IAAI,CACjBzS,KAAKke,gBAAgB7W,WACrBrH,KAAKme,mBAAmBrK,YAAY,aACnC9O,MAAK,EAAEmC,GAAQ9B,QAAS8V,EAASzX,QAAAA,OAClC1D,KAAK0D,QAAUA,EACf1D,KAAKmb,QAAUnb,KAAK0D,QAAQ0a,WAE5B,IAAI,MAAM3D,KAAY,KAAc,CAClC,MAAM4B,EAAQlV,EAAMqT,aAAaC,GACjC,IAAI4B,EACF,SAGF,MAAMgC,EAASre,KAAKwa,aAAaC,GACjC4D,EAAOpU,OAAO,EAAGoU,EAAOlgB,UAAWke,GAGlClB,EAAQhd,QACT,iBAA+C6B,KAAKse,oBAAoBC,KAAKve,KAAMmb,GAAU,CAAC,QAAS,UAAW,WAAY,UAGhInb,KAAKua,iBAAmBpT,EAAMoT,kBAAoB,GAE/CY,EAAQhd,QACT6B,KAAKwe,iBAAiBC,sBAKpBH,oBAAoBnD,GAC1B,IAAI,IAAItV,EAAI,EAAG1H,EAASgd,EAAQhd,OAAQ0H,EAAI1H,IAAU0H,EAAG,CACvD,MAAMqU,EAASiB,EAAQtV,GACvB,GAAIqU,EAAJ,CAKAA,EAAOwE,aAAc,EAAAC,GAAA,GAAmBzE,EAAOwE,aAG5CxE,EAAO0E,YACR5e,KAAK8W,mBAAmB+H,aAAa,CAAC3E,EAAO0E,aAG/C,IAAI,IAAI/Y,EAAI,EAAGA,GAAK,KAAMA,SAEjBqU,EADgD,SAASrU,KAKlE7F,KAAK8e,WAAW5E,OAAQpP,GAAW,GAGnB9K,KAAK8W,mBAAmBiI,iBAAiB7E,EAAOlD,OAAQkD,EAAOwE,cAE7E1e,KAAK8W,mBAAmBkI,mBAAmB9E,EAAOlD,UAKjDiI,gBAAgBxE,GACrB,QAASza,KAAKua,iBAAiBE,GAG1BC,iBAAiBD,EAAkByE,GACrCzE,IAAaL,IAAoB8E,GAClClf,KAAKua,iBAAiB,MAAiB2E,EACvClf,KAAKua,iBAAiB,MAAqB2E,GAE3Clf,KAAKua,iBAAiBE,GAAYyE,EAGjCpe,MAAMC,KAAK,MAAcoe,OAAO1E,GAAaza,KAAKua,iBAAiBE,OACpEza,KAAKua,sBAAiBH,IAAoB,GAG5Cpa,KAAKke,gBAAgBlW,YAAY,mBAAoBhI,KAAKua,kBAwCrDsB,sBAAsB3B,EAAgBO,UACpCP,EAAOtb,OAAOgd,QACrB,EAAAnK,EAAA,GAAiBzR,KAAKwa,aAAaC,GAAWP,EAAOlD,QACrDhX,KAAK4a,mBAGAA,mBACL5a,KAAKke,gBAAgBlW,YAAY,eAAgBhI,KAAKwa,cAGjDG,iBAAiBF,GACtBza,KAAKwa,aAAaC,GAAUtc,OAAS,EAGhCihB,gBAAgB3E,GACrB,OAAOza,KAAKwa,aAAaC,GAGpB4E,cAAc5E,GACnB,MAAM6E,EAAatf,KAAK6a,kBAAkBJ,IAAa,EACvD,OAAGA,IAAaL,IAAqBkF,EAI9BA,EAHEC,KAAKC,OAAO1e,MAAMC,KAAK,MAAc0e,MAAK,CAACC,EAAGC,IAAMD,EAAIC,KAM3DC,eAAethB,GACrB,MAAMuhB,EAAiB,CACrB1E,QAAS,GACT7c,GAAAA,EACAwhB,oBAAqB,EACrBC,cAAe,IAAI3J,IACnB4J,qBAAsB,IAAI5J,KAK5B,OAFAuD,GAA6BkG,EAAQ,CAAC,0BAE/BA,EAGFI,UAAU3hB,G,QACf,OAAsB,QAAtB,KAAO0B,KAAKsa,SAAQhc,UAAE,UAAFA,GAAQ0B,KAAK4f,eAAethB,GAG3Cie,iBAAiBje,EAAY4hB,GAAe,GACjD,GAAG5hB,IAAO8b,GACR,OAAOpa,KAAKmd,iBAAiB+C,GAG/B,MAAML,EAAS7f,KAAKigB,UAAU3hB,GAC9B,OAAO4hB,EAAeL,EAAO1E,QAAQ3c,QAAQ0b,QAAiCpP,IAAtBoP,EAAOiG,aAA4BN,EAAO1E,QAG7FiF,cAAcC,EAAuB7kB,EAAe6hB,GACzD,MAAMwC,EAAS7f,KAAKuc,iBAAiBc,GAAU,GAC/C,IAAInD,EACJ,GAAImG,EAIG,CACL,MAAM7b,EAAMqb,EAAOS,WAAWpG,GAAWA,EAAOlD,SAAWqJ,KAC/C,IAAT7b,IAED0V,EAAS2F,EADSrkB,EAAOgJ,EAAM,EAAIA,EAAM,SANxChJ,IACD0e,EAAS2F,EAAO,IAUpB,OAAO3F,EAGFqD,4BAA4BF,GACjC,GAAG,SAAiBA,GAAW,OAAO,EAAAkD,GAAA,GAAkBlD,GACxD,MAAM7e,EAASwB,KAAKwgB,eAAeC,UAAUpD,GAC7C,OAAO,EAAAkD,GAAA,GAAkB/hB,EAAOkiB,SAG3BC,cAAc3J,GACnB,OAAQhX,KAAK4gB,wBAAwBC,iBAAiB7J,GAAQ,GAGzD8J,qBAAqBzD,GAC1B,MAAMwC,EAAS7f,KAAKigB,UAAU5C,GAC9B,MAAO,CAAC0D,mBAAoBlB,EAAOG,qBAAqBvM,KAAMuN,YAAanB,EAAOE,cAActM,MAG3F0J,iBAAiB+C,GACtB,MAAMe,EAASngB,MAAMC,KAAK,MAAcqD,KAAKqW,GAAaza,KAAKuc,iBAAiB9B,EAAUyF,KAC1F,MAAO,GAAGhc,UAAU+c,GAGdC,uBAAuBhH,EAAgBC,EAAgD3b,G,QAC7F,IAAI2C,EAEJ,MAAMggB,EAAe,SAAiB3iB,EAAOF,IAInC,GAAG0B,KAAKwgB,eAAeY,oBAAoBlH,EAAQ1b,GAAS,CACpE,MAAM6iB,EAAc7iB,EAAO8iB,cAAcllB,QAAQ8d,EAAOlD,QAEtD7V,GADkB,IAAjBkgB,EACOrhB,KAAKuhB,oBAAoBvhB,KAAKwhB,gCAAgChjB,EAAO8iB,cAAcnjB,OAAS,EAAIkjB,IAAc,IACjG,QAAb,EAAAnH,EAAOtb,cAAM,eAAEgd,SAAUuF,EACzBnhB,KAAK8b,uBAAuB5B,GAAQ,OAAMpP,GAAYqW,GAEhC,QAAtB,KAAAM,GAAA,GAAevH,UAAO,QAAIla,KAAK8b,uBAAuB5B,GAAQ,GAQ1E,OAAOD,GAAeC,EAAQC,EAAUhZ,GAGnCugB,UAAU1K,EAAgByD,EAAmByF,GAAe,GACjE,MAAM5F,EAAsB,QAEZxP,IAAb2P,EACDH,EAAQha,QAAQQ,MAAMC,KAAK,MAAcqD,KAAKqW,GAAaza,KAAKigB,UAAUxF,GAAUU,WAEpFb,EAAQha,KAAKN,KAAKuc,iBAAiB9B,GAAU,IAG/C,IAAI,MAAMoF,KAAUvF,EAAS,CAC3B,IAAIzU,EAAI,EAAG8b,EAAU,EACrB,IAAI,IAAIxjB,EAAS0hB,EAAO1hB,OAAQ0H,EAAI1H,IAAU0H,EAAG,CAC/C,MAAMqU,EAAS2F,EAAOha,GACtB,GAAGqU,EAAOlD,SAAWA,EACnB,MAAO,CAACkD,EAAQrU,EAAI8b,GACZzB,QAAsCpV,IAAtBoP,EAAOiG,cAC7BwB,GAKR,MAAO,GAGFzF,cAAclF,GACnB,OAAOhX,KAAKmb,QAAQnE,GAGfyK,eAAezK,EAAyBmD,GAC7C,MAAMD,GAAS,EAAA0H,GAAA,GAAS5K,GAAUA,EAAShX,KAAKkc,cAAclF,GAC9D,OAAO,EAAAyK,GAAA,GAAevH,EAAQC,GAWzBoH,oBAAoBM,EAAeC,GAKxC,YAJYhX,IAAT+W,IACDA,GAAO,EAAAE,GAAA,IAAM,GAAQ/hB,KAAKgiB,YAAYC,uBAGzB,MAAPJ,GAAmBC,EAAW,EAA2B,QAAnB9hB,KAAK8a,YAG9CwC,wBAAwBpD,GAE7B,MAAMgI,EAAUliB,KAAKwgB,eAAe2B,aACpC,IAAI,MAAM7jB,KAAM4jB,EAAS,CACvB,MAAM1jB,EAAS0jB,EAAQ5jB,GACvB0B,KAAKod,uBAAuBlD,EAAQ1b,IAMjC4e,uBAAuBlD,EAAgB1b,GAC5C,MAAM2b,EAAWna,KAAKud,4BAA4B/e,EAAOF,IAEnD6c,EADSnb,KAAKigB,UAAUzhB,EAAOF,IACd6c,QAEjBiH,EAAWjH,EAAQmF,WAAW5D,GAAMA,EAAE1F,SAAWkD,EAAOlD,SACxDqL,EAAYlH,EAAQiH,GACpBE,EAAiBtiB,KAAKyhB,eAAeY,EAAWlI,GAEhDoI,EAAiBviB,KAAKkhB,uBAAuBhH,EAAQC,EAAU3b,GAErE,OAAG8jB,IAAmBC,MAIjBD,GAAkBC,GAAoBH,IAAaG,IACtDviB,KAAKwiB,0CAA0ChkB,EAAOF,GAAI4b,IAAUqI,IAGrD,IAAdH,GACDjH,EAAQlR,OAAOmY,EAAU,GAGxBG,IACD,EAAAE,GAAA,GAA2BtH,EAASjB,GAASA,GAAWla,KAAKyhB,eAAevH,EAAQC,KAAY,IAG3F,GAGFqD,kCAAkCtD,GACvC,MAAMwI,EAAkC,CACtC1iB,KAAKwiB,0CAA0CtI,EAAOsB,UAAWtB,IAG7DgI,EAAUliB,KAAKwgB,eAAe2B,aACpC,IAAI,MAAM7jB,KAAM4jB,EAAS,CACvB,MAAM1jB,EAAS0jB,EAAQ5jB,GACpB0B,KAAKwgB,eAAeY,oBAAoBlH,EAAQ1b,IACjDkkB,EAAUpiB,KAAKN,KAAKwiB,0CAA0ChkB,EAAOF,GAAI4b,IAI7E,MAAO,IAAMwI,EAAUxf,SAAS0B,GAAaA,MAGxC4d,0CAA0C/H,EAAkBP,EAAgByI,GACjF,MAAMC,EAAiB5iB,KAAK8W,mBAAmB+L,qBAAqB3I,GAC9D4I,EAAa9iB,KAAK2gB,cAAczG,EAAOlD,QAE7C,QAAclM,IAAX6X,EAMH,MAAO,KACL,MAAMI,EAAiB/iB,KAAK8W,mBAAmB+L,qBAAqB3I,GAC9D8I,EAAahjB,KAAK2gB,cAAczG,EAAOlD,QAEvCiM,EAAmBF,EAAiBH,EAC1C5iB,KAAKkjB,wBAAwBzI,EAAUwI,IAAoBF,EAAgBA,GAAkBC,EAAY9I,IAX3G,CACE,MAAM+I,EAAmBN,EAASC,GAAkBA,EACpD5iB,KAAKkjB,wBAAwBzI,EAAUwI,IAAoBL,EAAgBA,GAAkBE,EAAY5I,IAatGgJ,wBACLzI,EACAwI,EACAE,EACAC,EACAlJ,GAEA,MAAM2F,EAAS7f,KAAKigB,UAAUxF,GAC3BwI,IACDpD,EAAOC,oBAAsBP,KAAK8D,IAAI,EAAGxD,EAAOC,oBAAsBmD,IAGxE,MAAM,OAACjM,GAAUkD,EACdiJ,EACDtD,EAAOE,cAAcxJ,IAAIS,GAEzB6I,EAAOE,cAAchc,OAAOiT,GAG3BoM,EACDvD,EAAOG,qBAAqBzJ,IAAIS,GAEhC6I,EAAOG,qBAAqBjc,OAAOiT,QAGDlM,IAAjC+U,EAAOyD,wBACRzD,EAAOyD,sBAAwBtU,EAAA,cAAe,KAC5C6Q,EAAOyD,2BAAwBxY,EAC/B,MAAMyY,EAAU,OAAH,UAAO1D,UACb0D,EAAQpI,QACfnb,KAAK4c,UAAUhW,cAAc,gBAAiB2c,KAC7C,IAIAzH,uBACL5B,EACAsJ,EACA3hB,EACA4hB,G,MAEA,IAAID,EACF,OAGF,IAAiB1B,EAAb4B,EAAU,EACd,GAAGxJ,EAAOtb,OAAOgd,SAAW6H,EAC1BC,EAAU1jB,KAAK2jB,yBAAyBzJ,GACxC4H,GAAW,MACN,CACDjgB,IACFA,EAAU7B,KAAK8W,mBAAmBiI,iBAAiB7E,EAAOlD,OAAQkD,EAAOwE,cAG3EgF,GAAW7hB,MAAAA,OAAO,EAAPA,EAA6BggB,OAAQ6B,EAEhD,MAAME,EAAY5jB,KAAK0b,gBAAgBmI,UAAU3J,EAAOlD,SAAWkD,EAAOlD,OAAO8M,WACjF,GAAGF,EAAW,CACZ,MAAMG,EAAwB/jB,KAAK0d,gBAAgBC,QAAQiG,KACvDF,GAAYK,EAAQlC,MAAQkC,EAAQlC,KAAO6B,KAC7CA,EAAUK,EAAQlC,MAIC,kBAAR,QAAZ,EAAA3H,EAAO8J,aAAK,eAAE3lB,IAAwB6b,EAAO8J,MAAMnC,KAAO6B,IAC3DA,EAAUxJ,EAAO8J,MAAMnC,MAIvB6B,IACFA,GAAU,EAAA3B,GAAA,IAAM,IAGlB,MAAM5gB,EAAQnB,KAAKuhB,oBAAoBmC,EAAS5B,GAChD,GAAG0B,EACD,OAAOriB,EAIT8Y,GAAeC,GADE,EAAAqG,GAAA,GAAkBrG,EAAOsB,WACTra,GAG5BqgB,gCAAgCH,GACrC,OAAO,YAA4B,MAAdA,GAGhBsC,yBAAyBzJ,GAC9B,MAAMmC,EAAQrc,KAAKwa,aAAaN,EAAOsB,WAEvC,IAAI6F,EAAchF,EAAMjgB,QAAQ8d,EAAOlD,QAOvC,OANoB,IAAjBqK,IACDhF,EAAM4H,QAAQ/J,EAAOlD,QACrBqK,EAAc,EACdrhB,KAAK4a,oBAGA5a,KAAKwhB,gCAAgCnF,EAAMle,OAAS,EAAIkjB,GAqB1D6C,iBAAiBhK,GACtB,MAAM,OAAClD,EAAM,IAAEmN,GAAOjK,EAChBkK,EAAiBpkB,KAAK8W,mBAAmBuN,kBAAkBrN,GAC3DsN,EAAkBtkB,KAAK8W,mBAAmByN,0BAA0BvN,GACpEwN,EAAUJ,EAAeI,QAAQ5c,MACvC,IAAI6c,EACJ,IAAI,IAAI5e,EAAI,EAAG1H,EAASqmB,EAAQrmB,OAAQ0H,EAAI1H,IAAU0H,EAAG,CACvD,MAAM6e,EAAMF,EAAQ3e,GACdhE,EAAqB7B,KAAK8W,mBAAmB6N,sBAAsBL,EAAiBI,GAC1F,GAAG7iB,IAAYA,EAAQjD,OAAOgmB,YAAiD,CAC7EH,EAAkB5iB,EAElB,MAAMqW,EAAUD,GAAsBpW,GACtC7B,KAAK6kB,aAAaC,mBAAmB5M,EAAS,cAAclB,KAE5D,OAgBJ,GAZAkD,EAAO0E,WAAa6F,EAYjBzN,EAAO+N,aAAeZ,EAAK,CAC5B,MAAMa,EAAShlB,KAAK6d,kBAAkBoH,gBAAgBjO,EAAO8M,WAAYK,GAAKA,IAC9EjK,EAAOiK,IAAMa,EAGfhlB,KAAK0D,QAAQ0E,IAAI,CACf,CAAC4O,GAASkD,IAGZla,KAAK6kB,aAAaK,YAAYlO,EAAQ,UAWjC+E,WAAW7B,EAAgBoF,EAAqB6F,EAA4BC,GACjF,MAAM,UAAC5J,EAAS,OAAExE,GAAUkD,EAQ5B,GANAla,KAAKmb,QAAQnE,GAAUkD,EAEvBoF,MAAAA,IAAAA,EAAetf,KAAKqlB,oBAAoBnL,IAExCla,KAAKsd,wBAAwBpD,GAE1BoF,IAAepF,EAAOtb,OAAOgd,OAAQ,CACtC,GAAGwJ,EAAkB,CACnB,MAAME,EAAwBtlB,KAAK6a,uBAAkBT,KACjDkL,GAAyBhG,EAAagG,KACxCtlB,KAAK6a,uBAAkBT,GAAoBkF,GAI/C,MAAMiG,EAAkBvlB,KAAK6a,kBAAkBW,GAC/C,IAAI+J,GAAmBjG,EAAaiG,EAAiB,CAEnD,IAAIJ,IAAqBnlB,KAAKif,gBAAgBzD,GAE5C,YADAxb,KAAK2b,WAAW3E,GAAQ,GAI1BhX,KAAK6a,kBAAkBW,GAAa8D,GAIxCtf,KAAKkkB,iBAAiBhK,GAajBsL,sBAAsBxO,GAC3B,MAAMyO,EAAczlB,KAAK0hB,UAAU1K,OAAQlM,GAAW,IAC/CoP,EAAQ/Y,GAASskB,EACxB,GAAGvL,EAAQ,CACMla,KAAKigB,UAAU/F,EAAOsB,WAC9BL,QAAQlR,OAAO9I,EAAO,GAC7B,MAAMukB,OAA8E5a,KAAlE,EAAA2G,EAAA,GAAiBzR,KAAKwa,aAAaN,EAAOsB,WAAYxE,GAExEhX,KAAKsd,wBAAwBpD,GAE7Bla,KAAK+a,aAAakC,YAAYjG,EAAQ,IAEnC0O,GACD1lB,KAAK4a,mBAIT,OAAO6K,EAGF9J,WAAW3E,EAAgB2O,GAChC,MAAMzL,EAASla,KAAKkc,cAAclF,GAC5ByO,EAAczlB,KAAKwlB,sBAAsBxO,GAS/C,OARGkD,IACGyL,UACK3lB,KAAKmb,QAAQnE,GAGtBhX,KAAK4lB,qBAAqB1L,EAAQyL,IAG7BF,EAGFG,qBAAqB1L,EAAgByL,GAC1C,MAAM3O,EAASkD,EAAOlD,OACtBhX,KAAK6kB,aAAaC,mBAAmB,GAAI,cAAc9N,KACvDhX,KAAK6kB,aAAagB,YAAY7O,EAAQ,UACtChX,KAAK0D,QAAQK,OAAOiT,EAAQ2O,GAGvBG,oBAAoB9O,GACzB,MAAM+O,EAAU/lB,KAAK2b,WAAW3E,GAKhC,OAJG+O,EAAQ5nB,QACT6B,KAAK4c,UAAUhW,cAAc,cAAe,CAACoQ,OAAAA,EAAQkD,OAAQ6L,EAAQ,KAGhEA,EAMFnI,qBAAqB5G,GAC1BhX,KAAK8lB,oBAAoB9O,GACzBhX,KAAK4c,UAAUhW,cAAc,eAAgBoQ,GAGxCyF,aAAaD,IAIlB,EAAAwJ,GAAA,GAAexJ,EAAcrB,SAAS,CAACjB,EAAQ1V,KAC7B,iBAAb0V,EAAO7b,GACRme,EAAcrB,QAAQlR,OAAOzF,EAAK,MAItCxE,KAAK6c,gBAAgBoJ,aAAazJ,EAActD,OAChDlZ,KAAK0d,gBAAgBwI,aAAa1J,EAAc2J,OAChDnmB,KAAK8W,mBAAmB+H,aAAarC,EAAc4J,UAInD,MAAMC,EAAsC,IAAIzU,IAC/C4K,EAAcrB,QAAqBjY,SAASgX,I,MAC3C,MAAMlD,EAAShX,KAAK0b,gBAAgB5C,UAAUoB,EAAOuB,MACrD,IAAI6K,EAASpM,EAAOwE,YAEpB,MAAM6H,EAAgBvmB,KAAK8W,mBAAmB0P,eAAexP,GAC7D,GAAGuP,EAAe,CAChB,MAAME,EAAoBzmB,KAAK8W,mBAAmBiI,iBAAiB/H,EAAQuP,GACrE3H,EAAa5e,KAAK8W,mBAAmBiI,iBAAiB/H,EAAQsP,KAChEA,GAAWG,KAAuB7H,IAAc6H,MAAAA,OAAiB,EAAjBA,EAAmB5E,OAAOjD,MAAAA,OAAU,EAAVA,EAAYiD,UACxF3H,EAAOwE,YAAc4H,EAASC,EAC9BvmB,KAAK8W,mBAAmBuN,kBAAkBrN,GAAQ0P,MAAQH,GAS3DD,GAA8B,kBAAR,QAAZ,EAAApM,EAAO8J,aAAK,eAAE3lB,GACtB2B,KAAK8e,WAAW5E,IACjBmM,EAAeje,IAAI4O,EAAQkD,GAG7Bla,KAAK8lB,oBAAoB9O,GAG3B,MAAM2P,EAAU3mB,KAAK8W,mBAAmB8P,8BAA8B5P,GACtE,QAAelM,IAAZ6b,EAAuB,CACxB,IAAI,MAAMtL,KAAUsL,EAClBA,EAAQ5iB,OAAOsX,GACfrb,KAAK6d,kBAAkBgJ,WAAWxL,GAGhCsL,EAAQlT,aACHzT,KAAK8W,mBAAmB8P,8BAA8B5P,OAKhEqP,EAAe5S,MAChBzT,KAAK4c,UAAUhW,cAAc,sBAAuByf,GAIhDhB,oBAAoBnL,GAC1B,MAAMrY,EAAU7B,KAAK8W,mBAAmBiI,iBAAiB7E,EAAOlD,OAAQkD,EAAOwE,aAC/E,OAAO7c,MAAAA,OAAO,EAAPA,EAASggB,OAAQ,EAGnBiF,sBAAsB9P,GAC3B,GAAGA,EAAO+N,YAAa,CACrB,MAAMtH,EAAazd,KAAK0d,gBAAgBC,QAAQ3G,EAAO8M,YAEvD,GACa,qBAAXrG,EAAKpf,GAEJof,EAAmB7e,OAAO+G,KAG3B,OAAO,EAIX,OAAO,EAMFmZ,WAAW5E,EAAgBO,EAA8C0K,EAA4BC,G,qBAA1E3K,EAA2B,QAA3B,EAAWP,EAAOsB,iBAAS,QAAI,MAC/D,MAAMxE,EAAShX,KAAK0b,gBAAgB5C,UAAUoB,EAAOuB,MACrD,IAAIzE,EAEF,OADA3X,QAAQC,MAAM,gCAAiC4a,EAAQO,IAChD,EAOT,GAJgB,WAAbP,EAAO7b,GACRgB,QAAQC,MAAM,sCAAuC4a,EAAQte,OAAOC,OAAO,GAAIqe,KAG7Ela,KAAK8mB,sBAAsB9P,GAC7B,OAAO,EAGT,MAAM4M,EAAY5jB,KAAK0b,gBAAgBmI,UAAU7M,GAAUA,EAAO8M,WAAa,KAEzE/G,EAAW/c,KAAK0b,gBAAgBsB,kBAAkBhG,GACxDhX,KAAK+a,aAAakC,YAAYjG,EAAQ+F,GAEtC,MAAMgK,EAAkB/mB,KAAKkc,cAAclF,GAE3C,IAAI0N,EAAa7iB,EACjB,GAAGqY,EAAOwE,YAAa,CACrBgG,GAAM,EAAAsC,GAAA,GAAkB9M,EAAOwE,aAG/B,MAAMuI,GAAgBF,MAAAA,OAAe,EAAfA,EAAiBrI,cAAe1e,KAAK8W,mBAAmBiI,iBAAiB/H,EAAQ+P,EAAgBrI,cAC/F,QAArB,EAAAuI,MAAAA,OAAa,EAAbA,EAAeroB,cAAM,eAAEgmB,cAAemC,EAAgBrI,aAAegG,IACtEA,EAAMqC,EAAgBrI,aAGxB7c,EAAU7B,KAAK8W,mBAAmBiI,iBAAiB/H,EAAQ0N,QAE3DA,EAAM1kB,KAAK8W,mBAAmBoQ,sBAAsBlQ,GACpDnV,EAAU,CACRxD,EAAG,UACHC,GAAIomB,EACJA,IAAAA,EACAyC,QAASnnB,KAAK0b,gBAAgB0L,cAAcpnB,KAAK6c,gBAAgBC,UAAUxe,GAAGmI,UAAS,IACvFsS,QAAS/Y,KAAK0b,gBAAgB0L,cAAcpQ,GAC5CqQ,SAAS,EACTzoB,OAAQ,CAACmb,KAAK,GACd8H,KAAM,EACNhgB,QAAS,IAEX7B,KAAK8W,mBAAmB+H,aAAa,CAAChd,GAAU,CAACylB,YAAY,IAO/D,IAJIzlB,MAAAA,OAAO,EAAPA,EAASjD,SACXoB,KAAK8W,mBAAmB3W,IAAIb,MAAM,+BAAgC4a,EAAQrY,IAGxE+hB,GAAa5M,EAAO+N,YAAa,CACnC,MAAMtH,EAAOzd,KAAK0d,gBAAgBC,QAAQ3G,EAAO8M,YACjD,GAAGrG,GAAQA,EAAK8J,aAAe9J,EAAK7e,OAAO4oB,YAAa,CACtD,MAAMC,EAAiBznB,KAAK0b,gBAAgB5C,UAAU2E,EAAK8J,aAC3DvnB,KAAK8W,mBAAmB4Q,eAAe1Q,GAAUyQ,EACjDznB,KAAK8W,mBAAmB6Q,eAAeF,GAAkBzQ,EACzDkD,EAAOiG,WAAasH,GA4BxB,GAvBAvN,EAAOwE,YAAcgG,EAErBxK,EAAO0N,mBAAoB,EAAAZ,GAAA,GAAkBD,IAAoB7M,EAAO0N,kBAAoBb,EAAgBa,kBAAoB1N,EAAO0N,mBACvI1N,EAAO2N,oBAAqB,EAAAb,GAAA,GAAkBD,IAAoB7M,EAAO2N,mBAAqBd,EAAgBc,mBAAqB3N,EAAO2N,yBAElH/c,IAArBoP,EAAOsB,WACQ,WAAbtB,EAAO7b,IAER6b,EAAOsB,UAAYuL,EAAkBA,EAAgBvL,UAAYf,GAMrEP,EAAO8J,MAAQhkB,KAAKwe,iBAAiBsJ,UAAU9Q,EAAQ,EAAGkD,EAAO8J,OACjE9J,EAAOlD,OAASA,EAQbnV,GAAWA,EAAQjD,OAAOgmB,YAAa,CACxC,MAAMmD,EAAQlmB,EAAQjD,OAAOmb,IAC1B2K,EAAMxK,EAAO6N,EAAQ,qBAAuB,sBAC7ClmB,EAAQjD,OAAOopB,QAAS,EAEpB9N,EAAO+N,cAAiBF,KACxB7N,EAAO+N,qBAGJpmB,EAAQjD,OAAOopB,OAI1B,MAAM5D,EAAiBpkB,KAAK8W,mBAAmBuN,kBAAkBrN,GAC3DpP,EAAQwc,EAAeI,QAAQ5c,MAiCrC,GA9BcA,EAAMzJ,OAMTyJ,EAAMsgB,MAAM,eACP9D,EAAeI,QAAQ2D,YAAY,CAACzD,IAC5C0D,OAAO,aACbhE,EAAelJ,QAAfkJ,EAAelJ,MAAU,GACtBlb,KAAK8W,mBAAmBuR,mBAAmBjE,EAAgBviB,IAC5D7B,KAAK4c,UAAUhW,cAAc,uBAAwB,CAACoQ,OAAAA,MAVxDoN,EAAeI,QAAQP,QAAQS,GAC/BN,EAAelJ,QAAfkJ,EAAelJ,MAAU,GACtBlb,KAAK8W,mBAAmBuR,mBAAmBjE,EAAgBviB,IAC5D7B,KAAK4c,UAAUhW,cAAc,uBAAwB,CAACoQ,OAAAA,KAW1DoN,EAAesC,MAAQhC,EACvBN,EAAekE,UAAYpO,EAAO0N,kBAClCxD,EAAemE,gBAAkBrO,EAAO2N,mBAExC7nB,KAAK4gB,wBAAwB4H,iBAAiB,CAC5CxR,OAAAA,EACAjQ,SAAUmT,EAAOuO,kBAGhB7E,GAAa1J,EAAOiK,KACrBnkB,KAAK6d,kBAAkB6K,gBAAgB9E,EAAW1J,EAAOiK,KAG3DnkB,KAAK8b,uBAAuB5B,GAEzB6M,EAAiB,CAElB,MAAM4B,EAAqB3oB,KAAK4oB,eAAepL,kCAAkCuJ,GACjFjP,GAAkBiP,EAAiB7M,GACnCyO,IAKF,OAFA3oB,KAAK+b,WAAW7B,EAAQrY,MAAAA,OAAO,EAAPA,EAASggB,KAAMsD,EAAkBC,IAElD,EAGFyD,WAAW5N,EAAQ,GAAI6N,EAAsBC,EAAQ,GAAItO,EAAmB,EAAGyF,GAAe,GAWnG,IAAI,SAAiBzF,GAAW,CAC9B,MAAMuO,EAA2B,GAE3BC,EAAqBjpB,KAAK6c,gBAAgBqM,eAC5CD,EAAmBE,QACrBH,EAAS1oB,KAAK2oB,EAAmBnf,SAGnC,MAAMsf,EAA8BppB,KAAKwgB,eAAe6I,qBAAqB5O,GAK7E,GAJG2O,GACDJ,EAAS1oB,KAAK8oB,GAGbJ,EAAS7qB,OACV,OAAOwD,QAAQ8Q,IAAIuW,GAAUhkB,MAAK,IACzBhF,KAAK6oB,WAAW5N,EAAO6N,EAAaC,EAAOtO,EAAUyF,KAMlE,MAAMoJ,GAAgC,SAAiB7O,IAAaza,KAAKqf,cAAc5E,GAAYL,GAAmBK,EACtH,IAAI8O,EAAmBvpB,KAAKuc,iBAAiB9B,EAAUyF,GAEvD,MAAM/F,EAAWna,KAAKud,4BAA4B9C,GAElD,GAAGQ,EAAO,CACR,IAAI8N,GAAS/oB,KAAKgb,cAAcC,QAAUA,GAASjb,KAAKgb,cAAcP,WAAaA,EAAU,CAC3Fza,KAAKgb,cAAcC,MAAQA,EAC3Bjb,KAAKgb,cAAcP,SAAWA,EAE9B,MAAMpV,EAAUrF,KAAK+a,aAAa7e,OAAO+e,GAEnCE,EAAoB,GAC1B,IAAI,MAAMnE,KAAUhX,KAAKmb,QAAS,CAChC,MAAMjB,EAASla,KAAKmb,QAAQnE,GACzB3R,EAAQmkB,IAAItP,EAAOlD,SAAWkD,EAAOsB,YAAcf,GACpDU,EAAQ7a,KAAK4Z,GAIjBiB,EAAQsE,MAAK,CAACgK,EAAIC,IAAO1pB,KAAKyhB,eAAeiI,EAAIvP,GAAYna,KAAKyhB,eAAegI,EAAItP,KACrFna,KAAKgb,cAAcG,QAAUA,EAC7Bnb,KAAKgb,cAAcE,MAAQC,EAAQhd,OAGrCorB,EAAmBvpB,KAAKgb,cAAcG,aAEtCnb,KAAKgb,cAAcC,MAAQ,GAG7B,IAAI0O,EAAS,EACb,GAAGb,EAAc,EACf,IAAI,IAAI3qB,EAASorB,EAAiBprB,OAAQwrB,EAASxrB,KAC9C2qB,EAAc9oB,KAAKyhB,eAAe8H,EAAiBI,GAASxP,MADJwP,GAO/D,MAAMC,EAAY5pB,KAAKif,gBAAgBqK,GACjCO,EAAkBN,EAAiBprB,QAAWwrB,EAASZ,EAC7D,GAAG9N,GAAS2O,GAAaC,EAAiB,CACxC,MAAM1O,EAAUoO,EAAiB3hB,MAAM+hB,EAAQA,EAASZ,GACxD,MAAO,CACL5N,QAAAA,EACAD,MAAO0O,EAAYL,EAAiBprB,OAAS,KAC7C2rB,SAAUP,EAAiBprB,SAAYgd,EAAQ,IAAMA,EAAQ,KAAOoO,EAAiB,IAAOvpB,KAAKyhB,eAAe8H,EAAiB,GAAIpP,GAAY2O,GACjJZ,OAAQjN,GAAS2O,IAAeD,EAASZ,GAAUQ,EAAiBprB,QAIxE,OAAO6B,KAAK8W,mBAAmBiT,eAAehB,EAAOO,GAActkB,MAAM5C,IAOvE,GALG8d,IACDqJ,EAAmBvpB,KAAKuc,iBAAiB9B,EAAUyF,IAGrDyJ,EAAS,EACNb,EAAc,EACf,IAAI,IAAI3qB,EAASorB,EAAiBprB,OAAQwrB,EAASxrB,KAC9C2qB,EAAc9oB,KAAKyhB,eAAe8H,EAAiBI,GAASxP,MADJwP,GAS/D,MAAMxO,EAAUoO,EAAiB3hB,MAAM+hB,EAAQA,EAASZ,GACxD,MAAO,CACL5N,QAAAA,EACAD,WAAwBpQ,IAAjB1I,EAAO8Y,MAAsBqO,EAAiBprB,OAASiE,EAAO8Y,MACrE4O,SAAUP,EAAiBprB,SAAYgd,EAAQ,IAAMA,EAAQ,KAAOoO,EAAiB,IAAOvpB,KAAKyhB,eAAe8H,EAAiB,GAAIpP,GAAY2O,GAEjJZ,MAAO9lB,EAAO8lB,W,4UC3kCtB,MAAM8B,GAAc,CAClB,CAAC,eAAgB,iBACjB,CAAC,gBAAiB,kBAClB,CAAC,gBAAiB,mBAGdC,GAAoB,UAEpBC,GAA+B,CACnC7rB,EAAG,eACHO,OAAQ,GACRurB,MAAO,EACP7rB,GAAI,EACJ8rB,MAAO,GACPC,cAAe,GACfC,cAAe,GACfC,aAAc,GACdC,eAAgB,GAChBC,eAAgB,GAChBnJ,cAAe,IAGF,MAAMoJ,WAAuB5X,EAA5C,c,oBA6FS,KAAAzO,MAASsH,IACd,GAAIA,EAIG,CACL3L,KAAKkiB,QAAU,GACfliB,KAAK2qB,WAAa,GAClB3qB,KAAK4qB,gBAAkB,IAAIxU,IAE3BpW,KAAK6qB,aAAe,GACpB,IAAI,MAAMxN,KAAY,KACpBrd,KAAK6qB,aAAaxN,GAAYrd,KAAK8qB,oBAAoBzN,QATzDrd,KAAK4qB,gBAAgBvmB,QACrBrE,KAAK+qB,eAYP/qB,KAAK0gB,QAAU,MAGT,KAAAsK,qBAAwB3P,IAC3BA,EAAO7c,OACRwB,KAAKirB,iBAAiB5P,EAAO7c,QACrBwB,KAAKkiB,QAAQ7G,EAAO/c,MAE5B0B,KAAK4c,UAAUhW,cAAc,gBAAiB5G,KAAKkiB,QAAQ7G,EAAO/c,YAC3D0B,KAAKkiB,QAAQ7G,EAAO/c,KAC3B,EAAA4sB,GAAA,GAAclrB,KAAK2qB,YAAansB,GAAYA,EAAqCF,KAAO+c,EAAO/c,MAGjG0B,KAAKgI,eAGC,KAAAmjB,sBAAyB9P,IAG/B,MAAM+P,GAAa,EAAAC,GAAA,GAAKrrB,KAAKkiB,SAE7BliB,KAAKsrB,kBAAiB,GAAMtmB,MAAMkd,IAChC,IAAI,MAAMqJ,KAAaH,EAAY,CACjC,MAAM/N,GAAYkO,EACdrJ,EAAQ3e,MAAM/E,GAAWA,EAAOF,KAAO+e,KACzCrd,KAAKgrB,qBAAqB,CAAC3sB,EAAG,qBAAsBC,GAAI+e,IAI5Drd,KAAKwrB,0BAA0B,CAACntB,EAAG,0BAA2Bge,MAAO6F,EAAQ9d,KAAK5F,GAAWA,EAAOF,WAIhG,KAAAktB,0BAA6BnQ,IAGnC,MAAMgB,EAAQhB,EAAOgB,MAAMzU,QACvByU,EAAMoP,SAAS,OACjBpP,EAAMpS,OAAOoS,EAAM,KAAO,KAAgB,EAAI,EAAG,EAAG,MAGtDrc,KAAK0gB,QAAU,KACfrE,EAAMnZ,SAASma,IACb,MAAM7e,EAASwB,KAAKkiB,QAAQ7E,UACrB7e,EAAOkiB,QACd1gB,KAAK0rB,WAAWltB,MAGlBwB,KAAK4c,UAAUhW,cAAc,eAAgByV,GAE7Crc,KAAKgI,eAxJG2U,QAmCR,OAlCA3c,KAAKqE,OAAM,GAEXrE,KAAK6d,kBAAkBC,2BAA2B,CAChD6N,mBAAoB3rB,KAAKgrB,qBAEzBY,oBAAqB5rB,KAAKmrB,sBAE1BU,wBAAyB7rB,KAAKwrB,4BAuBhCxrB,KAAK4c,UAAUpW,iBAAiB,kBAAkB,KAChDxG,KAAKmrB,sBAAsB,CAAC9sB,EAAG,2BAG1B2B,KAAKke,gBAAgB7W,WAAWrC,MAAMmC,IACxBnH,KAAK8rB,eAAe3kB,EAAMwjB,YAClCvmB,KAAK5F,IACdwB,KAAKirB,iBAAiBzsB,GAAQ,GAAO,SAQnCstB,eAAe5J,GACrBA,EAAUA,EAAQta,QAElB,MAAMmkB,EAAiB/rB,KAAK6qB,aAAa,MACnCmB,EAAgBhsB,KAAK6qB,aAAa,MAElCoB,EAAsB/J,EAAQ5B,WAAW9hB,GAAwB,wBAAbA,EAAOH,GAA+BG,EAAOF,KAAO,OAY9G,OAX4B,IAAzB2tB,EAA4B/J,EAAQ+J,GAAuBF,EACzD7J,EAAQ+B,QAAQ8H,IAErB,EAAAb,GAAA,GAAchJ,GAAU1jB,GAAYA,EAA0BF,KAAO,OACrE4jB,EAAQjY,OAAciY,EAAQ,KAAO6J,EAAiB,EAAI,EAAG,EAAGC,GAEhEhsB,KAAK0gB,QAAU,KACfwB,EAAQhf,SAAS1E,WACRA,EAAOkiB,WAGTwB,EAGD4I,oBAAoBxsB,GAC1B,MAAME,EAAM,gCAAuB,EAAA6sB,GAAA,GAAKnB,KAAa,CAAE5rB,GAAAA,IAWvD,OAVGA,IAAO,KACRE,EAAOI,OAAOstB,kBAAmB,EACzB5tB,IAAO,OACfE,EAAOI,OAAOutB,oBAAqB,GAGlC,SAAiB7tB,KAClBE,EAAO8iB,cAAgBthB,KAAK4oB,eAAexJ,gBAAgB9gB,IAGtDE,EA4EDwJ,cACNhI,KAAKke,gBAAgBlW,YAAY,aAAchI,KAAK2qB,YAG/CvJ,oBAAoBlH,EAAgB1b,GACzC,GAAG,SAAiBA,EAAOF,IACzB,OAAO4b,EAAOsB,YAAchd,EAAOF,IAAM0B,KAAK4oB,eAAe9B,sBAAsB5M,EAAOlD,QAG5F,MAAMA,EAASkD,EAAOlD,OAGtB,IAAIhX,KAAK8W,mBAAmBoF,cAAclF,GACxC,OAAO,EAIT,GAAGxY,EAAOgsB,eAAeiB,SAASzU,GAChC,OAAO,EAIT,GAAGxY,EAAOisB,eAAegB,SAASzU,GAChC,OAAO,EAGT,MAAMpY,EAASJ,EAAOI,OAGtB,GAAGA,EAAOstB,kBAAoBhS,EAAOsB,YAAc,KACjD,OAAO,EAIT,GAAG5c,EAAOwtB,eAAiBpsB,KAAK8W,mBAAmBuV,eAAenS,GAChE,OAAO,EAIT,GAAGtb,EAAO0tB,eAAiBtsB,KAAK4gB,wBAAwBC,iBAAiB7J,MAAakD,EAAOqS,wBAAyBrS,EAAO+N,cAC3H,OAAO,EAGT,GAAGjoB,KAAK0b,gBAAgBqJ,UAAU/N,GAAS,CAEzC,GAAGpY,EAAO4tB,YAAcxsB,KAAK0b,gBAAgB+Q,YAAYzV,GACvD,OAAO,EAIT,GAAGpY,EAAO8tB,QAAU1sB,KAAK0b,gBAAgBiR,WAAW3V,GAClD,OAAO,MAEJ,CACL,MAAMM,EAASN,EAAO4V,WAGtB,GAAG5sB,KAAK6c,gBAAgBgQ,MAAMvV,GAC5B,QAAS1Y,EAAOkuB,KAIlB,GAAGluB,EAAOmuB,eAAiB/sB,KAAK6c,gBAAgBmQ,UAAU1V,GACxD,OAAO,EAIT,GAAG1Y,EAAOquB,UAAYjtB,KAAK6c,gBAAgBmQ,UAAU1V,GACnD,OAAO,EAIX,OAAO,EAGF4V,sBAAsBhT,EAAgBmD,GAC3C,OAAOrd,KAAKohB,oBAAoBlH,EAAQla,KAAKkiB,QAAQ7E,IAGhDoD,UAAUpD,GACf,OAAOrd,KAAKkiB,QAAQ7E,GAGf8E,aACL,OAAOniB,KAAKkiB,QAGP6I,eACL,MAAM7I,EAAUliB,KAAKmiB,aACrB,IAAI,MAAM9E,KAAY6E,EACjB,UAAkB7E,IAIrBrd,KAAKgrB,qBAAqB,CACxB3sB,EAAG,qBACHC,IAAK+e,IAKE8P,gBAAgBnW,EAAgBqG,G,0CAC3C,MAAM7e,EAASwB,KAAKkiB,QAAQ7E,GAEtBlc,EAAQ3C,EAAO8iB,cAAcllB,QAAQ4a,GACrC0O,GAAuB,IAAXvkB,EAOlB,GALGukB,IACDlnB,EAAO+rB,aAAatgB,OAAO9I,EAAO,GAClC3C,EAAO8iB,cAAcrX,OAAO9I,EAAO,KAGjCukB,EAAW,CACb,GAAGlnB,EAAO+rB,aAAapsB,eAAiB6B,KAAKgU,WAAWoZ,aAAaC,0BACnE,OAAO1rB,QAAQC,QAAO,EAAAiW,EAAA,GAAU,4BAGlCrZ,EAAO+rB,aAAatG,QAAQjkB,KAAK0b,gBAAgB4R,iBAAiBtW,IAClExY,EAAO8iB,cAAc2C,QAAQjN,GAG/B,OAAOhX,KAAK2rB,mBAAmBntB,MAG1B+uB,mBAAmB/uB,EAAwBgvB,GAChD,MAAM9G,EAAQnH,KAAK8D,IAAI,KAAMznB,OAAOyX,KAAKrT,KAAKkiB,SAAS9d,KAAKyB,IAAOA,KAGnE,OAFArH,GAAS,EAAA6sB,GAAA,GAAK7sB,IACPF,GAAKooB,EAAQ,EACb1mB,KAAK2rB,mBAAmBntB,OAAQsM,EAAW0iB,GAG7C7B,mBAAmBntB,EAAwBivB,GAAS,EAAOD,GAAU,GAC1E,MAAMrD,EAAQsD,EAAS,EAAI,EAE3B,OAAOztB,KAAKgU,WAAWC,UAAU,8BAA+B,CAC9DkW,MAAAA,EACA7rB,GAAIE,EAAOF,GACXE,OAAQivB,OAAS3iB,EAAY9K,KAAK0tB,sBAAsBlvB,KACvDwG,MAAM2oB,IAGP,GAAGA,IAOD3tB,KAAKgrB,qBAAqB,CACxB3sB,EAAG,qBACHC,GAAIE,EAAOF,GACXE,OAAQivB,OAAS3iB,EAAYtM,IAG5BgvB,GAAS,CACV,MAAMI,EAAsB,GAC5B,IAAI,MAAMvQ,KAAYrd,KAAKkiB,QAAS,CAClC,MAAM1jB,EAASwB,KAAKkiB,QAAQ7E,KAC1B7e,EAAOkiB,QACTkN,EAAEttB,KAAK9B,GAGTA,EAAOkiB,QAAU,KAEjB,MAAMrE,EAAQuR,EAAEnO,MAAK,CAACC,EAAGC,IAAMD,EAAEgB,QAAUf,EAAEe,UAAStc,KAAK5F,GAAWA,EAAOF,KAC7E0B,KAAKwrB,0BAA0B,CAC7BntB,EAAG,0BACHge,MAAAA,IAKN,OAAOsR,KAIJD,sBAAsBlvB,GAC3B,MAAMqY,GAAI,EAAAwU,GAAA,GAAK7sB,GAOf,OAFAwB,KAAK6tB,0BAA0BrvB,GAExBqY,EAGDgX,0BAA0BrvB,IAChC,EAAAwnB,GAAA,GAAexnB,EAAOisB,gBAAgB,CAACzT,EAAQxS,KAC1ChG,EAAO8iB,cAAcmK,SAASzU,KAC/BxY,EAAO8rB,cAAcrgB,OAAOzF,EAAK,GACjChG,EAAOisB,eAAexgB,OAAOzF,EAAK,OA6BjC6kB,qBAAqBhM,EAAkB5d,EAA2D,gBACvG,MAAMjB,EAASwB,KAAKygB,UAAUpD,GACxByQ,EAAQtvB,GAAUA,EAAOiB,GAC/B,KAAIquB,MAAAA,OAAK,EAALA,EAAO3vB,QACT,OAIF,MAAM4vB,EAAgBD,EAAMtvB,QAAQwvB,IAClC,MAAMhX,EAAShX,KAAK0b,gBAAgB5C,UAAUkV,GACxCC,EAAoBjuB,KAAK4qB,gBAAgBpB,IAAIxS,GAC7CkD,EAASla,KAAK8W,mBAAmBoF,cAAclF,GAMrD,OADgBiX,IAAsB/T,KAIxC,IAAI6T,EAAc5vB,OAKhB,OAGF,MAAM+vB,EAAiBH,EAAc3pB,KAAK4pB,IACxC,MAAMhX,EAAShX,KAAK0b,gBAAgB5C,UAAUkV,GAQ9C,OAPgBhuB,KAAK8W,mBAAmBkI,mBAAmBgP,GAC1DhpB,MAAMkV,IACLla,KAAK4qB,gBAAgBrU,IAAIS,GAElBkD,OAASpP,EAAYkM,QAehC,OATsBrV,QAAQ8Q,IAAIyb,GAAgBlpB,MAAMmpB,KACtDA,EAAiBA,EAAe3vB,OAAOC,UACpBN,UAUVmtB,iBAAiB8C,GAAY,G,0CACxC,MAAM/a,EAAOzX,OAAOyX,KAAKrT,KAAKkiB,SAC9B,GAAG7O,EAAKlV,OAAS8rB,KAAsBmE,EACrC,OAAO/a,EAAKjP,KAAKiZ,GAAard,KAAKkiB,QAAQ7E,KAAWoC,MAAK,CAACC,EAAGC,IAAMD,EAAEgB,QAAUf,EAAEe,UAGrF,MAAMwB,QAAgBliB,KAAKgU,WAAWqa,gBAAgB,6BAEtD,OADkBruB,KAAK8rB,eAAe5J,GACrB9d,KAAK5F,GAAWwB,KAAKirB,iBAAiBzsB,EAAQ4vB,KAAY5vB,OAAOC,YAG7E6vB,6BACL,OAAOtuB,KAAKgU,WAAWC,UAAU,sCAG5BgX,iBAAiBzsB,EAAsB6c,GAAS,EAAMkT,GAG3C,wBAAb/vB,EAAOH,IACRG,EAASwB,KAAK6qB,aAAa,QAG7B,EAAA2D,GAAA,GAA2BhwB,GACvB,SAAiBA,EAAOF,MAC1B0rB,GAAY9mB,SAAQ,EAAEnC,EAAM0tB,OAC1B,EAAAD,GAAA,GAA2BhwB,GAC3BA,EAAOiwB,GAAMjwB,EAAOuC,GAAMqD,KAAKqX,GAASzb,KAAK0b,gBAAgB5C,UAAU2C,QAGzEzb,KAAK6tB,0BAA0BrvB,GAE/BA,EAAO8rB,cAAgB9rB,EAAO+rB,aAAarmB,OAAO1F,EAAO8rB,eACzD9rB,EAAOisB,eAAiBjsB,EAAO8iB,cAAcpd,OAAO1F,EAAOisB,iBAG7D,MAAMiE,EAAY1uB,KAAKkiB,QAAQ1jB,EAAOF,IAiBtC,OAhBGowB,EACD9yB,OAAOC,OAAO6yB,EAAWlwB,GAEzBwB,KAAKkiB,QAAQ1jB,EAAOF,IAAME,EAG5BwB,KAAK0rB,WAAWltB,GAEZ+vB,IACClT,EACDrb,KAAK4c,UAAUhW,cAAc,gBAAiBpI,GACrCkwB,GACT1uB,KAAK4c,UAAUhW,cAAc,aAAcpI,IAIxCA,EAGDktB,WAAWltB,QACKsM,IAAnBtM,EAAOkiB,QACLliB,EAAOkiB,SAAW1gB,KAAK0gB,UACxB1gB,KAAK0gB,QAAUliB,EAAOkiB,QAAU,IAGlCliB,EAAOkiB,QAAU1gB,KAAK0gB,WACtB,EAAAwK,GAAA,GAAclrB,KAAK2qB,YAAagE,GAAYA,EAAQrwB,KAAOE,EAAOF,KAClE0B,KAAK2qB,WAAWrqB,KAAK9B,GACrBwB,KAAKgI,eAII4mB,oBAAoBvR,G,0CAC/B,GAAG,SAAiBA,GAClB,OAAO,EAGT,MAAM0L,QAAc/oB,KAAKgU,WAAW6a,SAAS,WAG7C,OAF0B7uB,KAAK2qB,WAAWnsB,QAAQA,IAAY,SAAiBA,EAAOF,MAAKsJ,MAAM,EAAGmhB,GAAO+F,MAAMtwB,GAAWA,EAAOF,KAAO+e,Q,0BC9hB/H,SAAS0R,GAAYC,EAAkBC,GAGpDA,EAAa/rB,SAASgsB,IACpBtzB,OAAOuzB,oBAAoBD,EAASE,WAAWlsB,SAASjD,IACtD,MAAMsE,EAA4B3I,OAAOyzB,yBAAyBH,EAASE,UAAWnvB,IAASrE,OAAOkI,OAAO,MAIvF,gBAAT7D,GAIbrE,OAAO0zB,eACLN,EAAYI,UACZnvB,EACAsE,SCmBR,MAAMgrB,GAcJzvB,cAbO,KAAA0vB,aAA6B,CAClCC,kBAAmB,GACnBC,kBAAmB,GACnBC,YAAa,KACbC,YAAa,MAGP,KAAAC,cAAqD,GACrD,KAAAC,UAAW,EAEX,KAAA3vB,KAAM,EAAAyI,EAAA,IAAO,UAAW,WAAiB,UAAgB,KAAAD,KACzD,KAAAF,MAAQ,KA4HT,KAAAsnB,qBAAuB,CAACC,EAAoB5yB,EAE9C,MAEH,MAAM6yB,EAAc,CAClBpO,KAAMmO,EAAcnO,KACpBqO,IAAKF,EAAcE,IACnBC,SAAUH,EAAcI,WAM1B,OAFApwB,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,uBAAwBunB,GAE9CA,EAAc3xB,GACnB,IAAK,iBACL,IAAK,sBACH2B,KAAKqwB,qBACL,MAEF,IAAK,cACHrwB,KAAKswB,cAAcN,EAAc3U,OAAQ4U,GACzC,MAEF,IAAK,qBACL,IAAK,yBAA0B,EAC7B,EAAAzB,GAAA,GAAwEwB,GACxEhwB,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,8CAA+C,OAAF,UAAMunB,IAChF,MAAMjI,EAAQiI,EAAcpxB,OAAOmb,IAC7B5B,EAAU6X,EAAiD7I,UAAYY,EAAQ/nB,KAAK0b,gBAAgB1E,OAAUgZ,EAA6CxX,SAC3J+X,EAAQP,EAAiD1W,QAC5D0W,EAAiD1W,QAAQ7S,UAAS,GACjEupB,EAA6CxX,QAAQ/R,UAAS,IAAUzG,KAAK0b,gBAAgB1E,OAEjGhX,KAAKswB,cAAc,CACjBjyB,EAAG,mBACHwD,QAAS,CACPxD,EAAG,UACHO,OAAQoxB,EAAcpxB,OACtBN,GAAI0xB,EAAc1xB,GAClB6oB,QAASnnB,KAAK0b,gBAAgB0L,cAAcjP,EAAO1R,YACnDsS,QAAS/Y,KAAK0b,gBAAgB0L,cAAcmJ,GAC5C1O,KAAMmO,EAAcnO,KACpBhgB,QAASmuB,EAAcnuB,QACvB2uB,SAAUR,EAAcQ,SACxBC,SAAUT,EAAcS,SACxBC,SAAUV,EAAcU,UAE1BvM,IAAK6L,EAAc7L,IACnBwM,UAAWX,EAAcW,WACxBV,GACH,MAGF,IAAK,kBACL,IAAK,UACHjwB,KAAK6c,gBAAgBoJ,aAAa+J,EAAc9W,MAAO9b,EAAQwzB,UAC/D5wB,KAAK0d,gBAAgBwI,aAAa8J,EAAc7J,MAAO/oB,EAAQwzB,UAE/DZ,EAAcrJ,QAAQzjB,SAASmY,IAC7Brb,KAAKswB,cAAcjV,EAAQ4U,MAE7B,MAEF,QACEjwB,KAAKG,IAAI2C,KAAK,yBAA0BktB,KAzL5ChwB,KAAK6wB,cAAa,GAGZC,WACN,MAAMC,EAAO/wB,KACbA,KAAKwvB,aAAe,IAAIwB,MAAMhxB,KAAKwvB,aAAc,CAC/CpnB,IAAK,SAAS1F,EAA2C6E,EAA8ChD,GAIrG,OAFA7B,EAAO6E,GAAOhD,EACdwsB,EAAKE,oBACE,KAKNA,mBACL,MAAMC,EAAKlxB,KAAKwvB,aAChBxvB,KAAKke,gBAAgBlW,YAAY,UAAW,CAC1CkoB,IAAKgB,EAAGhB,IACR/L,IAAK+M,EAAG/M,IACRtC,KAAMqP,EAAGrP,OAILsP,sBACN,MAAMhqB,EAAQnH,KAAKwvB,aACb4B,EAAUjqB,EAAM+oB,IAAM,EACtBmB,EAAqBlqB,EAAMuoB,kBAAkB0B,GACnD,IAAIC,EACF,OAAO,EAGT,MAAM1K,EAAU0K,EAAmB1K,QACnC,IAAI,IAAI9gB,EAAI,EAAG1H,EAASwoB,EAAQxoB,OAAQ0H,EAAI1H,IAAU0H,EACpD7F,KAAK6mB,WAAWF,EAAQ9gB,IAqB1B,OAlBAsB,EAAM+oB,IAAMmB,EAAmBnB,IAC5BmB,EAAmBxP,MAAQ1a,EAAM0a,KAAOwP,EAAmBxP,OAC5D1a,EAAM0a,KAAOwP,EAAmBxP,aAE3B1a,EAAMuoB,kBAAkB0B,IAE3BpxB,KAAKmxB,uBACPhqB,EAAMwoB,aACNxoB,EAAMwoB,YAAY2B,aAClBnqB,EAAM+oB,KAAO/oB,EAAMwoB,YAAY2B,cAC3BnqB,EAAMwoB,YAAY4B,mBAIbpqB,EAAMwoB,YAAY2B,aAHzBpsB,aAAaiC,EAAMwoB,YAAYxqB,SAC/BgC,EAAMwoB,YAAc,QAMjB,EAGD6B,oBAAoB5N,GAC1B,MAAM6N,EAAW7N,EAAY5jB,KAAKilB,gBAAgBrB,GAAa5jB,KAAKwvB,aACpE,IAAIiC,EAAShC,kBAAkBtxB,OAC7B,OAAO,EAGTszB,EAAShC,kBAAkBhQ,MAAK,CAACC,EAAGC,IAC3BD,EAAEyE,IAAMxE,EAAEwE,MAInB,IAAIuN,EAASD,EAAStN,IAClBwN,EAAU,EACVC,EAAY,EAChB,IAAI,IAAI/rB,EAAI,EAAG1H,EAASszB,EAAShC,kBAAkBtxB,OAAQ0H,EAAI1H,IAAU0H,EAAG,CAC1E,MAAMwV,EAASoW,EAAShC,kBAAkB5pB,GAC1C6rB,GAAUrW,EAAOsV,UACde,GAAUrW,EAAO8I,MAClBwN,EAAUtW,EAAO8I,IACjByN,EAAY/rB,GAIhB,IAAI8rB,EACF,OAAO,EAGT3xB,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,0BAA2BkpB,EAASF,EAAShC,kBAAkB7nB,MAAM,EAAGgqB,EAAY,IAEjHH,EAAStN,IAAMwN,EACf,IAAI,IAAI9rB,EAAI,EAAGA,GAAK+rB,IAAa/rB,EAAG,CAClC,MAAMwV,EAASoW,EAAShC,kBAAkB5pB,GAG1C7F,KAAK6mB,WAAWxL,GAalB,OAXAoW,EAAShC,kBAAkBxlB,OAAO,EAAG2nB,EAAY,IAE7CH,EAAShC,kBAAkBtxB,QAAUszB,EAAS9B,cAC5C8B,EAAS9B,YAAY2B,mBAIhBG,EAAS9B,YAAY4B,aAH5BrsB,aAAausB,EAAS9B,YAAYxqB,SAClCssB,EAAS9B,YAAc,QAMpB,EAGFU,qBACDrwB,KAAKwvB,aAAaI,aACpB5vB,KAAK6xB,gBAIFC,mBAAmBzW,GACxBrb,KAAK+vB,qBAAqB,CACxB1xB,EAAG,cACHgd,OAAAA,IAwEIwW,cAAc9pB,GAAQ,GAE5B,MAAMynB,EAAexvB,KAAKwvB,aACpBuC,EAAavC,EAAaI,YAC5BmC,IACFvC,EAAaE,kBAAoB,GACjCF,EAAaC,kBAAoB,IAGhCD,EAAaG,cACdzqB,aAAasqB,EAAaG,YAAYxqB,SACtCqqB,EAAaG,YAAc,MAG7B,MAAM7lB,EAAU9J,KAAKgU,WAAWC,UAAU,wBAAyB,CACjEkQ,IAAKqL,EAAarL,IAClB6N,gBAAiBjqB,EAA+B,UAAO+C,EACvD+W,KAAM2N,EAAa3N,KACnBoQ,KAAM,GACL,CACD9sB,QAAS,aACRH,MAAMktB,IAGP,GAFAlyB,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,kBAAmBypB,GAEtB,4BAAvBA,EAAiB7zB,EAIlB,OAHA2B,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,mBAAoBypB,EAAiBhC,KAClEV,EAAa3N,KAAOqQ,EAAiBrQ,UACrC2N,EAAaU,IAAMgC,EAAiBhC,KAStC,GAJGnoB,GACD/H,KAAK4c,UAAUhW,cAAc,uBAGL,8BAAvBsrB,EAAiB7zB,EAAmC,CACrD2B,KAAK6c,gBAAgBoJ,aAAaiM,EAAiBhZ,OACnDlZ,KAAK0d,gBAAgBwI,aAAagM,EAAiB/L,OAKnD+L,EAAiBC,cAAcjvB,SAASmY,IACtC,OAAOA,EAAOhd,GACZ,IAAK,uBACL,IAAK,0BACL,IAAK,2BAEH,YADA2B,KAAKswB,cAAcjV,GAIvBrb,KAAK6mB,WAAWxL,MAIlB6W,EAAiBE,aAAalvB,SAASmvB,IACrCryB,KAAK6mB,WAAW,CACdxoB,EAAG,mBACHwD,QAASwwB,EACTlO,IAAKqL,EAAarL,IAClBwM,UAAW,OAIf,MAAM2B,EAAmC,uBAAvBJ,EAAiB7zB,EAA6B6zB,EAAiB/qB,MAAQ+qB,EAAiBK,mBAC1G/C,EAAaU,IAAMoC,EAAUpC,IAC7BV,EAAarL,IAAMmO,EAAUnO,IAC7BqL,EAAa3N,KAAOyQ,EAAUzQ,UAE9B2N,EAAarL,IAAM+N,EAAiB/N,IACpCqL,EAAa3N,MAAQlT,KAAK5J,MAAQ,IAAO,GAAK/E,KAAKgiB,YAAYC,6BACxDuN,EAAaU,IAEpBlwB,KAAK6vB,cAAgB,GAErB7vB,KAAKG,IAAI2C,KAAK,iBAAkBovB,EAAiB7zB,GACjD2B,KAAKwyB,sBAKP,GAA0B,4BAAvBN,EAAiB7zB,EAClB,OAAO2B,KAAK6xB,gBAEZ7xB,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,wBAQjC,OAJIspB,GACF/xB,KAAKyyB,UAAUjD,EAAc1lB,GAGxBA,EAGD4oB,qBAAqB9O,GAC3B,MAAM+O,EAAe3yB,KAAKilB,gBAAgBrB,GACpCmO,EAAaY,EAAa/C,YAC5BmC,IACFY,EAAalD,kBAAoB,IAGhCkD,EAAahD,cACdzqB,aAAaytB,EAAahD,YAAYxqB,SACtCwtB,EAAahD,YAAc,MAG7B,MAAMxvB,EAAMH,KAAKyI,MAAQzI,KAAKG,IAAIyyB,WAAW,wBAA0BhP,QAAa9Y,EAE9EhB,EAAU9J,KAAKgU,WAAWC,UAAU,+BAAgC,CACxE8P,QAAS/jB,KAAK0d,gBAAgBmV,gBAAgBjP,GAC9CplB,OAAQ,CAACH,EAAG,8BACZ8lB,IAAKwO,EAAaxO,IAClB4E,MAAO,IACN,CAAC5jB,QAAS,aAAaH,MAAMktB,IAI9B,GAHA/xB,MAAAA,GAAAA,EAAKsI,MAAM,cAAeypB,GAC1BS,EAAaxO,IAAM,QAAS+N,EAAmBA,EAAiB/N,SAAMrZ,EAE5C,mCAAvBonB,EAAiB7zB,EAApB,CAKA,GAA0B,qCAAvB6zB,EAAiB7zB,EAKlB,cAHO2B,KAAK6vB,cAAcjM,QAE1B5jB,KAAK6mB,WAAW,CAACxoB,EAAG,sBAAuBgb,WAAYuK,IAyBzD,GArBA5jB,KAAK6c,gBAAgBoJ,aAAaiM,EAAiBhZ,OACnDlZ,KAAK0d,gBAAgBwI,aAAagM,EAAiB/L,OAGnDhmB,MAAAA,GAAAA,EAAKsI,MAAM,WAAYypB,EAAiBC,cAAch0B,OAAQ,yBAC9D+zB,EAAiBC,cAAcjvB,SAASmY,IACtCrb,KAAK6mB,WAAWxL,MAGlBlb,MAAAA,GAAAA,EAAKsI,MAAM,WAAYypB,EAAiBE,aAAaj0B,OAAQ,wBAC7D+zB,EAAiBE,aAAalvB,SAASmvB,IACrCryB,KAAK6mB,WAAW,CACdxoB,EAAG,0BACHwD,QAASwwB,EACTlO,IAAKwO,EAAaxO,IAClBwM,UAAW,OAIfxwB,MAAAA,GAAAA,EAAKsI,MAAM,qBAAsBkqB,EAAaxO,KAEpB,8BAAvB+N,EAAiB7zB,IACjB6zB,EAAiBtzB,OAAOk0B,MACzB,OAAO9yB,KAAK0yB,qBAAqB9O,GAEjCzjB,MAAAA,GAAAA,EAAKsI,MAAM,iCAQf,OAJIspB,GACF/xB,KAAKyyB,UAAUE,EAAc7oB,EAAS8Z,GAGjC9Z,EAGD0oB,sBACNxyB,KAAK6c,gBAAgBxY,QACrBrE,KAAK0d,gBAAgBrZ,QACrBrE,KAAK8W,mBAAmBzS,QAExBrE,KAAK4c,UAAUhW,cAAc,iBAGvB6rB,UAAUtrB,EAAqB2C,EAAsC8Z,GAC3Ezc,EAAMyoB,YAAc9lB,EACpB9J,KAAK4c,UAAUhW,cAAc,sBAAuBgd,GAEpD9Z,EAAQ9E,MAAK,KACXmC,EAAMyoB,YAAc,KACpB5vB,KAAK4c,UAAUhW,cAAc,qBAAsBgd,MAClD,KACDzc,EAAMyoB,YAAc,QAIjBlH,gBAAgB9E,EAAmBO,GACxC,IAAIA,EACF,MAAM,IAAI/Y,MAAM,iCAAmCwY,GAGrD,QAAKA,KAAa5jB,KAAK6vB,iBACrB7vB,KAAK6vB,cAAcjM,GAAa,CAC9BO,IAAAA,EACAsL,kBAAmB,GACnBE,YAAa,KACbC,YAAa,OAGR,GAMJ3K,gBAAgBrB,EAAmBO,GAKxC,YAJqCrZ,IAAlC9K,KAAK6vB,cAAcjM,IACpB5jB,KAAK0oB,gBAAgB9E,EAAWO,GAG3BnkB,KAAK6vB,cAAcjM,GAGpB0M,cAAcjV,EAAgBje,EAKjC,I,MACH,IAAIwmB,EACJ,OAAOvI,EAAOhd,GACZ,IAAK,0BACL,IAAK,2BACHulB,EAAY5jB,KAAK0b,gBAAgB5C,UAAUuC,EAAOxZ,QAAQkX,SAAS+K,WACnE,MAIF,IAAK,uBAEH,GADAF,EAAYvI,EAAOhC,aACduK,KAAa5jB,KAAK6vB,eACrB,OAAO,EAET,MACF,QACK,eAAgBxU,GAAU,QAASA,IACpCuI,EAAYvI,EAAOhC,YAKzB,MAAM,IAAC8K,EAAG,UAAEwM,GAAatV,EACnBoW,EAAW7N,EAAY5jB,KAAKilB,gBAAgBrB,EAAWO,GAAOnkB,KAAKwvB,aAIzE,GAAGiC,EAAS7B,YACV,OAAO,EAGT,GAAgB,yBAAbvU,EAAOhd,EAMR,QALIozB,EAASsB,mBACTtB,EAASsB,kBAAqBpkB,KAAK5J,MA5c1B,IA8cX/E,KAAK0yB,qBAAqB9O,IAErB,EAGT,GAAgB,qBAAbvI,EAAOhd,GACO,sBAAbgd,EAAOhd,GACM,4BAAbgd,EAAOhd,GACM,6BAAbgd,EAAOhd,EAAkC,CAC3C,MAAMwD,EAAUwZ,EAAOxZ,QACjB4E,EAAWzG,KAAK0b,gBAAgB5C,UAAUjX,EAAQkX,SAClDia,EAA+CnxB,EAAQ2uB,UAAY,GACzE,IAAIyC,EACJ,GAAGpxB,EAAQslB,UAAYnnB,KAAK6c,gBAAgBqW,QAAQlzB,KAAK0b,gBAAgB5C,UAAUjX,EAAQslB,SAAUtlB,EAAQjD,OAAOu0B,QAA2BF,EAAS,WACpJD,EAAU7L,UAAYnnB,KAAK6c,gBAAgBqW,QAAQlzB,KAAK0b,gBAAgB5C,UAAUka,EAAU7L,WAAa6L,EAAU7L,QAA6B9N,cAAgB4Z,EAAS,eAClI,QAAvC,EAACD,EAAU7L,eAA4B,eAAE9N,cAAerZ,KAAK0d,gBAAgB0V,QAASJ,EAAU7L,QAA6B9N,YAAY,KAAU4Z,EAAS,eAC5JxsB,EAAS4sB,WAAarzB,KAAK6c,gBAAgBqW,QAAQzsB,KAAcwsB,EAAS,gBAC1ExsB,EAASse,cAAgB/kB,KAAK0d,gBAAgB0V,QAAQ3sB,EAASqd,cAAgBmP,EAAS,eAO1F,OANAjzB,KAAKG,IAAI2C,KAAK,qCAAsC2D,EAAUwsB,EAAQpxB,GACnE+hB,GAAa5jB,KAAK0d,gBAAgB0V,QAAQxP,GAC3C5jB,KAAK0yB,qBAAqB9O,GAE1B5jB,KAAKqwB,sBAEA,OAEJ,GAAGzM,IAAc5jB,KAAK0d,gBAAgB0V,QAAQxP,GAEnD,OAAO,EAGT,IAAI0P,EACAC,EAEJ,GAAGpP,EAAK,CAEN,GADesN,EAAStN,KAAOwM,GAAa,GAChCxM,EAsBV,OArBAnkB,KAAKyI,OAASzI,KAAKG,IAAI2C,KAAK,WAAY2uB,EAAUpW,EAAQuI,GAAa5jB,KAAK0d,gBAAgBC,QAAQiG,IACpG6N,EAAShC,kBAAkBnvB,KAAK+a,GAC5BoW,EAAS9B,aAAgB8B,EAAS7B,cACpC6B,EAAS9B,YAAc,CACrBxqB,QAAS6J,EAAA,cAAe,KACtByiB,EAAS9B,YAAc,KAEpB8B,EAAS7B,cAIThM,EACD5jB,KAAK0yB,qBAAqB9O,GAE1B5jB,KAAK6xB,mBAjgBF,KAugBXJ,EAAS9B,YAAY4B,aAAc,GAC5B,EAGT,GAAGpN,EAAMsN,EAAStN,IAChBsN,EAAStN,IAAMA,EACfmP,GAAS,EAET7B,EAASsB,kBAAoBpkB,KAAK5J,WAC7B,GAAG4rB,EAER,OAAO,EAGN/M,GAAaxmB,EAAQykB,MAAQ7hB,KAAKwvB,aAAa3N,KAAOzkB,EAAQykB,OAC/D7hB,KAAKwvB,aAAa3N,KAAOzkB,EAAQykB,WAE9B,IAAI+B,GAAaxmB,EAAQ8yB,IAAM,EAAG,CACvC,MAAMA,EAAM9yB,EAAQ8yB,IACdC,EAAW/yB,EAAQ+yB,UAAYD,EAErC,GAAGC,IAAasB,EAASvB,IAAM,GAC1BC,EAAWsB,EAASvB,IA0BrB,OAzBAlwB,KAAKyI,OAASzI,KAAKG,IAAI2C,KAAK,WAAY2uB,EAAUA,EAAS9B,aAAe8B,EAAS9B,YAAY2B,kBAEnDxmB,IAAzC2mB,EAAS/B,kBAAkBS,KAC5BsB,EAAS/B,kBAAkBS,GAAY,CAACD,IAAAA,EAAKrO,KAAMzkB,EAAQykB,KAAM8E,QAAS,KAE5E8K,EAAS/B,kBAAkBS,GAAUxJ,QAAQrmB,KAAK+a,GAE9CoW,EAAS9B,cACX8B,EAAS9B,YAAc,CACrBxqB,QAAS6J,EAAA,cAAe,KACtByiB,EAAS9B,YAAc,KAEpB8B,EAAS7B,aAIZ5vB,KAAK6xB,kBA9iBF,OAmjBLJ,EAAS9B,YAAY2B,aACvBG,EAAS9B,YAAY2B,YAAcnB,KACnCsB,EAAS9B,YAAY2B,YAAcnB,IAE9B,EAIRsB,EAASvB,MAAQA,IAClBuB,EAASvB,IAAMA,EACZ9yB,EAAQykB,MAAQ4P,EAAS5P,KAAOzkB,EAAQykB,OACzC4P,EAAS5P,KAAOzkB,EAAQykB,MAG1B0R,GAAS,GAIbvzB,KAAK6mB,WAAWxL,GAEbiY,EACDtzB,KAAKwxB,oBAAoB5N,GACjB2P,GACRvzB,KAAKmxB,sBAIFtK,WAAWxL,GAEhBrb,KAAK4G,cAAcyU,EAAOhd,EAAGgd,GAGxBmY,OAAOC,GACTzzB,KAAK8vB,WAIR9vB,KAAKG,IAAI,UAETH,KAAK8vB,UAAW,EAEhB9vB,KAAKke,gBAAgB7W,WAAWrC,MAAK,EAAE2hB,QAASxf,MAC9C,MAAMnE,EAAahD,KAAKke,gBAAgBlb,WAGpCmE,GAAUA,EAAMgd,KAAQhd,EAAM0a,MAiChCjmB,OAAOC,OAAOmE,KAAKwvB,aAAcroB,GAEjCnH,KAAKG,IAAI,sBAAuBvE,OAAOC,OAAO,GAAIsL,IAElDnH,KAAK6xB,eAAc,KApCnB7xB,KAAKG,IAAI,sBAETH,KAAKwvB,aAAaI,YAAc,IAAIjuB,SAASM,IAC3CjC,KAAKgU,WAAWC,UAAU,mBAAoB,GAAI,CAACyf,YAAY,IAAO1uB,MAAM2uB,IAC1E3zB,KAAKwvB,aAAaU,IAAMyD,EAAYzD,IACpClwB,KAAKwvB,aAAarL,IAAMwP,EAAYxP,IACpCnkB,KAAKwvB,aAAa3N,KAAO8R,EAAY9R,KACrC7hB,KAAKixB,mBAELjxB,KAAKwvB,aAAaI,YAAc,KAChC3tB,WAiCNjC,KAAKgU,WAAW4f,oBAAoB5zB,KAAK+vB,sBAGzC/vB,KAAK8wB,WAGF9tB,GACDhD,KAAKwvB,aAAaI,YAAY5qB,MAAK,KAAW,O,EAAA,K,OAAA,E,EAAA,YAC5C,MAAM6uB,EAA+B,CACnCC,GAAI,yBACJC,GAAI,sBAGAC,EAAgBC,IACpBjrB,MAAM,cAAcirB,KAAQjxB,EAAW0E,MAAM,KAAK,SACjD1C,MAAMkvB,GAAwB,MAAfA,EAAIvtB,QAAkButB,EAAIC,IAAMD,EAAIn3B,QAAW4E,QAAQC,WACtEoD,MAAMjI,IACL,MAAMq3B,EAAUP,EAAKI,IAASJ,EAAKC,GAGnC/2B,EAFY,iBAAiB,cAAcq3B,KAAWpxB,UAEzCjG,EAEb,MAAM2zB,EAA4B,GAG5BrV,EAA2C,CAC/Chd,EAAG,4BACHqyB,SAAAA,EACA7uB,SALc,EAAAwyB,GAAA,GAAct3B,EAAM2zB,GAMlCjxB,KAAM,QACNb,OAAQ,GACR01B,WAAY3lB,KAAK5J,MAAQ,IAAO,EAChCuT,WAAOxN,GAGT9K,KAAK8xB,mBAAmBzW,OAItBkZ,GAAY,EAAAC,GAAA,GAAa,CAACf,EAAU,OAC1C,IAAI,MAAMgB,KAAYF,EACpB,UACQP,EAAaS,GACnB,MACA,MAAMhrB,M,YArCkC,K,sRAkDtDslB,GAAYQ,GAAmB,CAAC,IAAmBzc,IChuB5C,MAAM4hB,WAA0B5hB,EAAvC,c,oBACU,KAAA6hB,gBAIJ,GAEMhY,QACR3c,KAAK4c,UAAUpW,iBAAiB,iBAAkBwQ,IAChDhX,KAAK40B,uBAAuB5d,MAIzB6d,eAAe7d,EAAgBvD,GACpC,MAAMqhB,EAAQ90B,KAAK20B,gBAAgB3d,GACnC,YAAYlM,IAAT2I,IACQqhB,KAGDA,IAASA,EAAMrhB,IAAWqhB,EAAMrhB,aAAiB9R,SAGtDizB,uBAAuB5d,GACzBhX,KAAK20B,gBAAgB3d,WACfhX,KAAK20B,gBAAgB3d,GAIzB+d,WAAW/d,EAAgBge,EAAgEvhB,GAChG,IAAIqhB,EAAQ90B,KAAK20B,gBAAgB3d,GACjC,GAAI8d,GAAUA,EAAMrhB,GAkClB,OAAOqhB,EAAMrhB,GAlCY,CACrBqhB,IACFA,EAAQ90B,KAAK20B,gBAAgB3d,GAAU,IAIzC,MAAMie,EAAsE,CAC1E52B,EAAG,6BACHO,OAAQ,GACR6c,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CrY,SAAUq2B,EAAMr2B,UAGZu2B,EAAmC,CAAC5sB,KAAM0sB,EAAMG,MAAOl3B,SAAUg3B,GAC3D,cAATxhB,IACDwhB,EAAsBr2B,OAAOC,KAAM,EACnCq2B,EAAgBE,UAAY,QAS9B,MAAMtrB,EAAU9J,KAAKq1B,eAAelkB,SAAS+jB,GAC7C,OAAOJ,EAAMrhB,GAAQ3J,EAAQ9E,MAAMswB,GAC1BR,EAAMrhB,GAAQ8hB,IAAIC,gBAAgBF,O,qTCrD1C,MAAMG,WAAwB3iB,EAGzB6J,QACR3c,KAAK01B,MAAQ,IAAI9jB,IAEb5L,IAAiB2vB,mBAIrB31B,KAAK6d,kBAAkBC,2BAA2B,CAChD8X,gBAAkBva,IAChBrb,KAAK61B,SAASxa,EAAOya,aAGvBC,6BAA+B1a,IAC7Brb,KAAK4c,UAAUhW,cAAc,iBAAkB,CAACovB,OAAQ3a,EAAO4a,cAAexrB,KAAM4Q,EAAO5Q,UAK1FyrB,WAAWC,EAAiBzW,EAAe0W,GAChD,OAAOp2B,KAAK2U,aAAaC,aAAa,iBAAkBuhB,EAAKzW,EAAG0W,GAG3DP,SAASQ,GACd,MAAMC,EAAyB,uBAAXD,EAAKh4B,EACnBk4B,EAAUv2B,KAAK01B,MAAMhxB,IAAI2xB,EAAK/3B,IAiBpC,OAhBGi4B,GAEDze,GAAkBye,EAASF,GAGxBC,GACDt2B,KAAK01B,MAAM3xB,OAAOsyB,EAAK/3B,IAGzB+3B,EAAOE,GACED,GACTt2B,KAAK01B,MAAMttB,IAAIiuB,EAAK/3B,GAAI+3B,GAG1Br2B,KAAK4c,UAAUhW,cAAc,cAAeyvB,GAErCA,EAGFG,QAAQR,GACb,OAAOh2B,KAAK01B,MAAMhxB,IAAIsxB,GAGjBS,aAAan4B,GAClB,MAAM+3B,EAAOr2B,KAAKw2B,QAAQl4B,GAC1B,MAAO,CACLD,EAAG,iBACHC,GAAI+3B,EAAK/3B,GACTo4B,YAAaL,EAAKK,aAIfC,mBAAmBC,GAExB,OADA52B,KAAK6c,gBAAgBoJ,aAAa2Q,EAAe1d,OAC1ClZ,KAAK61B,SAASe,EAAed,YAG/Be,aACL,OAAO72B,KAAKgU,WAAWC,UAAU,uBAAwB,CACvDtY,QAAS,EACTm7B,cAAe,MACd9xB,MAAM+xB,GACA/2B,KAAK2U,aAAaC,aAAa,cAAemiB,KAY5CC,YAAY1f,EAAgB2f,EAA6BC,EAAsBC,G,0CAC1F,MAAMP,QAAuB52B,KAAKgU,WAAWC,UAAU,oBAAqB,CAC1EuE,QAASxY,KAAK6c,gBAAgBua,aAAa9f,GAC3C2f,SAAUA,EACVE,MAAOA,EACPE,WAAW,QAAe,IAC1BH,SAAUA,IAGZ,OAAOl3B,KAAK22B,mBAAmBC,MAGpBU,YAAYtB,EAAgBuB,EAAkBtE,EAAqCkE,G,0CAC9F,IAAIn3B,KAAKw2B,QAAQR,GACf,OAGF,MAAMrP,QAAgB3mB,KAAKgU,WAAWC,UAAU,oBAAqB,CACnEkjB,MAAAA,EACA1b,KAAMzb,KAAKy2B,aAAaT,GACxBuB,SAAAA,EACAtE,OAAQ,CACN50B,EAAG40B,GAELuE,cAAe,MAGjBx3B,KAAK6d,kBAAkBkS,qBAAqBpJ,OC3HhD,MAAM8Q,GAAY,IAAIrhB,IAAI,CACxB,MACA,MACA,SAGIshB,GAAS,IAAIthB,IAEZ,SAASuhB,GAAqBC,GAEnC,OAAOA,EAAQr0B,MAAM0vB,GAAWwE,GAAUjO,IAAIyJ,EAAO12B,YAAcm7B,GAAOlO,IAAIyJ,EAAOA,UAGhF,SAAS4E,GAAaD,GAC3B,QAASD,GAAqBC,G,0BCQzB,MAAME,WAAwBhlB,EAArC,c,oBAqES,KAAAzO,MAAQ,CAACsH,GAAO,KACrB,GAAIA,EAcF3L,KAAKmmB,MAAQ,QAbb,IAAI,MAAM5M,KAAUvZ,KAAKmmB,MACnB5M,IACAvZ,KAAK6kB,aAAakT,aAAaxe,EAAO9S,UAAS,MAMjDzG,KAAK0D,QAAQK,OAAOwV,UACbvZ,KAAKmmB,MAAM5M,MAySlB,KAAAye,cAAgB,CAACze,EAAgBoN,K,MAGvC3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,IACzB,QAAhB,EAAAA,MAAAA,OAAO,EAAPA,EAASA,eAAO,eAAExoB,SAAU6B,KAAK6jB,UAAUtK,IAC5CvZ,KAAK4c,UAAUhW,cAAc,0BAA2B2S,IAtXlDoD,QA0BR,OAzBA3c,KAAKqE,OAAM,GAEXrE,KAAK6d,kBAAkBC,2BAA2B,CAOhDma,yBAA2B5c,IACzBrb,KAAKgU,WAAWkkB,WAAW,4BAA6B7jB,GAC9CA,EAAO0P,QAAsC1K,aAAegC,EAAOhC,cAI/E8e,8BAAgC9c,IAC9B,MAAM9B,EAASvZ,KAAK0b,gBAAgB5C,UAAUuC,EAAOI,MAAMqI,WACrDrG,EAAkBzd,KAAKmmB,MAAM5M,GAChCkE,IACDA,EAAK2a,sBAAwB/c,EAAO+c,sBACpCp4B,KAAK4c,UAAUhW,cAAc,cAAe2S,OAK3C5X,QAAQ8Q,IAAI,CACjBzS,KAAKke,gBAAgB7W,WACrBrH,KAAKme,mBAAmBrK,YAAY,WACnC9O,MAAK,EAAEmC,GAAQ9B,QAAS8gB,EAAOziB,QAAAA,OAGhC,GAFA1D,KAAK0D,QAAUA,EAEZyiB,EAAMhoB,OACP,IAAI,IAAI0H,EAAI,EAAG1H,EAASgoB,EAAMhoB,OAAQ0H,EAAI1H,IAAU0H,EAAG,CACrD,MAAM4X,EAAO0I,EAAMtgB,GAChB4X,IACDzd,KAAKmmB,MAAM1I,EAAKnf,IAAMmf,GAK5Bzd,KAAK6kB,aAAare,iBAAiB,cAAewQ,IAC7CA,EAAOqc,UAAYrzB,KAAK0D,QAAQ20B,aAAarhB,EAAO8M,aAIvD9jB,KAAK0D,QAAQ0E,IAAI,CACf,CAAC4O,EAAO8M,YAAa9jB,KAAK2d,QAAQ3G,EAAO8M,iBAI7C9jB,KAAK6kB,aAAare,iBAAiB,gBAAiBwQ,KAC/CA,EAAOqc,UAAarzB,KAAK0D,QAAQ20B,aAAarhB,EAAO8M,aAIxD9jB,KAAK0D,QAAQK,OAAOiT,EAAO8M,kBAwB1BoC,aAAaoS,EAAiB1H,GAC/B0H,EAAiBxD,QACpBwD,EAAiBxD,OAAQ,EAC1BwD,EAASp1B,SAASua,GAASzd,KAAKu4B,YAAY9a,EAAMmT,MAG7C2H,YAAY9a,EAAYmT,G,YAC7B,GAAc,cAAXnT,EAAKpf,EAAmB,OAQ3B,MAAMm6B,EAAyCx4B,KAAKmmB,MAAM1I,EAAKnf,IAQ/D,GAF0B,QAAzB,GAAD,EAACmf,GAAmB7e,cAAM,UAANA,OAAW,IAE3B6e,EAAsB7e,OAAO4gB,UAAmB1U,IAAZ0tB,EACtC,OAGY,YAAX/a,EAAKpf,QACwByM,IAA5B2S,EAAKgb,yBACO3tB,IAAZ0tB,GACCA,EAAyBC,qBAC5Bhb,EAAKgb,mBAAsBD,EAAyBC,oBAQtD,MAAMzhB,EAASyG,EAAKnf,GAAGmI,UAAS,GAChC,QAAeqE,IAAZ0tB,EACDx4B,KAAKmmB,MAAM1I,EAAKnf,IAAMmf,MACjB,CACL,MAEMib,GAFkE,QAApD,EAACF,EAAsBxD,aAA6B,eAAEr2B,aACL,QAAjD,EAAC8e,EAAmBuX,aAA6B,eAAEr2B,UAGjEg6B,EAAeH,EAAQpO,QAAU3M,EAAK2M,MAEtCwO,EAAmBJ,EAAyB55B,OAAOi6B,WAAcpb,EAAsB7e,OAAOi6B,UACjGL,EAAyB55B,OAAOk6B,OAAUrb,EAAsB7e,OAAOk6B,MACvEN,EAAyB55B,OAAOm6B,OAAUtb,EAAsB7e,OAAOm6B,KAE1EjhB,GAAkB0gB,EAAS/a,GAC3Bzd,KAAK4c,UAAUhW,cAAc,cAAe6W,EAAKnf,IAE9Co6B,GACD14B,KAAK4c,UAAUhW,cAAc,gBAAiBoQ,IAG7C2hB,GAAgBC,IACjB54B,KAAK4c,UAAUhW,cAAc,kBAAmBoQ,GAIjDhX,KAAK6kB,aAAakT,aAAa/gB,IAChChX,KAAK0D,QAAQ0E,IAAI,CACf,CAACqV,EAAKnf,IAAKmf,IAKVE,QAAQrf,GACb,OAAO0B,KAAKmmB,MAAM7nB,IAAO,CAACD,EAAG,YAAaC,GAAAA,EAAI+oB,SAAS,EAAMqP,YAAa,GAAI93B,OAAQ,IAGjFo6B,aAAa16B,GAClB,OAAO0B,KAAK2d,QAAQrf,GAWf26B,UAAU36B,EAAY0a,EAAoBkgB,EAA6CC,GAC5F,OAAO,EAAAF,GAAA,GAAUj5B,KAAK2d,QAAQrf,GAAK0a,EAAQkgB,EAAQC,GAG9CC,4BAA4B96B,EAAY+6B,GAC7C,MAAM5b,EAAkBzd,KAAK2d,QAAQrf,GACrC,OAAGmf,EAAK2a,uBACH3a,EAAK2a,sBAAsBkB,aAAeD,EAAcC,aAAc,EAAAhjB,EAAA,GAAUmH,EAAK2a,sBAAsBx5B,OAAQy6B,EAAcz6B,QAC3H+C,QAAQM,UAIZjC,KAAKgU,WAAWC,UAAU,uCAAwC,CACvEwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBhvB,EAAGmI,UAAS,IACxD4yB,cAAAA,IACCr0B,KAAKhF,KAAKg4B,cAAczZ,KAAKve,KAAM1B,IAejCulB,UAAUvlB,GACf,MAAMmf,EAAOzd,KAAKmmB,MAAM7nB,GACxB,SAAUmf,GAAoB,YAAXA,EAAKpf,GAA8B,qBAAXof,EAAKpf,GAG3Ck7B,YAAYj7B,G,MAKjB,MAAMmf,EAAazd,KAAKmmB,MAAM7nB,GAC9B,SAAuC,QAA9B,EAACmf,MAAAA,OAAI,EAAJA,EAAuB7e,cAAM,eAAE46B,WAGpC/M,YAAYnuB,GACjB,OAAO0B,KAAK6jB,UAAUvlB,KAAQ0B,KAAKu5B,YAAYj7B,GAG1Cm7B,SAASn7B,GACd,IAAIo7B,GAAO,EACX,MAAMjc,EAAazd,KAAK2d,QAAQrf,GAUhC,OATc,qBAAXmf,EAAKpf,GACK,kBAAXof,EAAKpf,GACM,cAAXof,EAAKpf,GACJof,EAAmB7e,OAAO+G,MAE1B8X,EAAmB7e,OAAO4oB,eAC3BkS,GAAO,GAGFA,EAGF7G,gBAAgBv0B,GACrB,MAAMmf,EAAazd,KAAK2d,QAAQrf,GAChC,MAAc,cAAXmf,EAAKpf,GAAuBof,EAAsBiZ,YAK5C,CACLr4B,EAAG,eACHgb,WAAY/a,EACZo4B,YAAcjZ,EAAsBiZ,aAA+C,KAP9E,CACLr4B,EAAG,qBAWFs7B,aAAar7B,GAClB,OAAO0B,KAAK6jB,UAAUvlB,GAAM0B,KAAK45B,oBAAoBt7B,GAAM0B,KAAK65B,iBAAiBv7B,GAG5Eu7B,iBAAiBv7B,GACtB,MAAO,CACLD,EAAG,gBACHib,QAAShb,GAINs7B,oBAAoBt7B,GACzB,MAAO,CACLD,EAAG,mBACHgb,WAAY/a,EACZo4B,YAAa12B,KAAK2d,QAAQrf,GAAIo4B,aAA+C,GAI1EtD,QAAQ90B,EAAYw7B,GACzB,MAAMrc,EAAOzd,KAAKmmB,MAAM7nB,GACxB,OAAO,EAAAsjB,GAAA,GAASnE,KAAUqc,IAAarc,EAAK7e,OAAO4gB,KAG9Cua,aAAaz7B,GAClB,MAAMmf,EAAkBzd,KAAK2d,QAAQrf,GAErC,OAAOmf,GAAQA,EAAKuX,OAAS,CAC3B32B,EAAG,kBAIA27B,cAAc17B,GACnB,MAAMmf,EAAOzd,KAAK2d,QAAQrf,GAC1B,OAAG0B,KAAK6jB,UAAUvlB,IACR0B,KAAKu5B,YAAYj7B,GAAM,IAAM,KAAOA,EAAK,IAAMmf,EAAKiZ,YAEvD,IAAMp4B,EAuDR27B,cAAc78B,GACnB,OAAO4C,KAAKgU,WAAWC,UAAU,yBAA0B7W,GAAS4H,MAAM2hB,IACxE3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,GAEzBA,EAAgBR,MAAM,GAAG7nB,MAKzC47B,gBAAgB57B,EAAY2a,GACjC,MAAMkhB,EAAQn6B,KAAK6yB,gBAAgBv0B,GAC7B87B,EAAcnhB,EAAQ7U,KAAKi2B,GAAMr6B,KAAK6c,gBAAgBua,aAAaiD,KAEzE,OAAOr6B,KAAKgU,WAAWC,UAAU,2BAA4B,CAC3D8P,QAASoW,EACTjhB,MAAOkhB,IACNp1B,KAAKhF,KAAKg4B,cAAczZ,KAAKve,KAAM1B,IAGjCg8B,WAAWlQ,EAAenR,GAC/B,OAAOjZ,KAAKgU,WAAWC,UAAU,sBAAuB,CACtDiF,MAAOD,EAAQ7U,KAAKi2B,GAAMr6B,KAAK6c,gBAAgBua,aAAaiD,KAC5DjQ,MAAAA,IACCplB,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,GAE5BA,EAAmCR,MAAM,GAAG7nB,MAczDi8B,aAAaj8B,GAClB,OAAO0B,KAAKgU,WAAWC,UAAU,wBAAyB,CACxD8P,QAAS/jB,KAAK6yB,gBAAgBv0B,KAC7B0G,KAAKhF,KAAKg4B,cAAczZ,KAAKve,KAAM1B,IAGjCk8B,YAAYl8B,GACjB,OAAO0B,KAAKgU,WAAWC,UAAU,uBAAwB,CACvD8P,QAAS/jB,KAAK6yB,gBAAgBv0B,KAC7B0G,KAAKhF,KAAKg4B,cAAczZ,KAAKve,KAAM1B,IAGjCm8B,YAAYn8B,EAAYgZ,EAAgBojB,EAAW,KACxD,OAAO16B,KAAKgU,WAAWC,UAAU,uBAAwB,CACvDqF,QAAShb,EACTka,QAASxY,KAAK6c,gBAAgBua,aAAa9f,GAC3CqjB,UAAWD,IACV11B,KAAKhF,KAAKg4B,cAAczZ,KAAKve,KAAM1B,IAGjCs8B,eAAet8B,EAAYgZ,GAChC,OAAOtX,KAAKgU,WAAWC,UAAU,0BAA2B,CAC1DqF,QAAShb,EACTka,QAASxY,KAAK6c,gBAAgBua,aAAa9f,KAC1CtS,KAAKhF,KAAKg4B,cAAczZ,KAAKve,KAAM1B,IAGjCu8B,UAAUv8B,GACf,OAAO0B,KAAK46B,eAAet8B,EAAI0B,KAAK6c,gBAAgBC,UAAUxe,IAGzDw8B,MAAMx8B,GACX,OAAO0B,KAAK6jB,UAAUvlB,GAAM0B,KAAKu6B,aAAaj8B,GAAM0B,KAAK66B,UAAUv8B,GAG9DyF,OAAOzF,GACZ,OAAO0B,KAAK6jB,UAAUvlB,GAAM0B,KAAK+6B,cAAcz8B,GAAM0B,KAAKg7B,WAAW18B,GAGhEy8B,cAAcz8B,GACnB,OAAO0B,KAAKgU,WAAWC,UAAU,yBAA0B,CACzD8P,QAAS/jB,KAAK6yB,gBAAgBv0B,KAC7B0G,KAAKhF,KAAKg4B,cAAczZ,KAAKve,KAAM1B,IAGjC08B,WAAW18B,GAEhB,OAAO0B,KAAKgU,WAAWC,UAAU,sBAAuB,CACtDqF,QAAShb,IAKN28B,YAAY38B,GACjB,MAAMmf,EAAazd,KAAK2d,QAAQrf,GAChC,MAAc,YAAXmf,EAAKpf,EAAwBsD,QAAQM,QAAQwb,EAAKnf,IAC9C0B,KAAKgU,WAAWC,UAAU,uBAAwB,CACvDqF,QAAShb,IACR0G,MAAM2hB,IACP3mB,KAAKg4B,cAAc15B,EAAIqoB,GACeA,EAA4BA,QAAQpjB,MAAM82B,GAAc,kBAARA,EAAEh8B,IAC1Egb,cAIX6hB,eAAe58B,EAAY68B,GAChC,OAAOn7B,KAAKgU,WAAWC,UAAU,0BAA2B,CAC1D8P,QAAS/jB,KAAK6yB,gBAAgBv0B,GAC9B68B,SAAAA,IACCn2B,MAAM2oB,IACJA,IAC0B3tB,KAAK2d,QAAQrf,GACnC68B,SAAWA,GAGXxN,KAIJyN,UAAU98B,EAAY+8B,GAC3B,MAAMC,EAAiC,CACrCj9B,EAAG,yBACHk9B,KAAMF,GAGR,IAAIvxB,EAaJ,OAXEA,EADC9J,KAAK6jB,UAAUvlB,GACN0B,KAAKgU,WAAWC,UAAU,qBAAsB,CACxD8P,QAAS/jB,KAAK6yB,gBAAgBv0B,GAC9B02B,MAAOsG,IAGCt7B,KAAKgU,WAAWC,UAAU,yBAA0B,CAC5DqF,QAAShb,EACT02B,MAAOsG,IAIJxxB,EAAQ9E,MAAM2hB,IACnB3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAIzC6U,UAAUl9B,EAAY8rB,GAC3B,IAAItgB,EAcJ,OAXEA,EADC9J,KAAK6jB,UAAUvlB,GACN0B,KAAKgU,WAAWC,UAAU,qBAAsB,CACxD8P,QAAS/jB,KAAK6yB,gBAAgBv0B,GAC9B8rB,MAAAA,IAGQpqB,KAAKgU,WAAWC,UAAU,yBAA0B,CAC5DqF,QAAShb,EACT8rB,MAAAA,IAIGtgB,EAAQ9E,MAAM2hB,IACnB3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAIzC8U,UAAUn9B,EAAYo9B,GAC3B,MAAM1kB,EAAS1Y,EAAGmI,UAAS,GAC3B,OAAOzG,KAAKgU,WAAWC,UAAU,yBAA0B,CACzDwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C0kB,MAAAA,IACC12B,MAAM2oB,IACJA,GACD3tB,KAAK4c,UAAUhW,cAAc,gBAAiBoQ,GAGzC2W,KAIJgO,WAAWr9B,EAAYs9B,EAA0CvC,GACtE,MAAMriB,EAAiC,iBAAlB,EAA6B4kB,GAAc,EAAAC,GAAA,GAAqBD,GACrF,OAAO57B,KAAKgU,WAAWC,UAAU,sBAAuB,CACtD8P,QAAS/jB,KAAK6yB,gBAAgBv0B,GAC9Bs9B,YAAa57B,KAAK0b,gBAAgB4R,iBAAiBtW,GACnDqiB,cAAAA,IACCr0B,MAAM2hB,IAGP,GAFA3mB,KAAKg4B,cAAc15B,EAAIqoB,GAEI,iBAAlB,EAA4B,CACnC,MAAMmV,EAAYntB,KAAK5J,MAAQ,IAAO,EACtC/E,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,2BACHgb,WAAY/a,EACZujB,KAAMia,EACNC,cAAUjxB,EACVmnB,SAAKnnB,EACL0N,QAASxB,EACTglB,iBAAkBJ,EAClBK,gBAAiBrgC,OAAOyX,KAAKgmB,EAAcz6B,QAAQT,OAAS,CAC1DE,EAAG,2BACHwjB,KAAMia,EACNzC,cAAAA,EACA6C,UAAWl8B,KAAK6c,gBAAgBC,UAAUxe,GAC1Cmd,KAAMzb,KAAK0b,gBAAgB0L,cAAcpQ,GACzCpY,OAAQ,SACNkM,QAMLqxB,oCAAoC79B,EAAYs9B,GACrD,OAAO57B,KAAK27B,WAAWr9B,EAAIs9B,EAAa,CACtCv9B,EAAG,mBACHi7B,WAAY,EACZ16B,OAAQ,KAILw9B,gBAAgB99B,EAAYs9B,GACjC,OAAO57B,KAAK27B,WAAWr9B,EAAIs9B,EAAa,CACtCv9B,EAAG,mBACHi7B,WAAY,EACZ16B,OAAQ,CACNy9B,eAAe,KAKdC,aAAah+B,EAAYs9B,GAC9B,OAAG57B,KAAK6jB,UAAUvlB,GAAY0B,KAAKo8B,gBAAgB99B,EAAIs9B,GAC3C57B,KAAK46B,eAAet8B,EAAKs9B,EAAuBhP,YAGvD2P,eAAej+B,GACpB,OAAO0B,KAAKgU,WAAWqa,gBAAgB,uBAAwB,CAC7D/vB,GAAI,CAAC,CACHD,EAAG,eACHgb,WAAY/a,EACZo4B,YAAa,QAEd1xB,MAAMw3B,IACPx8B,KAAKkmB,aAAasW,EAAcrW,UAI7BsW,uBAAuBn+B,EAAYo+B,GACxC,OAAO18B,KAAKi7B,YAAY38B,GAAI0G,MAAM4e,GACzB5jB,KAAKgU,WAAWC,UAAU,kCAAmC,CAClE8P,QAAS/jB,KAAK6yB,gBAAgBjP,GAC9B8Y,QAAAA,MAED13B,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAIzCgW,iBAAiBr+B,EAAYo+B,GAClC,OAAO18B,KAAKgU,WAAWC,UAAU,4BAA6B,CAC5D8P,QAAS/jB,KAAK6yB,gBAAgBv0B,GAC9Bo+B,QAAAA,IACC13B,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAIzCiW,iBAAiBt+B,EAAYo+B,GAClC,OAAO18B,KAAKgU,WAAWC,UAAU,4BAA6B,CAC5DwH,KAAMzb,KAAK25B,aAAar7B,GACxBo+B,QAAAA,IACC13B,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAIzCkW,0BAA0Bv+B,EAAYw+B,GAC3C,MAAMC,EAAW/8B,KAAKoX,kBAAkB4lB,kBAAkB1+B,GAK1D,OAJGy+B,IACDA,EAASE,oBAAsBH,GAG1B98B,KAAKgU,WAAWC,UAAU,qCAAsC,CACrEwH,KAAMzb,KAAK25B,aAAar7B,GACxB2+B,oBAAqBH,IACpB93B,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAIzCkR,aAAate,GAClB,MAAMkE,EAAqBzd,KAAK2d,QAAQpE,GAClC2jB,EAAqBzf,EAAK0f,mBAEhC,SAAU1f,EAAK7e,OAAOw+B,YAAcF,GAAsBrF,GAAaqF,IAGlEG,UAAUzZ,GACf,OAAO5jB,KAAKgU,WAAWspB,uBAAuB,CAC5Cr0B,OAAQ,qBACRoL,OAAQ,CACNoH,KAAMzb,KAAK45B,oBAAoBhW,IAEjC2Z,cAAgBC,IACdx9B,KAAK6c,gBAAgBoJ,aAAauX,EAAYtkB,OAC9ClZ,KAAKkmB,aAAasX,EAAYrX,OAEvBqX,EAAY1P,SAKlB2P,iBAAiBC,GACtB,OAAO19B,KAAKgU,WAAWC,UAAU,4BAA6B,CAACypB,KAAAA,IAC9D14B,MAAM2hB,IACL3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,GAC9BA,EAA4BR,MAAM,GACpC7nB,MAITq/B,cAAcpkB,EAAgB4hB,GACnC,OAAOn7B,KAAKgU,WAAWC,UAAU,yBAA0B,CACzD8P,QAAS/jB,KAAK6yB,gBAAgBtZ,GAC9B4hB,SAAAA,IAIGyC,oBAAoBrkB,GAuFzB,OAJgBvZ,KAAKgU,WAAW6pB,mBAAmB,gCAAiC,CAClF9Z,QAAS/jB,KAAK6yB,gBAAgBtZ,IAC7B,CAACukB,aAAc,MAEH94B,MAAM+4B,IACnB/9B,KAAK6c,gBAAgBoJ,aAAa8X,EAAkB7kB,OACpDlZ,KAAK0d,gBAAgBwI,aAAa6X,EAAkB5X,OAEpD,MAAM6X,EAAmBD,EAAkB3X,SAAS9X,QAGpD,OAFAyvB,EAAkB3X,SAAS9lB,KAAK09B,GAEzBD,KAIJE,qBAAqB1kB,EAAgB2kB,GAC1C,OAAOl+B,KAAKgU,WAAWqa,gBAAgB,gCAAiC,CACtEtK,QAAS/jB,KAAK6yB,gBAAgBtZ,GAC9B8d,UAAW6G,IAIRC,gBAAgBT,GACrB,OAAO19B,KAAKgU,WAAWC,UAAU,2BAA4B,CAC3DypB,KAAMA,IACL14B,MAAMo5B,IACHA,EAAyC3gB,MAC3Czd,KAAKu4B,YAAa6F,EAAyC3gB,MAAM,GAG5D2gB,M,IC3tBH,G,kEAAV,SAAUC,GAGR,IAAIC,EAEAC,EAOJ,SAASC,EAAY/K,GACnB,EAAAgL,sBAAwBhL,EACxB,EAAAiL,gCAAkCjL,EAAS/rB,MAAM,KAAK,GA4BxD,SAASi3B,IACP,GAAkB,QAAf,EAAAC,WACD,IACE,MAAMC,EAAiBC,EAAkB,CAACC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,IAChFpd,EAAO,IAAIlT,KACjBkT,EAAKqd,SAAS,GACd,MAAMC,EAASN,EAAeO,OAAOvd,GACrC,EAAAwd,UAAUC,GAAKH,EAAOz3B,MAAM,KAAK,GACjCma,EAAKqd,SAAS,IACd,MAAMK,EAASV,EAAeO,OAAOvd,GACrC,EAAAwd,UAAUG,GAAKD,EAAO73B,MAAM,KAAK,GACjC,MAAM+B,GACNpK,QAAQC,MAAM,mBAAoBmK,GAClC,EAAA41B,UAAY,CAACC,GAAI,KAAME,GAAI,OA0BjC,SAAgBC,IACd,MAAMC,EAAc,iBAEpB,OADAlB,EAAYkB,GACL/9B,QAAQ8Q,IAAI,CACjB,uCACA,8BACA,8BACCzN,MAAK,EAAEivB,EAAM0L,EAAUC,MACxB,MAAMC,EAA4B,GAalC,OAZAC,EAAmB7L,EAAK8L,QAASF,GACjCC,EAAmBH,EAASI,QAASF,GAW9BG,EAT8B,CACnC3hC,EAAG,qBACH4hC,aAAc,EACdC,UAAWR,EACXG,QAAAA,EACAlkC,QAAS,EACTwkC,OAAO,EACPP,UAAWA,EAAUG,aAM3B,SAAgBK,EAAa3M,EAAkB4M,GAE7C,EAAAC,yBAA0B,EAC1B,MAAMttB,EAAW,WACjB,OAAOrR,QAAQ8Q,IAAI,CACjBO,EAASgB,WAAW6pB,mBAAmB,uBAAwB,CAC7DqC,UAAWzM,EACX8M,UAAiB,SAEnB,EAIA,uCACA,8BACAvtB,EAASgB,WAAW6pB,mBAAmB,wBAAyB,CAC9DqC,UAAWzM,EACXiK,KAAM,IAER,EAAA8C,kBAYJ,SAAgBV,EAAmBD,EAAcY,EAA2B,IAC1E,IAAI,MAAM56B,KAAKg6B,EAAS,CAEtB,MAAMa,EAAIb,EAAQh6B,GACD,iBAAR,EACP46B,EAAOngC,KAAK,CACVjC,EAAG,iBACHkJ,IAAK1B,EACLtB,MAAOm8B,IAGTD,EAAOngC,KAAK,OAAD,QACTjC,EAAG,2BACHkJ,IAAK1B,GACF66B,IAKT,OAAOD,EAoBT,SAAgBT,EAAaW,GAG3B,OAFAA,EAASC,WAAa,oBAEfx5B,EAAA,MAAiB,CAACu5B,SAAAA,IAAW37B,MAAK,KACvC67B,EAAcF,GACPA,KAcX,SAAgBE,EAAcF,GAC5B,MAAMG,EAAkB,EAAArC,sBACxB,GAAGkC,EAAST,YAAcY,EAA1B,CAIA,IACExC,EAAc,IAAIyC,KAAKC,YAAY,EAAAtC,iCACnC,MAAMj1B,GACNpK,QAAQC,MAAM,oBAAqBmK,GACnC60B,EAAc,IAAIyC,KAAKC,YAAY,EAAAtC,gCAAgCh3B,MAAM,IAAK,GAAG,IAGnF,IACE42B,EAAc,IAAIyC,KAAKC,YAAYL,EAAST,WAC5C,MAAMz2B,GACNpK,QAAQC,MAAM,oBAAqBmK,GACnC60B,EAAc,IAAIyC,KAAKC,YAAYL,EAAST,UAAUx4B,MAAM,IAAK,GAAG,IAGtE,EAAAm4B,QAAQx7B,QAER,IAAI,MAAM48B,KAAUN,EAASd,QAC3B,EAAAA,QAAQz3B,IAAI64B,EAAO15B,IAAoB05B,GAGtCN,EAASf,YACV,EAAAsB,cAAc/iC,OAAS,EACvB,EAAA+iC,cAAc5gC,QAAQqgC,EAASf,UAAUA,WAEzCe,EAASf,UAAUA,UAAU18B,SAASi+B,IACpC,GAAGA,EAAQlhC,KAAM,CACf,MAAMmhC,EAAmBD,EAAQE,aACjC,EAAAxB,QAAQz3B,IAAIg5B,EAAa,CACvB/iC,EAAG,iBACHkJ,IAAK65B,EACL78B,MAAO48B,EAAQlhC,YAMpB,EAAAqhC,sBAAwBR,IACzB,gBAAwB,kBAAmBA,GAC3C,EAAAQ,oBAAsBR,EACtBS,EAAsBl9B,QACtBs6B,KAGe79B,MAAMC,KAAKygC,SAASC,iBAAiB,UAC7Cv+B,SAASw+B,IAChB,MAAMl+B,EAAW,EAAAm+B,QAAQj9B,IAAIg9B,GAE1Bl+B,GACDA,EAAS6X,YAKbzf,OAAOgmC,QAAQ,YAAW1+B,SAAQ,EAAE2+B,EAAWC,MAC7C,IAAK,EAAAjC,QAAQn7B,IAAIm9B,GAA2B,CAE1C,MAAME,EAA4B,CAChC1jC,EAAG,iBACHkJ,IAAKs6B,EACLt9B,MAAOu9B,GAET,EAAAjC,QAAQz3B,IAAIy5B,EAA0BE,QAc5C,SAAgBC,EAAe7H,EAAetzB,EAA2Bo7B,EAAc,CAACp8B,EAAG,IACzF,MAAMkU,EAAyC,GAG/C,IAAImoB,EAAY,EA8DhB,OA7DA/H,EAAM18B,QAHS,0DAGO,CAAChB,EAAO0lC,EAASC,EAASC,EAASC,EAAY3Y,EAAgBsX,KAKnF,GAFAlnB,EAAIzZ,KAAK2gC,EAAOr5B,MAAMs6B,EAAWvY,IAE9BwY,EAAI,CAEL,IAAIT,EACJ,OAAOS,GACL,IAAK,KACHT,EAAUF,SAASe,cAAc,KACjC,MAGF,IAAK,KACHb,EAAUF,SAASe,cAAc,KAKrCb,EAAQc,UAAUR,EAAeI,EAAIv7B,EAAMo7B,IAC3CloB,EAAIzZ,KAAKohC,QACJ,GAAGW,EACRtoB,EAAIzZ,KAAKkhC,SAASe,cAAc,YAC3B,GAAGD,EAAI,CACZ,MAAM99B,EAAM89B,EAAGG,YAAY,KACrB1lC,EAAOulC,EAAG16B,MAAM,EAAGpD,GAEnBpF,EAAMkjC,EAAG16B,MAAMpD,EAAM,EAAG89B,EAAGnkC,OAAS,GAC1C,IAAIuhB,EACJ,GAAGtgB,IAAO,EAAAsjC,GAAA,GAAiBtjC,GAAM,CAC/BsgB,EAAI8hB,SAASe,cAAc,KAC3B,MAAMI,GAAa,EAAAC,GAAA,GAAQxjC,GAC3BsgB,EAAEmjB,KAAOF,EAAWvjC,IACjBujC,EAAWG,SAASpjB,EAAEqjB,aAAa,UAAWJ,EAAWG,SAC5DpjB,EAAEhd,OAAS,cAEXgd,EAAI7Y,EAAKo7B,EAAYp8B,KAElB6Z,aAAasjB,mBACdtjB,EAAIA,EAAEujB,YAGRvjB,EAAEwjB,YAAc,GAGlBxjB,EAAE8iB,UAAUR,EAAejlC,EAAM8J,EAAMo7B,IAEvCloB,EAAIzZ,KAAKof,QACD7Y,GA/Dd,SAA0BkT,EAAwClT,EAA0Bo7B,GAC1F,MAAMkB,EAAMt8B,EAAKo7B,EAAYp8B,KAC1B/E,MAAMmD,QAAQk/B,GACfppB,EAAIzZ,QAAQ6iC,GAEZppB,EAAIzZ,KAAK6iC,GA2DPC,CAAiBrpB,EAAKlT,EAAMo7B,GAI9B,OADAC,EAAYvY,EAASltB,EAAM0B,OACpB,MAGN+jC,IAAc/H,EAAMh8B,QACrB4b,EAAIzZ,KAAK65B,EAAMvyB,MAAMs6B,IAGhBnoB,EAKT,SAAgBqlB,EAAO73B,EAAkB87B,GAAQ,EAAOx8B,GACtD,MAAMzI,EAAM,EAAAyhC,QAAQn7B,IAAI6C,GACxB,IAAI4yB,EACJ,GAAG/7B,EACD,GAAa,6BAAVA,EAAIC,IAAoCwI,MAAAA,OAAI,EAAJA,EAAM1I,QAAQ,CACvD,IAAIuiC,EAAI75B,EAAK,GACI,iBAAR,IAAkB65B,GAAKA,EAAEjjC,QAAQ,MAAO,KAGjD08B,EAAQ/7B,EAFEkgC,EAAYgF,OAAO5C,GAEb,WAAatiC,EAAiB,iBAE9C+7B,EADkB,mBAAV/7B,EAAIC,EACJD,EAAImG,MAGJgD,OAIV4yB,EAAQ5yB,EAGV,MAAMnF,EAAS4/B,EAAe7H,EAAOtzB,GACrC,OAAGw8B,EACMjhC,EAAOgC,KAAKm/B,GAASA,aAAgBC,KAAOD,EAAKL,YAAcK,IAAM7kC,KAAK,IAE1E0D,EAnXE,EAAAy9B,QAA4C,IAAIjuB,IAChD,EAAAsvB,cAA+B,GAOjC,EAAAZ,yBAA0B,EAQrB,EAAAmD,iBAAhB,WACE,OAAGlF,IACIA,EAAuB58B,QAAQ8Q,IAAI,CACxCrL,EAAA,MAAiB,YACjB,EAAAo5B,kBACCx7B,MAAK,EAAE27B,KACJA,GAEM,KAMN,EAAAlC,uBACFD,EAAYmC,EAAST,WAGvBW,EAAcF,GACPA,GAZElB,MAaRiE,SAAQ,KACTnF,OAAuBzzB,OAsBX,EAAA64B,cAAhB,SACEvE,EACAwE,IAAiB,EAAAhF,YAAc,EAAAA,aAAeQ,GAE9C,EAAAR,WAAaQ,EAEbT,IAEGiF,IACDrC,EAAsBl9B,QACLvD,MAAMC,KAAKygC,SAASC,iBAAiB,UAC7Cv+B,SAASw+B,IAChB,MAAMl+B,EAAW,EAAAm+B,QAAQj9B,IAAIg9B,GAE1Bl+B,aAAoBqgC,GACrBrgC,EAAS6X,cAMD,EAAAokB,kBAAiB,EAyBjB,EAAAW,aAAY,EAuBZ,EAAA0D,WAAhB,SAA2BrQ,EAAkBoM,GAC3C,OAAO,gCAAwC,sBAAuB,CACpEU,UAAW,aACXL,UAAWzM,EACXpgB,KAAMwsB,KAIM,EAAAC,mBAAkB,EAsBlB,EAAAiE,YAAhB,SAA4BtQ,EAAkB4M,GAE5C,OADA7B,EAAY/K,GACL2M,EAAa3M,GAAezuB,MAAK,EAAEg/B,EAAWC,EAAWC,EAAgBC,EAAgBvE,EAAWvhC,MACzG,IAAIwhC,EAA4B,GAUhC,MARA,CAACqE,EAAgBC,GAAgBjhC,SAASkhC,IACxCtE,EAAmBsE,EAAErE,QAAgBF,MAGvCA,EAAUA,EAAQ37B,UAAU,CAAC8/B,EAAUnE,QAASoE,EAAUpE,SAASrhC,OAAOC,UAE1EulC,EAAUnE,QAAUA,EACpBmE,EAAUpE,UAAYA,EACfI,EAAagE,OAIR,EAAAhE,aAAY,EASf,EAAAQ,gBACS,oBAAX,WAAuD,IAAtBO,KAAgB,YACjDp/B,QAAQM,UAER,8BAA2B+C,MAAMq/B,IACrCC,OAAevD,KAAOnlC,OAAOC,OAAwB,oBAAX,KAAyBklC,KAAO,GAAIsD,EAAMtE,YAK3E,EAAAc,cAAa,EAiFb,EAAAmB,eAAc,EAuEd,EAAA5C,OAAM,EA2CT,EAAAuC,QAAyE,IAAI4C,QAO1F,MAAeC,EAIb1kC,YAAY1C,GACV4C,KAAK0hC,SAAUtkC,MAAAA,OAAO,EAAPA,EAASskC,UAAWF,SAASe,cAAc,QAC1DviC,KAAK0hC,QAAQ+C,UAAUluB,IAAI,QAE3BvW,KAAK0kC,SAAWtnC,MAAAA,OAAO,EAAPA,EAASsnC,SACtBtnC,IAAaA,EAAsCmK,KAAQnK,EAA0CykB,OACtG7hB,KAAKqb,OAAOje,GAGd,EAAAukC,QAAQv5B,IAAIpI,KAAK0hC,QAAS1hC,OAU9B,MAAa2kC,UAAoBH,EAI/B1kC,YAAY1C,EAA8B,I,MACxCgJ,MAAM,OAAD,wBAAKhJ,GAAO,CAAEsnC,SAA0B,QAAhB,EAAAtnC,EAAQsnC,gBAAQ,QAAI,eAG5CrpB,OAAOje,GAGZ,IAFA,EAAAwnC,GAAA,GAAW5kC,KAAM5C,GAEI,cAAlB4C,KAAK0kC,SACN1kC,KAAK0hC,QAAQwB,YAAc,GAC3BljC,KAAK0hC,QAAQc,UAAUpD,EAAOp/B,KAAKuH,KAAK,EAAOvH,KAAK6G,WAC/C,CAEL,MAAM65B,EAAI1gC,KAAK0hC,QAAQ1hC,KAAK0kC,UACtBG,EAAYzF,EAAOp/B,KAAKuH,KAAK,EAAMvH,KAAK6G,WAGrCiE,IAAN41B,EAAiB1gC,KAAK0hC,QAAQoD,QAAQ9kC,KAAK0kC,UAAYG,EACpD7kC,KAAK0hC,QAA6B1hC,KAAK0kC,UAAYG,GAItDE,iBAAiB3nC,GACtB,GAAG4C,KAAKuH,MAAQnK,EAAQmK,OAAO,EAAA+O,EAAA,GAAUtW,KAAK6G,KAAMzJ,EAAQyJ,MAI5D,OAAO7G,KAAKqb,OAAOje,IA9BV,EAAAunC,YAAW,EAkCxB,MAAMpD,EAA0D,IAAI3vB,IACpE,SAASktB,EAAkB1hC,EAAsC,IAC/D,MAAM4nC,EAAOrlC,KAAKC,UAAUxC,GAC5B,IAAIyhC,EAAiB0C,EAAsB78B,IAAIsgC,GAM/C,OALInG,IACFA,EAAiB,IAAIkC,KAAKkE,eAAe,EAAAvG,gCAAkC,SAAW,EAAAE,WAAYxhC,GAClGmkC,EAAsBn5B,IAAI48B,EAAMnG,IAG3BA,EAGE,EAAAQ,UAAY,CAACC,GAAI,KAAME,GAAI,MAKtC,MAAaqE,UAAwBW,EAInC1kC,YAAY1C,G,MACVgJ,MAAM,OAAD,wBAAKhJ,GAAO,CAAEsnC,SAA0B,QAAhB,EAAAtnC,EAAQsnC,gBAAQ,QAAI,iBAG5CrpB,OAAOje,GAGZ,IAAIL,EACJ,IAHA,EAAA6nC,GAAA,GAAW5kC,KAAM5C,GAGd4C,KAAK5C,QAAQ2hC,MAAQ/+B,KAAK5C,QAAQ4hC,QAA+C,IAArCpjC,OAAOyX,KAAKrT,KAAK5C,SAASe,OAA6B,CACpG,MAAM+mC,EAAQllC,KAAK6hB,KAAKsjB,WACxBpoC,GAAQ,KAAsB,QAAf,EAAA6hC,WAAwBsG,EAAQ,IAAO,GAAKA,IAAQt9B,OAAO,GAAK,KAAO,IAAM5H,KAAK6hB,KAAKujB,cAAcx9B,OAAO,GAKzG,QAAf,EAAAg3B,aACD7hC,GAAQ,KAAOmoC,EAAQ,GAAK,EAAA7F,UAAUC,GAAK,EAAAD,UAAUG,SAElD,CAEL,MAAMX,EAAiBC,EAAkB9+B,KAAK5C,SAC9CL,GAAO,EAAAsoC,GAAA,GAAsBxG,EAAeO,OAAOp/B,KAAK6hB,OAGzD7hB,KAAK0hC,QAAgB1hC,KAAK0kC,UAAY3nC,GA5B9B,EAAA8mC,gBAAe,EAgCZ,EAAAyB,KAAhB,SAAqB/9B,EAAkBV,GACrC,OAAO,IAAI89B,EAAY,CAACp9B,IAAAA,EAAKV,KAAAA,IAAO66B,SAGtB,EAAA6D,MAAhB,SAAsBnoC,GACpB,OAAO,IAAIunC,EAAYvnC,GAASskC,SAGlB,EAAA8D,MAAhB,SAAsB9D,EAAsBn6B,EAAkBV,EAA2B69B,GACvF,OAAO,IAAIC,EAAY,CAACjD,QAAAA,EAASn6B,IAAAA,EAAKV,KAAAA,EAAM69B,SAAAA,IAAWhD,SAhgB3D,CAAU,QAAI,KAqgBd,YAEa,GAAK4D,KAGJ,GAAKC,MAGL,GAAKC,MA2BnB,UAAsB,GC5mBf,MAAMC,GAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACxHC,GAAO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAK1EC,GAAiB9jB,IAC5B,MAAMnF,EAAI,IAAI/N,KAAKA,KAAKi3B,IAAI/jB,EAAKgkB,cAAehkB,EAAKikB,WAAYjkB,EAAKkkB,YAChEC,EAAStpB,EAAEupB,aAAe,EAChCvpB,EAAEwpB,WAAWxpB,EAAEypB,aAAe,EAAIH,GAClC,MAAMI,EAAY,IAAIz3B,KAAKA,KAAKi3B,IAAIlpB,EAAE2pB,iBAAkB,EAAG,IAC3D,OAAO9mB,KAAK+mB,OAAQ5pB,EAAE6pB,UAAYH,EAAUG,WARvB,MAQ+C,GAAK,IAyF3E,OAAmB,mCAtFZ,SAAuC73B,GAC5C,MAAM83B,EAAQ,IAAI73B,KACZ5J,EAAMyhC,EAAMD,UAAY,IAAO,EAC/BzK,EAAYptB,EAAK63B,UAAY,IAAO,EAEpCnpC,EAAsC,GAa5C,OAZI2H,EAAM+2B,EAjBW,OAiBa0K,EAAMT,YAAcr3B,EAAKq3B,UACzD3oC,EAAQ2hC,KAAO3hC,EAAQ4hC,OAAS,UACxBwH,EAAMX,gBAAkBn3B,EAAKm3B,eACrCzoC,EAAQqpC,KAAOrpC,EAAQspC,IAAM,UAC7BtpC,EAAQupC,MAAQ,WACP5hC,EAAM+2B,EAAa,QAAiB6J,GAAca,KAAWb,GAAcj3B,GACpFtR,EAAQwpC,QAAU,SAElBxpC,EAAQupC,MAAQ,QAChBvpC,EAAQspC,IAAM,WAGT,IAAI,mBAAqB,CAC9B7kB,KAAMnT,EACNtR,QAAAA,IACCskC,UAmEE,MAgBDmF,GAAU,KACVC,GAAc,IAAIC,OAAO,gBACzBC,GAAwB,IAAID,OAAO,yBAA0B,KAC7DE,GAA2B,IAAIF,OAAO,yBAA0B,KAChEG,GAAY,IAAIH,OAAO,0CAA2C,KAClEI,GAAW,IAAIJ,OAAO,mEAAoE,KAC1FK,GAAwB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAgO3E,SAASC,GAAmBC,EAAmBX,EAAeY,GAC5D,MAAMC,GAAc,IAAI74B,MAAOk3B,cACzBW,EAAQ73B,KAAK5J,MACnB,GAAGwiC,GAAgBV,IAAWU,GAAgBC,EAAa,CACzD,MAAM3lB,EAAO,IAAIlT,KACjBkT,EAAK4lB,YAAYF,EAAcZ,EAAO,GACtC9kB,EAAKqd,SAAS,EAAG,EAAG,GACpB,MAAMwI,EAAU7lB,EAAK0kB,UACrB,GAAGmB,EAAUlB,EACX,OAEF3kB,EAAK8lB,SAAS9lB,EAAKikB,WAAa,GAChC,MAAM8B,EAAU/lB,EAAK0kB,UAAY,EAEjCe,EAAMhnC,KAAK,CACT8pB,MAAOyd,GAAmBH,GAC1BA,QAAAA,EACAE,QAAAA,KAKN,SAASE,GAAkBR,EAAmBZ,EAAaC,GACzD,GAAGoB,GAAkBrB,EAAKC,GAAQ,CAChC,MAAMa,GAAc,IAAI74B,MAAOk3B,cACzBW,EAAQ73B,KAAK5J,MAEnB,IAAI,IAAIc,EAAI2hC,EAAa3hC,GAAKghC,GAAShhC,IAAK,CAC1C,GAAa,IAAV8gC,GAAuB,KAARD,KA8DJD,EA9D8B5gC,GA+DhC,GAAM,GAAO4gC,EAAO,KAAQ,IAAQA,EAAO,KAAQ,EA9D7D,SAGF,MAAM5kB,EAAO,IAAIlT,KACjBkT,EAAK4lB,YAAY5hC,EAAG8gC,EAAOD,EAAM,GACjC7kB,EAAKqd,SAAS,EAAG,EAAG,GAEpB,MAAMwI,EAAU7lB,EAAK0kB,UACrB,GAAGmB,EAAUlB,EACX,SAGF3kB,EAAK4lB,YAAY5hC,EAAG8gC,EAAOD,EAAM,GACjC7kB,EAAKqd,SAAS,EAAG,EAAG,GACpB,MAAM0I,EAAU/lB,EAAK0kB,UAAY,EAC9B1gC,IAAM2hC,EACPF,EAAMhnC,KAAK,CACT8pB,MAAO4d,GAAkBN,GACzBA,QAAAA,EACAE,QAAAA,IAGFN,EAAMhnC,KAAK,CACT8pB,MAAO6d,GAAiBP,GACxBA,QAAAA,EACAE,QAAAA,KAoCV,IAAoBnB,EA7BpB,SAASoB,GAAmB/L,GAC1B,MAAMja,EAAO,IAAIlT,KAAKmtB,GACtB,OAAO2J,GAAO5jB,EAAKikB,YAAYl+B,MAAM,EAAG,GAAK,IAAMia,EAAKgkB,cAG1D,SAASmC,GAAkBlM,GACzB,MAAMja,EAAO,IAAIlT,KAAKmtB,GACtB,OAAO2J,GAAO5jB,EAAKikB,YAAYl+B,MAAM,EAAG,GAAK,IAAMia,EAAKkkB,UAG1D,SAASkC,GAAiBnM,GACxB,MAAMja,EAAO,IAAIlT,KAAKmtB,GACtB,OAAQ,IAAMja,EAAKkkB,WAAWn+B,OAAO,GAAK,KAAO,KAAOia,EAAKikB,WAAa,IAAIl+B,OAAO,GAAK,IAAMia,EAAKgkB,cAGvG,SAASqC,GAAepM,GACtB,MAAMja,EAAO,IAAIlT,KAAKmtB,GACtB,OAAO4J,GAAK7jB,EAAKsmB,UAGnB,SAASJ,GAAkBrB,EAAaC,GACtC,OAAGA,GAAS,GAAKA,EAAQ,IACpBD,GAAO,GAAKA,EAAMU,GAAsBT,GAW/C,SAASb,GAASsC,GAwBhBA,EAAIA,EAAEjsC,cACN,IAAI,IAAI0J,EAAI,EAAGA,EAAI,GAAIA,IAErB,GAAwB,IADV4/B,GAAO5/B,GAAG1J,cACfC,QAAQgsC,GACf,OAAOviC,EAGX,OAAQ,EC5dK,SAASwiC,GAA4B9gC,EAAQwQ,EAAgBC,GACvE,eAAgBA,EAAUzQ,KAC3ByQ,EAAUzQ,GAAO,IAAIyQ,EAAUzQ,KAG9BwQ,GAAaA,EAAUxQ,KAASyQ,EAAUzQ,KAC3CwQ,EAAUxQ,GAAKpJ,OAAS6Z,EAAUzQ,GAAKpJ,OACtC6Z,EAAUzQ,GAAerE,SAAQ,CAACw9B,EAAG76B,KACpCkS,EAAUxQ,GAAK1B,GAAK66B,KAItB1oB,EAAUzQ,GAAOwQ,EAAUxQ,IDme/B,kBA1WO,SAAsB0T,EAAeqsB,GAC1C,MAAMc,EAAIntB,EAAMqtB,OAAOnsC,cAEvB,GAAGisC,EAAEjqC,OAAS,EACZ,OAGF,GAA0B,IAAvB,QAAQ/B,QAAQgsC,GAAU,CAC3B,MAAMvmB,EAAO,IAAIlT,KACX83B,EAAO5kB,EAAKgkB,cACZc,EAAQ9kB,EAAKikB,WACbY,EAAM7kB,EAAKkkB,UACjBlkB,EAAK4lB,YAAYhB,EAAME,EAAOD,GAC9B7kB,EAAKqd,SAAS,EAAG,EAAG,GAEpB,MAAMwI,EAAU7lB,EAAK0kB,UACrB1kB,EAAK4lB,YAAYhB,EAAME,EAAOD,EAAM,GACpC7kB,EAAKqd,SAAS,EAAG,EAAG,GAEpB,MAAM0I,EAAU/lB,EAAK0kB,UAAY,EAMjC,YALAe,EAAMhnC,KAAK,CACT8pB,MAAO,QACPsd,QAAAA,EACAE,QAAAA,IAKJ,GAA8B,IAA3B,YAAYxrC,QAAQgsC,GAAU,CAC/B,MAAMvmB,EAAO,IAAIlT,KACX83B,EAAO5kB,EAAKgkB,cACZc,EAAQ9kB,EAAKikB,WACbY,EAAM7kB,EAAKkkB,UACjBlkB,EAAK4lB,YAAYhB,EAAME,EAAOD,GAC9B7kB,EAAKqd,SAAS,EAAG,EAAG,GAEpB,MAAMwI,EAAU7lB,EAAK0kB,UAAY,MACjC1kB,EAAK4lB,YAAYhB,EAAME,EAAOD,EAAM,GACpC7kB,EAAKqd,SAAS,EAAG,EAAG,GAEpB,MAAM0I,EAAU/lB,EAAK0kB,UAAY,SAMjC,YALAe,EAAMhnC,KAAK,CACT8pB,MAAO,YACPsd,QAAAA,EACAE,QAAAA,IAKJ,MAAMW,EAySR,SAAsBH,GACpB,MAAMvxB,EAAI,IAAIlI,KACd,GAAGy5B,EAAEjqC,QAAU,EACb,OAAQ,EAGV,IAAI,IAAI0H,EAAI,EAAGA,EAAI,EAAGA,IAGpB,GAFAgR,EAAE2xB,QAAQ3xB,EAAEkvB,UAAY,GAEoC,IAAzDmC,GAAerxB,EAAE0vB,WAAWpqC,cAAcC,QAAQgsC,GACnD,OAAOvxB,EAAEsxB,SAGb,OAAQ,EAtTUM,CAAaL,GAC/B,GAAGG,GAAa,EAAG,CACjB,MAAM1mB,EAAO,IAAIlT,KACX5J,EAAM8c,EAAK0kB,UAEXmC,EAAWH,EADE1mB,EAAKsmB,SAExBtmB,EAAK2mB,QAAQ3mB,EAAKkkB,UAAY2C,GAC3B7mB,EAAK0kB,UAAYxhC,GAClB8c,EAAK8mB,QAAQ9mB,EAAK0kB,UAAY,QAEhC,MAAME,EAAO5kB,EAAKgkB,cACZc,EAAQ9kB,EAAKikB,WACbY,EAAM7kB,EAAKkkB,UACjBlkB,EAAK4lB,YAAYhB,EAAME,EAAOD,GAC9B7kB,EAAKqd,SAAS,EAAG,EAAG,GAEpB,MAAMwI,EAAU7lB,EAAK0kB,UACrB1kB,EAAK4lB,YAAYhB,EAAME,EAAOD,EAAM,GACpC7kB,EAAKqd,SAAS,EAAG,EAAG,GAEpB,MAAM0I,EAAU/lB,EAAK0kB,UAAY,EAMjC,YALAe,EAAMhnC,KAAK,CACT8pB,MAAO8d,GAAeR,GACtBA,QAAAA,EACAE,QAAAA,IAKJ,IAAIgB,EACJ,GAAqC,QAAjCA,EAAU1B,GAAU2B,KAAKT,IAyB7B,GAAoC,QAAhCQ,EAAUzB,GAAS0B,KAAKT,IAqC5B,GAAuC,QAAnCQ,EAAU9B,GAAY+B,KAAKT,IAA/B,CAyCA,GAAiD,QAA7CQ,EAAU5B,GAAsB6B,KAAKT,IAAc,CACrD,MAAMU,EAAKF,EAAQ,GACbG,EAAKH,EAAQ,GACbjC,EAAQb,GAASgD,GACvB,GAAGnC,GAAS,EAAG,CACb,MAAMqC,GAAKD,EACX,GAAGC,EAAI,GAAKA,GAAK,GAGf,YADAlB,GAAkBR,EADN0B,EAAI,EACcrC,GAEzB,GAAGqC,GAAKnC,GAGb,YADAQ,GAAmBC,EAAOX,EADLqC,IAO3B,GAAoD,QAAhDJ,EAAU3B,GAAyB4B,KAAKT,IAAc,CACxD,MAAMU,EAAKF,EAAQ,GAEbjC,EAAQb,GADH8C,EAAQ,IAEnB,GAAGjC,GAAS,EAAG,CACb,MAAMqC,GAAKF,EACX,GAAGE,EAAI,GAAKA,GAAK,GAGf,YADAlB,GAAkBR,EADN0B,EAAI,EACcrC,GAEtBqC,GAAKnC,IAEbQ,GAAmBC,EAAOX,EADLqC,SAtE3B,CACE,IAAIzB,GAAgBa,EACpB,MAAMZ,GAAc,IAAI74B,MAAOk3B,cAC/B,GAAG0B,EAAeV,GAAS,CACzBU,EAAeV,GACf,IAAI,IAAIhhC,EAAI2hC,EAAa3hC,GAAK0hC,EAAc1hC,IAAK,CAC/C,MAAMgc,EAAO,IAAIlT,KACjBkT,EAAK4lB,YAAY5hC,EAAG,EAAG,GACvBgc,EAAKqd,SAAS,EAAG,EAAG,GAEpB,MAAMwI,EAAU7lB,EAAK0kB,UACrB1kB,EAAK4lB,YAAY5hC,EAAI,EAAG,EAAG,GAC3Bgc,EAAKqd,SAAS,EAAG,EAAG,GAEpB,MAAM0I,EAAU/lB,EAAK0kB,UAAY,EACjCe,EAAMhnC,KAAK,CACT8pB,MAAO,GAAKvkB,EACZ6hC,QAAAA,EACAE,QAAAA,UAGC,GAAGL,GAAgBC,EAAa,CACrC,MAAM3lB,EAAO,IAAIlT,KACjBkT,EAAK4lB,YAAYF,EAAc,EAAG,GAClC1lB,EAAKqd,SAAS,EAAG,EAAG,GAEpB,MAAMwI,EAAU7lB,EAAK0kB,UACrB1kB,EAAK4lB,YAAYF,EAAe,EAAG,EAAG,GACtC1lB,EAAKqd,SAAS,EAAG,EAAG,GAEpB,MAAM0I,EAAU/lB,EAAK0kB,UAAY,EACjCe,EAAMhnC,KAAK,CACT8pB,MAAO,GAAKmd,EACZG,QAAAA,EACAE,QAAAA,SAvEN,CACE,MAAMkB,EAAKF,EAAQ,GACbG,EAAKH,EAAQ,GACbK,EAAKL,EAAQ,GACnB,IAAIA,EAAQ,KAAOA,EAAQ,GACzB,OAGF,MAAMlC,EAAMwC,SAASJ,GACfnC,EAAQuC,SAASH,GAAM,EAC7B,IAAItC,EAAOyC,SAASD,GACjBxC,GAAQ,IAAMA,GAAQ,KACvBA,GAAQ,KAGV,MAAMe,GAAc,IAAI74B,MAAOk3B,cAC/B,GAAGkC,GAAkBrB,EAAM,EAAGC,IAAUF,GAAQI,IAAWJ,GAAQe,EAAa,CAC9E,MAAM3lB,EAAO,IAAIlT,KACjBkT,EAAK4lB,YAAYhB,EAAME,EAAOD,GAC9B7kB,EAAKqd,SAAS,EAAG,EAAG,GAEpB,MAAMwI,EAAU7lB,EAAK0kB,UACrB1kB,EAAK4lB,YAAYhB,EAAME,EAAOD,EAAM,GACpC7kB,EAAKqd,SAAS,EAAG,EAAG,GAEpB,MAAM0I,EAAU/lB,EAAK0kB,UAAY,EAMjC,YALAe,EAAMhnC,KAAK,CACT8pB,MAAO6d,GAAiBP,GACxBA,QAAAA,EACAE,QAAAA,SAtDN,CACE,MAAMkB,EAAKF,EAAQ,GACbG,EAAKH,EAAQ,GACbI,EAAIE,SAASJ,GACbK,EAAKD,SAASH,GACpB,GAAGC,EAAI,GAAKA,GAAK,GAAI,CACnB,GAAGG,GAAMtC,IAAWmC,GAAK,GAIvB,YADA3B,GAAmBC,EADL0B,EAAI,EADGG,GAIbA,GAAM,IAGdrB,GAAkBR,EAFN0B,EAAI,EACFG,EAAK,QAGbH,GAAKnC,IAAWsC,GAAM,IAG9B9B,GAAmBC,EADL6B,EAAK,EADEH,K,gDE3OpB,MAAMI,GAAkE,CAC7EC,IAAK,kBACLC,IAAK,8BACLC,IAAK,0BACLvE,KAAM,mBACNwE,IAAK,YACLC,IAAK,aACLC,IAAK,YACLC,KAAM,aACNC,IAAK,aACLC,IAAK,YACLC,IAAK,YACLC,KAAM,aACNC,IAAK,YACLC,KAAM,aACNC,IAAK,kBACLC,IAAK,iBAGMC,GAAwE,GAErF,IAAI,MAAMlsC,KAAOkrC,GACfgB,GAAwBhB,GAAwBlrC,IAA2BA,ECa7E,IAAImsC,GAAwB,EAErB,MAAMC,WAAuBx3B,EAApC,c,oBAmBU,KAAAy3B,oBAAsB,KAC5B,IAAI,MAAMjsC,KAAM0B,KAAKwqC,KAAM,CACzB,MAAMC,EAAMzqC,KAAKwqC,KAAKlsC,GAEnBmsC,EAAIC,2BACED,EAAIC,kBACX1qC,KAAK2qC,cAAcC,mBAAmBH,MAlBlC9tB,QACR3c,KAAKwqC,KAAO,GACZxqC,KAAK6qC,oBAAsB,GAC3B7qC,KAAK8qC,oBAAsB,GAE3B,kBAAwCtkC,iBAAiB,uBAAwBukC,IAC3EA,GACF/qC,KAAKuqC,yBAgBJS,QAAQP,EAAev0B,GAC5B,IAAIu0B,GAAiB,kBAAVA,EAAIpsC,EACb,OAGF,MAAM4sC,EAASjrC,KAAKwqC,KAAKC,EAAInsC,IAE1BmsC,EAAIS,iBACL7C,GAAyB,iBAAkB4C,EAAQR,GACnDzqC,KAAKmrC,kBAAkBn1B,YAAYy0B,EAAIS,eAAgBh1B,IAuBrD+0B,IACFjrC,KAAKwqC,KAAKC,EAAInsC,IAAMmsC,GAStB,IAAI,IAAI5kC,EAAI,EAAG1H,EAASssC,EAAIW,WAAWjtC,OAAQ0H,EAAI1H,IAAU0H,EAAG,CAC9D,MAAMwlC,EAAYZ,EAAIW,WAAWvlC,GACjC,OAAOwlC,EAAUhtC,GACf,IAAK,4BACHosC,EAAIa,WAAY,EAAAC,GAAA,GAAcF,EAAUC,WACxC,MAEF,IAAK,yBACHb,EAAIlT,SAAW8T,EAAU9T,SACzBkT,EAAIhrC,KAAO4rC,EAAUzsC,OAAO4sC,OAA2B,cAAlBf,EAAIgB,UAA4B,QAAU,QAI/E,MAEF,IAAK,yBACHhB,EAAIlT,SAAW8T,EAAU9T,SACzBkT,EAAIiB,EAAIL,EAAUK,EAClBjB,EAAIkB,EAAIN,EAAUM,EAEQN,EAAUzsC,OAAOgtC,cACzCnB,EAAIhrC,KAAO,QAEXgrC,EAAIhrC,KAAO,QAEb,MAEF,IAAK,+BACL,IAAK,2BAcH,QAbqBqL,IAAlBugC,EAAUQ,MACXpB,EAAIqB,gBAAkBT,EAAUQ,KAG/BR,EAAUvsC,aACmB,yBAA3BusC,EAAUvsC,WAAWT,SACfgtC,EAAUvsC,WACkB,sBAA3BusC,EAAUvsC,WAAWT,IAC7BosC,EAAIsB,gBAAkBV,EAAUvsC,aAKQ,eAAlB2rC,EAAIgB,YAA+BhB,EAAIuB,QAAUhmC,IAAiBimC,mBAC1FxB,EAAIhrC,KAAO,UACXgrC,EAAIyB,QAAU,OACT,GAAqB,eAAlBzB,EAAIgB,UAA4B,CACxC,IAAIzlC,IAAiBmmC,kBACnB,MAGF1B,EAAIhrC,KAAO,UACXgrC,EAAIyB,QAAU,EACdzB,EAAI2B,UAAW,EAEjB,MAEF,IAAK,6BACH3B,EAAIhrC,KAAO,QACXgrC,EAAIiB,EAAIL,EAAUK,EAClBjB,EAAIkB,EAAIN,EAAUM,EAClB,MAEF,IAAK,4BACmB,cAAlBlB,EAAIgB,WAA+C,cAAlBhB,EAAIgB,YACvChB,EAAIhrC,KAAO,OAGbgrC,EAAI2B,UAAW,GAKrB,GAAI3B,EAAIgB,UA2BEhB,EAAIgB,YAAcrC,GAAwBC,IAClDoB,EAAIhrC,KAAO,MACHgrC,EAAIgB,YAAcrC,GAAwBU,MAClDW,EAAIhrC,KAAO,WA9BM,CACjB,MAAMvB,GAAOusC,EAAIa,WAAa,IAAI5jC,MAAM,KAAKG,MAEvCwkC,EAAiBnuC,GAAOkrC,GAAwBlrC,EAAI/B,eAC1D,GAAGkwC,EACD5B,EAAIgB,UAAYY,OAEhB,OAAO5B,EAAIhrC,MACT,IAAK,MACL,IAAK,QACL,IAAK,QACHgrC,EAAIgB,UAAY,YAChB,MACF,IAAK,UACHhB,EAAIgB,UAAY,aAChB,MACF,IAAK,QACHhB,EAAIgB,UAAY,aAChB,MACF,IAAK,QACHhB,EAAIgB,UAAY,YAChB,MACF,QACEhB,EAAIgB,UAAY,4BAUxB,GAAgB,UAAbhB,EAAIhrC,MAAiC,UAAbgrC,EAAIhrC,KAAkB,CAE/C,MAAM4rC,EAAYZ,EAAIW,WAAW7nC,MAAM8nC,GAA8B,8BAAhBA,EAAUhtC,IACzDH,EAAMmtC,GAAaA,EAAUC,UAAU5jC,MAAM,KAAKG,MAClDga,EH3Ge,EAACA,EAAYzkB,EAKnC,MACH,MAAMkvC,EAASlvC,EAAQmvC,cAAgB,IAAM,IACvC79B,GAAQ,IAAMmT,EAAKsjB,YAAYv9B,OAAO,GAAK,KAAO,IAAMia,EAAKujB,cAAcx9B,OAAO,IAAMxK,EAAQovC,UAAY,GAAK,KAAO,IAAM3qB,EAAK4qB,cAAc7kC,OAAO,IAE9J,OAAQxK,EAAQsvC,aAAe,IAAM7qB,EAAKkkB,WAAWn+B,OAAO,GAAKia,EAAKkkB,WACpEuG,GAAUlvC,EAAQmvC,eAAiB,KAAO1qB,EAAKikB,WAAa,IAAIl+B,OAAO,GAAK69B,GAAO5jB,EAAKikB,aACxFwG,EAASzqB,EAAKgkB,eACbzoC,EAAQuvC,OAAS,GAAK,KAAOj+B,IG+Ffk+B,CAAY,IAAIj+B,KAAgB,IAAX87B,EAAI5oB,MAAc,CAAC0qB,eAAe,EAAMG,aAAa,IAAOjvC,QAAQ,SAAU,KAAKA,QAAQ,KAAM,KACnIgtC,EAAIa,UAAY,GAAGb,EAAIhrC,QAAQoiB,IAAO3jB,EAAM,IAAMA,EAAM,KAgC1D,OA7BG2uC,OACgB,QAAbpC,EAAIhrC,MAAkBgrC,EAAIh3B,KAAO,KAAqB,UAAbg3B,EAAIhrC,MAAiC,UAAbgrC,EAAIhrC,QACvEgrC,EAAIC,mBAAoB,EAEH1qC,KAAK2qC,cAAcmC,gBAAgBrC,GACvCrrC,KACfY,KAAK2qC,cAAcoC,mBAAmBtC,OAAK3/B,EC1NtC,SAAwB2/B,EAAwBt5B,GAAW,EAAO67B,GAC/E,IAAIvtC,EAWJ,OATEA,EADC0R,EACM,WACC67B,EACD,QACCvC,EAAIC,kBACL,SAEA,YAGF,QAAWjrC,GAAM,EAAAwtC,GAAA,GAA2BxC,EAAKuC,ID8MME,CAAezC,GAAM,IAS7EA,EAAIa,YACNb,EAAIa,UAAY,IAGG,4BAAlBb,EAAIgB,WAA6D,wBAAlBhB,EAAIa,YACpDb,EAAIhrC,KAAO,UACXgrC,EAAI2B,UAAW,EACf3B,EAAIyB,QAAU,GAObjB,EACMrvC,OAAOC,OAAOovC,EAAQR,GAGxBA,EAGF0C,OAAO11B,GACZ,OAAO,EAAAmK,GAAA,GAAqBnK,GAASA,EAAQzX,KAAKwqC,KAAK/yB,GAGlD21B,YAAY3C,EAAiB4C,EAAkBC,GACpD,OAAOttC,KAAKq1B,eAAekY,cAAc,CACvCj1B,MAAOmyB,EACP4C,QAAAA,EACAC,UAAAA,IAIGE,qBAAqB/1B,EAAcg2B,GACxC,MAAMtkB,EAASnpB,KAAK6qC,oBAAoBpzB,GACxC,OAAO0R,GAAUA,EAAOskB,GAGnBC,kBAAkBj2B,EAAc6d,EAAYqY,EAAeC,EAAgBH,G,UAChF,MAAMhD,EAAMzqC,KAAKmtC,OAAO11B,GACxB,IAAIgzB,EACF,OAGF,MAAMthB,EAAwC,QAAlC,KAAGnpB,KAAK6qC,qBAAmB,EAACJ,EAAInsC,WAAE,aAAM,GAE9C0uC,EAAQ7jB,EAAOskB,GAClBT,GAASA,EAAMtB,GAAKiC,GAASX,EAAMrB,GAAKiC,IAI3CzkB,EAAOskB,GAAa,CAClBruC,IAAKm2B,IAAIC,gBAAgBF,GACzBoW,EAAGiC,EACHhC,EAAGiC,IAIAC,+BAA+Bp2B,EAActK,GAClD,MAAMs9B,EAAMzqC,KAAKmtC,OAAO11B,GACxB,IAAIgzB,EACF,OAGF,MAAMuC,EAAQvC,EAAIuB,QAAUvB,EAAIuB,OAAOzoC,MAAMypC,GAAsB,sBAAZA,EAAM3uC,IACzD2uC,IAIJvC,EAAI7rC,OAAOkvC,uBAAwB,EACnCd,EAAM7/B,MAAQA,GAGT4gC,gBACL,OAAO/tC,KAAKgU,WAAWg6B,kBAAkB,CAAC/kC,OAAQ,0BAA0BjE,MAAMipC,IAChF,MAAMC,EAAcD,EAA0DE,WAK9E,OAJAD,EAAWhrC,SAASkrC,IAClBA,EAAU5M,SAAWxhC,KAAKgrC,QAAQoD,EAAU5M,aAGvC0M,KAIJG,uBAAuB9S,GAC5B,MAAMj9B,EAAK,uBAAwB+rC,GAE7B2C,EAAQ,CACZ3uC,EAAG,YACHstC,EAAG,EACHD,EAAG,EACHztC,SAAU,GACVwV,KAAM8nB,EAAK9nB,KACXhU,KAAM,MAER,IAAI+hC,EAAuB,CACzBnjC,EAAG,WACHq4B,YAAa,GACb0U,WAAY,GACZjW,MAAO,EACP+V,eAAgB,GAChB5sC,GAAAA,EACAmtC,UAAWlQ,EAAK97B,KAChBgU,KAAM8nB,EAAK9nB,KACXoO,KAAMlT,KAAK5J,MAAQ,IACnBnG,OAAQ,GACRotC,OAAQ,CAACgB,GACT1B,UAAW/P,EAAKt7B,MAGlBuhC,EAAWxhC,KAAKgrC,QAAQxJ,GAExB,MAAM8M,EAAetuC,KAAK2qC,cAAcoC,mBAAmBvL,OAAU12B,EAAWyqB,IAAIC,gBAAgB+F,GAAOA,EAAK9nB,MAE1G86B,EAAiC,CACrClwC,EAAG,YACHq4B,YAAa,GACb8K,SAAUA,EACVljC,GAAAA,EACAkwC,KAAMlwC,EACNM,OAAQ,IAQV,OALAoB,KAAK8qC,oBAAoBxsC,GAAM,CAC7BgwC,aAAAA,EACA/S,KAAAA,GAGKgT,EAGFE,gBAAgBnwC,GACrB,MAAM,aAACgwC,EAAY,KAAE/S,GAAQv7B,KAAK8qC,oBAAoBxsC,GAItD,cAHO0B,KAAK8qC,oBAAoBxsC,GAEjB0B,KAAKq1B,eAAejkB,OAAO,CAACmqB,KAAAA,EAAMmT,SAAUnT,EAAKt7B,OAClD+E,MAAMq2B,GACXr7B,KAAKgU,WAAWC,UAAU,0BAA2B,CAC1DsnB,KAAMF,EACNoQ,UAAWlQ,EAAK97B,KAChBsH,SAAU,CACR1I,EAAG,uBAGJ2G,MAAMopC,KACP,EAAA5f,GAAA,GAAgC4f,GAChCA,EAAU5M,SAAWxhC,KAAKgrC,QAAQoD,EAAU5M,UAC5CxhC,KAAK2qC,cAAcoC,mBAAmBqB,EAAU5M,cAAU12B,EAAWwjC,EAAalvC,IAAKkvC,EAAaK,YAE7FP,OAKNQ,UACL,OAAO5uC,KAAKgU,WAAWg6B,kBAAkB,CACvC/kC,OAAQ,wBACRs0B,cAAgBrJ,KACd,EAAA1F,GAAA,GAAgD0F,GACzCA,EAAI2a,KAAKzqC,KAAKqmC,GAAQzqC,KAAKgrC,QAAQP,QAKzCqE,eAAer3B,EAAcnP,EAAcqhB,EAAgBZ,GAChE,MAAM0hB,EAAMzqC,KAAKmtC,OAAO11B,GACxB,OAAIgzB,EACGzqC,KAAKq1B,eAAe0Z,gBAAgBzmC,GAAM,EAAA0mC,GAAA,GAA6BvE,GAAM9gB,EAAQZ,GAD5EpnB,QAAQC,QAAO,EAAAiW,EAAA,GAAU,Y,eE7XtC,MAAMo3B,WAAyBn8B,EAAtC,c,oBACU,KAAAo8B,OAAwD,GAGtDvyB,QACR3c,KAAK6d,kBAAkBC,2BAA2B,CAChDqxB,mBAAqB9zB,IACnB,MAAMrE,EAAShX,KAAK0b,gBAAgB5C,UAAUuC,EAAOI,MACrDzb,KAAK8nB,UAAU9Q,EAAQqE,EAAO+zB,SAAU/zB,EAAO2I,MAAO,CAACqrB,QAAQ,OAItDjoC,EAAA,MAAiB,UAAUpC,MAAMkqC,IAC5ClvC,KAAKkvC,OAASA,GAAU,MAIpBI,OAAOt4B,EAAgBo4B,GAC7B,OAAYp4B,GAAUo4B,EAAW,IAAMA,EAAW,IAG7CG,SAASv4B,EAAgBo4B,GAC9B,OAAOpvC,KAAKkvC,OAAOlvC,KAAKsvC,OAAOt4B,EAAQo4B,IAGlC3wB,mBACL,OAAOze,KAAKwvC,eAAexqC,MAAK,KAC9B,IAAI,MAAMuC,KAAOvH,KAAKkvC,OAAQ,CAC5B,IAAyB,IAAtB3nC,EAAInL,QAAQ,KACb,SAGF,MAAM4a,EAASzP,EAAId,WACJzG,KAAK8W,mBAAmBoF,cAAclF,IAEnDhX,KAAK8W,mBAAmBkI,mBAAmBhI,OAW3Cw4B,e,MACN,OAA8B,QAA9B,EAAOxvC,KAAKyvC,0BAAkB,QAAvBzvC,KAAKyvC,mBAAuBzvC,KAAKgU,WAAWC,UAAU,yBAC5DjP,MAAM2hB,KACK3mB,KAAK6d,kBAAkB2R,aAAaI,aAAejuB,QAAQM,WACnE+C,MAAK,KACLhF,KAAK6d,kBAAkBkS,qBAAqBpJ,SAK3CmB,UAAU9Q,EAAgBo4B,EAAkBM,EAAwBtyC,EAGtE,IACH,MAAM4mB,EAAQhkB,KAAK2vC,gBAAgBD,GAE7BnoC,EAAMvH,KAAKsvC,OAAOt4B,EAAQo4B,GAqBhC,OApBGprB,EACDhkB,KAAKkvC,OAAO3nC,GAAOyc,SAEZhkB,KAAKkvC,OAAO3nC,GAGrBH,EAAA,MAAiB,CACf8nC,OAAQlvC,KAAKkvC,SAGZ9xC,EAAQiyC,QAETrvC,KAAK4c,UAAUhW,cAAc,gBAAiB,CAC5CoQ,OAAAA,EACAo4B,SAAAA,EACAprB,MAAAA,EACA4rB,MAAOxyC,EAAQwyC,QAIZ5rB,EAGD6rB,aAAa7rB,GACnB,OAAIA,GAAqB,sBAAZA,EAAM3lB,KAIhB2lB,EAAM8rB,gBAAkB,KAIvB9rB,EAAMniB,QAAQ1D,OAOZwxC,gBAAgB3rB,GACtB,GAAIA,GAAqB,iBAAZA,EAAM3lB,EAQnB,OAJG2lB,EAAM8rB,kBACP9rB,EAAM8rB,iBAAkB,EAAA9oB,GAAA,GAAkBhD,EAAM8rB,kBAG3C9rB,EAGI+rB,UAAU/4B,EAAgBo4B,EAAkBY,EAA2BC,GAAe,EAAML,GAAQ,G,qCAE/G,MAAMM,EAAclwC,KAAKuvC,SAASv4B,EAAQo4B,GAC1C,IAAG,EAAAe,GAAA,GAAeD,EAAaF,GAE7B,OAAO,EAIT,MAAM37B,EAA4B,CAChCoH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CnV,QAAS,IAGX,IAAIuuC,EACJ,GAAGpwC,KAAK6vC,aAAaG,GACnBI,EAAW,CAAC/xC,EAAG,yBACV,EACL,EAAAmwB,GAAA,GAAsCwhB,GACtC,MAAMnuC,EAAUmuC,EAAWnuC,QACrB6uB,EAA4Bsf,EAAWtf,SAE1Csf,EAAWF,kBACZz7B,EAAOy7B,iBAAkB,EAAAnxB,GAAA,GAAmBqxB,EAAWF,mBAGtDpf,MAAAA,OAAQ,EAARA,EAAUvyB,UACXkW,EAAOqc,SAAW1wB,KAAK8W,mBAAmBu5B,iBAAiB3f,IAG1Dsf,EAAWpxC,OAAO0xC,aACnBj8B,EAAOi8B,WAAaN,EAAWpxC,OAAO0xC,YAGxCj8B,EAAOxS,QAAUA,EAGnB,MAAM0uC,EAAiBH,GAAYJ,EAKnC,OAJAO,EAAe1uB,MAAO,EAAAE,GAAA,IAAM,GAAQ/hB,KAAKgiB,YAAYC,sBAErDjiB,KAAK8nB,UAAU9Q,EAAQo4B,EAAUmB,EAAgB,CAAClB,QAAQ,EAAMO,MAAAA,MAE7DK,IAAiBb,IACXpvC,KAAKgU,WAAWC,UAAU,qBAAsBI,I,+RAMpDm8B,iBACL,OAAOxwC,KAAKgU,WAAWC,UAAU,2BAA2BjP,MAAM2oB,IAChE,GAAIA,EAIJ,IAAI,MAAM8iB,KAAYzwC,KAAKkvC,OAAQ,CACjC,MAAOl4B,EAAQo4B,GAAYqB,EAAS/oC,MAAM,KAC1C1H,KAAK4c,UAAUhW,cAAc,gBAAiB,CAC5CoQ,OAAQA,EAAOvQ,WACf2oC,SAAUA,GAAYA,OAAWtkC,EACjCkZ,WAAOlZ,QAMR4lC,WAAW15B,EAAgBo4B,GAChC,MAAMuB,EAA6C,CACjDtyC,EAAG,qBAGF+wC,EACDpvC,KAAK+vC,UAAU/4B,EAAQo4B,EAAUuB,GAAmB,GAAO,GAE3D3wC,KAAK8nB,UAAU9Q,EAAQo4B,EAAUuB,EAAY,CAACtB,QAAQ,EAAMO,OAAO,IAIhEgB,SAAS55B,EAAgBo4B,EAAkBvtC,EAAiB6uB,GACjE,MAAM1M,EAAmC,CACvC3lB,EAAG,eACHwjB,KAAMlT,KAAK5J,MAAQ,IAAO,EAC1BlD,QAAAA,EACAjD,OAAQ,GACR8xB,SAAAA,GAGC0e,EACDpvC,KAAK+vC,UAAU/4B,EAAQo4B,EAAUprB,GAAO,GAAO,GAE/ChkB,KAAK8nB,UAAU9Q,EAAQo4B,EAAUprB,EAAO,CAACqrB,QAAQ,EAAMO,OAAO,K,yBCxMpE,MAAMiB,GAAiC,CACrCC,SAAU,GACVn1C,QAAS,EACT83B,SAAU,kBAOL,MAAMsd,WAAwBj+B,EAArC,c,oBAEU,KAAAk+B,iBAEJ,GAGI,KAAAC,iBAAkD,GAElD,KAAAC,oBAAoE,GAEpE,KAAAC,OAAgD,GAChD,KAAAC,wBAAmF,GAGnF,KAAAC,+BAA6E,IAAIz/B,IA8DlF0/B,iBAAiB7d,EAAmB,kBACzC,MAAM3pB,EAAU9J,KAAKkxC,oBAAoBzd,GACzC,GAAG3pB,EACD,OAAOA,EAGT,MAAMynC,EAAkB,iBAAmB9d,EAC3C,OAAOzzB,KAAKkxC,oBAAoBzd,GAAYrsB,EAAA,MAAiBmqC,GAAYvsC,MAAMwsC,KACzE,EAAA5vB,GAAA,GAAS4vB,KACXA,EAAO,KAGT,EAAAC,GAAA,GAAmBZ,GAAiBW,GAGpCA,EAAK/d,SAAWA,EAChBzzB,KAAKgxC,iBAAiBvd,GAAY+d,EAE3BxxC,KAAKgU,WAAWC,UAAU,sCAAuC,CACtEisB,UAAWsR,EAAK/d,SAChBwM,aAAcuR,EAAK71C,UAClBqJ,MAAM0sC,IACPF,EAAK71C,QAAU+1C,EAAmB/1C,QAElC,MAAMg2C,EAAeH,EAAKV,SACpBA,EAAWY,EAAmBZ,SACpC,IAAI,IAAIjrC,EAAI,EAAG1H,EAAS2yC,EAAS3yC,OAAQ0H,EAAI1H,IAAU0H,EAAG,CACxD,MAAM,QAAC+rC,EAAO,UAAEC,GAAaf,EAASjrC,GACtC8rC,EAAaC,GAAWC,EAO1B,OAJAzqC,EAAA,MAAiB,CACf,CAACmqC,GAAaC,IAGTA,KACN,IACMA,OAKNM,uBACL,MAAM9oB,EAA2B,CAC/BhpB,KAAKsxC,oBAWP,OARGtxC,KAAK+xC,iBAAiBtd,WAAa,kBACpCzL,EAAS1oB,KAAKN,KAAKsxC,iBAAiBtxC,KAAK+xC,iBAAiBtd,WAGxDz0B,KAAKmxC,OAAOa,QACdhpB,EAAS1oB,KAAKN,KAAKiyC,gBAAgB,WAG9BtwC,QAAQ8Q,IAAIuW,GAGbkpB,cACFlyC,KAAKmB,QACPnB,KAAKmB,MAAQ,IAAI,UAAY2J,EAAW,IAG1C,IAAI,MAAM2oB,KAAYzzB,KAAKgxC,iBAAkB,CAC3C,GAAGhxC,KAAKixC,iBAAiBxd,GACvB,SAGF,MACMqd,EADO9wC,KAAKgxC,iBAAiBvd,GACbqd,SAEtB,IAAI,MAAMc,KAAWd,EAAU,CAC7B,MAAMe,EAAYf,EAASc,GAC3B5xC,KAAKmB,MAAM8b,YAAY40B,EAAWD,GAGpC5xC,KAAKixC,iBAAiBxd,IAAY,GAI/B0e,aAAa/J,GAMlB,IAAIgK,EACJ,GANApyC,KAAKkyC,eAEL9J,EAAIA,EAAEjsC,cAAcsB,QAAQ,KAAM,MAI7B6qC,OAAQ,CACX,MAAMlgC,EAAMpI,KAAKmB,MAAMjF,OAAOksC,GAC9BgK,EAAStxC,MAAMC,KAAKqH,GAAKiqC,QAAO,CAACC,EAAK5R,IAAM4R,EAAIpuC,OAAOw8B,IAAI,SAE3D0R,EAASpyC,KAAKmxC,OAAOa,OAAO9tC,OAAO6sC,GAAgBwB,eAAe3qC,MAAM,EA5KpD,IAwLtB,OATAwqC,EAAStxC,MAAMC,KAAK,IAAIqV,IAAIg8B,IASrBA,EAKFH,gBAAqCxyC,G,MAC1C,MAAMupB,EAAWhpB,KAAKoxC,wBACtB,OAAoB,QAApB,EAAOpoB,EAASvpB,UAAI,QAAbupB,EAASvpB,GAAUO,KAAKke,gBAAgB7W,WAAWrC,MAAMmC,IAC9D,IAAIgqC,EAA6B,GACjC,GAAY,WAAT1xC,EAAmB,CACpB,MAAM,YAAC+yC,GAAerrC,EACtBgqC,EAASrwC,MAAMmD,QAAQuuC,IAAgBA,EAAYr0C,OAASq0C,EAAczB,GAAgBwB,kBACrF,CACL,MAAM,kBAACE,GAAqBtrC,EAC5BgqC,EAASrwC,MAAMmD,QAAQwuC,IAAsBA,EAAkBt0C,OAASs0C,EAAoB,GAG9F,OAAOzyC,KAAKmxC,OAAO1xC,GAAQ0xC,KAIxBuB,gBAAgBC,GACrB,MAAMlzC,EAAkBkzC,EAAMl7B,MAAQ,SAAW,SACjDk7B,EAAMA,OAAQ,EAAAC,GAAA,GAASD,EAAMA,OAE7B3yC,KAAKiyC,gBAAgBxyC,GAAMuF,MAAMmsC,IAC/B,MAAMtrC,EAAI8sC,EAAMl7B,OAASk7B,EAAMA,OAC/B,EAAAlhC,EAAA,GAAiB0/B,EAAQtrC,GACzBsrC,EAAOltB,QAAQpe,GACfsrC,EAAOlnC,OArNa,GAqNaknC,EAAOhzC,OArNpB,IAuNpB6B,KAAKke,gBAAgBlW,YAAqB,WAATvI,EAAoB,oBAAsB,cAAe0xC,GAC1FnxC,KAAK4c,UAAUhW,cAAc,eAAgB+rC,MAI1Cn7B,wBAAwBq7B,GAC7B,OAAIA,EAAO10C,OACJ6B,KAAKgU,WAAWC,UAAU,mCAAoC,CAAC6+B,YAAaD,IAAS7tC,MAAM+tC,GACzFA,EAAU3uC,KAAKqmC,GACbzqC,KAAKgzC,eAAehI,QAAQP,EAAK,CACtChrC,KAAM,cACNgY,MAAOgzB,EAAInsC,SALSqD,QAAQM,QAAQ,IAWrCgxC,8BAA8BJ,GACnC,OAAOA,EAAOzuC,KAAKqT,GAAUzX,KAAKgzC,eAAe7F,OAAO11B,KAGlDy7B,uCACHlzC,KAAKmzC,gCAAmCnzC,KAAKqxC,+BAA+B59B,OAI/EzT,KAAKmzC,gCAAiC,EAAAjpC,EAAA,GAAM,GAAGlF,MAAK,KAClD,MAAMouC,EAAS,IAAIpzC,KAAKqxC,+BAA+Bh+B,QACjD2V,EAA2B,GACjC,EAAG,CACD,MAAMqqB,EAAMD,EAAOnpC,OAAO,EAAG,KACvBH,EAAU9J,KAAKwX,wBAAwB67B,GAAKruC,MAAMwlC,IACtDA,EAAKtnC,SAAQ,CAACunC,EAAKjmC,KACjB,MAAMiT,EAAQ47B,EAAI7uC,GACZrJ,EAAW6E,KAAKqxC,+BAA+B3sC,IAAI+S,GACzDzX,KAAKqxC,+BAA+BttC,OAAO0T,GAC3Ctc,EAAS8G,QAAQwoC,SAIrBzhB,EAAS1oB,KAAKwJ,SACRspC,EAAOj1C,QAEf,OAAOwD,QAAQ8Q,IAAIuW,MAClB0a,SAAQ,KACT1jC,KAAKmzC,oCAAiCroC,EACtC9K,KAAKkzC,0CAIFI,uBAAuBh1C,GAC5B,IAAIwL,EAAU9J,KAAKqxC,+BAA+B3sC,IAAIpG,GACtD,GAAGwL,EACD,OAAOA,EAIT,OADY9J,KAAKgzC,eAAe7F,OAAO7uC,KAKvCwL,GAAU,SACV9J,KAAKqxC,+BAA+BjpC,IAAI9J,EAAIwL,GAE5C9J,KAAKkzC,sCAEEppC,GAGFypC,kBACL,OAAOvzC,KAAKkX,mBAAmBs8B,oBAxRlB,GAAAjB,cAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,M,2SCIjO,MAAMkB,WAA6B3gC,EAS9B6J,QACR3c,KAAKG,KAAM,EAAAyI,EAAA,IAAO,eAElB5I,KAAK0zC,WAAa,IAAI9hC,IACtB5R,KAAK2zC,aAAe,IAAI/hC,IACxB5R,KAAK4zC,YAAc,IAAIhiC,IAEvB5R,KAAK6d,kBAAkBC,2BAA2B,CAChD+1B,gBAAkBx4B,IAChBrb,KAAK8zC,cAAcz4B,EAAOgb,KAAMhb,EAAO/B,UAGzCy6B,4BAA8B14B,IAC5Brb,KAAK8zC,cAAcz4B,EAAOgb,MAI1B,MAAM2d,EAAc34B,EAAOgb,KAAK/3B,GAChC0B,KAAKi0C,oBAAoBD,EAAa34B,EAAOs4B,iBAIjD3zC,KAAK4c,UAAUpW,iBAAiB,qBAAsB0tC,IACjC,uBAAhBA,EAAU71C,GACX2B,KAAK2zC,aAAa5vC,OAAOmwC,EAAU51C,OAKlC61C,sBAAsBH,GAC3B,IAAIL,EAAe3zC,KAAK2zC,aAAajvC,IAAIsvC,GAKzC,OAJIL,GACF3zC,KAAK2zC,aAAavrC,IAAI4rC,EAAaL,EAAe,IAAI/hC,KAGjD+hC,EAGDS,0BAA0BJ,GAChC,MAAMK,EAAiBr0C,KAAK4zC,YAQtBU,EAAaD,EAAe3vC,IAAIsvC,GACtC,MAAO,CACLM,WAAAA,EACAC,cATqBC,IAClBH,EAAe3vC,IAAIsvC,KAAiBM,GACrCD,EAAejsC,IAAI4rC,EAAaQ,KAW/BC,mBAAmBT,EAA0BpY,EAAmC8Y,GACrF,MAAMf,EAAe3zC,KAAKm0C,sBAAsBH,GAE1Ch9B,GAAS,EAAA8B,GAAA,GAAU8iB,EAAYngB,MAE/Bk5B,EAAiBhB,EAAajvC,IAAIsS,GAClC49B,EAAUhZ,EAAYh9B,OAAO+G,KACnC,IAAIgvC,GAAkBC,EACpB,OAIEhZ,EAAYh9B,OAAOi2C,OAAUjZ,EAAYh9B,OAAOk2C,kBAClDlZ,EAAYh9B,OAAOk2C,iBAAkB,GAGpCH,GACD78B,GAAkB68B,EAAgB/Y,GAClCA,EAAc+Y,GAEdhB,EAAavrC,IAAI4O,EAAQ4kB,GAI3B,MAAMsY,EAAYl0C,KAAK+0C,aAAaf,GACpC,GAAoB,eAAjBE,MAAAA,OAAS,EAATA,EAAW71C,GAAmB,CAC/B,IAAI22C,GAAW,EACZJ,KACCV,EAAUzb,mBACZuc,GAAW,IACHpZ,EAAYh9B,OAAOq2C,aAAgBN,GAAmB/Y,EAAYh9B,OAAOmyB,SAC/EmjB,EAAUzb,mBACZuc,GAAW,GAGVA,GACDh1C,KAAK4c,UAAUhW,cAAc,oBAAqBstC,GAKnDU,GACDjB,EAAa5vC,OAAOiT,GAIpBhX,KAAK4c,UAAUhW,cAAc,yBAA0B,CACrDotC,YAAAA,EACApY,YAAAA,IAKCqY,oBAAoBD,EAA0BkB,EAAyCR,GACxFQ,EAAwBpgB,QAC3BogB,EAAwBpgB,OAAQ,EACjCogB,EAAgBhyC,SAASkzB,GAAMp2B,KAAKy0C,mBAAmBT,EAAa5d,EAAGse,MAG5DS,gBAAgBnB,EAA0BpY,EAAmCx+B,G,0CAQxF4C,KAAKy0C,mBAAmBT,EAAapY,GAErC,MAAM5kB,EAAS4kB,EAAYh9B,OAAOmyB,KAAO,MAAe,EAAAjY,GAAA,GAAU8iB,EAAYngB,MACxEkL,QAAgB3mB,KAAKgU,WAAWqa,gBAAgB,iCAAkC,CACtFgI,KAAMr2B,KAAKo1C,kBAAkBpB,GAC7BpY,YAAa5kB,IAAW,KAAehX,KAAK0b,gBAAgB25B,mBAAqBr1C,KAAK0b,gBAAgB4R,iBAAiBtW,GACvH69B,MAAOz3C,EAAQy3C,MACfS,OAAQl4C,EAAQk4C,OAChBC,WAAYn4C,EAAQo4C,UACpBC,aAAcr4C,EAAQs4C,YACtBC,cAAev4C,EAAQw4C,aACvBC,oBAAqBz4C,EAAQ04C,qBAK/B91C,KAAK6d,kBAAkBkS,qBAAqBpJ,MAIvCouB,aAAaz2C,GAClB,OAAO0B,KAAK0zC,WAAWhvC,IAAIpG,GAGhBy3C,iBAAiBz3C,EAAiBsyB,G,0CAC7C,MAAMyF,EAAOr2B,KAAK+0C,aAAaz2C,GAC/B,GAAG+3B,GAAmB,mBAAXA,EAAKh4B,IAA2BuyB,EACzC,OAAOyF,EAGT,MAAMtN,EAAQ/oB,KAAKm0C,sBAAsB71C,GAAImV,KAAO,EApKzB,IAqK3B,OAAOzT,KAAKgU,WAAWspB,uBAAuB,CAC5Cr0B,OAAQ,qBACRoL,OAAQ,CACNgiB,KAAMr2B,KAAKo1C,kBAAkB92C,GAC7ByqB,MAAAA,GAEFwU,cAAgB2W,IAEdl0C,KAAK6c,gBAAgBoJ,aAAaiuB,EAAUh7B,OAC5ClZ,KAAK0d,gBAAgBwI,aAAaguB,EAAU/tB,OAC5CnmB,KAAKi0C,oBAAoB31C,EAAI41C,EAAUP,cAAc,GACrD,MAAMtd,EAAOr2B,KAAK8zC,cAAcI,EAAU7d,MAM1C,OAJGtN,QAAsCje,IAA7B9K,KAAK4zC,YAAYlvC,IAAIpG,IAC/B0B,KAAK4zC,YAAYxrC,IAAI9J,EAAI41C,EAAU8B,0BAG9B3f,QAKNyd,cAAczd,EAAmB9c,GACtC,MAAMgd,EAAUv2B,KAAK0zC,WAAWhvC,IAAI2xB,EAAK/3B,IACnC23C,EAA0B,mBAAX5f,EAAKh4B,KAA4Bk4B,GAAyB,uBAAdA,EAAQl4B,GAezE,OAdGk4B,GACE0f,GACDn+B,GAAkBye,EAASF,GAG7BA,EAAOE,GAEPv2B,KAAK0zC,WAAWtrC,IAAIiuB,EAAK/3B,GAAI+3B,GAG5B4f,GACDj2C,KAAK4c,UAAUhW,cAAc,oBAAqByvB,GAG7CA,EAGI6f,gBAAgB38B,EAAgB48B,EAAuB/rB,G,0CAClE,MAAMzD,QAAgB3mB,KAAKgU,WAAWC,UAAU,wBAAyB,CACvEwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiB/T,EAAO9S,UAAS,IAC5D4wB,WAAW,QAAe,IAC1B+e,cAAeD,EACf/rB,MAAAA,IAMF,OAHApqB,KAAK6d,kBAAkBkS,qBAAqBpJ,GAE5BA,EAA4BA,QAAQpjB,MAAM8X,GAAwB,oBAAbA,EAAOhd,IAC9Dg4B,QAGT+e,kBAAkB92C,GACvB,MAAM41C,EAAYl0C,KAAK+0C,aAAaz2C,GACpC,MAAO,CACLD,EAAG,iBACHC,GAAI41C,EAAU51C,GACdo4B,YAAawd,EAAUxd,aAqBd2f,yBAAyB/3C,G,0CACpC,MAAM,WAACg2C,EAAU,cAAEC,GAAiBv0C,KAAKo0C,0BAA0B91C,GAwBnE,MAtBkB,KAAfg2C,UACKt0C,KAAKgU,WAAWspB,uBAAuB,CAC3Cr0B,OAAQ,6BACRoL,OAAQ,CACNgiB,KAAMr2B,KAAKo1C,kBAAkB92C,GAC7B+0C,IAAK,GACLiD,QAAS,GACT3sB,OAAQ2qB,GAAc,GACtBvrB,MAlQqB,KAoQvBwU,cAAgBgZ,IACd,MAAM/B,EAAgB+B,EAAsBr7B,QAAUq7B,EAAsB5C,aAAax1C,OAAS,GAAKo4C,EAAsBC,YAE7Hx2C,KAAK0d,gBAAgBwI,aAAaqwB,EAAsBpwB,OACxDnmB,KAAK6c,gBAAgBoJ,aAAaswB,EAAsBr9B,OACxDlZ,KAAKi0C,oBAAoB31C,EAAIi4C,EAAsB5C,cAEnDY,EAAcC,OAKb,CACLb,aAAc3zC,KAAKm0C,sBAAsB71C,GACzC4pB,MAAoC,KAA7BloB,KAAK4zC,YAAYlvC,IAAIpG,OAIzBm4C,OAAOn4C,EAAiBo4C,GAC7B,MAAMC,EAAiB32C,KAAKo1C,kBAAkB92C,GAC9C,IAAIwL,EAuBJ,OArBEA,EADqB,kBAAd,GAA2B4sC,EACxB12C,KAAKgU,WAAWC,UAAU,yBAA0B,CAC5DoiB,KAAMsgB,IAEoB,iBAAd,EACJ32C,KAAKgU,WAAWC,UAAU,uBAAwB,CAC1DoiB,KAAMsgB,EACNC,OAAQF,IAGA12C,KAAKgU,WAAWC,UAAU,sBAAuB,CACzDoiB,KAAMsgB,EACNE,QAAS72C,KAAK0b,gBAAgB25B,mBAC9BR,OAAO,EACPc,eAAe,EACfthC,OAAQ,CACNhW,EAAG,WACHoM,KAAM,MAKLX,EAAQ9E,MAAM2hB,IACnB3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAInCmwB,cAAc9C,EAA0B3/B,EAAkBjX,G,0CACrE,MAAMu5C,EAAiB32C,KAAKo1C,kBAAkBpB,GAC9C,IAAIlqC,EACJ,GAAoB,SAAjB1M,EAAQqC,KAAiB,CAC1B,MAAM+B,EAA8B,CAClC60B,KAAMsgB,EACNE,QAAS72C,KAAK0b,gBAAgB25B,mBAC9BhhC,OAAAA,EACAwgC,MAAOz3C,EAAQ25C,QACfpB,eAAgBv4C,EAAQ45C,WAG1BltC,EAAU9J,KAAKgU,WAAWC,UAAU,sBAAuBzS,GAC3DxB,KAAKG,IAAI,0BAA0B6zC,IAAexyC,OAC7C,CACL,MAAMA,EAA0C,CAC9C60B,KAAMsgB,EACNtiC,OAAAA,GAGFvK,EAAU9J,KAAKgU,WAAWC,UAAU,kCAAmCzS,GACvExB,KAAKG,IAAI,sCAAsC6zC,IAAexyC,GAGhE,MAAMmlB,QAAgB7c,EAItB,OAHA9J,KAAK6d,kBAAkBkS,qBAAqBpJ,GAE5BA,EAA4BA,QAAQpjB,MAAM8X,GAAwB,8BAAbA,EAAOhd,OAIvE44C,2BAA2BjD,GAChC,OAAOh0C,KAAKgU,WAAWC,UAAU,mCAAoC,CACnEoiB,KAAMr2B,KAAKo1C,kBAAkBpB,KAC5BhvC,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,OCnXnC,SAASuwB,GAAcliB,GACpC,MAAO,CACL32B,EAAG,aACHC,GAAI02B,EAAM12B,GACVo4B,YAAa1B,EAAM0B,YACnBwU,eAAgBlW,EAAMkW,gBCJX,SAASiM,GAAmBniB,GACzC,MAAO,CACL32B,EAAG,kBACHC,GAAI44C,GAAcliB,GAClBoiB,YAAa,G,cCNF,SAASC,GAAc5M,GACpC,MAAO,CACLpsC,EAAG,qBACHC,GAAI,CACFD,EAAG,gBACHC,GAAImsC,EAAInsC,GACRo4B,YAAa+T,EAAI/T,YACjBwU,eAAgBT,EAAIS,gBAEtBkM,YAAa,GCMV,MAAME,WAA6BxkC,EAA1C,c,oBACU,KAAAykC,cAAgE,GAChE,KAAAC,QAKJ,GAEGC,YAAYC,GACjB,MAAiB,aAAVA,EAAIr5C,EAAmB,CAC5BA,EAAG,gBACHs5C,IAAKD,EAAIC,IACTC,KAAMF,EAAIE,KACVC,gBAAiBH,EAAIG,iBACnB,CACFx5C,EAAG,sBAIAy5C,iBAAiB9gC,EAAgB+gC,EAAc98B,EAAQ,GAAI0O,EAAS,GAAI+tB,GAC7E,OAAO13C,KAAKgU,WAAWC,UAAU,+BAAgC,CAC/D+jC,IAAKh4C,KAAK6c,gBAAgBua,aAAa2gB,GACvCt8B,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CiE,MAAAA,EACAg9B,UAAWP,EAAM13C,KAAKy3C,YAAYC,QAAO5sC,EACzC6e,OAAAA,GACC,CAAmBuuB,UAAW,EAAGxkB,YAAY,IAAO1uB,MAAMmzC,IAC3D,MAAMC,EAAUD,EAAWE,SAoB3B,OAdAF,EAAW9yC,QAAQnC,SAASd,IACV,yBAAbA,EAAO/D,IACL+D,EAAOo/B,WACRp/B,EAAOo/B,SAAWxhC,KAAKgzC,eAAehI,QAAQ5oC,EAAOo/B,WAGpDp/B,EAAO4yB,QACR5yB,EAAO4yB,MAAQh1B,KAAKs4C,iBAAiBC,UAAUn2C,EAAO4yB,SAI1Dh1B,KAAKu3C,eAAc,EAAAiB,GAAA,GAAYJ,EAASh2C,EAAO9D,KAAO8D,KAGjD+1C,KAIHM,eAAeV,GACrB/3C,KAAK6c,gBAAgB67B,YAAY,eAAe1zC,MAAM2zC,IACpD,MAAMC,EAAYb,EAAMtxC,WAClBtF,EAAQw3C,EAASr4B,WAAWu4B,GAAYA,EAAQv6C,KAAOs6C,IAC7D,IAAIC,EAEFA,GADY,IAAX13C,EACSw3C,EAASx3C,GAET,CACR7C,GAAIs6C,EACJE,OAAQ,KAIVD,EAAQC,QACV,EAAAr2B,GAAA,GAA2Bk2B,EAAUE,EAAS,UAE9C74C,KAAKke,gBAAgB/V,qBAAqB,oBAMvC4wC,WAAWC,EAAoBjB,EAAckB,GAElD,OADAj5C,KAAKw3C,QAAQO,GAAS,CAAC/gC,OAAQgiC,EAAYtqC,KAAMC,KAAK5J,OAC/C/E,KAAK8W,mBAAmBoiC,SAASnB,OAAOjtC,EAAWmuC,GA8G/CE,kBAAkBpB,G,qCAC7B,MAAMC,EAAMh4C,KAAK6c,gBAAgBu8B,QAAQrB,GACzC,IAAIC,IAAQA,EAAIp5C,OAAOo5C,MAAQA,EAAIqB,uBACjC,OAGF,MAAMC,EAAWt5C,KAAKw3C,QAAQO,GAC9B,OAAGuB,WACMt5C,KAAKw3C,QAAQO,GAChBppC,KAAK5J,MAAQu0C,EAAS5qC,KAAQ,MACzB4qC,EAAStiC,YAHpB,G,+RAQKuiC,kBAAkBviC,EAAgBo4B,EAAkB2I,EAAc98B,GACvEjb,KAAKwe,iBAAiBoyB,SAAS55B,EAAQo4B,EAAU,IAAMpvC,KAAK6c,gBAAgBu8B,QAAQrB,GAAO5c,SAAW,IAAMlgB,GAGvGu+B,oBAAoBxiC,EAAgB0N,EAAa+0B,GACtD,OAAOz5C,KAAKgU,WAAWC,UAAU,gCAAiC,CAChEwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C0iC,QAAQ,EAAA/6B,GAAA,GAAmB+F,GAC3Bja,KAAMgvC,EAAOhvC,MACZ,CAAmBytC,UAAW,EAAGxkB,YAAY,IAqB3CimB,iBAAiB3iC,EAAgB+gC,EAAc6B,EAA2Bx8C,EAY5E,IACH,MAAMy8C,EAAe75C,KAAKu3C,cAAcqC,GACxC,IAAIC,EACF,OAGF75C,KAAKy4C,eAAeV,GACpB,MAAMtwC,EAAWmyC,EAAkBlyC,MAAM,KACnCoyC,EAAUryC,EAAS6G,QACnByrC,EAAWtyC,EAAS/I,KAAK,KAQ/B,GAPAtB,EAAQgb,SAAW2/B,EACnB36C,EAAQg7C,QAAU0B,EAClB18C,EAAQ48C,SAAWD,EAChBF,EAAaI,aAAaC,eAC3B98C,EAAQ+8C,YAAcN,EAAaI,aAAaC,cAGf,yBAAhCL,EAAaI,aAAa57C,EAC3BjB,EAAQszB,SAAWmpB,EAAaI,aAAavpB,SAC7C1wB,KAAK8W,mBAAmBsjC,SAASpjC,EAAQ6iC,EAAaI,aAAap4C,QAASzE,OACvE,CACL,IACIi9C,EAA4DC,EAD5DC,EAAU,GAEd,MAAMC,EAAcX,EAAaI,aACjC,OAAOO,EAAYn8C,GACjB,IAAK,4BAGH,GAFAk8C,EAAUC,EAAY34C,QAEA,yBAAnBg4C,EAAax7C,EAA8B,CAC5C,MAAM,SAACmjC,EAAQ,MAAExM,GAAS6kB,EAExBQ,EADC7Y,EACY,GAAsBA,GAEtB2V,GAAmBniB,GAIpC,MAGF,IAAK,2BACHqlB,EAAa,CACXh8C,EAAG,qBACH45C,UAAWj4C,KAAKy3C,YAAY+C,EAAY9C,MAG1Ct6C,EAAQq9C,SAAWD,EAAY9C,IAE/B,MAGF,IAAK,6BACH2C,EAAa,CACXh8C,EAAG,kBACH45C,UAAWj4C,KAAKy3C,YAAY+C,EAAY9C,KACxCttB,MAAOowB,EAAYpwB,MACnBswB,QAASF,EAAYE,QACrBC,SAAUH,EAAYG,SACtBC,SAAUJ,EAAYI,SACtBC,WAAYL,EAAYK,YAG1Bz9C,EAAQq9C,SAAWD,EAAY9C,IAE/B,MAGF,IAAK,+BACH2C,EAAa,CACXh8C,EAAG,oBACHy8C,aAAcN,EAAYM,aAC1BC,WAAYP,EAAYO,WACxBC,UAAWR,EAAYQ,UACvBC,MAAOT,EAAYS,OAGrB,MAGF,IAAK,+BAoBHX,EAAe,CACbj8C,EAAG,sBACH+rB,MAAOowB,EAAYpwB,MACnB8wB,YAAaV,EAAYU,YACzBlmB,MAAOwlB,EAAYxlB,MACnBmmB,SAAUX,EAAYW,SACtBC,aAAcZ,EAAYY,aAC1Bx8C,OAAQ,CACNy8C,2BAA4Bb,EAAY57C,OAAOy8C,2BAC/Ch/C,KAAMm+C,EAAY57C,OAAOvC,MAE3Bi/C,iBAAaxwC,IAOfuvC,GAAcC,IAChBD,EAAa,CACXh8C,EAAG,sBACHi8C,aAAAA,IAIJt6C,KAAK8W,mBAAmBykC,UAAUvkC,EAAQqjC,EAAYj9C,K,eC9XrD,MAAMo+C,GAAb,cACU,KAAAC,QAAU,EAEXv0B,sBAAsB/Y,GAC3B,MAAMutC,IAAQ17C,KAAKy7C,QACnB,OAAO,EAAAz0B,GAAA,GAAkB7Y,IAAcutC,EAAO,KAAuB,I,eCEzE,MAUMC,IAAmB,EAAA9jC,EAAA,GAAU,cAI5B,MAAM+jC,GAAb,cACU,KAAAC,QAXL,CACHC,SAAS,EACTC,MAAO,GACPC,iBAAkB,IASV,KAAAC,mBAAqC,GAgDtC,KAAAC,UAAat3C,IAClB,GAAG5E,KAAK0J,UAAW,OAAO9E,IAC1B5E,KAAKi8C,mBAAmB37C,KAAKsE,IA9CxBu3C,QACL,MAAMN,EAAU77C,KAAK67C,QACrBA,EAAQC,SAAU,EAClBD,EAAQE,MAAM9xC,OAAO,EAAG4xC,EAAQE,MAAM59C,QAAQ+E,SAASk5C,GAAWA,EAAOzyC,YACzEkyC,EAAQG,iBAAiB/xC,OAAO,EAAG4xC,EAAQG,iBAAiB79C,QAAQ+E,SAAS0B,GAAaA,MAC1F5E,KAAK67C,QArBJ,CACHC,SAAS,EACTC,MAAO,GACPC,iBAAkB,IAqBXryC,UACL3J,KAAK0J,WAAY,EACjB1J,KAAKm8C,QACLn8C,KAAKi8C,mBAAmBhyC,OAAO,EAAGjK,KAAKi8C,mBAAmB99C,QAAQ+E,SAAS0B,GAAaA,MAErF5E,KAAKq8C,UACN,EAAA5qC,EAAA,GAAiBzR,KAAKq8C,OAAOR,QAAQE,MAAO/7C,MAC5CA,KAAKq8C,YAASvxC,GAIXpG,IAAI43C,GACT,MAAMT,EAAU77C,KAAK67C,QAEfU,EAAyB,KACrBV,EAAQC,WAAaQ,GAAsBA,KAkBrD,OAfAC,EAAWz4C,OAAS,KAClB,IAAIy4C,IAAc,MAAMZ,GACxB,MAAMS,EAAS,IAAIR,GAGnB,OAFAQ,EAAOC,OAASr8C,KAChB67C,EAAQE,MAAMz7C,KAAK87C,GACZA,GAGTG,EAAWC,QAAW53C,IACpB,IAAI23C,IAAc,OAAO33C,IACzBi3C,EAAQG,iBAAiB17C,KAAKsE,IAGhC23C,EAAWL,UAAYl8C,KAAKk8C,UAErBK,G,eC7EI,SAASE,GAAoBr+C,EAAas+C,GACvD,GAAGt+C,EAAID,OAASu+C,EAAW,MAAO,CAACt+C,GACnC,IAAID,EAAS,EAAGw+C,EAAsB,EAAGC,EAAa,EACtD,MACM7iC,EAAgB,GAEhB8iC,EAAOC,IACX,IAAIC,EAAO3+C,EAAIwJ,MAAM+0C,EAAqBG,GAC1C,MAAME,EAAcJ,IACjBG,EAAK5+C,OAASu+C,IAEED,GADIM,EAAKn1C,MAAM80C,GACmBA,GAC1Cx5C,SAAS65C,IAChBhjC,EAAI6iC,KAAgBG,KAGtBA,EAAOA,EAAKn1C,MAAM,EAAG80C,IAGvBC,EAAsBG,EACtB3+C,EAAS,EACT4b,EAAIijC,IAAgBjjC,EAAIijC,IAAgB,IAAMD,GAGhD,IAAI7a,EAAY,EAChB,OAAG,CACD,IAAI/gC,EAAQ/C,EAAIhC,QAvBA,IAuBmB8lC,GACnC,IAAc,IAAX/gC,EAAc,CACZ+gC,IAAe9jC,EAAID,OAAS,GAC7B0+C,IAGF,MAGF17C,GAhCgB,IAgCGhD,OAEnB,MAAM8+C,EAAa97C,EAAQ+gC,EACvB/jC,EAAS8+C,EAAcP,GACzBG,EAAI1+C,GAGN+jC,EAAY/gC,EACZhD,GAAU8+C,EAGZ,OAAOljC,E,gFCGT,MAAMmjC,GAAiB,IAlChB,MAGLp9C,cACEE,KAAKm9C,KAAO,IAAIvrC,IAGXwrC,QACQ,kBAER52C,iBAAiB,YAAY,CAACW,EAAOyvC,KAC5B52C,KAAKm9C,KAAKz4C,IAAIkyC,GACtBzvC,MAAQA,KAITk2C,UACL,MAAO,IAAIr9C,KAAKm9C,KAAKzmC,UAAUlY,QAAQ8+C,KAAUA,EAAIn2C,QAGhDo2C,OAAO3G,GACZ,MAAM0G,EAAW,CACf1G,OAAAA,EACAzvC,WAAO2D,GAGT9K,KAAKm9C,KAAK/0C,IAAIwuC,EAAQ0G,GAGjBE,UAAU5G,GACf52C,KAAKm9C,KAAKp5C,OAAO6yC,KAKrB,OAAmB,oBAAgCsG,IACnD,Y,wBChDe,SAASO,GAAiBhT,GACvC,MAAO,CACLpsC,EAAG,gBACHC,GAAImsC,EAAInsC,GACRo4B,YAAa+T,EAAI/T,YACjBwU,eAAgBT,EAAIS,gB,sTC6DxB,MAwEMwS,GAAgBC,IAEpBA,KAGIC,IAA0B,EAEzB,MAAMC,WAA2B/qC,EAAxC,c,oBA2BU,KAAAgrC,kBAEJ,GACI,KAAAC,mBAA4C,GAC5C,KAAAC,iBAAwD,GACzD,KAAAx3B,eAA6C,GAC5C,KAAAy3B,sBAOJ,GAEI,KAAAC,sBAAwB,IAAI,KAAkB,IAE9C,KAAAC,mBAA6G,IAAIvsC,IACjH,KAAAwsC,2BAA4C,KAC5C,KAAAC,cAAoE,IAAIzsC,IAExE,KAAA0sC,UAAY,EAEb,KAAA52B,eAA6C,GAC7C,KAAAC,eAA6C,GAG5C,KAAA42B,mBAA0C,IAAI3sC,IAC/C,KAAAgV,8BAAiE,GAEhE,KAAA43B,2BAA6B,EAC7B,KAAAC,sBAIH,GAGG,KAAAC,yBAAiH,IAAI9sC,IAEtH,KAAAzR,KAAM,EAAAyI,EAAA,IAAO,WAAY,WAAiB,WAAiB,KAAAD,IAAe,WAEzE,KAAAg2C,cAAgB,EAEhB,KAAAC,QAA6E,GAI7E,KAAAC,eAA0D,GAC1D,KAAAC,wBAA+D,GAE/D,KAAAC,aAKJ,GA2JG,KAAA16C,MAASsH,IACX3L,KAAKu8C,WACNv8C,KAAKu8C,WAAWJ,SAEhBn8C,KAAKu8C,WJ9SF,IAAIX,GI+SP57C,KAAKg/C,mBAAqB,IAG5Bh/C,KAAKi/C,wBAA0B,GAC/Bj/C,KAAKk/C,uBAAyB,GAC9Bl/C,KAAKm/C,yBAA2B,GAChCn/C,KAAKo/C,iBAAmB,GACxBp/C,KAAKq/C,eAAiB,GACtBr/C,KAAKs/C,gBAAkB,GACvBt/C,KAAKu/C,eAAiB,GACtBv/C,KAAKw/C,iCAAmC,GACxCx/C,KAAKy/C,iBAAmB,GAExBz/C,KAAK4oB,gBAAkB5oB,KAAK4oB,eAAevkB,MAAMsH,GACjD3L,KAAKwgB,gBAAkBxgB,KAAKwgB,eAAenc,MAAMsH,IAymG3C,KAAA+zC,iBAAmB,KACzB,IAAIC,EAAe,EACnB,MAAMv7C,EAAMpE,KAAKu+C,mBACjB,IAAI,MAAOvnC,EAAQkD,KAAW9V,EAAK,CACjC,IAAIs1B,GAAO,EACPxf,EAEMla,KAAK4oB,eAAe1M,cAAclF,KAC1ChX,KAAK4oB,eAAe7M,WAAW7B,GAC3Bla,KAAK0b,gBAAgBmI,UAAU7M,KACjC2oC,EAAepgC,KAAK8D,IAAIs8B,EAAczlC,EAAOwE,aAAe,IAG9Dgb,GAAO,GAPP15B,KAAKgf,mBAAmBhI,EAAOvQ,YAU7BizB,GACFt1B,EAAIL,OAAOiT,GAMK,IAAjB2oC,GACD3/C,KAAK4/C,mBAAmBD,GAG1B3/C,KAAK4c,UAAUhW,cAAc,sBAAuBxC,GACpDpE,KAAKu+C,mBAAmBl6C,SAmXlB,KAAAw7C,oBAAsB,KAC5B7wC,EAAA,eAAiBhP,KAAKw+C,4BACtBx+C,KAAKw+C,2BAA6B,EAKlC,IAAI,MAAMsB,KAAW9/C,KAAKy+C,sBAAuB,CAC/C,MAAMznC,EAAS8oC,EAAQr5C,WAKjBs5C,EAAqB//C,KAAKy+C,sBAAsBznC,GACtDhX,KAAKggD,sBAAsBhpC,GAAQhS,MAAK,EAAE6vC,MAAAA,EAAOoL,uBAAAA,MAC/C,MAAMrhC,EAAamhC,EAAmBnhC,WAClCi2B,IAAUj2B,EAAWhgB,OAAOshD,YAAethC,EAAWhgB,OAAOopB,QAK9DpJ,EAAWhgB,OAAOopB,QACnBhoB,KAAKmgD,mBAAmBvhC,EAAY,CAClCwhC,SAAUL,EAAmBK,SAC7BH,uBAAAA,OAORjgD,KAAKy+C,sBAAwB,IAGvB,KAAA4B,kBAAqBhlC,IAC3B,MAAM6iB,EAAW7iB,EAAOgc,UAClBipB,EAActgD,KAAK89C,kBAAkB5f,GAE3C,GAAGoiB,EAAa,CACd,MAAM,OAACtpC,EAAM,OAAEupC,EAAM,SAAEnR,EAAQ,QAAE1rC,GAAW48C,EACtC57B,GAAM,EAAAsC,GAAA,GAAkB3L,EAAO/c,IAC/BuD,EAAU7B,KAAK2kB,sBAAsBjhB,EAASghB,GACjD7iB,GACD,CAAC7B,KAAKqkB,kBAAkBrN,GAASo4B,EAAWpvC,KAAKqkB,kBAAkBrN,EAAQo4B,QAAYtkC,GACtFtM,OAAOC,SACPyE,SAASQ,IACRA,EAAQ8gB,QAAQzgB,OAAOw8C,MAGzBvgD,KAAKwgD,gCAAgC98C,EAAS68C,EAAQ1+C,IAEtD7B,KAAK+9C,mBAAmBr5B,GAAOwZ,IAK7B,KAAAuiB,mBAAsBplC,I,MAC5B,MAAMxZ,EAAUwZ,EAAOxZ,QACjBmV,EAAShX,KAAK0gD,eAAe7+C,GAC7B6B,EAAU1D,KAAKukB,0BAA0BvN,GACzCkD,EAASla,KAAKkc,cAAclF,GAG5B2pC,EAAmC,+BAAbtlC,EAAOhd,EAGnC2B,KAAK6e,aAAa,CAAChd,GAAU,CAAC6B,QAAS1D,KAAK4gD,qBAAqB5pC,EAAQ,aAEzE,MAAM6pC,EAAY7gD,KAAK8gD,aAAaj/C,GAC9ButC,EAAWyR,GAAaA,EAAUn5C,MAAM,KAAK,QAAKoD,EACxD,GAAGskC,IAAauR,GAAuB3gD,KAAKq/C,eAAeroC,IAAWhX,KAAKq/C,eAAeroC,GAAQo4B,GAAW,CAC3G,MAAM/zB,EAAS,CACbhd,EAAG,6BACHwD,QAAAA,GAGF7B,KAAKygD,mBAAmBplC,GAW1B,GARiB,mBAAdxZ,EAAQxD,GAA+C,6BAArBwD,EAAQmX,OAAO3a,GAAoCwD,EAAQ4uB,UAC9FzwB,KAAK4c,UAAUhW,cAAc,eAAgB,CAC3CoQ,OAAQnV,EAAQ4uB,SAASswB,iBAAmB/gD,KAAK0b,gBAAgB5C,UAAUjX,EAAQ4uB,SAASswB,kBAAoBl/C,EAAQmV,OACxH0N,IAAK7iB,EAAQm/C,aACbC,eAAgBp/C,KAIhBqY,IAAWymC,EAAqB,CAClC,IAAIjnB,GAAO,EAKX,GAJG1iB,EAAO+N,cACR2U,EAAO15B,KAAK0d,gBAAgB+b,SAASziB,EAAO8M,aAG3C4V,EAAM,CACP,MAAMtxB,EAAgD,QAA1C,EAAApI,KAAK4mB,8BAA8B5P,UAAO,QAAKhX,KAAK4mB,8BAA8B5P,GAAU,IAAIZ,IAC5G,GAAGhO,EAAIohB,IAAInO,GAET,YADArb,KAAKG,IAAIb,MAAM,mBAAoB0X,GAIpCqE,EAAe6lC,gBAAiB,EACjC94C,EAAImO,IAAI8E,GACRrb,KAAKgc,yBAAyBhF,GAGhC,OAUFhX,KAAK6e,aAAa,CAAChd,GAAU,CAAC6B,QAAAA,IAOP1D,KAAKmhD,oBAAoBt/C,GAAhD,MACMuiB,EAAiBpkB,KAAKqkB,kBAAkBrN,EAAQ2pC,EAAsBvR,OAAWtkC,GAEnF61C,GACF3gD,KAAKohD,6BAA6Bv/C,GAIpC,MAAMq/C,EAA2B7lC,EAAe6lC,eAEhD,GADqB98B,EAAeI,QAAQ68B,UAAUx/C,EAAQ6iB,MAE5D,IAAIw8B,EACF,OAAO,MAEJ,CAEL,MAAMI,EAAal9B,EAAeI,QAAQzc,MAC1C,GAAGu5C,EAAWp5B,MAAM,aAAkB,CACpC,IAAIriB,EAAI,EACR,IAAI,MAAM1H,EAASmjD,EAAWnjD,OAAQ0H,EAAI1H,KACrC0D,EAAQ6iB,IAAM48B,EAAWz7C,MADsBA,GAMpDy7C,EAAWr3C,OAAOpE,EAAG,EAAGhE,EAAQ6iB,UAEhCN,EAAeI,QAAQP,QAAQpiB,EAAQ6iB,KAGb,OAAzBN,EAAelJ,OAChBkJ,EAAelJ,QAIhBlb,KAAKqoB,mBAAmBjE,EAAgBviB,IACzC7B,KAAK4c,UAAUhW,cAAc,uBAAwB,CAACoQ,OAAAA,IAGxD,MAAMmB,EAAStW,EAAQsW,OACvB,GAAGA,EAAOkb,WAAaxxB,EAAQjD,OAAOmb,KAAOlY,EAAQslB,QAAS,CAC5DnnB,KAAK6c,gBAAgB0kC,gBAAgBppC,EAAQtW,EAAQggB,MAErD,MAAM7I,EAA4B,CAChC3a,EAAG,2BAGL,IAAIgd,EAEFA,EADCrE,EAAOqc,SACC,CACPh1B,EAAG,mBACH2a,OAAAA,EACAR,QAASL,GAEHnY,KAAK0b,gBAAgBmI,UAAU7M,GAC9B,CACP3Y,EAAG,0BACH2a,OAAAA,EACAK,WAAYrC,EAAO8M,WACnBqD,QAASnnB,KAAK0b,gBAAgB0L,cAAcjP,GAC5CqpC,WAAYpS,GAAW,EAAAzwB,GAAA,GAAmBywB,QAAYtkC,GAG/C,CACPzM,EAAG,uBACH2a,OAAAA,EACAM,QAAStC,EAAO8M,WAChBqD,QAASnnB,KAAK0b,gBAAgB0L,cAAcjP,IAIhDnY,KAAK6d,kBAAkBiU,mBAAmBzW,GAQ5C,GAHArb,KAAKyhD,iBAAiB5/C,GAGnB8+C,EACD,OAGF,MAAMe,GAAe7/C,EAAQjD,OAAOmb,KAAOlY,EAAQjD,OAAOopB,OAC1D,GAAG9N,EAAQ,CACT,GAAGwnC,GAAe7/C,EAAQ6iB,IAAMxK,EAAOwE,YAAa,CAClD,MAAMiK,EAAqB3oB,KAAK4oB,eAAepL,kCAAkCtD,KAE/EA,EAAO+N,aACNpmB,EAAQjD,OAAOshD,cACdhmC,EAAOqS,sBACTvsB,KAAK2hD,qBAAqB3qC,EAAQnV,EAAQ6iB,KAAK,IAGjDiE,IAGC9mB,EAAQ6iB,KAAOxK,EAAOwE,aACvB1e,KAAK4hD,oBAAoB//C,EAASqY,GAItC,GAAGwnC,EAAsF,CACvF,MAAMG,EAAa7qC,EACnB,IAAI+oC,EAAqB//C,KAAKy+C,sBAAsBoD,QAC1B/2C,IAAvBi1C,IACDA,EAAqB//C,KAAKy+C,sBAAsBoD,GAAc,CAC5DzB,SAAU,EACVjoC,OAAQ,OAIT4nC,EAAmB5nC,SAAWA,IAC/B4nC,EAAmB5nC,OAASA,EAC5B4nC,EAAmBK,SAAW,GAG5Bv+C,EAA4B2uB,YAC5BuvB,EAAmBK,SAGvBL,EAAmBnhC,WAAa/c,EAE5B7B,KAAKw+C,6BACPx+C,KAAKw+C,2BAA6BxvC,EAAA,aAAehP,KAAK6/C,oBAAqB,MAKzE,KAAAiC,yBAA4BzmC,IAClC,MAAM,KAACI,EAAI,OAAEi+B,EAAM,UAAE5c,GAAazhB,EAC5BqJ,GAAM,EAAAsC,GAAA,GAAkB0yB,GACxB1iC,EAAShX,KAAK0b,gBAAgB5C,UAAU2C,GACxC5Z,EAAqB7B,KAAK+e,iBAAiB/H,EAAQ0N,GAEzD,GAAkB,aAAf7iB,MAAAA,OAAO,EAAPA,EAASxD,GACV,OAGF,MAAMsa,EAAkBmkB,MAAAA,OAAS,EAATA,EAAWlkB,iBACnC,IAAGD,MAAAA,OAAe,EAAfA,EAAiBxa,SAAU0D,EAAQjD,OAAOmb,IAAK,CAChD,MAAMgoC,EAAiBppC,EAAgBA,EAAgBxa,OAAS,GAC1D6jD,EAAoBngD,EAAQi7B,UAC5BmlB,EAA0BD,MAAAA,OAAiB,EAAjBA,EAAmBppC,iBAEjD5Y,KAAK0b,gBAAgB5C,UAAUipC,EAAehpC,WAAa/Y,KAAK0b,gBAAgB1E,QAC7EirC,KACDA,EAAwB9jD,QAAUwa,EAAgBxa,SAEjD8jD,IACA,EAAA3rC,EAAA,GAAUyrC,EAAgBE,EAAwBA,EAAwB9jD,OAAS,KAGtF6B,KAAKggD,sBAAsBhpC,GAAQhS,MAAK,EAAE6vC,MAAAA,EAAOoL,uBAAAA,MAC5BA,EAAuBiC,eAC1CliD,KAAKmgD,mBAAmBt+C,EAAS,CAC/BsgD,aAAcJ,EACd9B,uBAAAA,OAMR,MAAM14C,EAAM1F,EAAQmV,OAAS,IAAMnV,EAAQ6iB,IAC3C1kB,KAAKoiD,gBAAgB,qBAAsBpiD,KAAKqiD,qBAAsB96C,GAAK,KAAM,EAAA8jB,GAAA,GAAKxpB,EAAQi7B,aAE9Fj7B,EAAQi7B,UAAYA,EAEhBzhB,EAAO8kB,OACTngC,KAAKsiD,+BAA+BzgD,IAIhC,KAAA0gD,yBAA4BlnC,IAElC,MAAMrE,EAAShX,KAAK0b,gBAAgB5C,UAAWuC,EAAOI,KAA+BA,MAC/EvB,EAASla,KAAKkc,cAAclF,GAElC,GAAIkD,EAEG,CACL,MAAMyO,EAAqB3oB,KAAK4oB,eAAepL,kCAAkCtD,GAE7EmB,EAAOzc,OAAOopB,OAGhB9N,EAAOtb,OAAO4jD,aAAc,SAFrBtoC,EAAOtb,OAAO4jD,YAKvB75B,IACA3oB,KAAK4oB,eAAe1E,iBAAiBhK,GACrCla,KAAK4c,UAAUhW,cAAc,sBAAuB,IAAIgL,IAAI,CAAC,CAACoF,EAAQkD,WAZtEla,KAAKgc,yBAAyBhF,IAgB1B,KAAAyrC,oBAAuBpnC,IAC7B,MAAMxZ,EAAUwZ,EAAOxZ,QACjBmV,EAAShX,KAAK0gD,eAAe7+C,GAC7B6iB,GAAM,EAAAsC,GAAA,GAAkBnlB,EAAQvD,IAChCoF,EAAU1D,KAAKukB,0BAA0BvN,GAC/C,IAAItT,EAAQ8lB,IAAI9E,GAEd,OAKF,MAAMg+B,EAAsB1iD,KAAK2kB,sBAAsBjhB,EAASghB,GAChE1kB,KAAK6e,aAAa,CAAChd,GAAU,CAAC6B,QAAAA,IAC9B,MAAMi/C,EAAsB3iD,KAAK2kB,sBAAsBjhB,EAASghB,GAEhE1kB,KAAK4iD,oBAAoBF,EAAYC,EAAYj/C,GAEjD,MAAMwW,EAASla,KAAKkc,cAAclF,GAQ5B6rC,EAAe3oC,GAAUA,EAAOwE,cAAgBgG,EACtD,GAAI7iB,EAAmCihD,cAClCD,GACD7iD,KAAK4c,UAAUhW,cAAc,eAAgB,CAACoQ,OAAAA,EAAQkD,OAAAA,QAEnD,CACL,IAAI6oC,GAAoB,EAExB,GAAqB,aAAlBL,MAAAA,OAAU,EAAVA,EAAYrkD,MAAoB,EAAAiY,EAAA,GAAUosC,EAAW5lB,UAAY6lB,EAA+B7lB,WAAY,CAC7G,MAAMkmB,EAAgBL,EAA+B7lB,UACpD6lB,EAA+B7lB,UAAY4lB,EAAW5lB,UACvD98B,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,yBACHod,KAAMzb,KAAK0b,gBAAgB0L,cAAcpQ,GACzC0iC,OAAQ73C,EAAQvD,GAChBw+B,UAAWkmB,IAGbD,GAAoB,EAGtBA,GAAqB/iD,KAAK4c,UAAUhW,cAAc,eAAgB,CAChE2qC,WAAY7tC,EAAQ6D,IACpByP,OAAAA,EACA0N,IAAAA,EACA7iB,QAAAA,IAGCghD,GACD7iD,KAAK4oB,eAAe1E,iBAAiBhK,IAGnC2oC,GAAiBhhD,EAA4BohD,aAAe/oC,GAC9Dla,KAAK4c,UAAUhW,cAAc,sBAAuB,IAAIgL,IAAI,CAAC,CAACoF,EAAQkD,QAKpE,KAAAgpC,oBAAuB7nC,IAG7B,MAAMuI,EAAavI,EAAyChC,WACtDqN,GAAQ,EAAAM,GAAA,GAAmB3L,EAAyC8nC,QAAW9nC,EAAmD+nC,aAClIhU,GAAW,EAAApoB,GAAA,GAAmB3L,EAAmDmmC,YACjFxqC,EAAS4M,EAAYA,EAAUnd,UAAS,GAAQzG,KAAK0b,gBAAgB5C,UAAWuC,EAAyCI,MAEzHsM,EAAqB,4BAAb1M,EAAOhd,GAAgD,4BAAbgd,EAAOhd,GAAgD,sCAAbgd,EAAOhd,QAAmDyM,EAEtJpH,EAAU1D,KAAKukB,0BAA0BvN,GACzCwN,GAAU,EAAA6+B,GAAA,GAAqB3/C,EAAS,QACxC+hB,EAAczlB,KAAKkc,cAAclF,GACjCssC,EAAoBjoC,EAAyCkoC,mBACnE,IAAIxgC,EAAiB,EACjBygC,EAAyB,EACzBC,GAAgB,EAIpB,MAAMr/B,EAAiBpkB,KAAKqkB,kBAAkBrN,EAAQo4B,GAMtD,GAJGp4B,EAAOqc,UAAYtL,GACpB/nB,KAAK6c,gBAAgB0kC,gBAAgBvqC,GAGpCo4B,EAAU,CACX,MAAMsU,EAAa1jD,KAAKy/C,iBAAiBzoC,EAAS,IAAMo4B,GACxD,GAAGsU,EAAY,CACb,MAAO1sC,EAAQ0N,GAAOg/B,EAAWh8C,MAAM,KACvC1H,KAAKgwB,cAAchZ,EAAOvQ,YAAaie,EAAK,oBAIhD,MAAMiE,GAAsBymB,GAAY3pB,GAAezlB,KAAK4oB,eAAepL,kCAAkCiI,GAE7G,IAAI,IAAI5f,EAAI,EAAG1H,EAASqmB,EAAQrmB,OAAQ0H,EAAI1H,EAAQ0H,IAAK,CACvD,MAAM6e,EAAMF,EAAQ3e,GACpB,GAAG6e,EAAMgC,EACP,SAGF,MAAM7kB,EAAqB6B,EAAQgB,IAAIggB,GAEvC,GAAG7iB,EAAQjD,OAAOmb,MAAQgO,EAA1B,CAIA,IAAIlmB,EAAQjD,OAAOopB,OACjB,MAGF,GAAGonB,EAAU,CACX,MAAMuU,EAAU9hD,EAAQ4uB,SACxB,IAAIkzB,IAAYA,EAAQC,iBAAmBD,EAAQ7T,mBAAqBV,EACtE,SAKDvtC,EAAQjD,OAAOopB,gBACTnmB,EAAQjD,OAAOopB,OAClBy7B,IACFA,GAAgB,GAGd5hD,EAAQjD,OAAOmb,KAAQq1B,IAAY3pB,SACb3a,IAArBw4C,IACDvgC,IAAmB0C,EAAYwC,cAG9BpmB,EAAQjD,OAAOshD,YAChBsD,IAA2B/9B,EAAY8G,sBACvCvsB,KAAK2hD,qBAAqB3qC,EAAQnV,EAAQ6iB,KAAK,KAInD1kB,KAAK4c,UAAUhW,cAAc,sBAAuB,MAAQ8d,KAOhE,GAHGqD,EAAO3D,EAAemE,gBAAkB7B,EACtCtC,EAAekE,UAAY5B,GAE5B0oB,GAAY3pB,EAAa,CAI3B,GAHGsC,EAAOtC,EAAYoC,mBAAqBnB,EACtCjB,EAAYmC,kBAAoBlB,GAEjCqB,EAAO,CACT,IAAI87B,OACoB/4C,IAArBw4C,EACDO,EAAWP,EACHvgC,EAAiB,IAAM/iB,KAAK8jD,qBAAqB9sC,GACzD6sC,EAAW,EACH9gC,GAAkB0C,EAAY/G,YAAcgI,IACpDm9B,EAAW9gC,QAGGjY,IAAb+4C,IACDp+B,EAAYwC,aAAe47B,IAG1BL,EAAyB,IAAM/9B,EAAYwC,gBAC5CxC,EAAY8G,sBAAwB,GAIrC5D,GACDA,IAGF3oB,KAAK4oB,eAAetL,wBAAwBmI,GAE5CzlB,KAAK4c,UAAUhW,cAAc,gBAAiB,CAACoQ,OAAAA,EAAQkD,OAAQuL,IAC/DzlB,KAAK4oB,eAAe1E,iBAAiBuB,GAOvC,GAJGg+B,GACDzjD,KAAK4c,UAAUhW,cAAc,kBAG3BwoC,GAAYxrB,EAAW,CACzB,MAAMmgC,EAAgB/sC,EAAS,IAC/B,IAAI,MAAM6pC,KAAa7gD,KAAKy/C,iBAC1B,GAAwC,IAArCoB,EAAUzkD,QAAQ2nD,GAAsB,CACzC,MAAO/sC,EAAQ0N,GAAO1kB,KAAKy/C,iBAAiBoB,GAAWn5C,MAAM,KAC7D1H,KAAK4c,UAAUhW,cAAc,kBAAmB5G,KAAK+e,iBAAiB/H,EAAOvQ,YAAaie,OAM1F,KAAAs/B,6BAAgC3oC,IACtC,MAAMuI,EAAavI,EAAoDhC,WACjE4qC,EAAQ5oC,EAA6C+K,SAAShiB,KAAK9F,IAAO,EAAA0oB,GAAA,GAAkB1oB,KAC5F0Y,EAAS4M,EAAYA,EAAUnd,UAAS,GAAQzG,KAAKkkD,iBAAiBD,GAC5E,IAAI,IAAIp+C,EAAI,EAAG1H,EAAS8lD,EAAK9lD,OAAQ0H,EAAI1H,IAAU0H,EAAG,CACpD,MAAM6e,EAAMu/B,EAAKp+C,GACXhE,EAAqB7B,KAAK+e,iBAAiB/H,EAAQ0N,GACtD7iB,EACEA,EAAQjD,OAAOulD,sBACTtiD,EAAQjD,OAAOulD,aACtBnkD,KAAKsiD,+BAA+BzgD,IAEhCA,EAAQjD,OAAOmb,KAAOlY,EAAQjD,OAAOshD,WACvClgD,KAAK2hD,qBAAqB3qC,EAAQ0N,GAAK,IAI3C1kB,KAAKokD,mCAAmCptC,GAI5ChX,KAAK4c,UAAUhW,cAAc,sBAAuB,CAACoQ,OAAAA,EAAQitC,KAAAA,KAGvD,KAAAI,iCAAoChpC,IAC1C,MAAMrE,EAASqE,EAAOhC,WAAW5S,UAAS,GACpC+d,EAAUxkB,KAAKqkB,kBAAkBrN,GAAQwN,QAAQ5c,MACjD08C,GAAiB,EAAAt9B,GAAA,GAAkB3L,EAAOkpC,kBAC1Cn+B,EAAW5B,EAAQhmB,QAAQkmB,GAAQA,GAAO4/B,IAE/CjpC,EAAqD+K,SAAWA,EACjEpmB,KAAKwkD,uBAAuBnpC,IAGtB,KAAAmpC,uBAA0BnpC,IAChC,MAAMuI,EAAavI,EAA8ChC,WAE3D+M,EAAY/K,EAAqD+K,SAAShiB,KAAK9F,IAAO,EAAA0oB,GAAA,GAAkB1oB,KACxG0Y,EAAiB4M,EAAYA,EAAUnd,UAAS,GAAQzG,KAAKkkD,iBAAiB99B,GAEpF,IAAIpP,EACF,OAGFhX,KAAKgU,WAAWkkB,WAAW,8BAA+B7jB,GACjDrU,KAAK0b,gBAAgB5C,UAAUzE,EAAOoH,QAAUzE,IAGzD,MAAMytC,EAA0B,IAAIruC,IACpC,IAAI,MAAMsO,KAAO0B,EAAU,CACzB,MAAMvkB,EAAU7B,KAAK+e,iBAAiB/H,EAAQ0N,GACxCm8B,EAAY7gD,KAAK8gD,aAAaj/C,GACjCg/C,GAAa7gD,KAAKq/C,eAAeroC,IAAWhX,KAAKq/C,eAAeroC,IAAS6pC,EAAUn5C,MAAM,KAAK,KAC/F+8C,EAAWluC,IAAIsqC,GAInB,MAAM6D,EAAiB1kD,KAAK2kD,sBAAsB3tC,EAAQhX,KAAKukB,0BAA0BvN,GAASoP,GAE5Fw+B,EAAkB9jD,MAAMC,KAAK0jD,GAAYrgD,KAAKy8C,IAClD,MAAO7pC,EAAQ0N,GAAOm8B,EAAUn5C,MAAM,KACtC,OAAO1H,KAAKqkB,kBAAkBrN,EAAOvQ,YAAaie,MAG9CN,EAAiBpkB,KAAKqkB,kBAAkBrN,GAC9C,CAACoN,GAAgBlgB,OAAO0gD,GAAiB1hD,SAASkhB,IAChD,IAAI,MAAMM,KAAOggC,EAAeG,KAC9BzgC,EAAeI,QAAQzgB,OAAO2gB,GAG7BggC,EAAexpC,OAASkJ,EAAelJ,QACxCkJ,EAAelJ,MAAQqE,KAAK8D,IAAI,EAAGe,EAAelJ,MAAQwpC,EAAexpC,WAI7Elb,KAAK4c,UAAUhW,cAAc,iBAAkB,CAACoQ,OAAAA,EAAQ6tC,KAAMH,EAAeG,OAE7E,MAAMp/B,EAAczlB,KAAKkc,cAAclF,GACvC,GAAGyO,EAAa,CACd,MAAMq/B,EAAWJ,EAAe7F,gBAAkB6F,EAAe18B,OAC3DW,EAAqBm8B,GAAY9kD,KAAK4oB,eAAepL,kCAAkCiI,GAe7F,GAbGi/B,EAAe18B,SAChBvC,EAAYwC,aAAe1I,KAAK8D,IAAI,EAAGoC,EAAYwC,aAAey8B,EAAe18B,SAGhF08B,EAAe7F,iBAChBp5B,EAAY8G,sBAAyB9G,EAAYwC,aAAmB1I,KAAK8D,IAAI,EAAGoC,EAAY8G,sBAAwBm4B,EAAe7F,gBAAnE,GAG/DiG,IACDn8B,IACA3oB,KAAK4c,UAAUhW,cAAc,gBAAiB,CAACoQ,OAAAA,EAAQkD,OAAQuL,KAG9Di/B,EAAeG,KAAKr7B,IAAI/D,EAAY/G,aAAc,CACnD,MAAM9W,EAAQwc,EAAeI,QAAQzc,MACrC,GAAGH,EAAMsgB,MAAM,cAAoBtgB,EAAMzJ,OAAQ,CAC/C,MAAMumB,EAAM9c,EAAM,GACZ/F,EAAU7B,KAAK+e,iBAAiB/H,EAAQ0N,GAC9C1kB,KAAK4hD,oBAAoB//C,EAAS4jB,QAElCzlB,KAAKgf,mBAAmBhI,MAMxB,KAAA+tC,gBAAmB1pC,IACzB,MAAMuI,EAAYvI,EAAOhC,WACnBrC,EAAS4M,EAAUnd,UAAS,GAC5Bsd,EAAwB/jB,KAAK0d,gBAAgBC,QAAQiG,GAErDohC,EAAahlD,KAAK0d,gBAAgB+b,SAAS7V,MAExBG,EAAQoX,WAAapX,EAAQnlB,OAAO+G,aACRmF,IAAlC9K,KAAKo/C,iBAAiBpoC,aAGhChX,KAAKo/C,iBAAiBpoC,GAC7BhX,KAAK4c,UAAUhW,cAAc,oBAAqBoQ,MAGrChX,KAAKkc,cAAclF,KAClBguC,IACXA,EACDhlD,KAAKgf,mBAAmBhI,GAExBhX,KAAK4oB,eAAehL,qBAAqB5G,IAI7ChX,KAAK4c,UAAUhW,cAAc,iBAAkBgd,IAGzC,KAAAqhC,sBAAyB5pC,IAC/B,MAAMrE,EAASqE,EAAOhC,WAAW5S,UAAS,GAE1CzG,KAAKklD,sBAAsBluC,GAC3BhX,KAAKgf,mBAAmBhI,GAAQhS,MAAK,KACnChF,KAAK4c,UAAUhW,cAAc,iBAAkBoQ,OAI3C,KAAAmuC,4BAA+B9pC,IACrC,MAAM+pC,EAAQ/pC,EAAO+pC,MACfpuC,EAASqE,EAAOhC,WAAW5S,UAAS,GACpCie,GAAM,EAAAsC,GAAA,GAAkB3L,EAAO/c,IAC/BuD,EAAU7B,KAAK+e,iBAAiB/H,EAAQ0N,QACxB5Z,KAAnBjJ,MAAAA,OAAO,EAAPA,EAASujD,QAAuBvjD,EAAQujD,MAAQA,IACjDvjD,EAAQujD,MAAQA,EAChBplD,KAAKoiD,gBAAgB,iBAAkBpiD,KAAKqlD,iBAAkBxjD,EAAQmV,OAAS,IAAMnV,EAAQ6iB,KAC7F1kB,KAAKsiD,+BAA+BzgD,KAIhC,KAAAyjD,4BAA+BjqC,I,MAErC,GAAgB,QAAb,EAAAA,EAAOzc,cAAM,eAAE2mD,MAEhB,YADAvlD,KAAK4c,UAAUhW,cAAc,uBAAwByU,GAIvD,MAAMlD,EAAS,KACTnB,EAASmB,EACThK,EAAYnO,KAAKknB,sBAAsBlQ,GACvCnV,EAA2B,CAC/BxD,EAAG,UACHC,GAAI6P,EACJgZ,QAASnnB,KAAK0b,gBAAgB0L,cAAcjP,GAC5CY,QAAS/Y,KAAK0b,gBAAgB0L,cAAcpQ,GAC5CpY,OAAQ,CAACopB,QAAQ,GACjBnG,MAAOxG,EAAOiZ,aAAc,EAAAvS,GAAA,IAAM,IAAS/hB,KAAKgiB,YAAYC,sBAC5DpgB,QAASwZ,EAAOxZ,QAChByW,MAAO+C,EAAO/C,MACdoY,SAAUrV,EAAOqV,UAEf1wB,KAAK6c,gBAAgBqW,QAAQ/a,IAC/BnY,KAAK6c,gBAAgBoJ,aAAa,CAAC,CACjC5nB,EAAG,OACHC,GAAI6Z,EACJvZ,OAAQ,CAACi6B,UAAU,GACnBnC,YAAa,IACbqkB,WAAY,WACZyK,MAAO,WAGXxlD,KAAK6e,aAAa,CAAChd,GAAU,CAACylB,YAAY,IAEvCjM,EAAOiZ,aACRt0B,KAAKwmB,eAAexP,GAAU7I,EAC9BnO,KAAKygD,mBAAmB,CACtBpiD,EAAG,mBACHwD,QAAAA,EACAsiB,SAAKrZ,EACL6lB,eAAW7lB,MAKT,KAAA26C,uBAA0BpqC,IAChC,MAAMuI,EAAyB,gCAAbvI,EAAOhd,EAAsCgd,EAAOhC,gBAAavO,EAC7EkM,EAAS4M,EAAYA,EAAUnd,UAAS,GAAQzG,KAAK0b,gBAAgB5C,UAAWuC,EAAuCI,MAYvH2K,EAAW/K,EAAO+K,SAAShiB,KAAK9F,IAAO,EAAA0oB,GAAA,GAAkB1oB,KAEzDoF,EAAU1D,KAAKukB,0BAA0BvN,GACzC0uC,EAAkBt/B,EAAS5nB,QAAQkmB,IAAShhB,EAAQ8lB,IAAI9E,MACpCghC,EAAgBvnD,OAASwD,QAAQ8Q,IAAIizC,EAAgBthD,KAAKsgB,GAAQ1kB,KAAK+W,eAAeC,EAAQ0N,MAAS/iB,QAAQM,WACvHyhC,SAAQ,K,MACxB,MAAMiiB,EAA0B,QAAb,EAAAtqC,EAAOzc,cAAM,eAAEgd,OAClC,GAAG+pC,EACD,IAAI,MAAMjhC,KAAO0B,EAEC1iB,EAAQgB,IAAIggB,GACpB9lB,OAAOgd,QAAS,OAU1B,IAAI,MAAM8I,KAAO0B,SAEC1iB,EAAQgB,IAAIggB,GACb9lB,OAAOgd,cASnB5b,KAAKu/C,eAAevoC,GAC3BhX,KAAKke,gBAAgB7W,WAAWrC,MAAMmC,WAC7BA,EAAMy+C,qBAAqB5uC,GAClChX,KAAK4c,UAAUhW,cAAc,uBAAwB,CAACoQ,OAAAA,EAAQitC,KAAM79B,EAAUxK,OAAQ+pC,WAKpF,KAAAE,uBAA0BxqC,IAChC,MAAM,KAACI,EAAI,gBAAEgN,GAAmBpN,EAChC,GAAc,eAAXI,EAAKpd,EAAoB,CAC1B,MAAM2Y,EAAShX,KAAK0b,gBAAgB5C,UAAW2C,EAA+BA,MAExEvB,EAASla,KAAKkc,cAAclF,GAC/BkD,IACDA,EAAOuO,gBAAkBA,EACzBzoB,KAAK4c,UAAUhW,cAAc,yBAA0BsT,GACvDla,KAAK4oB,eAAe1E,iBAAiBhK,MAKnC,KAAA4rC,4BAA+BzqC,IACrC,MAAMxZ,EAAUwZ,EAAOxZ,QACjBmV,EAAShX,KAAK0gD,eAAe7+C,GAE7B6B,EAAU1D,KAAKm/C,yBAAyBnoC,GAC9C,IAAItT,EACF,OAGF,MAAMghB,GAAM,EAAAsC,GAAA,GAAkBnlB,EAAQvD,IAEhCokD,EAAa1iD,KAAK2kB,sBAAsBjhB,EAASghB,GACvD1kB,KAAK6e,aAAa,CAAChd,GAAU,CAAC6B,QAAAA,EAASqiD,aAAa,IACpD,MAAMpD,EAAa3iD,KAAK2kB,sBAAsBjhB,EAASghB,GAEpDg+B,GACD1iD,KAAK4iD,oBAAoBF,EAAYC,EAAYj/C,GACjD1D,KAAK4c,UAAUhW,cAAc,eAAgB,CAAC2qC,WAAY7tC,EAAQ6D,IAAKyP,OAAAA,EAAQ0N,IAAK7iB,EAAQ6iB,IAAK7iB,QAAAA,KAE1E7B,KAAKmhD,oBAAoBt/C,IAE9C7B,KAAK4c,UAAUhW,cAAc,gBAAiB/E,IAK5C,KAAAmkD,gCAAmC3qC,IACzC,MAAMrE,EAAShX,KAAK0b,gBAAgB5C,UAAUuC,EAAOI,MAE/C/X,EAAU1D,KAAKm/C,yBAAyBnoC,GAC9C,GAAGtT,EAAS,CACV,MAAMugD,EAAO5oC,EAAO+K,SAAShiB,KAAK9F,IAAO,EAAA0oB,GAAA,GAAkB1oB,KAC3D0B,KAAK2kD,sBAAsB3tC,EAAQtT,EAASugD,GAE5CjkD,KAAK4c,UAAUhW,cAAc,mBAAoB,CAACoQ,OAAAA,EAAQitC,KAAAA,MAItD,KAAAgC,6BAAgC5qC,I,MACtC,MAAMrE,EAAShX,KAAK0b,gBAAgB5C,UAAUuC,EAAOI,MAC/CiJ,GAAM,EAAAsC,GAAA,GAAkB3L,EAAOq+B,QAC/Bh2C,EAAU1D,KAAKukB,0BAA0BvN,GAC/C,IAAItT,EAAQ8lB,IAAI9E,GAEd,OAGF,MAAM7iB,EAAU7B,KAAK2kB,sBAAsBjhB,EAASghB,GAC9C41B,EAAez4C,EAAQyW,MACS,0BAAR,QAA3B,EAAAgiC,EAAa4L,sBAAc,eAAE7nD,KAIhCi8C,EAAa4L,eAAiB7qC,EAAO6qC,eACrClmD,KAAKyiD,oBAAoB,CACvBpkD,EAAG,oBACHwD,QAAAA,EACAsiB,IAAK,EACLwM,UAAW,MAinCP,KAAA00B,iBAAoBc,IAC1B,MAAMC,EAA6D,GAE7DhiD,EAAMpE,KAAKqmD,mBAAmBF,GACpC,IAAI,MAAOtkD,KAAYuC,EACrBgiD,EAAW9lD,KAAK,CACd0W,OAAQnV,EAAQmV,OAChB0N,IAAK7iB,EAAQ6iB,IACb0gC,MAAOvjD,EAAQujD,QAInB,OAAOgB,GAGD,KAAA/D,qBAAwB8D,I,UAC9B,MAAMC,EAA0F,GAE1FhiD,EAAMpE,KAAKqmD,mBAAmBF,GACpC,IAAI,MAAOtkD,EAASmgD,KAAsB59C,EAAK,CAC7C,MAAMiB,EAAoC,QAA1B,EAAiB,QAAjB,EAAAxD,EAAQi7B,iBAAS,eAAEz3B,eAAO,QAAI,GACxCihD,EAA4C,QAA1B,EAAAtE,MAAAA,OAAiB,EAAjBA,EAAmB38C,eAAO,QAAI,GAChDkhD,EAAiBlhD,EAAQ7G,QAAQgoD,IACrC,MAAMC,EAAwBH,EAAgB/iD,MAAMmjD,IAAmB,EAAAC,GAAA,GAAeD,EAAe7tC,SAAU2tC,EAAc3tC,YAC7H,OACEhX,EAAQjD,OAAOmb,OACZ0sC,GACDD,EAActrC,MAAQurC,EAAsBvrC,aAGfpQ,IAA/B07C,EAAcI,gBACXH,QACsC37C,IAAvC27C,EAAsBG,iBAK5BR,EAAW9lD,KAAK,CAACuB,QAAAA,EAAS0kD,eAAAA,IAG5B,OAAOH,GAloLCzpC,QA+IR,OA9IA3c,KAAKqE,OAAM,GAEXrE,KAAK6d,kBAAkBC,2BAA2B,CAChD+oC,gBAAiB7mD,KAAKqgD,kBAEtByG,2BAA4B9mD,KAAKygD,mBACjCsG,iBAAkB/mD,KAAKygD,mBACvBuG,wBAAyBhnD,KAAKygD,mBAE9BwG,uBAAwBjnD,KAAKuiD,yBAE7B2E,kBAAmBlnD,KAAKyiD,oBACxB0E,yBAA0BnnD,KAAKyiD,oBAE/B2E,uBAAwBpnD,KAAK8hD,yBAE7BuF,iCAAkCrnD,KAAKkjD,oBACvCoE,kCAAmCtnD,KAAKkjD,oBACxCqE,uBAAwBvnD,KAAKkjD,oBAC7BsE,wBAAyBxnD,KAAKkjD,oBAC9BuE,uBAAwBznD,KAAKkjD,oBAC7BwE,wBAAyB1nD,KAAKkjD,oBAE9ByE,kCAAmC3nD,KAAKgkD,6BACxC4D,2BAA4B5nD,KAAKgkD,6BAEjC6D,+BAAgC7nD,KAAKqkD,iCAErCyD,qBAAsB9nD,KAAKwkD,uBAC3BuD,4BAA6B/nD,KAAKwkD,uBAElCwD,cAAehoD,KAAK+kD,gBAEpBkD,oBAAqBjoD,KAAKilD,sBAE1BiD,0BAA2BloD,KAAKmlD,4BAEhCgD,0BAA2BnoD,KAAKslD,4BAEhC8C,qBAAsBpoD,KAAKylD,uBAC3B4C,4BAA6BroD,KAAKylD,uBAElC6C,qBAAsBtoD,KAAK6lD,uBAE3B0C,0BAA2BvoD,KAAK8lD,4BAEhC0C,8BAA+BxoD,KAAKgmD,gCAEpCyC,2BAA4BzoD,KAAKimD,+BAInCjmD,KAAK4c,UAAUpW,iBAAiB,6BAA6B,EAAEe,IAAAA,EAAKR,SAAAA,MAElE,IAAI2hD,EACsBA,EAAf,gBAARnhD,EAAqC2S,GAAWA,EAAOlD,OAAOqc,SACjD,qBAAR9rB,EAA0C2S,GAAWla,KAAK0b,gBAAgB+Q,YAAYvS,EAAOlD,QAClFkD,GAAWla,KAAK0b,gBAAgBiR,WAAWzS,EAAOlD,QAJrDhX,KAAK4oB,eAAerM,iBAAiB,GAAGrY,OAAOlE,KAAK4oB,eAAerM,iBAAiB,IAOnG/d,OAAOkqD,GACPxlD,SAASgX,IACRla,KAAK4c,UAAUhW,cAAc,yBAA0BsT,SAI3Dla,KAAK4c,UAAUpW,iBAAiB,mBAAmB,EAAElI,GAAAA,EAAIumD,KAAAA,MACvDA,EAAK3hD,SAAQ,EAAE8T,OAAAA,EAAQ0N,IAAAA,EAAKqhC,YAAAA,MAC1B,MAAMriD,EAAUqiD,EAAc/lD,KAAK2oD,4BAA4B3xC,GAAUhX,KAAKukB,0BAA0BvN,GAClGnV,EAAU7B,KAAK2kB,sBAAsBjhB,EAASghB,GAChD7iB,IACJA,EAAQyW,MAAQ,CACdja,EAAG,sBACHuqD,QAAS5oD,KAAK6oD,mBAAmBC,iBAAiBxqD,IAGpD0B,KAAK4c,UAAUhW,cAAc,eAAgB,CAC3C2qC,WAAY7tC,EAAQ6D,IACpByP,OAAAA,EACA0N,IAAAA,EACA7iB,QAAAA,WAKN7B,KAAK4c,UAAUpW,iBAAiB,iBAAiB,EAAEwQ,OAAAA,EAAQo4B,SAAAA,EAAUprB,MAAAA,MACnE,GAAGorB,EAAU,OAEb,MAAMl1B,EAASla,KAAKkc,cAAclF,GAClC,GAAGkD,GACD,IAAIk1B,EAAU,CACZl1B,EAAO8J,MAAQA,EAEf,IAAI+kC,GAAO,EACP/kC,IAAU,EAAArF,GAAA,GAAmBzE,EAAOwE,cAItC1e,KAAK4oB,eAAe9M,uBAAuB5B,GAC3Cla,KAAK4oB,eAAe7M,WAAW7B,KAJ/Bla,KAAK4oB,eAAejN,WAAW3E,GAC/B+xC,GAAO,GAMT/oD,KAAK4c,UAAUhW,cAAc,eAAgB,CAC3CoQ,OAAAA,EACAkD,OAAAA,EACA6uC,KAAAA,EACA/kC,MAAAA,UAIJhkB,KAAKgf,mBAAmBhI,MAI5BhX,KAAK4c,UAAUpW,iBAAiB,eAAe,EAAEwiD,KAAAA,MAC/C,MAAM5gD,EAAMpI,KAAKipD,gBAAgBC,eAAeF,EAAK1qD,IACrD,GAAG8J,EACD,IAAI,MAAMb,KAAOa,EAAK,CACpB,MAAO4O,EAAQ0N,GAAOnd,EAAIG,MAAM,KAE1B7F,EAAU7B,KAAK+e,iBAAiB/H,EAAOvQ,YAAaie,GACvD7iB,GACD7B,KAAKsiD,+BAA+BzgD,OAM5C7B,KAAKmpD,uBAAwB,EAAAC,GAAA,IAAS,KACpC,IAAI,MAAMjnD,KAASnC,KAAK++C,aAAc,CACpC,MAAMlD,EAAU77C,KAAK++C,aAAa58C,UAC3BnC,KAAK++C,aAAa58C,GAGzB,MAAMC,EAASy5C,EAAQj3C,SAASi3C,EAAQsK,QACrC/jD,GAAaA,aAAkBtB,QAAUsB,EAAOjE,QAEjDye,UAAUhW,cAAczE,EAA6BC,MAGxD,IAAI,GAAO,GAEPpC,KAAKke,gBAAgB7W,WAAWrC,MAAMmC,IACxCA,EAAMkiD,eACPrpD,KAAKs+C,UAAYn3C,EAAMkiD,iBA2BtBhZ,iBAAiB3f,GACtB,MAAM44B,GAAc,EAAAj+B,GAAA,GAAKqF,GAOzB,OANA44B,EAAYpmD,SAASqmD,IACH,6BAAbA,EAAOlrD,IACPkrD,EAA8DlrD,EAAI,gCAClEkrD,EAA8D/wC,QAAUxY,KAAK6c,gBAAgBua,aAAamyB,EAAO/wC,aAG/G8wC,EAGFE,yBAAyBjJ,EAAgBkJ,EAAsB7kD,G,QACpE,MAAM8kD,EAA6C,QAAlC,EAAA1pD,KAAKi+C,sBAAsBsC,UAAO,QAAKvgD,KAAKi+C,sBAAsBsC,GAAU,GACvF/uC,EAA4B,QAAtB,EAAAk4C,EAASD,UAAa,QAAKC,EAASD,GAAgB,CAACtuD,UAAU,UAI3E,OAFAqW,EAAI5M,SAAWA,EAER4M,EAAIrW,SAGNwuD,YAAY9nD,EAAc9E,EAAcK,EAK1C,IAKH,MAAM,IAACsnB,EAAG,OAAE1N,GAAUnV,EAEtB,GAAGA,EAAQjD,OAAOgmB,YAChB,OAAO5kB,KAAKwpD,yBAAyB9kC,EAAK,QAAS7iB,GAE1C7B,KAAK2pD,YAAY9nD,EAAS9E,EAAMK,KAI3C,MAAMszB,EAAWtzB,EAAQszB,UAAY,GAClC3zB,IACDA,GAAO,EAAAs3B,GAAA,GAAct3B,EAAM2zB,IAG7B,MAAM0lB,EAAgBh5C,EAAQ+4C,eAAiBt0C,EAAQjD,OAAOgrD,aAAe/nD,EAAQggB,UAAO/W,GAC5F,OAAO9K,KAAKgU,WAAWC,UAAU,uBAAwB,CACvDwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C1Y,GAAIuD,EAAQvD,GACZuD,QAAS9E,EACTub,MAAOlb,EAAQysD,SACfn5B,SAAUA,EAASvyB,OAAS6B,KAAKqwC,iBAAiB3f,QAAY5lB,EAC9DwlC,WAAYlzC,EAAQ0sD,UACpB1T,cAAAA,IACCpxC,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAC1CrnB,IAGF,GAFAU,KAAKG,IAAIb,MAAM,qBAAsBA,IAElCA,GAAwB,yBAAfA,EAAMG,KAOlB,OAHGH,GAAwB,kBAAfA,EAAMG,OAChBH,EAAMyqD,SAAU,GAEXpoD,QAAQC,OAAOtC,GANpBA,EAAMyqD,SAAU,KAUT3P,SAASpjC,EAAgBja,EAAcK,EAc/C,I,kDACH,IAAIL,EAAKurC,OACP,OAGc,QAAhB,EAAAlrC,EAAQszB,gBAAQ,QAAhBtzB,EAAQszB,SAAa,IAGlBtzB,EAAQgyC,WAAahyC,EAAQ4sD,eAC9B5sD,EAAQ4sD,aAAe5sD,EAAQgyC,UAGjC,MACM6a,SADejqD,KAAKgU,WAAWoZ,aACX88B,mBACpBziD,EAAWg1C,GAAoB1/C,EAAMktD,GAC3CltD,EAAO0K,EAAS,GACbA,EAAStJ,OAAS,IACO,aAAR,QAAf,EAAAf,EAAQ+sD,eAAO,eAAE9rD,IAAoBtB,EAAK0uB,SAASruB,EAAQ+sD,QAAQ/qD,aAC7DhC,EAAQ+sD,SAInBnzC,EAAShX,KAAK0b,gBAAgB0uC,kBAAkBpzC,IAAWA,EAE3D,MAAM0Z,EAAWtzB,EAAQszB,SACrBtzB,EAAQgb,WACVrb,GAAO,EAAAs3B,GAAA,GAAct3B,EAAM2zB,IAI7B,IAAI44B,EAActpD,KAAKqwC,iBAAiB3f,GACpC44B,EAAYnrD,SACdmrD,OAAcx+C,GAGhB,MAAMjJ,EAAU7B,KAAKqqD,wBAAwBrzC,EAAQ5Z,GACrDyE,EAAQ6uB,SAAWA,EACnB7uB,EAAQA,QAAU9E,EAElB,MAAMitD,EAAe5sD,EAAQ4sD,cAAe,EAAArrC,GAAA,GAAmBvhB,EAAQ4sD,mBAAgBl/C,EACjF+Y,EAAY7jB,KAAK0b,gBAAgBmI,UAAU7M,GAE9C5Z,EAAQ+sD,UACTtoD,EAAQyW,MAAQ,CACdja,EAAG,sBACHuqD,QAASxrD,EAAQ+sD,UAIrB,MAAMG,EAAehrD,IACnBU,KAAKuqD,oBAAoB,CAAC1oD,GAAUvC,GACpCU,KAAK4c,UAAUhW,cAAc,qBAG/B/E,EAAQ+H,KAAO,KACb0gD,IACA,MAAME,EAAsC,GACzCxqD,KAAKg+C,iBAAiBhnC,KACvBwzC,EAAmBC,eAAiBzqD,KAAKg+C,iBAAiBhnC,GAAQ7I,WAGpE,MAAMu8C,EAASttD,EAAQutD,aAAe3qD,KAAK0b,gBAAgB4R,iBAAiBlwB,EAAQutD,mBAAgB7/C,EACpG,IAAI8/C,EAkCJ,OAhCEA,EADCxtD,EAAQgb,SACIpY,KAAKgU,WAAW62C,eAAe,+BAAgC,CAC1EpvC,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CqgB,UAAWx1B,EAAQw1B,UACnByY,gBAAiBka,QAAgBl/C,EACjCutC,SAAUj7C,EAAQg7C,QAClB95C,GAAIlB,EAAQ48C,SACZ8Q,YAAa1tD,EAAQszC,WACrBqa,QAASL,GACRF,GAEUxqD,KAAKgU,WAAW62C,eAAe,uBAAwB,CAClEva,WAAYlzC,EAAQ0sD,UACpBruC,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CnV,QAAS9E,EACTs6B,UAAWx1B,EAAQw1B,UACnByY,gBAAiBka,QAAgBl/C,EACjC4lB,SAAU44B,EACVwB,YAAa1tD,EAAQszC,WACrB0F,cAAeh5C,EAAQ+4C,mBAAgBrrC,EACvCyjB,OAAQnxB,EAAQmxB,OAChBw8B,QAASL,EACTM,yBAA0BpN,IACzB4M,GAQLxqD,KAAKg+C,iBAAiBhnC,GAAUwzC,EAEzBI,EAAW5lD,MAAM2hB,IAGtB,GAAiB,2BAAdA,EAAQtoB,EAAgC,CAIzC,MAAMyL,EAAUjI,EAAQiI,eACjBjI,EAAQiI,QACf,MAAM64C,GAAa,EAAAt3B,GAAA,GAAKxpB,GACxB8X,GAA6B9X,EAAS,CAAC,YACvCA,EAAQiI,QAAUA,EAElB64C,EAAW9gC,KAAO8E,EAAQ9E,KAC1B8gC,EAAWrkD,GAAKqoB,EAAQroB,GACxBqkD,EAAWrqC,MAAQqO,EAAQrO,MAC3BqqC,EAAWjyB,SAAW/J,EAAQ+J,SAC9B1wB,KAAKirD,oBAAoBtI,GACtBh8B,EAAQ/nB,OAAOmb,MAChB4oC,EAAW/jD,OAAOmb,KAAM,GAI1B4M,EAAU,CACRtoB,EAAG,UACH6a,MAAO,GACPiN,MAAO,GACP+J,IAAK,EACLrO,UAAM/W,EACN6b,QAAS,CAAC,CACRtoB,EAAG,kBACHg5B,UAAWx1B,EAAQw1B,UACnB/4B,GAAIqkD,EAAWrkD,IACd,CACDD,EAAGjB,EAAQ+4C,aAAe,4BAA+BtyB,EAAY,0BAA4B,mBACjGhiB,QAAS8gD,EACTx+B,IAAKwC,EAAQxC,IACbwM,UAAWhK,EAAQgK,kBAGdhK,EAA4BA,SACpCA,EAA4BA,QAAQzjB,SAASmY,IAC5B,uBAAbA,EAAOhd,IACRgd,EAAO8kB,OAAQ,MAQrBngC,KAAK6d,kBAAkBkS,qBAAqBpJ,GAK5C9kB,EAAQiI,QAAQ7H,aACd3C,IAGF,MAFAgrD,EAAYhrD,GACZuC,EAAQiI,QAAQlI,OAAOtC,GACjBA,KACLokC,SAAQ,KACN1jC,KAAKg+C,iBAAiBhnC,KAAYwzC,UAC5BxqD,KAAKg+C,iBAAiBhnC,OAKnChX,KAAKkrD,qBAAqBrpD,EAAS,CACjCkkD,cAAe3oD,EAAQ+4C,mBAAgBrrC,EACvCskC,SAAUhyC,EAAQgyC,SAClBsB,WAAYtzC,EAAQszC,WACpBya,YAAY,IAGd,MAAMniC,EAAyD,CAACnnB,EAAQiI,SACxE,IAAI,IAAIjE,EAAI,EAAGA,EAAI4B,EAAStJ,SAAU0H,EACpCmjB,EAAS1oB,KAAKN,KAAKo6C,SAASpjC,EAAQvP,EAAS5B,GAAIzI,IAGnD,OAAOuE,QAAQ8Q,IAAIuW,GAAUhkB,KAAKomD,GAAA,MAG7BC,SAASr0C,EAAgBukB,EAAgCn+B,EA+B3D,IACH4Z,EAAShX,KAAK0b,gBAAgB0uC,kBAAkBpzC,IAAWA,EAI3D,MAAMnV,EAAU7B,KAAKqqD,wBAAwBrzC,EAAQ5Z,GAC/C4sD,EAAe5sD,EAAQ4sD,cAAe,EAAArrC,GAAA,GAAmBvhB,EAAQ4sD,mBAAgBl/C,EAEvF,IAAIwgD,EAAgEC,EAEpE,MAAMC,EAAW,cAAejwB,EAAOA,EAAKkQ,UAAYlQ,EAAK97B,KACvDivC,EAAWnT,aAAgBkwB,KAAOlwB,EAAKt7B,KAAO,GAC9CyrD,IAAenwB,aAAgBkwB,MAAWlwB,aAAgBowB,MAChE,IAAIpR,EAAUn9C,EAAQm9C,SAAW,GAEjCv6C,KAAKG,IAAI,WAAYo7B,EAAMiwB,GAE3B,MAAM96B,EAAWtzB,EAAQszB,UAAY,GAClC6pB,IACDA,GAAU,EAAAlmB,GAAA,GAAckmB,EAAS7pB,IAGnC,MAAM0a,EAAkC,GAElCwgB,EAAU5lD,IAAiB6lD,2BAA2BriC,IAAIgiC,GAEhE,IAAIx2B,EAAgBwM,EAEhBsqB,EACJ,GAAGJ,EACDJ,EAAa,WACbC,EAAc,QACT,GAAkC,IAA/BC,EAASpvD,QAAQ,WAAmB,CAAC,aAAaA,QAAQovD,IAAa,EAAG,CAClFF,EAAa,QACbC,EAAc,UAAuC,QAA3BC,EAAS9jD,MAAM,KAAK,GAAe,MAAQ,OACrEokD,EAAa,+BAEV1uD,EAAQ2uD,iBACTT,EAAa,QACbzpD,EAAQjD,OAAOulD,cAAe,GAGhC,MAAM9Y,EAAsD,CAC1DhtC,EAAG,yBACHO,OAAQ,CACN4sC,MAAOpuC,EAAQ2uD,gBAEjBC,SAAU5uD,EAAQ4uD,SAClBz0B,SAAUn6B,EAAQm6B,UAAY,GAGhC6T,EAAW9qC,KAAK+qC,QACX,GAAIjuC,EAAQ6uD,QAIZ,GAAGL,EAAS,CACjBN,EAAa,QACbC,EAAc,SAAWC,EAAS9jD,MAAM,KAAK,GAC7CokD,EAAa,+BAEb,MAAMI,EAAY,CAChB7tD,EAAG,YACHqtC,EAAGtuC,EAAQuwC,MACXhC,EAAGvuC,EAAQwwC,OACXnuC,KAAM,KACNxB,SAAU,KACVwV,KAAM8nB,EAAK9nB,MAGbuhB,EAAQ,CACN32B,EAAG,QACHC,GAAI,GAAKuD,EAAQvD,GACjB6tD,MAAO,CAACD,GACRxgB,EAAGtuC,EAAQuwC,MACXhC,EAAGvuC,EAAQwwC,QAGb,MAAMU,EAAetuC,KAAK2qC,cAAcmC,gBAAgB9X,EAAOk3B,EAAUzsD,MACzE6uC,EAAaK,WAAapT,EAAK9nB,KAC/B66B,EAAalvC,IAAMhC,EAAQgvD,WAAa,GAExCp3B,EAAQh1B,KAAKs4C,iBAAiBC,UAAUvjB,QACnC,GAAGhvB,IAAiBqmD,2BAA2B7iC,IAAIgiC,GAAW,CACnEF,EAAa,QACbC,EAAc,YACdO,EAAa,+BAEb,MAAMQ,EAA2D,CAC/DjuD,EAAG,yBACHO,OAAQ,CACNgtC,cAAexuC,EAAQmvD,eACvBC,oBAAoB,GAEtBj1B,SAAUn6B,EAAQm6B,SAClBmU,EAAGtuC,EAAQuwC,MACXhC,EAAGvuC,EAAQwwC,QAGbxC,EAAW9qC,KAAKgsD,GAGblvD,EAAQqvD,SACTlxB,EAAK9nB,KAAO,OACZ8nB,EAAK9nB,KAAO,UACZ23B,EAAW9qC,KAAK,CACdjC,EAAG,mCAIPitD,EAAa,WACbC,EAAc,YAAcC,EAAS9jD,MAAM,KAAK,GAChDokD,EAAa,uCA3DbR,EAAa,WACbC,EAAc,YAAcC,EAAS9jD,MAAM,KAAK,GAChDokD,EAAa,kCA8Df,GAFA1gB,EAAW9qC,KAAK,CAACjC,EAAG,4BAA6BitC,UAAWoD,GAAY6c,KAEuB,IAA3F,CAAC,WAAY,QAAS,QAAS,SAAmCnvD,QAAQkvD,KAAuBI,EAAY,CAC/G,MAAM1f,EAAsB,GAa5B,GAZAxK,EAAW,CACTnjC,EAAG,WACHC,GAAI,GAAKuD,EAAQvD,GACjBi5B,SAAUn6B,EAAQm6B,SAClB6T,WAAAA,EACAM,EAAGtuC,EAAQuwC,MACXhC,EAAGvuC,EAAQwwC,OACX5B,OAAAA,EACAP,UAAW+f,EACX/3C,KAAM8nB,EAAK9nB,MAGVrW,EAAQgvD,UAAW,CACpB,MAAM9d,EAAetuC,KAAK2qC,cAAcmC,gBAAgBtL,GACxD8M,EAAaK,WAAapT,EAAK9nB,KAC/B66B,EAAalvC,IAAMhC,EAAQgvD,UAG7B,IAAIpf,EACJ,GAAG4e,EACDxgB,EAAW9qC,KAAK,CACdjC,EAAG,6BACHqtC,EAAGtuC,EAAQuwC,MACXhC,EAAGvuC,EAAQwwC,SAGbZ,EAAQ,CACN3uC,EAAG,YACHqtC,EAAGtuC,EAAQuwC,MACXhC,EAAGvuC,EAAQwwC,OACXnuC,KAAM,KACNgU,KAAM8nB,EAAK9nB,WAER,GAAkB,UAAf63C,GACLluD,EAAQ4vC,MAAO,CAChBA,EAAQ,CACN3uC,EAAG,YACHqtC,EAAGtuC,EAAQ4vC,MAAMv5B,KAAKk6B,MACtBhC,EAAGvuC,EAAQ4vC,MAAMv5B,KAAKm6B,OACtBnuC,KAAM,cACNgU,KAAMrW,EAAQ4vC,MAAM1X,KAAK7hB,MAG3B,MAAMi5C,EAAoB1sD,KAAK2qC,cAAcmC,gBAAgBtL,EAAUwL,EAAMvtC,MAC7EitD,EAAkB/d,WAAa3B,EAAMv5B,KACrCi5C,EAAkBttD,IAAMhC,EAAQ4vC,MAAM5tC,IAIvC4tC,GACDhB,EAAO1rC,KAAK0sC,GAUdxL,EAAWxhC,KAAKgzC,eAAehI,QAAQxJ,GAGzCxhC,KAAKG,IAAI,WAAYmrD,EAAYC,EAAahwB,EAAK97B,KAAMrC,GAEzD,MAAMuvD,GAAe,SAWfr0C,EAAsBozC,OAAa5gD,EAAY,CACnDzM,EAAG22B,EAAQ,oBAAsB,uBACjCp2B,OAAQ,GAERo2B,MAAAA,EACAwM,SAAAA,GAGClpB,IACDqB,GAA6BrB,EAAc,CAAC,YAC3CA,EAAcxO,QAAU6iD,GAG3B9qD,EAAQ6uB,SAAWA,EACnB7uB,EAAQA,QAAU04C,EAClB14C,EAAQyW,MAAQozC,EAAa,CAC3BrtD,EAAG,uBACHO,OAAQ,GACR4iC,SAAUjG,GAC6BjjB,EAEzC,MAAMs0C,EAAqBlB,OAA0C5gD,GAA7B,EAAA+hD,GAAA,GAAqBtxB,GAC7D15B,EAAQ+qD,kBAAoBA,EAEzBA,IACD5sD,KAAKg/C,mBAAmB4N,GAAqBD,GAG/C,MAAMrC,EAAehrD,IACnBU,KAAKuqD,oBAAoB,CAAC1oD,GAAUvC,GACpCU,KAAK4c,UAAUhW,cAAc,qBAG/B,IAAIkmD,GAAW,EACbC,EAAsD,KAExDlrD,EAAQ+H,KAAO,KACb,GAAG8hD,EAAY,CACb,MAAMrR,EAAyB,CAC7Bh8C,EAAG,qBACHC,GAAIm/C,GAAiBliB,IAGvBoxB,EAAa1qD,QAAQo4C,QAChB,GAAG9e,aAAgBkwB,MAAQlwB,aAAgBowB,KAAM,CACtD,MAAMqB,EAAO,K,MA8BX,IAAIC,EAiDJ,OA9EIH,IAAYjrD,EAAQvC,QACtBwtD,GAAW,EAEXC,EAAgB/sD,KAAKq1B,eAAejkB,OAAO,CAACmqB,KAAAA,EAAMmT,SAAUke,IAC5DG,EAAc1+C,OAAO5E,IACfqjD,IACF9sD,KAAKG,IAAI,oBAAqBmY,GAE9BtY,KAAKktD,qBAAqBrrD,EAAQw1B,WAClCr3B,KAAKmtD,UAAUn2C,EAAQ,CAAC3Y,EAAG,4BAC3BsuD,EAAa/qD,OAAO6H,OAIxBsjD,EAAcK,mBAAmBC,IAK/B,MAAMC,EAAW/tC,KAAK8D,IAAI,EAAG9D,KAAKguC,MAAM,IAAMF,EAASG,KAAOH,EAASI,QACpE3B,GACD9rD,KAAKmtD,UAAUn2C,EAAQ,CAAC3Y,EAAegvD,SAAqB,EAAXC,IAEnDX,EAAae,UAAUL,MAGzBV,EAAae,UAAU,CAACF,KAAM,EAAGC,MAAOlyB,EAAK9nB,QAI7B,UAAf63C,GAA0BluD,EAAQgvD,YAA0B,QAAb,EAAAhvD,EAAQ4vC,aAAK,eAAE1X,QAC/D23B,EAAqBjtD,KAAKq1B,eAAejkB,OAAO,CAACmqB,KAAMn+B,EAAQ4vC,MAAM1X,QAGvEy3B,GAAiBA,EAAc/nD,MAAWq2B,GAAc,mCAOtD,IAAIgf,EAsBJ,GAxBAhf,EAAUp7B,KAAOsrD,EACjBuB,GAAW,EAIPzS,EADG,UADAiR,EAEU,CACXjtD,EAAG,0BACHk9B,KAAMF,GAKK,CACXh9B,EAAG,6BACHk9B,KAAMF,EACNoQ,UAAW+f,EACX5sD,OAAQ,CACN+uD,WAA2B,oCAAf7B,QAA0DhhD,GAGxEsgC,WAAAA,GAIH6hB,EACD,IACE,MAAM5xB,QAAkB4xB,EACvB5S,EAAqDrN,MAAQ3R,EAC9D,MAAM5xB,GACNzJ,KAAKG,IAAIb,MAAM,+BAAgCmK,GAInDkjD,EAAa1qD,QAAQo4C,QACnB/6C,IAEF,MADAgrD,EAAYhrD,GACNA,KAGDqtD,GAGNvvD,EAAQwwD,cACTZ,IAEAhtD,KAAKk+C,sBAAsB59C,KAAK,CAC9B0sD,KAAAA,IAKN,OAAOL,GAGT3sD,KAAKkrD,qBAAqBrpD,EAAS,CACjC+rD,cAAexwD,EAAQwwD,cACvB7H,cAAe3oD,EAAQ+4C,mBAAgBrrC,EACvCskC,SAAUhyC,EAAQgyC,SAClBsB,WAAYtzC,EAAQszC,WACpBgN,aAActgD,EAAQsgD,eAGpBtgD,EAAQwwD,gBACVjB,EAAa3nD,MAAMq1C,IACjBr6C,KAAKmtD,UAAUn2C,EAAQ,CAAC3Y,EAAG,4BAEpB2B,KAAKgU,WAAWC,UAAU,qBAAsB,CACrD45C,WAAYzwD,EAAQywD,WACpBpyC,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CsB,MAAO+hC,EACPx4C,QAAS04C,EACTljB,UAAWx1B,EAAQw1B,UACnByY,gBAAiBka,EACjB5T,cAAeh5C,EAAQ+4C,aACvB5nB,OAAQnxB,EAAQmxB,OAChBmC,SAAAA,EACAo6B,YAAa1tD,EAAQszC,WACrBqa,QAAS3tD,EAAQutD,aAAe3qD,KAAK0b,gBAAgB4R,iBAAiBlwB,EAAQutD,mBAAgB7/C,IAC7F9F,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAC1CrnB,IACF,GAAkB,UAAfgsD,GACc,MAAfhsD,EAAMoW,OACU,6BAAfpW,EAAMG,MACQ,4BAAfH,EAAMG,MAIN,OAHAH,EAAMyqD,SAAU,EAChBuB,EAAa,gBACbzpD,EAAQ+H,OAKV,MADA0gD,EAAYhrD,GACNA,QAIVqtD,EAAa3nD,KAAKnD,EAAQiI,QAAQ7H,QAASJ,EAAQiI,QAAQlI,SAG7D,MAAMksD,EAGF,CACFjsD,QAAAA,GAMF,OAHA8X,GAA6Bm0C,EAAK,CAAC,YACnCA,EAAIhkD,QAAU6iD,EAEPmB,EAGIC,UAAU/2C,EAAgBg3C,EAAe5wD,EAkBjD,I,0CAOH,GAJGA,EAAQgyC,WAAahyC,EAAQ4sD,eAC9B5sD,EAAQ4sD,aAAe5sD,EAAQgyC,UAGb,IAAjB4e,EAAM7vD,OACP,OAAO6B,KAAKqrD,SAASr0C,EAAQg3C,EAAM,GAAI,OAAF,wBAAM5wD,GAAYA,EAAQ6wD,gBAAgB,KAGjFj3C,EAAShX,KAAK0b,gBAAgB0uC,kBAAkBpzC,IAAWA,EAC3D,MAAMgzC,EAAe5sD,EAAQ4sD,cAAe,EAAArrC,GAAA,GAAmBvhB,EAAQ4sD,mBAAgBl/C,EAEvF,IAAIyvC,EAAUn9C,EAAQm9C,SAAW,GAC7B7pB,EAAWtzB,EAAQszB,UAAY,GAChC6pB,IACDA,GAAU,EAAAlmB,GAAA,GAAckmB,EAAS7pB,IAGnC1wB,KAAKG,IAAI,YAAa6tD,EAAO5wD,GAE7B,MAAM8wD,EAAU,MAAOluD,KAAK2+C,cAEtBj8B,EAA+B,GAC/Bg7B,EAAgBC,IACpBj7B,EAAUpiB,KAAKq9C,IAGXv3B,EAAW4nC,EAAM5pD,KAAI,CAACm3B,EAAM/2B,KAChC,MAAMq3C,EAAUz+C,EAAQ6wD,gBAAgBzpD,GAClC2pD,EAAC,eACLP,eAAe,EACf3B,QAAS7uD,EAAQ6uD,QACjB9V,aAAc/4C,EAAQ+4C,aACtB5nB,OAAQnxB,EAAQmxB,OAChBy7B,aAAAA,EACA5a,SAAUhyC,EAAQgyC,SAClBub,aAAcvtD,EAAQutD,aACtBuD,QAAAA,EACAxQ,aAAAA,GACG7B,GASL,OANW,IAARr3C,IACD2pD,EAAE5T,QAAUA,EACZ4T,EAAEz9B,SAAWA,GAIR1wB,KAAKqrD,SAASr0C,EAAQukB,EAAM4yB,GAAGtsD,WAGrCzE,EAAQszC,YACThuB,EAAUpiB,MAAK,KACbN,KAAKwe,iBAAiBkyB,WAAW15B,EAAQ5Z,EAAQgyC,aAIrD1sB,EAAUxf,SAAS0B,IACjBA,OAMF,MAAM0lD,EAAc,CAACzoD,EAA0BvC,KAC7CU,KAAKuqD,oBAAoB,CAAC1oD,GAAUvC,GACpCU,KAAK4c,UAAUhW,cAAc,qBAGzBonB,EAAYhuB,KAAK0b,gBAAgB4R,iBAAiBtW,GAClDo3C,EAAUC,IACdruD,KAAKmtD,UAAUn2C,EAAQ,CAAC3Y,EAAG,4BAE3B,MAAMlD,GAAW,SAsBjB,OArBA6E,KAAKk+C,sBAAsB59C,KAAK,CAC9B0sD,KAAM,IACGhtD,KAAKgU,WAAWC,UAAU,0BAA2B,CAC1DwH,KAAMuS,EACNsgC,YAAaD,EACbve,gBAAiBka,EACjB5T,cAAeh5C,EAAQ+4C,aACvB5nB,OAAQnxB,EAAQmxB,OAChBu8B,YAAa1tD,EAAQszC,WACrBqa,QAAS3tD,EAAQutD,aAAe3qD,KAAK0b,gBAAgB4R,iBAAiBlwB,EAAQutD,mBAAgB7/C,EAC9FkgD,yBAA0BpN,KACzB54C,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,GAC5CxrB,EAAS8G,aACP3C,IACF8mB,EAASljB,SAASrB,GAAYyoD,EAAYzoD,EAASvC,KACnDnE,EAASyG,OAAOtC,QAKfnE,GAGH6tB,EAAwC5C,EAAShiB,KAAKvC,GAClDA,EAAQ+H,OAA+B5E,MAAMq1C,GAC5Cr6C,KAAKgU,WAAWC,UAAU,uBAAwB,CACvDwH,KAAMuS,EACN1V,MAAO+hC,MAGVr1C,MAAMs1C,IACL,IAAID,EACkB,sBAAnBC,EAAaj8C,EAEdg8C,EAAalD,GADCn3C,KAAKs4C,iBAAiBC,UAAU+B,EAAatlB,QAEhC,yBAAnBslB,EAAaj8C,IAErBg8C,EAAa,GADDr6C,KAAKgzC,eAAehI,QAAQsP,EAAa9Y,YAIvD,MAAM+sB,EAAqC,CACzClwD,EAAG,mBACHia,MAAO+hC,EACPhjB,UAAWx1B,EAAQw1B,UACnBx1B,QAAS04C,EACT7pB,SAAAA,GASF,OALG6pB,IACDA,EAAU,GACV7pB,EAAW,IAGN69B,KACNlgD,OAAO5E,IAGR,MAFAzJ,KAAKG,IAAIb,MAAM,+BAAgCmK,EAAK5H,GACpDyoD,EAAYzoD,EAAS4H,GACfA,OAIV,OAAO9H,QAAQ8Q,IAAIuW,GAAUhkB,MAAMwpD,GAC1BJ,EAAOI,EAAOhwD,OAAOC,eAIzBgwD,YAAYz3C,EAAgB03C,GACjC,OAAO1uD,KAAKu7C,UAAUvkC,EAAQhX,KAAK6c,gBAAgB8xC,qBAAqBD,IAGnEnT,UAAUvkC,EAAgBqjC,EAAiFj9C,EAY7G,I,MACH4Z,EAAShX,KAAK0b,gBAAgB0uC,kBAAkBpzC,IAAWA,EAG3D,MAAMnV,EAAU7B,KAAKqqD,wBAAwBrzC,EAAQ5Z,GAC/C4sD,EAAe5sD,EAAQ4sD,cAAe,EAAArrC,GAAA,GAAmBvhB,EAAQ4sD,mBAAgBl/C,EAEvF,IAAIwN,EACJ,OAAO+hC,EAAWh8C,GAChB,IAAK,iBAAkB,CACrB,MAAMuwD,EAAS,GAAK/sD,EAAQvD,GAC5B+7C,EAAW2O,KAAK1qD,GAAKswD,EACrB5uD,KAAKipD,gBAAgB4F,SAASxU,EAAW2O,KAAM,CAC7C3qD,EAAG,cACH8rB,MAAO,EACP2kC,aAAc,EACdlwD,OAAQ,GACR8Z,cAAe,KAGjB,MAAM,KAACswC,EAAI,QAAE3jD,GAAWrF,KAAKipD,gBAAgB8F,QAAQH,GACrDt2C,EAAQ,CACNja,EAAG,mBACH2qD,KAAAA,EACA3jD,QAAAA,GAGF,MAGF,IAAK,kBACHiT,EAAQ,CACNja,EAAG,oBACH22B,MAAOh1B,KAAKs4C,iBAAiB0W,SAAU3U,EAAW/7C,GAA6BA,KAEjF,MAGF,IAAK,qBAKHga,EAAQ,CACNja,EAAG,uBACHmjC,SANUxhC,KAAKgzC,eAAe7F,OAAQkN,EAAW/7C,GAAmCA,KAQtF,MAGF,IAAK,oBACHga,EAAQ,CACNja,EAAG,sBACHy8C,aAAcT,EAAWS,aACzBC,WAAYV,EAAWU,WACvBC,UAAWX,EAAWW,UACtBxiC,QAA2B,QAAlB,EAAA6hC,EAAW7hC,eAAO,QAAI,IAC/ByiC,MAAOZ,EAAWY,OAEpB,MAGF,IAAK,qBACH3iC,EAAQ,CACNja,EAAG,kBACHq5C,IAAKt6C,EAAQq9C,UAEf,MAGF,IAAK,kBACHniC,EAAQ,CACNja,EAAG,oBACHq5C,IAAKt6C,EAAQq9C,SACbrwB,MAAOiwB,EAAWjwB,MAClBswB,QAASL,EAAWK,QACpBC,SAAUN,EAAWM,SACrBC,SAAUP,EAAWO,SACrBC,WAAYR,EAAWQ,YAEzB,MAGF,IAAK,sBACHviC,EAAS+hC,EAAmBC,aAKhCz4C,EAAQyW,MAAQA,EAEhB,MAAMgyC,EAAehrD,IACnBU,KAAKuqD,oBAAoB,CAAC1oD,GAAUvC,GACpCU,KAAK4c,UAAUhW,cAAc,qBAmE/B,OAhEA/E,EAAQ+H,KAAO,KACb,MAAM4gD,EAAsC,GACzCxqD,KAAKg+C,iBAAiBhnC,KACvBwzC,EAAmBC,eAAiBzqD,KAAKg+C,iBAAiBhnC,GAAQ7I,WAGpE,MAAMu8C,EAASttD,EAAQutD,aAAe3qD,KAAK0b,gBAAgB4R,iBAAiBlwB,EAAQutD,mBAAgB7/C,EACpG,IAAI8/C,EA8BJ,OA5BEA,EADCxtD,EAAQgb,SACIpY,KAAKgU,WAAW62C,eAAe,+BAAgC,CAC1EpvC,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CqgB,UAAWx1B,EAAQw1B,UACnByY,gBAAiBka,QAAgBl/C,EACjCutC,SAAUj7C,EAAQg7C,QAClB95C,GAAIlB,EAAQ48C,SACZ8Q,YAAa1tD,EAAQszC,WACrB0F,cAAeh5C,EAAQ+4C,aACvB5nB,OAAQnxB,EAAQmxB,OAChBw8B,QAASL,GACRF,GAEUxqD,KAAKgU,WAAW62C,eAAe,qBAAsB,CAChEpvC,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CsB,MAAO+hC,EACPhjB,UAAWx1B,EAAQw1B,UACnByY,gBAAiBka,QAAgBl/C,EACjCjJ,QAAS,GACTipD,YAAa1tD,EAAQszC,WACrB0F,cAAeh5C,EAAQ+4C,aACvB5nB,OAAQnxB,EAAQmxB,OAChBw8B,QAASL,EACTM,yBAA0BpN,IACzB4M,GAGLxqD,KAAKg+C,iBAAiBhnC,GAAUwzC,EAEzBI,EAAW5lD,MAAM2hB,IACnBA,EAAQA,SACTA,EAAQA,QAAQzjB,SAASmY,IACP,uBAAbA,EAAOhd,IACRgd,EAAO8kB,OAAQ,MAKrBngC,KAAK6d,kBAAkBkS,qBAAqBpJ,MAC1CrnB,IAEF,MADAgrD,EAAYhrD,GACNA,KACLokC,SAAQ,KACN1jC,KAAKg+C,iBAAiBhnC,KAAYwzC,UAC5BxqD,KAAKg+C,iBAAiBhnC,OAKnChX,KAAKkrD,qBAAqBrpD,EAAS,CACjCkkD,cAAe3oD,EAAQ+4C,mBAAgBrrC,EACvCskC,SAAUhyC,EAAQgyC,SAClBsB,WAAYtzC,EAAQszC,WACpBya,YAAY,IAGPtpD,EAAQiI,QAcTohD,qBAAqBrpD,EAA0BzE,EAOlD,IACH,MAAM+Q,EAAYtM,EAAQvD,GACpB0Y,EAAShX,KAAK0gD,eAAe7+C,GAC7B6B,EAAUtG,EAAQ2oD,YAAc/lD,KAAK2oD,4BAA4B3xC,GAAUhX,KAAKukB,0BAA0BvN,GAChHnV,EAAQ0vC,WAAa7tC,EAAQ6D,IAC7B,MAAMmb,EAA+B,GACrC,GAAGtlB,EAAQ2oD,YAET/lD,KAAK6e,aAAa,CAAChd,GAAU,CAAC6B,QAAAA,EAASqiD,aAAa,EAAMz+B,YAAY,IACtE5E,EAAUpiB,MAAK,KACbN,KAAK4c,UAAUhW,cAAc,gBAAiB/E,UAE3C,CAIL,MAAMqR,EAA6B,CACjClT,KAAKqkB,kBAAkBrN,GACvB5Z,EAAQgyC,SAAWpvC,KAAKqkB,kBAAkBrN,EAAQ5Z,EAAQgyC,eAAYtkC,GAGxE,IAAI,MAAMpH,KAAWwP,EAChBxP,GACDA,EAAQ8gB,QAAQP,QAAQ9V,GAI5BnO,KAAK6e,aAAa,CAAChd,GAAU,CAAC6B,QAAAA,EAAS4jB,YAAY,IACnDtnB,KAAK4hD,oBAAoB//C,GACzB6gB,EAAUpiB,MAAK,KACbN,KAAK4c,UAAUhW,cAAc,iBAAkB,CAAC2qC,WAAY7tC,EAAQ6D,IAAK1F,QAAAA,OAI7E,MAAM2G,EAAiCxI,KAAK89C,kBAAkBj8C,EAAQw1B,WAAa,CACjFrgB,OAAAA,EACAupC,OAAQpyC,EACRihC,SAAUhyC,EAAQgyC,SAClB1rC,QAAAA,EACAynD,WAAY/tD,EAAQ+tD,YAuBtB,OApBAnrD,KAAKwmB,eAAexP,GAAU7I,GAE1B/Q,EAAQwwD,eAAiB/rD,EAAQ+H,MACnC8Y,EAAUpiB,MAAK,KACVlD,EAAQszC,YACT1wC,KAAKwe,iBAAiBkyB,WAAW15B,EAAQ5Z,EAAQgyC,UAGnDvtC,EAAQ+H,UAIT8Y,EAAUvkB,SACVf,EAAQsgD,cAAgBA,KAAc,KACrC,IAAI,MAAM94C,KAAY8d,EACpB9d,OAKC4D,EAGD6hD,wBAAwBrzC,EAAgB5Z,GAa9C,IAAI6xD,EAJD7xD,EAAQgyC,WAAahyC,EAAQ4sD,eAC9B5sD,EAAQ4sD,aAAe5sD,EAAQgyC,UAIjC,MAAM3iB,EAAczsB,KAAK0b,gBAAgB+Q,YAAYzV,GACrD,GAAGyV,GACYzsB,KAAK0b,gBAAgBwzC,QAAQl4C,GAClCpY,OAAOuwD,WAAY,CACzB,MAAM35C,EAAOxV,KAAK6c,gBAAgBC,UAElCmyC,EADiBz5C,EAAKulC,YAAcvlC,EAAKwlC,UAAY,IAAMxlC,EAAKwlC,UAAY,IAKhF,MAAMn5C,EAA2B,CAC/BxD,EAAG,UACHC,GAAI0B,KAAKknB,sBAAsBlQ,GAC/BmQ,QAAS/pB,EAAQutD,aAAe3qD,KAAK0b,gBAAgB0L,cAAchqB,EAAQutD,cAAgB3qD,KAAKovD,eAAep4C,GAC/G+B,QAAS/Y,KAAK0b,gBAAgB0L,cAAcpQ,GAC5Cq4C,YAAaJ,EACbrwD,OAAQoB,KAAKsvD,cAAct4C,GAC3B6K,KAAMzkB,EAAQ+4C,eAAiB,EAAAp0B,GAAA,IAAM,GAAQ/hB,KAAKgiB,YAAYC,sBAC9DpgB,QAAS,GACTohD,WAAY7lD,EAAQ8wD,QACpB72B,WAAW,UACX5G,SAAUzwB,KAAKuvD,oBAAoBnyD,EAAQ4sD,aAAc5sD,EAAQgyC,UACjEogB,WAAYpyD,EAAQgb,SACpB8hC,aAAc98C,EAAQ+8C,YACtBsV,QAASzvD,KAAK0vD,gBAAgB14C,GAC9BouC,MAAO34B,GAAe,EACtBjkB,SAAS,GAQX,OALAmR,GAA6B9X,EAAS,CAAC,OAAQ,iBACxBiJ,IAApB1N,EAAQ8wD,UACTrsD,EAAQiI,SAAU,UAGbjI,EAGD0tD,oBAAoBvF,EAAsB2F,GAChD,MAAM3iD,EAAS,CACb3O,EAAG,qBACHyxC,gBAAiBka,GAAgB2F,GAOnC,OAJGA,GAAgB3iD,EAAO8iC,kBAAoB6f,IAC5C3iD,EAAO42C,gBAAkB+L,GAGpB3iD,EAGD0iD,gBAAgB14C,GACtB,IAAIy4C,EACJ,GAAGzvD,KAAK0b,gBAAgB+Q,YAAYzV,GAAS,CAC3C,MAAM44C,EAAc5vD,KAAKoX,kBAAkB4lB,kBAAkBhmB,EAAO8M,aACjE8rC,MAAAA,OAAW,EAAXA,EAAaC,kBACdJ,EAAU,CACRpxD,EAAG,iBACH8rB,MAAO,EACPvrB,OAAQ,CACNkxD,UAAU,GAEZz2C,WAAYu2C,EAAYC,eACxBJ,QAAS,EACTM,YAAa,IAKnB,OAAON,EAMDL,eAAep4C,GACrB,OAAGhX,KAAK0b,gBAAgBqJ,UAAU/N,KAAYhX,KAAK0b,gBAAgB+Q,YAAYzV,IAAWhX,KAAKgwD,mBAAmBh5C,SAChH,EAEOhX,KAAK0b,gBAAgB0L,cAAcpnB,KAAK6c,gBAAgBC,UAAUxe,GAAGmI,YAIxE6oD,cAAct4C,GACpB,MAAMpY,EAAoC,GAc1C,OAZGoY,IADYhX,KAAK6c,gBAAgBC,UAAUxe,KAE5CM,EAAOmb,KAAM,EAET/Z,KAAK0b,gBAAgBmI,UAAU7M,IAAYhX,KAAK6c,gBAAgBgQ,MAAM7V,KACxEpY,EAAOopB,QAAS,IAIjBhoB,KAAK0b,gBAAgB+Q,YAAYzV,KAClCpY,EAAOu0B,MAAO,GAGTv0B,EAGDqxD,sBAAsBj5C,EAAgBk5C,GAC5C,MAAM7pD,EAAOrG,KAAK6c,gBAAgBC,UAAUxe,GAAGmI,WACzC0R,EAAS+3C,EAAgB/3C,OAC/B,GAAGA,IAAW9R,GAAQ6pD,EAAgBl5C,SAAW3Q,IAAS6pD,EAAgB1/B,SACxE,OAGF,MAAMwC,EAA+C,CACnD30B,EAAG,mBACH8rB,MAAO,EACPtI,KAAMquC,EAAgBruC,MAGxB,IAAIsuC,GAAe,EACnB,GAAGD,EAAgB1/B,SACjBwC,EAAU7L,QAAU+oC,EAAgB1/B,SAASrJ,QAC7C6L,EAAUo9B,UAAYF,EAAgB1/B,SAAS4/B,UAC/Cp9B,EAAUq8B,YAAca,EAAgB1/B,SAAS6+B,gBAC5C,CAGL,GAFAr8B,EAAUq8B,YAAca,EAAgBb,YAErCl3C,EAAOkb,SAAU,CAClB,MAAMg9B,EAAWrwD,KAAKoX,kBAAkBk5C,kBAAkBn4C,EAAOyU,aAC9DyjC,MAAAA,OAAQ,EAARA,EAAUE,wBACXv9B,EAAUo9B,UAAYC,EAASE,qBAC/BJ,GAAe,GAIfA,IACFn9B,EAAU7L,QAAUnnB,KAAK0b,gBAAgB0L,cAAcjP,IAiB3D,OAbGnY,KAAK0b,gBAAgB+Q,YAAYyjC,EAAgBl5C,UAC/Ck5C,EAAgBb,cACjBr8B,EAAUq8B,YAAca,EAAgBb,aAG1Cr8B,EAAUw9B,aAAeN,EAAgB5xD,IAGxC0Y,IAAW3Q,GAAS8pD,IACrBn9B,EAAUy9B,kBAAoBP,EAAgB5xD,GAC9C00B,EAAU09B,gBAAkB1wD,KAAK0b,gBAAgB0L,cAAc8oC,EAAgBl5C,SAG1Egc,EAGF29B,0BAA0B35C,EAAgBge,GAC/C,MAAMtO,EAAQkqC,OAAOC,iBACfhvD,EAAkC,CACtCxD,EAAG,iBACHO,OAAQ,GACRoa,OAAQ,CACN3a,EAAG,gCACH22B,MAAAA,GAEF12B,GAAIooB,EACJ3N,QAAS/Y,KAAK0b,gBAAgB0L,cAAcpQ,GAC5C0N,IAAKgC,EACL1P,OAAAA,EACA6K,KAAOmT,EAAsBnT,KAC7B1J,OAAQnB,GAIV,OADAhX,KAAKukB,0BAA0BvN,GAAQ5O,IAAIse,EAAO7kB,GAC3CA,EAGFivD,iBAAiBC,GACtB,OAAO/wD,KAAKg/C,mBAAmB+R,GAG1Bf,mBAAmBh5C,G,QACxB,OAAOA,EAAO+N,cAAwE,QAAzD,EAAiD,QAAjD,EAAA/kB,KAAK0b,gBAAgBwzC,QAAQl4C,GAAQg6C,oBAAY,eAAEpyD,cAAM,eAAEqyD,WAGnFrP,oBAAoB//C,EAAoBqY,EAA0Bla,KAAKkc,cAAcra,EAAQmV,SAC/FkD,IACDA,EAAOwE,YAAc7c,EAAQ6iB,IAEN1kB,KAAKqkB,kBAAkBxiB,EAAQmV,QACvC0P,MAAQ7kB,EAAQ6iB,IAE/B1kB,KAAK4oB,eAAe9M,uBAAuB5B,GAAQ,EAAOrY,GAE1D7B,KAAKgc,yBAAyBna,EAAQmV,OAAQkD,IAI3CgzC,qBAAqBhvB,GAC1B,MAAMoiB,EAActgD,KAAK89C,kBAAkB5f,GAM3C,GAAGoiB,EAAa,CACd,MAAM,OAACtpC,EAAM,OAAEupC,EAAM,QAAE78C,GAAW48C,EAC5Bl8B,EAAiBpkB,KAAKqkB,kBAAkBrN,GAc9C,OAZAhX,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,uBACH+nB,SAAU,CAACm6B,GACXp8B,SAAKrZ,EACL6lB,eAAW7lB,IAGbsZ,EAAeI,QAAQzgB,OAAOw8C,UAEvBvgD,KAAK89C,kBAAkB5f,GAC9Bx6B,EAAQK,OAAOw8C,IAER,EAGT,OAAO,EAwCI2Q,oB,0CACX,MAAM3U,EAAav8C,KAAKu8C,WAAW73C,MACnC,MAAO1E,KAAK4oB,eAAe3J,gBAAgB7E,KAAmB,CAC5D,MAAMhY,QAAepC,KAAK+pB,eAAe,IAAK3P,IAC9C,IAAImiC,KAAgBn6C,EAAO8lB,MACzB,UAwBCipC,iBAAiBl2C,EAAQ,GAAI6N,EAAsBC,EAAgBtO,EAAW,EAAGyF,GACtF,OAAOlgB,KAAK4oB,eAAeC,WAAW5N,EAAO6N,EAAaC,EAAOtO,EAAUyF,GAGtE4jC,qBAAqB9sC,EAAgBo4B,G,UAC1C,MAAMhrB,EAAiBpkB,KAAKqkB,kBAAkBrN,EAAQo4B,GACtD,GAAGA,EAAU,CACX,MAAMgiB,EAAqBpxD,KAAKqkB,kBAAkBrN,GAC5CsR,EAAY/I,KAAK8D,IAAgC,QAA5B,EAAA+tC,EAAmB9oC,iBAAS,QAAI,EAAGlE,EAAekE,WACvEzmB,EAAU7B,KAAK+e,iBAAiB/H,EAAQoN,EAAesC,OAC7D,QAAuB,QAAf,EAAA7kB,MAAAA,OAAO,EAAPA,EAASjD,cAAM,eAAEmb,MAAOuO,EAAYlE,EAAesC,MAAQ4B,EAAY,EAC1E,CACL,MAAMzmB,EAAU7B,KAAK+e,iBAAiB/H,EAAQoN,EAAesC,OACvD4B,EAAYtR,EAAOqc,SAAW9T,KAAK8D,IAAIe,EAAekE,UAAWlE,EAAemE,iBAAmBnE,EAAekE,UACxH,QAAuB,QAAf,EAAAzmB,MAAAA,OAAO,EAAPA,EAASjD,cAAM,eAAEmb,MAAOuO,EAAYlE,EAAesC,MAAQ4B,EAAY,GAK5EyB,eAAehB,EAAetO,EAA0B6E,GAG7D,IACIwJ,EAAc,OAEAhe,IAAfwU,IACDA,EAAatf,KAAK4oB,eAAevJ,cAAc5E,IAG9C6E,IACDwJ,EAA2B,MAAbxJ,EACdA,GAActf,KAAKgiB,YAAYC,uBAGjC,MACMs6B,EAAav8C,KAAKu8C,WAAW73C,MAK7B2P,EAA6B,CACjCmH,UAAWf,EACX42C,YAAa/xC,EACbgyC,UAtBe,EAuBfC,YAAavxD,KAAK0b,gBAAgB4R,iBAtBhCkkC,WAuBFzoC,MAXe,IAYf2U,KAAM,KAGR,OAAO19B,KAAKgU,WAAWqa,gBAAgB,sBAAuBha,EAAQ,CAEpEqf,YAAY,IACX1uB,MAAMwX,IACP,IAAI+/B,KAAoC,gCAApB//B,EAAcne,EAAqC,OAAO,KAE3E,MACD2B,KAAKG,IAAI,8BAA+Bqc,EAAcrB,QAAS,OAAF,UAAMqB,EAAcrB,QAAQ,KAI1EmE,GAA+B7E,IAAaL,IAC3Dpa,KAAK4oB,eAAejO,iBAAiBF,GAGnC6E,GAEFtf,KAAKwe,iBAAiBC,mBAGxBze,KAAK6c,gBAAgBoJ,aAAazJ,EAActD,OAChDlZ,KAAK0d,gBAAgBwI,aAAa1J,EAAc2J,OAChDnmB,KAAK6e,aAAarC,EAAc4J,UAEhC,IAAIqrC,IAAuBnyC,EACvBoyC,GAAa,EACjB,MAAMC,EAAoC,IAAI//C,IACxCggD,EAA8Bn3C,IAAaL,GAAmB,KAAgBK,EAC9E2K,EAAmB3K,IAAaL,GAsCtC,IArCA,EAAA4L,GAAA,GAAgBxJ,EAAcrB,SAAuBjB,SAG3BpP,IAArBoP,EAAOsB,YACRtB,EAAOsB,UAAYo2C,GAGrB5xD,KAAK4oB,eAAe9J,WAAW5E,OAAQpP,GAAW,EAAMsa,GAEpDqsC,GACDzxD,KAAK0b,gBAAgBmI,UAAU3J,EAAOlD,QAAUhX,KAAK0b,gBAAgB5C,UAAUoB,EAAOuB,SACvFzb,KAAK4/C,mBAAmB1lC,EAAOwE,aAC/B+yC,GAAuB,QAGJ3mD,IAAlBoP,EAAOlD,SAQP8R,IAAe,EAAArH,GAAA,GAAevH,GAAU4O,IACzC9oB,KAAKgc,yBAAyB9B,EAAOlD,OAAQkD,GAC7Cw3C,GAAa,IAKX,EAAA/yC,GAAA,GAAmBzE,EAAO0N,qBAAuB,EAAAjJ,GAAA,GAAmBzE,EAAO2N,sBAC7E8pC,EAAavpD,IAAI8R,EAAOlD,OAAQkD,GAEhCla,KAAKG,IAAIb,MAAM,eAAgB4a,EAAQ7F,QAIxCs9C,EAAal+C,KAAM,CAEpB,MAAMyE,EAAU,IAAIy5C,EAAat+C,QAC3B2V,EAAW9Q,EAAQ9T,KAAK4S,GAAWhX,KAAKgf,mBAAmBhI,KACjErV,QAAQ8Q,IAAIuW,GAAUhkB,MAAK,KACzBhF,KAAK4c,UAAUhW,cAAc,sBAAuB+qD,GAEpD,IAAI,IAAI9rD,EAAI,EAAGA,EAAIqS,EAAQ/Z,SAAU0H,EAAG,CACtC,MAAMmR,EAASkB,EAAQrS,GACvB7F,KAAK4c,UAAUhW,cAAc,gBAAiB,CAC5CoQ,OAAAA,EACAkD,OAAQla,KAAKkc,cAAclF,SAOnC,MAAMkE,EAASsB,EAAuDtB,MAGhE22C,EAAgB7xD,KAAK4oB,eAAerM,iBAAiB9B,GAAU,GACrE,IAAIq3C,EAAgB,EACpB,IAAI,IAAIjsD,EAAI,EAAG1H,EAAS0zD,EAAc1zD,OAAQ0H,EAAI1H,IAAU0H,GACvD,EAAA8Y,GAAA,GAAmBkzC,EAAchsD,GAAG6Y,gBACnCozC,EAIN,MAAM5pC,GACHhN,GACD42C,GAAiB52C,IAChBsB,EAAcrB,QAAQhd,OACtB+pB,GACDloB,KAAK4oB,eAAelO,iBAAiBD,GAAU,GAG9Ci3C,EACD1xD,KAAKgc,2BAELhc,KAAK4c,UAAUhW,cAAc,sBAAuB,IAAIgL,KAG1D,MAAMuJ,EAAWqB,EAAuDrB,QAClE42C,EA7HS,MA6HOhpC,EAAqB5N,EAAUA,EAAQvT,MAAM,EAAGmhB,GACtE,MAAO,CACLb,MAAOA,GAAS6pC,EAAcA,EAAc5zD,OAAS,KAAOgd,EAAQA,EAAQhd,OAAS,GACrF+c,MAAAA,EACAC,QAAS42C,MAKFC,gBAAgBh7C,EAAgBgiC,EAAoBiL,EAAgB7mD,EAS5E,I,iDACIA,EAAQ4sD,oBACR5sD,EAAQgyC,SAEfp4B,EAAShX,KAAK0b,gBAAgB0uC,kBAAkBpzC,IAAWA,EAG3D,IAAI,IAAInR,EAAI,EAAG1H,GAFf8lD,EAAOA,EAAKr8C,QAAQ6X,MAAK,CAACC,EAAGC,IAAMD,EAAIC,KAEVxhB,OAAQ0H,EAAI1H,IAAU0H,EAAG,CACpD,MAAM6e,EAAMu/B,EAAKp+C,GACXqqD,EAAkBlwD,KAAK+e,iBAAiBi6B,EAAYt0B,GACvDwrC,EAAgBtxD,OAAOgmB,cACxB5kB,KAAKo6C,SAASpjC,EAAQk5C,EAAgBruD,QAAS,CAC7C6uB,SAAUw/B,EAAgBx/B,SAC1BylB,aAAc/4C,EAAQ+4C,aACtB5nB,OAAQnxB,EAAQmxB,SAGlB01B,EAAKh6C,OAAOpE,IAAK,KACf1H,GAIN,IAAI8lD,EAAK9lD,OACP,OAAOwD,QAAQM,UAGjB,MAAMgwD,QAAejyD,KAAKgU,WAAWoZ,YAC/B8kC,EAAejO,EAAKh6C,OAAOgoD,EAAOE,oBAAqBlO,EAAK9lD,OAAS8zD,EAAOE,qBAE/E/0D,EAAQg1D,eACTh1D,EAAQi1D,YAAa,GAGvB,MAAM3lC,EAKF,GAEE4lC,EAAoB,GACpBC,EAActO,EAAK7/C,KAAKsgB,I,YAC5B,MAAMwrC,EAAkBlwD,KAAK+e,iBAAiBi6B,EAAYt0B,GACpD7iB,EAA2B7B,KAAKqqD,wBAAwBrzC,EAAQ5Z,GACtEk1D,EAAQhyD,KAAKuB,EAAQvD,IAErB,MAAM+U,EAAqC,CACzC,WACA,SAIEjW,EAAQi1D,aACVxwD,EAAQ2uB,SAAWxwB,KAAKiwD,sBAAsBj5C,EAAQk5C,GACtD78C,EAAK/S,KAAK,QAAS,aAEA,QAAhB,EAAAuB,EAAQ2uB,gBAAQ,eAAE4/B,YAAap5C,IAAWhX,KAAK0b,gBAAgB1E,eACzDnV,EAAQslB,SAIf/pB,EAAQg1D,cAAiBlC,EAAgB53C,OAC3CjF,EAAK/S,KAAK,WAGZ,MAAMkyD,EAAqC,QAAxB,EAAAtC,EAAgBz/B,gBAAQ,eAAEqf,gBACvC2iB,EAAoBxO,EAAK7nD,QAAQo2D,GACvC,GAAGA,IAAqC,IAAvBC,EAA0B,CACzC,MAAMC,EAAgBJ,EAAQG,GAC9B5wD,EAAQ4uB,SAAW,CACjBpyB,EAAG,qBACHyxC,gBAAiB4iB,GAQrBr/C,EAAKnQ,SAASqE,IAEZ1F,EAAQ0F,IAAO,EAAA8jB,GAAA,GAAK6kC,EAAgB3oD,OAGtC,MAAMi6B,EAA+D,QAAnD,EAAA3/B,EAAQyW,aAA2C,eAAEkpB,SAoBvE,OAnBGA,IACmC,CAAC,QAAS,SACrC/V,SAAS+V,EAAS/hC,QACxBoC,EAAsBjD,OAAOulD,cAAe,GAG5C3iB,EAAS0K,UAAYlsC,KAAK4c,UAAUrW,UACjB,EAAAosD,GAAA,GAAsBnxB,KAEvC3/B,EAAQyW,MAA4C1Z,OAAOg0D,WAAY,IAK3E1C,EAAgBjN,aAC+B,QAAlC,EAAAv2B,EAAOwjC,EAAgBjN,mBAAW,QAAKv2B,EAAOwjC,EAAgBjN,YAAc,CAAC1C,OAAQ,MAAOvgD,KAAK2+C,cAAev4B,SAAU,KAClIA,SAAS9lB,KAAKuB,GAGfA,KAGT,IAAI,MAAMqsD,KAAWxhC,EAAQ,CAC3B,MAAMmmC,EAAQnmC,EAAOwhC,GAClB2E,EAAMzsC,SAASjoB,OAAS,GACzB00D,EAAMzsC,SAASljB,SAASrB,IACtBA,EAAQohD,WAAa4P,EAAMtS,UAKjCgS,EAAYrvD,SAASrB,IACnB7B,KAAKkrD,qBAAqBrpD,EAAS,CACjCkkD,cAAe3oD,EAAQ+4C,mBAAgBrrC,EACvCqgD,YAAY,OAIhB,MAAMX,EAAsC,GACzCxqD,KAAKg+C,iBAAiBhnC,KACvBwzC,EAAmBC,eAAiBzqD,KAAKg+C,iBAAiBhnC,GAAQ7I,WAGpE,MAAMrE,EAA2C9J,KAAKgU,WAAW62C,eAAe,2BAA4B,CAC1GiI,UAAW9yD,KAAK0b,gBAAgB4R,iBAAiB0rB,GACjD16C,GAAI2lD,EAAK7/C,KAAKsgB,IAAQ,EAAA/F,GAAA,GAAmB+F,KACzC2S,UAAWk7B,EAAYnuD,KAAKvC,GAAYA,EAAQw1B,YAChD07B,QAAS/yD,KAAK0b,gBAAgB4R,iBAAiBtW,GAC/Cg8C,cAAe51D,EAAQ61D,YACvB1kC,OAAQnxB,EAAQmxB,OAChB6nB,cAAeh5C,EAAQ+4C,aACvB+c,YAAa91D,EAAQi1D,WACrBc,oBAAqB/1D,EAAQg1D,aAC7BrH,QAAS3tD,EAAQutD,aAAe3qD,KAAK0b,gBAAgB4R,iBAAiBlwB,EAAQutD,mBAAgB7/C,GAC7F0/C,GAAoBxlD,MAAM2hB,IAC3B3mB,KAAKG,IAAI,2BAA4BwmB,GACrC3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAC1CrnB,IAEF,MADAU,KAAKuqD,oBAAoBgI,EAAajzD,GAChCA,KACLokC,SAAQ,KACN1jC,KAAKg+C,iBAAiBhnC,KAAYwzC,UAC5BxqD,KAAKg+C,iBAAiBhnC,MAIjChX,KAAKg+C,iBAAiBhnC,GAAUwzC,EAEhC,MAAMxhC,EAA+B,CAAClf,GAKtC,OAJGooD,EAAa/zD,QACd6qB,EAAS1oB,KAAKN,KAAKgyD,gBAAgBh7C,EAAQgiC,EAAYkZ,EAAc90D,IAGhEuE,QAAQ8Q,IAAIuW,GAAUhkB,KAAKomD,GAAA,MAG7BgI,qBAAqB1uC,IAWpB6lC,oBAAoBnkC,EAA6B9mB,GACvD8mB,EAASljB,SAASrB,IAChB,GAAGA,EAAQvC,QAAUA,EAIrB,GAAGA,EAAO,CACRuC,EAAQvC,MAAQA,EAChBU,KAAK4c,UAAUhW,cAAc,gBAAiB,CAAC2qC,WAAY1vC,EAAQ0vC,WAAYgP,OAAQ1+C,EAAQ6iB,IAAKplB,MAAAA,IAEpG,MAAM4a,EAASla,KAAKkc,cAAcra,EAAQmV,QACvCkD,GACDla,KAAK4c,UAAUhW,cAAc,gBAAiB,CAACoQ,OAAQnV,EAAQmV,OAAQkD,OAAAA,gBAGlErY,EAAQvC,SAKd+zD,wBAAwB9rD,GAC7B,MAAM+rD,EAAI/rD,EAAIG,MAAM,KACdsP,GAAkBs8C,EAAE,GAE1B,MAAgB,cADkBA,EAAE,GACNtzD,KAAK2oD,4BAA4B3xC,GAAUhX,KAAKukB,0BAA0BvN,GAGnG2N,sBAAsBjhB,EAA+CghB,GAK1E,MAJuB,iBAAd,IACPhhB,EAAU1D,KAAKqzD,wBAAwB3vD,IAGlCA,GAAWA,EAAQgB,IAAIggB,GAGxBk8B,qBAAqB5pC,EAAgBvX,GAC3C,MAAMiE,EAA2B,IAAIkO,IAqBrC,OApBAlO,EAAQsT,OAASA,EACjBtT,EAAQjE,KAAOA,EACfiE,EAAQ6D,IAAM,GAAGyP,KAAUvX,IAkBpBiE,EAGF6gB,0BAA0BvN,G,MAC/B,OAA2C,QAApC,EAAAhX,KAAKi/C,wBAAwBjoC,UAAO,QAAKhX,KAAKi/C,wBAAwBjoC,GAAUhX,KAAK4gD,qBAAqB5pC,EAAQ,WAGpHu8C,mBAAmBhsD,GACxB,MAAmB,iBAAV,EACAA,EAEAvH,KAAKqzD,wBAAwB9rD,GAIjCisD,eAAerlD,GACpB,IAAI,MAAM6I,KAAUhX,KAAKi/C,wBAAyB,CAChD,GAAGj/C,KAAK0b,gBAAgBmI,UAAU7M,EAAOvQ,YACvC,SAGF,MAAM5E,EAAU7B,KAAKi/C,wBAAwBjoC,GAAQtS,IAAIyJ,GACzD,GAAGtM,EACD,OAAOA,EAIX,OAAO7B,KAAK2kB,sBAAsB,KAAMxW,GAGnC4Q,iBAAiB/H,EAAgB7I,GACtC,OAAI6I,EAIGhX,KAAK2kB,sBAAsB3kB,KAAKukB,0BAA0BvN,GAAS7I,GAHjEnO,KAAKwzD,eAAerlD,GAMxBuyC,eAAe7+C,GAGpB,OAFaA,EAAQkX,SAAW/Y,KAAK0b,gBAAgB5C,UAAUjX,EAAQkX,UAAY,KAK9E06C,kBAAkBz8C,GACvB,OAAOhX,KAAK4oB,eAAelH,UAAU1K,GAGhCkF,cAAclF,GACnB,OAAOhX,KAAK4oB,eAAe1M,cAAclF,GAGpC08C,sBAAsBniB,EAAgC0S,GAC3D,MAAMvgD,EAAU1D,KAAKuzD,mBAAmBhiB,GACxC,IAAIoiB,GAAe1P,EAAK9lD,OAAQy1D,GAAc3P,EAAK9lD,OACnD,IAAI,MAAMumB,KAAOu/B,EAAM,CACrB,MAAMpiD,EAAU7B,KAAK2kB,sBAAsBjhB,EAASghB,GASpD,GARIivC,IACFA,GAAe3zD,KAAK6zD,WAAWhyD,IAG7B+xD,IACFA,GAAc5zD,KAAK8zD,iBAAiBjyD,IAGnC8xD,GAAeC,EAAY,MAGhC,MAAO,CAACD,YAAAA,EAAaC,WAAAA,GAIhB50C,mBAAmBgP,GACxB,IAAIlkB,EACJ,QAAiBgB,IAAdkjB,EAAyB,CAC1B,MAAMhX,EAAShX,KAAK0b,gBAAgB5C,UAAUkV,GAC9C,IAAIxc,EAAMxR,KAAK0+C,yBAAyBh6C,IAAIsS,GAK5C,GAJGxF,IACD1H,EAAU0H,EAAI1H,SAGbA,EACD,OAAOA,EAGTA,GAAU,SACV9J,KAAK0+C,yBAAyBt2C,IAAI4O,EAAQxF,EAAM,CAC9CuiD,gBAAiB/zD,KAAK0b,gBAAgBs4C,uBAAuBhmC,GAC7DlkB,QAAAA,IAIJ,OAAG9J,KAAKi0D,6BAIRj0D,KAAKi0D,4BAA6B,EAAA/pD,EAAA,GAAM,GAAGlF,MAAK,KAC9C,MAAMkvD,EAAsC,GACtClrC,EAA+C,GACrD,IAAI,MAAOhS,GAAQ,gBAAC+8C,EAAe,QAAEjqD,MAAa9J,KAAK0+C,yBACrDwV,EAAiB5zD,KAAKyzD,GACtB/qC,EAAShS,GAAUlN,EAWrB,OARA9J,KAAK0+C,yBAAyBr6C,QAQvBrE,KAAKgU,WAAWC,UAAU,0BAA2B,CAAC6Z,MAAOomC,IAAmBlvD,MAAM5C,IAC3FpC,KAAK4oB,eAAenM,aAAara,GAEjCA,EAAO+Y,QAAQjY,SAASgX,IACtB,MAAMlD,EAASkD,EAAOlD,OACnBA,IACDgS,EAAShS,GAAQ/U,QAAQiY,UAClB8O,EAAShS,UAMlBvN,QAIDzE,MAAK,KAvBa,MACnB,IAAI,MAAMgS,KAAUgS,EAClBA,EAAShS,GAAQ/U,aAAQ6I,IAsB3BqpD,GAEAn0D,KAAKi0D,2BAA6B,KAC/Bj0D,KAAK0+C,yBAAyBjrC,MAC/BzT,KAAKgf,4BAzCFlV,GAAW9J,KAAKi0D,2BAiDnBG,eAAe34C,EAAiB44C,EAAsBC,GAC5D,OAAOt0D,KAAKgU,WAAWqa,gBAAgB,yBAA0B,CAC/DgmC,WAAAA,EACAC,OAAAA,EACA74C,KAAAA,EACA0nC,OAAQ,IACPn+C,MAAMuvD,IACPv0D,KAAK6d,kBAAkBkS,qBAAqB,CAC1C1xB,EAAG,cACHgd,OAAQ,CACNhd,EAAG,YACH8lB,IAAKowC,EAAgBpwC,IACrBwM,UAAW4jC,EAAgB5jC,cAI3B4jC,EAAgB5qC,QAIb3pB,KAAKo0D,eAAe34C,EAAM44C,EAAYC,MAIpCE,aAAax9C,EAAgBy9C,EAAqBH,G,0CAC7D,GAAGt0D,KAAK0b,gBAAgBmI,UAAU7M,GAAS,CACzC,MAAMlN,EAAU9J,KAAK00D,WAAW19C,EAAQ,EAAG,GAErC29C,QAAsB7qD,EAEtB8Z,EAAY5M,EAAO8M,WACnB4C,EAAQiuC,EAAcnwC,QAAQ,IAAM,EAC1C,OAAOxkB,KAAKgU,WAAWqa,gBAAgB,yBAA0B,CAC/DtK,QAAS/jB,KAAK0d,gBAAgBmV,gBAAgBjP,GAC9Cu/B,QAAQ,EAAAxkC,GAAA,GAAmB+H,KAC1B1hB,MAAM2oB,IACJA,GACD3tB,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,iCACHgb,WAAYuK,EACZ2gC,iBAAkB79B,IAIfiH,KAIX,OAAO3tB,KAAKo0D,eAAep0D,KAAK0b,gBAAgB4R,iBAAiBtW,GAASy9C,EAAWH,GAAQtvD,MAAK,KAGhG,GAFAhF,KAAKklD,sBAAsBluC,GAExBy9C,EACDz0D,KAAK4c,UAAUhW,cAAc,eAAgB,CAACoQ,OAAAA,EAAQkD,OAAQla,KAAKkc,cAAclF,SAC5E,QACEhX,KAAKy+C,sBAAsBznC,UAC3BhX,KAAK4+C,QAAQ5nC,GAEpB,MAAMH,EAAI7W,KAAK0+C,yBAAyBh6C,IAAIsS,GACzCH,IACD7W,KAAK0+C,yBAAyB36C,OAAOiT,GACrCH,EAAE/M,QAAQ7H,aAAQ6I,IAGpB9K,KAAK4oB,eAAehL,qBAAqB5G,UAKvCkuC,sBAAsBluC,GAC5B,CACEhX,KAAKo/C,iBACLp/C,KAAKq/C,eACLr/C,KAAKs/C,gBACLt/C,KAAKu/C,eACLv/C,KAAKg+C,iBACLh+C,KAAKwmB,gBACLtjB,SAASowD,WACFA,EAAEt8C,MAGX,MAAMmnC,EAAqBn+C,KAAKm+C,mBAAmBz5C,IAAIsS,GACvD,GAAGmnC,EAAoB,CACrB,IAAI,MAAOz5B,EAAK5a,KAAYq0C,EAC1Br0C,EAAQ7H,QAAQjC,KAAKozD,qBAAqB1uC,IAG5Cy5B,EAAmB95C,QAGrB,CACErE,KAAKi/C,wBACLj/C,KAAKm/C,0BACLj8C,SAASowD,IACT,MAAMsB,EAAKtB,EAAEt8C,GACV49C,GACDA,EAAGvwD,WAKFwwD,mBAAmB79C,GACxB,OAAOrV,QAAQ8Q,IAAI,CACjBzS,KAAKke,gBAAgB7W,WACrBrH,KAAK80D,iBAAiB99C,KAEvBhS,MAAK,EAAEmC,EAAOyU,MACbzU,EAAMy+C,qBAAqB5uC,GAAU4E,EAAO8K,MAC5C1mB,KAAK4c,UAAUhW,cAAc,qBAAsB,CAACoQ,OAAAA,EAAQ0P,MAAO9K,EAAO8K,WAIvEouC,iBAAiB99C,G,MACtB,MAAMof,EAA+B,QAA3B,EAAAp2B,KAAKu/C,eAAevoC,UAAO,QAAKhX,KAAKu/C,eAAevoC,GAAU,GACxE,OAAGof,EAAEtsB,QAAgBssB,EAAEtsB,QACfssB,EAAE1P,MAAc/kB,QAAQM,QAAQm0B,GAEjCA,EAAEtsB,QAAU9J,KAAK+0D,UAAU,CAChC/9C,OAAAA,EACAg+C,YAAa,CAAC32D,EAAG,6BACjBqoB,MAAO,EACPqC,MAAO,IACN/jB,MAAM5C,I,MAGP,OAFAg0B,EAAElb,MAAQ9Y,EAAO8Y,MACjBkb,EAAE1P,MAAyB,QAAjB,EAAAtkB,EAAOoiB,QAAQ,UAAE,eAAEE,IACtB0R,KACNsN,SAAQ,YACFtN,EAAEtsB,WAINmrD,uBAAuBj+C,G,MAC5B,OAAkC,QAA3B,EAAAhX,KAAKu/C,eAAevoC,UAAO,eAAEkE,MAG/Bg6C,uBAAuBl+C,G,MAC5B,OAAkC,QAA3B,EAAAhX,KAAKu/C,eAAevoC,UAAO,eAAE0P,MAG/ByuC,oBAAoBn+C,EAAgB0N,EAAa0wC,EAAiB7mC,EAAkB8mC,GACzF,OAAOr1D,KAAKgU,WAAWC,UAAU,+BAAgC,CAC/DwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5Co+C,MAAAA,EACA7mC,OAAAA,EACA8mC,WAAAA,EACA/2D,IAAI,EAAAqgB,GAAA,GAAmB+F,KACtB1f,MAAM2hB,IAEP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAIzC2uC,iBAAiBt+C,GACtB,OAAOhX,KAAKgU,WAAWqa,gBAAgB,4BAA6B,CAClE5S,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,KAC3ChS,MAAMuvD,IACPv0D,KAAK6d,kBAAkBkS,qBAAqB,CAC1C1xB,EAAG,cACHgd,OAAQ,CACNhd,EAAG,YACH8lB,IAAKowC,EAAgBpwC,IACrBwM,UAAW4jC,EAAgB5jC,aAI3B4jC,EAAgB5qC,OAcb3pB,KAAKs1D,iBAAiBt+C,IAbXhX,KAAKukB,0BAA0BvN,GACvC9T,SAASrB,IACXA,EAA4BjD,OAAOgd,eAC7B/Z,EAA4BjD,OAAOgd,UAI/C5b,KAAK4c,UAAUhW,cAAc,uBAAwB,CAACoQ,OAAAA,EAAQu+C,UAAU,WACjEv1D,KAAKu/C,eAAevoC,IAEpB,MAONw+C,aAAavS,GAClB,MAAM4P,EAAQ7yD,KAAKk/C,uBAAuB+D,GAC1C,OAAO,EAAAuS,GAAA,GAAa10D,MAAMC,KAAK8xD,EAAMn8C,WAGhC++C,sBAAsB5zD,GAC3B,KAAIA,MAAAA,OAAO,EAAPA,EAASohD,YAAY,OAAOphD,EAEhC,MAAM6B,EAAU1D,KAAKk/C,uBAAuBr9C,EAAQohD,YACpD,IAAIyS,EAAS9E,OAAOC,iBACpB,IAAI,MAAOnsC,EAAK7iB,KAAY6B,EACvB7B,EAAQ6iB,IAAMgxC,IACfA,EAAS7zD,EAAQ6iB,KAIrB,OAAO1kB,KAAK2kB,sBAAsBjhB,EAASgyD,GAGtCC,eAAeC,EAAmBn2C,EAAuB,OAC9D,OAAO,EAAA4jC,GAAA,GAAqBrjD,KAAKk/C,uBAAuB0W,GAAYn2C,GAG/Do2C,mBAAmBD,GACxB,MAAM3R,EAAOjkD,KAAK21D,eAAeC,EAAW,OACtClyD,EAAU1D,KAAKk/C,uBAAuB0W,GAC5C,OAAO3R,EAAK7/C,KAAKsgB,GAAQ1kB,KAAK2kB,sBAAsBjhB,EAASghB,KAGxDoxC,iBAAiBj0D,GACtB,OAAIA,EACKA,EAA4BohD,WAAmBjjD,KAAK21D,eAAgB9zD,EAA4BohD,YAC7F,CAACphD,EAAQ6iB,KAFD,GAKfqxC,eAAel0D,EAAoBm0D,GACxC,MAAMj8C,EAAmB,GACzB,GAAIlY,EAA4BohD,WAAY,CAC1C,MAAMv/C,EAAU1D,KAAKk/C,uBAAwBr9C,EAA4BohD,YACzE,IAAI,MAAOv+B,EAAK7iB,KAAY6B,EACvBsyD,EAAOn0D,IACRkY,EAAIzZ,KAAKuB,QAIVm0D,EAAOn0D,IACRkY,EAAIzZ,KAAKuB,GAIb,OAAOkY,EAGFmN,sBAAsBlQ,GAC3B,MAAMkD,EAASla,KAAKkc,cAAclF,GAClC,OAAOhX,KAAKi2D,sBAAsB/uC,uBAAsBhN,MAAAA,OAAM,EAANA,EAAQwE,cAAe,GAG1Ew3C,YAAYr0D,EAAkBzE,EAKhC,I,UACH,IAAIyE,GAAyB,iBAAdA,EAAQxD,EACrB,OAGY,QAAd,EAAAwD,EAAQjD,cAAM,QAAdiD,EAAQjD,OAAW,IAKnB,MAAMoY,EAAShX,KAAK0gD,eAAe7+C,GAC7B6B,EAAUtG,EAAQsG,SAAW1D,KAAKukB,0BAA0BvN,GAC5D6M,EAAkC,gBAAtBhiB,EAAQkX,QAAQ1a,EAC5BouB,EAAc5I,GAAa7jB,KAAK0d,gBAAgB+O,YAAYzV,EAAO8M,YACnEqyC,EAA0B,YAAdt0D,EAAQxD,EAEvBjB,EAAQkqB,aACTzlB,EAAQjD,OAAOgmB,aAAc,GAG/B,MAAMF,GAAM,EAAAsC,GAAA,GAAkBnlB,EAAQvD,IACtCuD,EAAQ6iB,IAAMA,EAEXyxC,IACE/4D,EAAQ2oD,cACTlkD,EAAQjD,OAAOgrD,cAAe,GAG7B/nD,EAAQohD,aACsD,QAA/C,EAAAjjD,KAAKk/C,uBAAuBr9C,EAAQohD,mBAAW,QAAKjjD,KAAKk/C,uBAAuBr9C,EAAQohD,YAAcjjD,KAAK4gD,qBAAqB5pC,EAAQ,YAChJ5O,IAAIsc,EAAK7iB,GAGhBA,EAAQ2tD,aAET3tD,EAAQuW,SAAWvW,EAAQ2tD,aAI/B,MAAMt1C,EAASla,KAAKkc,cAAclF,GAC/BkD,GAAUwK,GACRA,EAAMxK,EAAOrY,EAAQjD,OAAOmb,IAC7B,qBACA,uBACAlY,EAAQjD,OAAOopB,QAAS,GAKzBnmB,EAAQ4uB,WACN5uB,EAAQ4uB,SAASqf,kBAClBjuC,EAAQ4uB,SAASqf,gBAAkBjuC,EAAQm/C,cAAe,EAAAh6B,GAAA,GAAkBnlB,EAAQ4uB,SAASqf,kBAG5FjuC,EAAQ4uB,SAASmzB,kBAClB/hD,EAAQ4uB,SAASmzB,iBAAkB,EAAA58B,GAAA,GAAkBnlB,EAAQ4uB,SAASmzB,mBAI1E,MAAM6L,EAAU0G,GAAat0D,EAAQ4tD,QAClCA,IACEA,EAAQtM,SAAQsM,EAAQtM,QAAS,EAAAn8B,GAAA,GAAkByoC,EAAQtM,SAC3DsM,EAAQrM,cAAaqM,EAAQrM,aAAc,EAAAp8B,GAAA,GAAkByoC,EAAQrM,eAG1E,MAAMgT,IAAgBp/C,EAClBo/C,IACFv0D,EAAQggB,MAAQ7hB,KAAKgiB,YAAYC,uBAInC,MAAM5b,EAAOrG,KAAK0b,gBAAgB1E,OAE5Bgc,EAAYmjC,GAAct0D,EAA4B2uB,SAU5D,GARA3uB,EAAQmV,OAASA,EAEfnV,EAAQsW,OADPnB,IAAW3Q,EACK2sB,EAAaA,EAAU7L,QAAUnnB,KAAK0b,gBAAgB5C,UAAUka,EAAU7L,SAAW,KAAgB9gB,EAGrGxE,EAAQjD,OAAOu0B,OAAStxB,EAAQslB,QAAUnQ,EAAShX,KAAK0b,gBAAgB5C,UAAUjX,EAAQslB,SAG1G6L,EAAW,CAETA,EAAUy9B,oBAAmBz9B,EAAUy9B,mBAAoB,EAAAzpC,GAAA,GAAkBgM,EAAUy9B,oBACvFz9B,EAAUw9B,eAAcx9B,EAAUw9B,cAAe,EAAAxpC,GAAA,GAAkBgM,EAAUw9B,eAEhF,MAAM/0C,EAAOuX,EAAU09B,iBAAmB19B,EAAU7L,QAC9CkvC,EAAQrjC,EAAUy9B,mBAAqBz9B,EAAUw9B,aACvD,GAAG/0C,GAAQ46C,EAAO,CAChB,MAAMC,EAAkBt2D,KAAK0b,gBAAgB5C,UAAU2C,GACjD86C,GAAe,EAAAvvC,GAAA,GAAkBqvC,GACvCx0D,EAAQ20D,UAAYF,EAAkB,IAAMC,EAU9C10D,EAAQwW,UAAYrY,KAAK0b,gBAAgB5C,UAAUka,EAAU7L,SAEzDivC,IACFpjC,EAAUnR,MAAQ7hB,KAAKgiB,YAAYC,uBAIvC,MAAMw0C,EAAiC,CACrCh3D,KAAM,UACNuX,OAAAA,EACA7I,UAAWuW,GAUb,IAAIgyC,GAAc,EAClB,MAAMp+C,EAAQ69C,GAAat0D,EAAQyW,MACnC,GAAGA,EACD,OAAOA,EAAMja,GACX,IAAK,2BACIwD,EAAQyW,MACf,MAGF,IAAK,oBACAA,EAAM8+B,YACPsf,GAAc,EAEdp+C,EAAM0c,MAAQh1B,KAAKs4C,iBAAiBC,UAAUjgC,EAAM0c,MAAOyhC,GAGxDn+C,EAAyC0c,cACrCnzB,EAAQyW,MAGjB,MAGF,IAAK,mBAAoB,CACvB,MAAMlW,EAASpC,KAAKipD,gBAAgB4F,SAASv2C,EAAM0wC,KAAM1wC,EAAMjT,QAASxD,GACxEyW,EAAM0wC,KAAO5mD,EAAO4mD,KACpB1wC,EAAMjT,QAAUjD,EAAOiD,QACvB,MAGF,IAAK,uBACH,GAAGiT,EAAM8+B,YACPsf,GAAc,MACT,CACL,MAAMC,EAAcr+C,EAAMkpB,SAC1BlpB,EAAMkpB,SAAWxhC,KAAKgzC,eAAehI,QAAQ2rB,EAAaF,GAEtDn+C,EAAMkpB,UAA8B,kBAAlBm1B,EAAYt4D,IAChCq4D,GAAc,GAIlB,MAGF,IAAK,sBAAuB,CAC1B,MAAME,EAAa52D,KAAK6oD,mBAAmBgO,+BAA+B7/C,EAAQ0N,EAAKtnB,EAAQ2oD,aAC/FztC,EAAMswC,QAAU5oD,KAAK6oD,mBAAmBiO,YAAYx+C,EAAMswC,QAASgO,EAAYH,GAC/E,MAQF,IAAK,sBAAuB,CAC1Bn+C,EAAM0c,MAAQh1B,KAAK+2D,kBAAkBC,gBAAgB1+C,EAAM0c,OAC3D,MAAMqpB,EAAgB/lC,EAAM4tC,eAC5B,GAAwB,0BAArB7H,MAAAA,OAAa,EAAbA,EAAehgD,GAA8B,CAC9C,MAAM44D,EAAqB5Y,EAAc/lC,MACxC2+C,EAAsDjiC,MAAQh1B,KAAKs4C,iBAAiBC,UAAW0e,EAAsDjiC,MAAOyhC,GAC5JQ,EAAyDz1B,SAAWxhC,KAAKgzC,eAAehI,QAASisB,EAAyDz1B,SAAUi1B,GAEvK,MAGF,IAAK,0BACHC,GAAc,EAiBpB,GAPGP,GAAaO,IACd70D,EAAQyW,MAAQ,CAACja,EAAG,2BACpBwD,EAAQA,QAAU,UACXA,EAAQ6uB,gBACR7uB,EAAQq1D,gBAGbf,GAAat0D,EAAQmX,OAAQ,CAC/B,MAAMA,EAASnX,EAAQmX,OACjB/I,EAASpO,EAAQsW,SAAWnY,KAAK6c,gBAAgBC,UAAUxe,GAAK,MAAQ,GAC9E,IAAI64D,EAAqBC,EAUzB,OARIp+C,EAAoDgc,QACrDhc,EAAoDgc,MAAQh1B,KAAKs4C,iBAAiBC,UAAWv/B,EAAoDgc,MAAOyhC,IAGvJz9C,EAAewoB,WAChBxoB,EAAewoB,SAAWxhC,KAAKgzC,eAAehI,QAAShyB,EAAegc,MAAOyhC,IAGzEz9C,EAAO3a,GAEZ,IAAK,8BAE6B,QAA5B,EAAA2a,EAAOgc,aAAqB,eAAEqiC,aAEhCr+C,EAAO3a,EAAIouB,EAAc,gCAAkC,6BAExDA,IAEDzT,EAAO3a,EAAI,iCAGf,MAEF,IAAK,yBAA0B,CAK7B,IAAIoB,EAFJO,KAAKs3D,qBAAqBxjB,cAAc96B,EAAOqd,MAI7C52B,OADqBqL,IAApBkO,EAAOue,SACD,UAEA,QAGL9K,IACFhtB,GAAQ,MAAQwQ,GAIlB+I,EAAOvZ,KAAOA,EAEd,MAGF,IAAK,6BAOAgtB,IAEDzT,EAAO3a,EAAI,iCAEb,MAEF,IAAK,+BACAouB,IAEDzT,EAAO3a,EAAI,mCAEb,MAEF,IAAK,2BACwB,IAAxB2a,EAAOE,MAAM/a,QAEd6a,EAAOR,QAAUQ,EAAOE,MAAM,GAE3BrX,EAAQsW,SAAWa,EAAOR,UAGzBQ,EAAO3a,EAFNwlB,EAEU,0BAA4B5T,EAG5B,0BAA4BA,IAGnC+I,EAAOE,MAAM/a,OAAS,IAE9B6a,EAAO3a,EAAI,6BAEb,MAEF,IAAK,8BACAwD,EAAQsW,SAAWa,EAAOR,UAE3BQ,EAAO3a,EAAI,yBAA2B4R,GAExC,MAEF,IAAK,kCACHknD,EAAcn+C,EAAOM,QAAQ7S,UAAS,GACtC2wD,EAAYpgD,EACZ,MAEF,IAAK,6BACHmgD,EAAcngD,EACdogD,EAAYp+C,EAAOK,WAAW5S,UAAS,GACvC,MAEF,IAAK,4BAEH5E,EAAQihD,eAAgB,SACjBjhD,EAAQjD,OAAOmb,WACflY,EAAQjD,OAAOopB,OACtB,MAEF,IAAK,yBAEHhP,EAAOvZ,MACJuZ,EAAOpa,OAAOu4B,MAAQ,SAAW,UACbrsB,IAApBkO,EAAOue,SAA0B11B,EAAQjD,OAAOmb,IAAM,OAAS,MAAS,UAEnDjP,IAApBkO,EAAOue,SAAyB,KACV,iCAApBve,EAAOia,OAAO50B,EACZ,SACA,aAMT84D,GACCC,IACCp3D,KAAK0nB,eAAeyvC,KACpBn3D,KAAK2nB,eAAeyvC,IACvBp3D,KAAKu3D,cAAcJ,EAAaC,GAoBpC,OANGjB,GAAat0D,EAAQA,QAAQ1D,SAAW0D,EAAQq1D,eACjDl3D,KAAKirD,oBAAoBppD,GAG3B6B,EAAQ0E,IAAIsc,EAAK7iB,GAEVA,EAGFgd,aAAauH,EAAiBhpB,EAKhC,IACH,OAAIgpB,EAAiB0O,QACpB1O,EAAiB0O,OAAQ,EAC1B1O,EAASljB,SAAQ,CAACrB,EAAS2C,EAAK0G,KAC9BA,EAAI1G,GAAOxE,KAAKk2D,YAAYr0D,EAASzE,OAHJgpB,EASxBoxC,sBAAsBxgD,EAAgBo4B,G,0CACjD,MACMxnC,EADiB5H,KAAKqkB,kBAAkBrN,EAAQo4B,GACzB5qB,QAAQ5c,MACrC,GAAGA,EAAMsgB,MAAM,cAAoBtgB,EAAMzJ,OAAQ,CAC/C,IAAIs5D,EACJ,MAAMC,EAAW13D,KAAK0b,gBAAgB1E,OACtC,IAAI,MAAM0N,KAAO9c,EAAO,CACtB,MAAM/F,EAAU7B,KAAK+e,iBAAiB/H,EAAQ0N,GAG9C,IAFagzC,IAAa1gD,EAASnV,EAAQsW,SAAWu/C,EAAW71D,EAAQjD,OAAOmb,aAGrE/Z,KAAK23D,eAAe91D,EAAS,SAAS,CAC7C41D,EAAc51D,EACd,OAQN,OAAO41D,MAIHxM,oBAAoBppD,GAC1B,MAAM+1D,EAAc/1D,EAAQ6uB,SAAW7uB,EAAQ6uB,SAAS9oB,QAAU,GAClE/F,EAAQA,SAAU,EAAA+wC,GAAA,GAAS/wC,EAAQA,QAAS+1D,GAE5C,MAAMC,GAAa,EAAAC,GAAA,GAAcj2D,EAAQA,SACzCA,EAAQq1D,eAAgB,EAAAa,GAAA,GAAcH,EAAaC,GAG9CG,eAAehhD,EAAgBitC,EAAgBhxB,EAA2BpxB,GAC/E,OAAO7B,KAAKgU,WAAWqa,gBAAgB,kBAAmB,CACxD5S,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C1Y,GAAI2lD,EAAK7/C,KAAKsgB,IAAQ,EAAA/F,GAAA,GAAmB+F,KACzCuO,OAAQ,CACN50B,EAAG40B,GAELpxB,QAAAA,IAIGq3C,SAASnB,EAAcx+B,EAAiB0/B,GAC7C,MAAMjiC,EAASuC,EAASA,EAAO9S,UAAS,GAAQsxC,EAAMtxC,WACtD,GAAGwyC,EAAY,CACb,MAAM/a,GAAW,UAEjB,OAAOl+B,KAAKgU,WAAWC,UAAU,oBAAqB,CACpD+jC,IAAKh4C,KAAK6c,gBAAgBua,aAAa2gB,GACvCt8B,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CqgB,UAAW6G,EACXod,YAAarC,IACZj0C,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAIhD,MAAMvoB,EAAM,SACZ,GAAGmb,EAAQ,CACT,IAAIzP,EAOJ,OALEA,EADC9J,KAAK0d,gBAAgBmG,UAAUtK,GACtBvZ,KAAK0d,gBAAgBwc,gBAAgB3gB,EAAQ,CAACw+B,IAE9C/3C,KAAK0d,gBAAgB+c,YAAYlhB,EAAQw+B,EAAO,GAGrDjuC,EAAQuE,OAAO/O,IACpB,GAAkB,6BAAfA,MAAAA,OAAK,EAALA,EAAOG,MAKV,MAAMH,EAJJA,EAAMyqD,SAAU,KAKjB/kD,MAAK,KACN,MAAMgzC,EAAMh4C,KAAK6c,gBAAgBu8B,QAAQrB,GACzC,OAAO/3C,KAAKo6C,SAASpjC,EAAQ5Y,EAAM,IAAM45C,EAAI7c,aAIjD,OAAOn7B,KAAKo6C,SAASpjC,EAAQ5Y,GAGxB65D,gBAAgB//C,EAAmBuC,GACxCza,KAAKgU,WAAWC,UAAU,0BAA2B,CACnDqH,aAAcpD,EAAQ9T,KAAK4S,IAClB,CACL3Y,EAAG,kBACHod,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CwE,UAAWf,QAGdzV,MAAM2hB,IAEP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAIzClG,UAAUpD,GACf,OAAOrd,KAAKwgB,eAAeC,UAAUpD,GAG1B8P,gBAAgBnW,EAAgBqG,G,gDAC3C,GAAGA,EAAW,EACZ,OAAOrd,KAAKwgB,eAAe2M,gBAAgBnW,EAAQqG,GAGrD,MAAMnD,EAASla,KAAKkc,cAAclF,GAClC,IAAIkD,EAAQ,OAAOvY,QAAQC,SAE3B,MAAMga,IAAsB,QAAb,EAAA1B,EAAOtb,cAAM,eAAEgd,cAAS9Q,EAEvC,GAAG8Q,EAAQ,CACT,MAAMyH,QAAYrjB,KAAKgU,WAAW6a,SAAsB,IAAbxR,EAAiB,YAAc,OAC1E,GAAGrd,KAAK4oB,eAAexJ,gBAAgB/B,GAAUlf,QAAUklB,EACzD,OAAO1hB,QAAQC,QAAO,EAAAiW,EAAA,GAAU,4BAIpC,OAAO7X,KAAKgU,WAAWC,UAAU,2BAA4B,CAC3DwH,KAAMzb,KAAK0b,gBAAgBs4C,uBAAuBh9C,GAClD4E,OAAAA,IACC5W,MAAM2oB,IACP,GAAGA,EAAM,CACP,MAAM/uB,EAA8Cgd,EAAS,CAACA,OAAAA,GAAU,GACxE5b,KAAK6d,kBAAkBgJ,WAAW,CAChCxoB,EAAG,qBACHod,KAAMzb,KAAK0b,gBAAgBw8C,cAAclhD,GACzCwE,UAAW6B,EACXze,OAAAA,WAMDu5D,iBAAiBnhD,EAAgBohD,G,MACtC,MAAMl+C,EAASla,KAAKkc,cAAclF,GAClC,IAAIkD,EAAQ,OAAOvY,QAAQC,SAE3B,MAAMomB,GAASowC,KAAqB,QAAb,EAAAl+C,EAAOtb,cAAM,eAAE4jD,mBAAc13C,EACpD,OAAO9K,KAAKgU,WAAWC,UAAU,4BAA6B,CAC5DwH,KAAMzb,KAAK0b,gBAAgBs4C,uBAAuBh9C,GAClDgR,OAAAA,IACChjB,MAAM2oB,IACP,GAAGA,EAAM,CACP,MAAM/uB,EAAkDopB,EAAS,CAACA,OAAAA,GAAU,GAC5EhoB,KAAKuiD,yBAAyB,CAC5BlkD,EAAG,yBACHod,KAAMzb,KAAK0b,gBAAgBw8C,cAAclhD,GACzCpY,OAAAA,QAMD24D,cAAcJ,EAAqBC,GACxC,IAAIp3D,KAAK0nB,eAAeyvC,KACrBn3D,KAAK2nB,eAAeyvC,IACrBp3D,KAAK0d,gBAAgB0V,QAAQgkC,EAAUtzC,YAAa,CACpD,MAAMu0C,EAAsBr4D,KAAK0d,gBAAgBC,QAAQw5C,EAAYrzC,aAClEu0C,MAAAA,OAAQ,EAARA,EAAU9wC,cAAgB8wC,EAAS9wC,YAA0ClO,aAAe+9C,EAAUtzC,aACvG9jB,KAAK0nB,eAAeyvC,GAAeC,EACnCp3D,KAAK2nB,eAAeyvC,GAAaD,EAEjCn3D,KAAK4c,UAAUhW,cAAc,iBAAkB,CAACuwD,YAAAA,EAAaC,UAAAA,IAE7Dp3D,KAAK4oB,eAAe9C,oBAAoBqxC,KAKtCmB,mBAAmBz2D,EAAkB02D,G,QAC3C,GAAuC,QAAnC,EAAA12D,MAAAA,OAAO,EAAPA,EAA6BjD,cAAM,eAAEgmB,YACvC,OAAO,EAGT,MAAM4zC,EAAa,CACjB,oBACA,uBACA,uBAOF,MAJY,SAATD,GACDC,EAAWl4D,KAAK,uBAGduB,GACc,YAAdA,EAAQxD,GACRwD,EAAQwlB,SACRxlB,EAAQ2uB,UACR3uB,EAAQ2tD,YACR3tD,EAAQyW,QAAkD,IAAzCkgD,EAAWp8D,QAAQyF,EAAQyW,MAAMja,IAClDwD,EAAQsW,QAAUnY,KAAK6c,gBAAgBgQ,MAAMhrB,EAAQsW,SAIjC,0BAAR,QAAb,EAAAtW,EAAQyW,aAAK,eAAEja,KACZwD,EAAQyW,MAAMkpB,SAA+B0K,SAAkE,UAAtDrqC,EAAQyW,MAAMkpB,SAA+B/hC,OAOjGk4D,eAAe91D,EAAmD02D,EAAwB,Q,gDACrG,SAAI12D,IAAY7B,KAAKs4D,mBAAmBz2D,EAAS02D,IAKlBv4D,KAAK0gD,eAAe7+C,KAAa7B,KAAK6c,gBAAgBC,UAAUxe,MAI3FuD,EAAQjD,OAAOmb,KACK,gBAAtBlY,EAAQkX,QAAQ1a,GACdwD,EAAQggB,MAAQ,EAAAE,GAAA,IAAM,UAAe/hB,KAAKgU,WAAWoZ,aAAaqrC,iBACxB,sBAAR,QAAlC,EAAC52D,EAA4ByW,aAAK,eAAEja,QASnCy1D,iBAAiBjyD,GACtB,OAAOA,IACLA,EAAQmV,OAAOqc,UACfxxB,EAAQjD,OAAOmb,KAC+C,SAA9D/Z,KAAK0d,gBAAgBC,QAAQ9b,EAAQmV,OAAO8M,YAAYzlB,GACxD2B,KAAK0d,gBAAgBub,UAAUp3B,EAAQmV,OAAO8M,WAAY,uBACrDjiB,EAAQjD,OAAOgmB,eAAiB/iB,EAAQvC,OAG1Co5D,iBAAiB1hD,GACtB,OAAOhX,KAAKqkB,kBAAkBrN,GAAQmjC,YAGjC9xB,mBAAmBjE,EAAgCviB,G,QAExD,IAAIA,EACF,OAAO,EAGT,MAAM82D,EAAsB92D,EAA4Bq4C,aACxD,IAAIye,KACa,QAAd,EAAA92D,EAAQjD,cAAM,eAAEmb,OACflY,EAAmCmX,OACrC,OAAO,EAGT,GAA6B,uBAA1B2/C,MAAAA,OAAkB,EAAlBA,EAAoBt6D,GACrB,OAAO,EAGT,MAAMu6D,EAAkBx0C,EAAe+1B,YACvC,GAAGwe,EACD,QAAGC,GAAmBA,EAAgBl0C,KAAO7iB,EAAQ6iB,KAIlDi0C,EAAmB/5D,OAAOi6D,YAI1Bz0C,EAAe00C,UAChBj3D,EAAQ6iB,IAAMN,EAAe00C,UAC5BH,EAA6F/5D,OAAOm6D,aACpGJ,EAA6F/5D,OAAOo6D,QAAS,GAGhHL,EAAmBj0C,IAAM7iB,EAAQ6iB,IAKL,sBAAzBi0C,EAAmBt6D,IACpBs6D,EAAmBxgD,OAASnY,KAAK0b,gBAAgB5C,UAAUjX,EAAQslB,UAGrE/C,EAAe+1B,YAAcwe,EAEtB,IAGT,GAAG92D,EAAQjD,OAAOmb,IAChB,GAAG6+C,GAED,IADA,EAAApqC,GAAA,GAA4CoqC,GACzCA,EAAgBh6D,OAAOm6D,aACvBH,EAAgBh6D,OAAOo6D,SACvBn3D,EAAQ6iB,IAAMk0C,EAAgBl0C,KAAO7iB,EAAQjD,OAAOgmB,cACpD/iB,EAA4BA,QAG7B,OAFA+2D,EAAgBh6D,OAAOo6D,QAAS,GAEzB,QAEA50C,EAAe00C,UACxBj3D,EAAQ6iB,IAAMN,EAAe00C,YAC7B10C,EAAe00C,SAAWj3D,EAAQ6iB,KAKtC,OADA,EAAA8J,GAAA,GAAmC3sB,KACV,iCAAR,QAAd,EAAAA,EAAQmX,cAAM,eAAE3a,MAChBu6D,EACC/2D,EAAQmX,OAAOR,UAAaogD,EAAoDzgD,OAChFnY,KAAK6c,gBAAgBgQ,MAAMhrB,EAAQmX,OAAOR,YAG5C4L,EAAe+1B,YAAc,CAC3B97C,EAAG,oBACHqmB,IAAK7iB,EAAQ6iB,IACb9lB,OAAQ,IAGH,IAMJq6D,iBAAiBjiD,EAAgBg+C,GAGtC,OAFIh1D,KAAKs/C,gBAAgBtoC,KAAShX,KAAKs/C,gBAAgBtoC,GAAU,IAC7DhX,KAAKs/C,gBAAgBtoC,GAAQg+C,KAAch1D,KAAKs/C,gBAAgBtoC,GAAQg+C,GAAe,CAACxwC,QAAS,KAC9FxkB,KAAKs/C,gBAAgBtoC,GAAQg+C,GAG/BkE,kBAAkBliD,EAAgBkL,EAA2Bi3C,GAAW,GAC7E,OAAGn5D,KAAK0b,gBAAgBmc,aAAa7gB,GAC5BrV,QAAQM,QAAQigB,EAAQ9d,KAAK5F,IAC3B,CACLH,EAAG,yBACHO,OAAQ,GACRJ,OAAQA,EACR0c,MAAO,QAKCi+C,EAAWn5D,KAAKgU,WAAW6pB,mBAAqB79B,KAAKgU,WAAWC,WAAWsK,KAAKve,KAAKgU,WAC5FolD,CAAK,6BAA8B,CACxC39C,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CkL,QAAAA,IAIGm3C,uCAAuCrE,EAAoCxwC,EAAmB9gB,EAA+CqlB,GAClJ,MAAMuwC,EAAWt5D,KAAKuzD,mBAAmB7vD,GACzC,OAAO,EAAA61D,GAAA,GAA4BvE,EAAaxwC,EAAQpgB,KAAKsgB,GAAQ40C,EAAS50D,IAAIggB,KAAOqE,GAGpFgsC,WAAU,OAAC/9C,EAAM,MAAEiE,EAAK,YAAE+5C,EAAW,MAAEtuC,EAAK,MAAEqC,EAAK,SAAEywC,EAAQ,UAAEC,EAAS,SAAErqB,EAAQ,SAAE30B,EAAQ,QAAEitB,EAAO,QAAEE,IAoB5G,GAAG5nC,KAAK0b,gBAAgBmc,aAAa7gB,GACnC,OAAOrV,QAAQM,QAAQ,CACrBiZ,MAAO,EACPw+C,iBAAkB,EAClBC,eAAW7uD,EACX0Z,QAAS,KAITvJ,IAAOA,EAAQ,IACf+5C,IAAaA,EAAc,CAAC32D,EAAG,kCACtByM,IAAVie,IAAqBA,EAAQ,IAC5BywC,IAAUA,EAAW,GACrBC,IAAWA,EAAY,GAE3B/xB,EAAUA,EAAUA,EAAU,IAAO,EAAI,EACzCE,EAAUA,EAAUA,EAAU,IAAO,EAAI,EAEzC,IAAIgyB,EAAyB,GAI1BH,IACD1wC,GAAS0wC,GAMX,IAAI/1D,EAaJ,IAPGsT,GAAWyiD,GAAc/yC,GAAUzL,GAAmB,IAAV8N,GAAgBqmB,IAC7D1rC,EAEE1D,KAAKqkB,kBAAkBrN,GACzB4iD,EAAY55D,KAAKq5D,uCAAuCrE,EAAY32D,EAAGqF,EAAQ8gB,QAAQ5c,MAAO5H,KAAKukB,0BAA0BvN,GAAS+R,IAGrI6wC,EAAUz7D,OAAQ,CACnB,KAAGy7D,EAAUz7D,OAAS4qB,GAIpB,OAAOpnB,QAAQM,QAAQ,CACrBiZ,MAA8B,EAC9By+C,UAAW,EACXD,iBAAkB,EAClBl1C,QAASo1C,IAPXlzC,EAAQkzC,EAAUA,EAAUz7D,OAAS,GAAGumB,IACxCqE,GAAgB6wC,EAAUz7D,OAkB9B,MACM8K,EAA0DjJ,KAAKgU,WAAWC,UAAWsK,KAAKve,KAAKgU,YAErG,IAAI42C,EACJ,GAAG5zC,IAAWwiD,QAAyB1uD,IAAb2P,EACxBmwC,EAAa3hD,EAAO,kBAAmB,CACrCwS,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CoxB,EAAGntB,GAAS,GACZzc,OAAQw2D,EACR6E,SAAUnyB,EACVoyB,SAAUlyB,EACV7e,MAAAA,EACAuoC,WAAW,EAAA3yC,GAAA,GAAmB+H,IAAU,EACxCqzC,WAAYN,GAAaA,EAAY,EACrCtW,OAAQ,EACR6W,OAAQ,EACRt8B,KAAM,GACN8jB,YAAY,EAAA7iC,GAAA,GAAmBywB,IAAa,GAC3C,CAED1b,YAAY,QAET,CAEL,IAAI89B,EACAyI,EAAW,EACf,MAAMC,EAAgBxzC,GAAS1mB,KAAK+e,iBAAiB/H,EAAQ0P,GAE1DwzC,GAAiBA,EAAcr4C,OAEhCo4C,EAAWC,EAAc57D,GACzBkzD,EAAexxD,KAAK0gD,eAAewZ,IAGrCtP,EAAa3hD,EAAO,wBAAyB,CAC3Cm/B,EAAGntB,EACHzc,OAAQw2D,EACR6E,SAAUnyB,EACVoyB,SAAUlyB,EACVuyB,YAAaX,EACbjI,YAAavxD,KAAK0b,gBAAgB4R,iBAAiBkkC,GACnDF,UAAW2I,EACXlxC,MAAAA,EACAvN,UAAWf,GACV,CAEDiZ,YAAY,IAIhB,OAAOk3B,EAAW5lD,MAAMo1D,IACtBp6D,KAAK6c,gBAAgBoJ,aAAam0C,EAAalhD,OAC/ClZ,KAAK0d,gBAAgBwI,aAAak0C,EAAaj0C,OAC/CnmB,KAAK6e,aAAau7C,EAAah0C,UAU5B,MACDpmB,KAAKG,IAAI,oBAAqB60D,EAAaoF,GAG7C,MAAMC,EAAqBD,EAAal/C,OAAU0+C,EAAUz7D,OAASi8D,EAAah0C,SAASjoB,OAc3F,OAZAi8D,EAAah0C,SAASljB,SAASrB,IAC7B,MAAMmV,EAAShX,KAAK0gD,eAAe7+C,GACnC,GAAGmV,EAAO+N,YAAa,CACrB,MAAMtH,EAAkBzd,KAAK0d,gBAAgBC,QAAQ3G,EAAO8M,YACzDrG,EAAK8J,aACNvnB,KAAKu3D,cAAcvgD,EAASyG,EAAK8J,YAA0ClO,WAAW5S,UAAS,IAInGmzD,EAAUt5D,KAAKuB,MAGV,CACLqZ,MAAOm/C,EACPX,iBAAkBU,EAAaV,kBAAoB,EACnDC,UAAWS,EAAaT,UACxBn1C,QAASo1C,MAKRU,uBAAuBtjD,EAAgB0N,GAC5C,MAAMg/B,EAAa1sC,EAAS,IAAM0N,EAClC,IAAI,MAAMm8B,KAAa7gD,KAAKy/C,iBAC1B,GAAGz/C,KAAKy/C,iBAAiBoB,KAAe6C,EAAY,OAGtD1jD,KAAKu6D,qBAAqBvjD,EAAQ0N,GAG7B81C,kCAAkC34D,GACvC,MAAMg/C,EAAYh/C,EAAQmV,OAAS,IAAMnV,EAAQ6iB,IACjD,GAAG1kB,KAAKw/C,iCAAiCqB,GAAY,OAErD,MAAM4Z,GAAe,EAAA97C,GAAA,GAAmBY,KAAK8D,OAAOrjB,KAAK81D,iBAAiBj0D,KACpE64D,EAA8C,CAClDr8D,EAAG,iBACHO,OAAQ,CACN+7D,WAAW,GAEbr8D,GAAI0B,KAAKi2D,sBAAsB/uC,sBAAsBuzC,GACrD54C,KAAMhgB,EAAQggB,KACdsF,QAAS,CAAC9oB,EAAG,WAAYma,QAAS,MAClCO,QAASlX,EAAQkX,QACjBC,OAAQ,CACN3a,EAAG,kCAELoyB,SAAUzwB,KAAKuvD,oBAAoB1tD,EAAQvD,KAG7C0B,KAAK6e,aAAa,CAAC67C,GAAsB,CAACpzC,YAAY,IACtDtnB,KAAKw/C,iCAAiCqB,GAAa6Z,EAAoBh2C,IAGlEk2C,0BAA0B5jD,EAAgBo4B,GAC/C,OAAOpvC,KAAKw/C,iCAAiCxoC,EAAS,IAAMo4B,GAGvDmrB,qBAAqBvjD,EAAgB0N,GAC1C,OAAO1kB,KAAKgU,WAAWqa,gBAAgB,gCAAiC,CACtE5S,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C0iC,QAAQ,EAAA/6B,GAAA,GAAmB+F,KAC1B1f,MAAM5C,I,MACPpC,KAAK0d,gBAAgBwI,aAAa9jB,EAAO+jB,OACzCnmB,KAAK6c,gBAAgBoJ,aAAa7jB,EAAO8W,OACzClZ,KAAK6e,aAAazc,EAAOgkB,UAEzB,MAAMvkB,EAAU7B,KAAK66D,sBAAsBz4D,EAAOgkB,SAAS,IACrDy6B,EAAYh/C,EAAQmV,OAAS,IAAMnV,EAAQ6iB,IAEjD1kB,KAAKw6D,kCAAkC34D,GAEvC,MAAMuiB,EAAiBpkB,KAAKqkB,kBAAkBxiB,EAAQmV,OAAQnV,EAAQ6iB,KAOtE,OANAtiB,EAAO+gD,OAAS/+B,EAAesC,OAAQ,EAAAM,GAAA,GAAkB5kB,EAAO+gD,SAAW,EAC3E/gD,EAAOwlB,kBAAoBxD,EAAekE,WAAY,EAAAtB,GAAA,GAA0C,QAAxB,EAAA5kB,EAAOwlB,yBAAiB,QAAI/lB,EAAQ6iB,KAC5GtiB,EAAOylB,mBAAqBzD,EAAemE,iBAAkB,EAAAvB,GAAA,GAAkB5kB,EAAOylB,qBAAuB,EAE7G7nB,KAAKy/C,iBAAiBoB,GAAa7pC,EAAS,IAAM0N,EAE3C7iB,KAIH4/C,iBAAiB5/C,GACvB7B,KAAK4c,UAAUhW,cAAc,sBAAuB/E,GAkC/Cma,yBAAyBhF,EAAiBkD,GAK/C,YAJcpP,IAAXkM,GACDhX,KAAKu+C,mBAAmBn2C,IAAI4O,EAAQkD,GAGnCla,KAAK86D,wBAAgC96D,KAAK86D,wBACtC96D,KAAK86D,yBAA0B,EAAA5wD,EAAA,GAAM,GAAGlF,MAAK,KAClDhF,KAAK86D,6BAA0BhwD,EAC/B9K,KAAK0/C,sBAIIqb,eAAe/jD,EAAgBitC,EAAgBqQ,G,kDAC1D,IAAIxqD,EAEJ,MAAMmoD,QAAejyD,KAAKgU,WAAWoZ,YAC/B8kC,EAAejO,EAAKh6C,OAAOgoD,EAAOE,oBAAqBlO,EAAK9lD,OAAS8zD,EAAOE,qBAE5E6I,EAAkB/W,EAAK7/C,KAAKsgB,IAAQ,EAAA/F,GAAA,GAAmB+F,KAE7D,GAAG1N,EAAO+N,aAAe/kB,KAAK0b,gBAAgBmI,UAAU7M,GAAS,CAC/D,MAAM4M,EAAY5M,EAAO8M,WACnBC,EAAwB/jB,KAAK0d,gBAAgBC,QAAQiG,GAC3D,IAAIG,EAAQnlB,OAAOq8D,WAAwC,QAA5B,EAAoB,QAApB,EAAAl3C,EAAQitC,oBAAY,eAAEpyD,cAAM,eAAEs8D,oBAC3DjX,EAAOA,EAAKzlD,QAAQkmB,KACF1kB,KAAK+e,iBAAiB/H,EAAQ0N,GAC7B9lB,OAAOmb,OAGjB5b,OACP,OAIJ2L,EAAU9J,KAAKgU,WAAWC,UAAU,0BAA2B,CAC7D8P,QAAS/jB,KAAK0d,gBAAgBmV,gBAAgBjP,GAC9CtlB,GAAI08D,IACHh2D,MAAMm2D,IACPn7D,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,8BACHgb,WAAYuK,EACZwC,SAAU69B,EACV9/B,IAAKg3C,EAAiBh3C,IACtBwM,UAAWwqC,EAAiBxqC,oBAIhC7mB,EAAU9J,KAAKgU,WAAWC,UAAU,0BAA2B,CAC7DqgD,OAAAA,EACAh2D,GAAI08D,IACHh2D,MAAMm2D,IACPn7D,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,uBACH+nB,SAAU69B,EACV9/B,IAAKg3C,EAAiBh3C,IACtBwM,UAAWwqC,EAAiBxqC,eAKlC,MAAM3H,EAA+B,CAAClf,GAKtC,OAJGooD,EAAa/zD,QACd6qB,EAAS1oB,KAAKN,KAAK+6D,eAAe/jD,EAAQk7C,EAAcoC,IAGnD3yD,QAAQ8Q,IAAIuW,GAAUhkB,KAAKomD,GAAA,MAG7BgQ,YAAYpkD,EAAgB0P,EAAQ,EAAG0oB,EAAmBQ,GAAQ,GAOvE,GADA5vC,KAAKG,IAAI,eAAgB6W,EAAQ0P,EAAO0oB,IACpCpvC,KAAK8jD,qBAAqB9sC,EAAQo4B,GAAW,CAC/C,IAAIQ,IAAUR,EAAU,CACtB,MAAMl1B,EAASla,KAAKkc,cAAclF,GAC/BkD,GAAUla,KAAKqsB,eAAenS,KAC/B01B,GAAQ,GAIZ,IAAIA,EAEF,OADA5vC,KAAKG,IAAI,6BACFwB,QAAQM,UAInB,MAAMmiB,EAAiBpkB,KAAKqkB,kBAAkBrN,EAAQo4B,GAEtD,GAAGhrB,EAAei3C,kBAAoB30C,EACpC,OAAO/kB,QAAQM,UAGjB,IAAI2oD,EA4DJ,OA3DGxb,GACGhrB,EAAek3C,cACjB1Q,EAAa5qD,KAAKgU,WAAWC,UAAU,0BAA2B,CAChEwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C0iC,QAAQ,EAAA/6B,GAAA,GAAmBywB,GAC3BgU,aAAa,EAAAzkC,GAAA,GAAmB+H,MAIpC1mB,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,mCACHgb,WAAYrC,EAAO8M,WACnB09B,WAAYpS,EACZgU,YAAa18B,KAEP1mB,KAAK0b,gBAAgBmI,UAAU7M,IACnCoN,EAAek3C,cACjB1Q,EAAa5qD,KAAKgU,WAAWC,UAAU,uBAAwB,CAC7D8P,QAAS/jB,KAAK0d,gBAAgBmV,gBAAgB7b,EAAO8M,YACrDq/B,QAAQ,EAAAxkC,GAAA,GAAmB+H,MAI/B1mB,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,yBACH8kD,OAAQz8B,EACRrN,WAAYrC,EAAO8M,WACnBy/B,wBAAoBz4C,EACpBqZ,SAAKrZ,MAGHsZ,EAAek3C,cACjB1Q,EAAa5qD,KAAKgU,WAAWC,UAAU,uBAAwB,CAC7DwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CmsC,QAAQ,EAAAxkC,GAAA,GAAmB+H,KAC1B1hB,MAAMm2D,IACPn7D,KAAK6d,kBAAkBkS,qBAAqB,CAC1C1xB,EAAG,cACHgd,OAAQ,CACNhd,EAAG,YACH8lB,IAAKg3C,EAAiBh3C,IACtBwM,UAAWwqC,EAAiBxqC,iBAMpC3wB,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,yBACH8kD,OAAQz8B,EACRjL,KAAMzb,KAAK0b,gBAAgB0L,cAAcpQ,GACzCusC,wBAAoBz4C,EACpBqZ,SAAKrZ,EACL6lB,eAAW7lB,KAIf9K,KAAK4c,UAAUhW,cAAc,qBAAsB5G,KAAK0b,gBAAgB6/C,cAAcvkD,IAEnFoN,EAAek3C,YACTl3C,EAAek3C,aAGxBl3C,EAAei3C,iBAAmB30C,EAElCkkC,EAAWlnB,SAAQ,YACVtf,EAAek3C,YAEtB,MAAM,UAAChzC,GAAalE,EACpBpkB,KAAKG,IAAI,+BAAgCumB,EAAO4B,GAE7CA,EAAY5B,GACb1mB,KAAKo7D,YAAYpkD,EAAQsR,EAAW8mB,GAAU,MAI3ChrB,EAAek3C,YAAc1Q,GAG/B4Q,eAAexkD,EAAgBo4B,EAAmBQ,GAAQ,GAC/D,MAAMxrB,EAAiBpkB,KAAKqkB,kBAAkBrN,EAAQo4B,GACnDhrB,EAAesC,OAChB1mB,KAAKo7D,YAAYpkD,EAAQoN,EAAesC,MAAO0oB,EAAUQ,GAItDwU,mCAAmCptC,GACxC,MAAMkD,EAASla,KAAKkc,cAAclF,IAC/BkD,MAAAA,OAAM,EAANA,EAAQqS,wBACTvsB,KAAKgf,mBAAmBhI,GAIrB2qC,qBAAqB3qC,EAAgB0N,EAAanO,GACvD,MAAMklD,EAAcz7D,KAAK6+C,eAAe7nC,GACpCykD,IAEDllD,EACEklD,EAAY1zD,MAAMmgB,MAAM,WACzBuzC,EAAYtzC,YAAY,CAACzD,IAG3B+2C,EAAY13D,OAAO2gB,IAIfg3C,+BAA+B1kD,EAAgBykD,GACrD,MAAMvhD,EAASla,KAAKkc,cAAclF,IAC9BykD,EAAYt9D,SAAU+b,MAAAA,OAAM,EAANA,EAAQqS,wBAChCvsB,KAAKgf,mBAAmBhI,GAIrB2kD,gBAAgB3kD,G,MAKrB,MAAMlN,EAAU9J,KAAK8+C,wBAAwB9nC,GAC7C,GAAGlN,EACD,OAAOA,EAGT,MAAM2xD,EAAyC,QAA3B,EAAAz7D,KAAK6+C,eAAe7nC,UAAO,QAAKhX,KAAK6+C,eAAe7nC,GAAU,IAAI,KAChF7Y,EAASs9D,EAAYt9D,OACrB2rB,EAAW2xC,EAAY1zD,MAAMmgB,MAAM,UACzC,IAAI/pB,GAAU2rB,EAEZ,OADA9pB,KAAK07D,+BAA+B1kD,EAAQykD,GACrC95D,QAAQM,UAGjB,IAAI25D,EAAkBj6D,QAAQM,UAK9B,OAJI6nB,GAAY3rB,EAAS,KACvBy9D,EAAkB57D,KAAK67D,iBAAiB7kD,IAGnChX,KAAK8+C,wBAAwB9nC,GAAU4kD,EAAgB52D,MAAK,KACjE,MAAM82D,EAAOL,EAAYK,KACnBp3C,EAAMo3C,GAAQA,EAAKA,EAAK39D,OAAS,GACvC,GAAGumB,EAED,OADA+2C,EAAY13D,OAAO2gB,GACZA,EAEP1kB,KAAK07D,+BAA+B1kD,EAAQykD,MAE7C/3B,SAAQ,YACF1jC,KAAK8+C,wBAAwB9nC,MAIjC6kD,iBAAiB7kD,GACtB,MAAMykD,EAAcz7D,KAAK6+C,eAAe7nC,GAClC0P,EAAQ+0C,EAAY1zD,MAAM,IAAM,EAKtC,OAAO/H,KAAK+7D,kBAAkB/kD,EAAQ0P,GAFnB,GADD,IAG8C1hB,MAAMohB,IACpEpmB,KAAKg8D,mBAAmBP,EAAar1C,EAAoB,IAAVM,EAAc,EAAIA,EAJjD,IACC,OAOdq1C,kBAAkB/kD,EAAgBijD,EAAkBF,EAAoBhxC,EAAerC,EAAQ,EAAGu1C,EAAQ,GAC/G,OAAOj8D,KAAKgU,WAAWqa,gBAAgB,6BAA8B,CACnE5S,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5Cs6C,WAAW,EAAA3yC,GAAA,GAAmBs7C,GAC9BF,WAAAA,EACAhxC,MAAAA,EACAo6B,QAAQ,EAAAxkC,GAAA,GAAmB+H,GAC3BszC,QAAQ,EAAAr7C,GAAA,GAAmBs9C,KAC1Bj3D,MAAMk3D,KACP,EAAA1tC,GAAA,GAAoF0tC,GACpFl8D,KAAK6c,gBAAgBoJ,aAAai2C,EAAiBhjD,OACnDlZ,KAAK0d,gBAAgBwI,aAAag2C,EAAiB/1C,OACnDnmB,KAAK6e,aAAaq9C,EAAiB91C,UAE5B81C,KAIJC,aAAanlD,EAAgBolD,GAKlC,IAAIA,EAAOj+D,OACT,OAAOwD,QAAQM,UAIjB,IAAI6H,EAAuBuR,EAC3B,GAFA+gD,EAASA,EAAOh4D,KAAKsgB,IAAQ,EAAA/F,GAAA,GAAmB+F,KAE7C1N,EAAO+N,aAAe/kB,KAAK0b,gBAAgBmI,UAAU7M,GAAS,CAC/D,MAAM4M,EAAY5M,EAAO8M,WAEzBzI,EAAS,CACPhd,EAAG,oCACHgb,WAAYuK,EACZwC,SAAUg2C,GAGZtyD,EAAU9J,KAAKgU,WAAWC,UAAU,+BAAgC,CAClE8P,QAAS/jB,KAAK0d,gBAAgBmV,gBAAgBjP,GAC9CtlB,GAAI89D,SAGN/gD,EAAS,CACPhd,EAAG,6BACH+nB,SAAUg2C,EACVj4C,SAAKrZ,EACL6lB,eAAW7lB,GAGbhB,EAAU9J,KAAKgU,WAAWC,UAAU,+BAAgC,CAClE3V,GAAI89D,IACHp3D,MAAMm2D,IACN9/C,EAA6C8I,IAAMg3C,EAAiBh3C,IACpE9I,EAA6CsV,UAAYwqC,EAAiBxqC,UAC3E3wB,KAAK6d,kBAAkBiU,mBAAmBzW,MAM9C,OAFArb,KAAK6d,kBAAkBiU,mBAAmBzW,GAEnCvR,EAGFua,kBAAkBrN,EAAgBo4B,G,QACvC,OAAGA,GAEGpvC,KAAKq/C,eAAeroC,KAAShX,KAAKq/C,eAAeroC,GAAU,IACnB,QAArC,EAAAhX,KAAKq/C,eAAeroC,GAAQo4B,UAAS,QAAKpvC,KAAKq/C,eAAeroC,GAAQo4B,GAAY,CAACl0B,MAAO,KAAMsJ,QAAS,IAAI,OAGlF,QAA7B,EAAAxkB,KAAKo/C,iBAAiBpoC,UAAO,QAAKhX,KAAKo/C,iBAAiBpoC,GAAU,CAACkE,MAAO,KAAMsJ,QAAS,IAAI,MAG/F63C,8BAA8BrlD,EAAgBo4B,GACnD,MAAMhrB,EAAiBpkB,KAAKqkB,kBAAkBrN,EAAQo4B,IAChD,MACJl0B,EAAK,QACLsJ,EAAO,MACPkC,EAAK,UACL4B,EAAS,gBACTC,EAAe,SACfuwC,EAAQ,YACR3e,GACE/1B,EAEJ,MAAO,CACLlJ,MAAAA,EACAsJ,aAAS1Z,EACTwxD,kBAAmB93C,EAAQ+3C,SAC3B71C,MAAAA,EACA4B,UAAAA,EACAC,gBAAAA,EACAuwC,SAAAA,EACA3e,YAAAA,GAII6F,sBAAsBhpC,GAC5B,OAAOrV,QAAQ8Q,IAAI,CACjBzS,KAAK4gB,wBAAwB47C,4BAC7Bx8D,KAAK4gB,wBAAwB67C,kBAAkBz8D,KAAK0b,gBAAgBghD,uBAAuB1lD,GAAQ,MAClGhS,MAAK,EAAE3G,EAAG4hD,MACJ,CACLpL,MAAO70C,KAAK4gB,wBAAwBC,iBAAiB7J,GAAQ,GAC7DipC,uBAAAA,MAi1BCqC,+BAA+BzgD,GACjC7B,KAAK28D,sBAAsB96D,IAC5B7B,KAAK4oB,eAAe1E,iBAAiBlkB,KAAKkc,cAAcra,EAAQmV,SAI7D2lD,sBAAsB96D,GAC3B,MAAMqY,EAASla,KAAKkc,cAAcra,EAAQmV,QAC1C,OAAOkD,GAAUA,EAAOwE,cAAgB7c,EAAQ6iB,IAG1C08B,6BAA6Bwb,GACnC,IACE,MAAM/b,EAAY7gD,KAAK8gD,aAAa8b,GACpC,GAAG/b,EAAW,CACZ,MAAM6C,EAAa1jD,KAAKy/C,iBAAiBoB,GACzC,GAAG6C,EAAY,CACb,MAAO1sC,EAAQ0N,GAAOg/B,EAAWh8C,MAAM,KAEvC1H,KAAKgwB,cAAchZ,EAAOvQ,YAAaie,EAAK,qBAGhD,MAAMjb,GACNzJ,KAAKG,IAAIb,MAAM,8BAA+BmK,EAAKmzD,IAI/C9b,aAAa8b,G,MACnB,IAAI/b,EAAY,GAChB,IAAG+b,MAAAA,OAAa,EAAbA,EAAensC,YAAgC,QAApB,EAAAmsC,EAAc5lD,cAAM,eAAE+N,aAAa,CAC/D,MAAMqqB,EAAWwtB,EAAcnsC,SAASmzB,iBAAmBgZ,EAAcnsC,SAASqf,gBAClF+Q,EAAY+b,EAAc5lD,OAAS,IAAMo4B,EAG3C,OAAOyR,EAGF7wB,cAAchZ,EAAgB0N,EAAam4C,GAchD,OAb0C78D,KAAK+W,eAAeC,EAAQ0N,GAAK,GAAM1f,MAAK,KACpF,MAAMnD,EAAU7B,KAAK+e,iBAAiB/H,EAAQ0N,GAC9C,GAAI7iB,EAQJ,OAJGg7D,GACD78D,KAAK4c,UAAUhW,cAAci2D,EAAoBh7D,GAG5CA,KAMHs/C,oBAAoBt/C,GAC1B,MAAMq8B,EAAWl+B,KAAK+9C,mBAAmBl8C,EAAQ6iB,KACjD,IAAIo4C,EACJ,GAAG5+B,EAAU,CACX,MAAMoiB,EAActgD,KAAK89C,kBAAkB5f,IACxC4+B,EAAiB98D,KAAK+8D,uBAAuB7+B,EAAUr8B,KACxD7B,KAAK4c,UAAUhW,cAAc,iBAAkB,CAAC2qC,WAAY+O,EAAY58C,QAAQ6D,IAAK1F,QAAAA,EAASspD,WAAY7K,EAAY6K,oBAGjHnrD,KAAK+9C,mBAAmBl8C,EAAQ6iB,KAGzC,OAAOo4C,EAGFE,SAAShmD,EAAgBimD,GAC9B,MAAMl2D,EAAoC,CACxC1I,EAAG,2BAKL,OAFA0I,EAASm2D,WAAaD,EAEfj9D,KAAK4gB,wBAAwB0nC,qBAAqB,CACvDjqD,EAAG,kBACHod,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,IAC3CjQ,GAGEo2D,eAAenmD,EAAgBomD,GAKpC,YAJYtyD,IAATsyD,IACDA,GAAQp9D,KAAK4gB,wBAAwBC,iBAAiB7J,GAAQ,IAGzDhX,KAAKg9D,SAAShmD,EAAQomD,EAAO,KAAa,GAG3ClZ,iBAAiBD,GACvB,IAAI,IAA0Bp+C,EAAbo+C,EAAK9lD,OAAqB,EAAG0H,GAAK,IAAKA,EAAG,CACzD,MAAM6e,EAAMu/B,EAAKp+C,GACXhE,EAAU7B,KAAKwzD,eAAe9uC,GACpC,GAAG7iB,EACD,OAAOA,EAAQmV,QAKdqmD,cAAcrmD,EAAgBo4B,EAAmBp2B,EAAqB,iBAC3E,GAAGhZ,KAAK0b,gBAAgBmc,aAAa7gB,GACnC,OAAO,EAGT,GAAGA,EAAO+N,YAAa,CAErB,MAAMtH,EAAkBzd,KAAK0d,gBAAgBC,QAAQ3G,EAAO8M,YAE5D,OADqC9jB,KAAK0d,gBAAgBub,UAAUjiB,EAAO8M,WAAY9K,OAAQlO,IAAaskC,MAClE3xB,EAAK7e,OAAO+G,QAAUypC,GAEhE,OAAOpvC,KAAK6c,gBAAgBygD,cAActmD,GAIvC+lD,uBAAuB7+B,EAAgBq/B,GAC5C,MAAMjd,EAActgD,KAAK89C,kBAAkB5f,GAG3C,GAAGoiB,EAAa,CACd,MAAM,OAACtpC,EAAM,OAAEupC,EAAM,SAAEnR,EAAQ,QAAE1rC,GAAW48C,EAE5C,CAACtgD,KAAKqkB,kBAAkBrN,GAASo4B,EAAWpvC,KAAKqkB,kBAAkBrN,EAAQo4B,QAAYtkC,GACtFtM,OAAOC,SACPyE,SAASQ,IACRA,EAAQ8gB,QAAQzgB,OAAOw8C,MAKzB,MAAMid,EAAyBx9D,KAAK2kB,sBAAsBjhB,EAAS68C,GAenE,OAdGid,WACMD,EAAa3+D,OAAOgmB,mBACpB24C,EAAa/0D,eACb+0D,EAAaj+D,aACbi+D,EAAalmC,iBACbkmC,EAAa3zD,MAGtB5J,KAAK4c,UAAUhW,cAAc,2BAEtB5G,KAAK89C,kBAAkB5f,GAE9Bl+B,KAAKwgD,gCAAgC98C,EAAS68C,EAAQgd,GAE/CC,GAIJhd,gCAAgC98C,EAA0B68C,EAAgB1+C,GAC/E,MAAM6gB,EAAY1iB,KAAKi+C,sBAAsBsC,GAE7C,QAAiBz1C,IAAd4X,EAAyB,CAC1B,IAAI,MAAMziB,KAAQyiB,EAAW,CAC3B,MAAM,SAACvnB,EAAQ,SAAEyJ,GAAY8d,EAAUziB,GAEvC2E,EAAS/C,GAASmD,KAAK7J,EAAS8G,QAAS9G,EAASyG,eAG7C5B,KAAKi+C,sBAAsBsC,GAIpC,GAAI1+C,EAA4ByW,MAAO,EACrC,EAAAkW,GAAA,GAA4B3sB,GAC5B,MAAOmzB,MAAOyoC,EAAUj8B,SAAUk8B,GAAU77D,EAAQyW,MACpD,GAAGmlD,EAAU,CACX,MAAMzoC,EAAQh1B,KAAKs4C,iBAAiB0W,SAAS,GAAKzO,GAClD,GAAiCvrB,EAAO,CACtC,MAAM2oC,EAAeF,EAAStR,MAAMsR,EAAStR,MAAMhuD,OAAS,GACtDmwC,EAAetuC,KAAK2qC,cAAcmC,gBAAgB2wB,EAAUE,EAAal+D,MACzEm+D,EAAkB59D,KAAK2qC,cAAcmC,gBAAgB9X,EAAO,MAClEp5B,OAAOC,OAAOyyC,EAAcsvB,GAE5B,MAAM1R,EAAYuR,EAAStR,MAAMsR,EAAStR,MAAMhuD,OAAS,GAEnD+2B,GAAkB,EAAA2oC,GAAA,GAAwBJ,EAAUvR,IACzC,QAAsBh3B,EAAgBj3B,gBAGpD,GAAGy/D,EAAQ,CAChB,MAAMzyB,EAASjrC,KAAKgzC,eAAe7F,OAAO,GAAKoT,GAC/C,GAAGtV,EAAQ,CACT,MAAM2yB,EAAkB59D,KAAK2qC,cAAcmC,gBAAgB7B,GAC3D,GAEEA,EAAOxrC,MACS,YAAhBwrC,EAAOxrC,MACc,cAArBwrC,EAAOQ,WACPmyB,EAAgBx+D,IAChB,CACA,MAAMkvC,EAAetuC,KAAK2qC,cAAcmC,gBAAgB4wB,GACxD9hE,OAAOC,OAAOyyC,EAAcsvB,GC/4JSnzB,EDi5JKizB,GCh5J7C,SAAsB,EAAA1uB,GAAA,GAA6BvE,EADaqzB,WACI,CAACpvB,SAAUjE,EAAIa,mBDo5J3EzpC,EAAQyW,MAAwC0wC,cAClDhpD,KAAKipD,gBAAgB8U,MAAMxd,UAC3BvgD,KAAKipD,gBAAgB5jD,QAAQk7C,ICv5J7B,IAAkC9V,ED25J7C,MAAM+yB,EAAcx9D,KAAK2kB,sBAAsBjhB,EAAS68C,GACxD78C,EAAQK,OAAOw8C,IAEVid,EAAgCtjB,cAAiBr4C,EAA4Bq4C,cAChFn4C,YAAW,KACL/B,KAAK2kB,sBAAsBjhB,EAAS7B,EAAQ6iB,MAIhD1kB,KAAK4c,UAAUhW,cAAc,eAAgB,CAAC2qC,WAAY7tC,EAAQ6D,IAAKyP,OAAQnV,EAAQmV,OAAQ0N,IAAK7iB,EAAQ6iB,IAAK7iB,QAAAA,MAChH,GAGL7B,KAAKg+D,uBAAuBR,EAAa95D,GAEzC1D,KAAK4c,UAAUhW,cAAc,eAAgB,CAAC2qC,WAAY7tC,EAAQ6D,IAAKg5C,OAAAA,EAAQid,YAAAA,EAAa94C,IAAK7iB,EAAQ6iB,IAAK7iB,QAAAA,IAGzG+9C,mBAAmBl5B,GACxB,IAAIA,GAAY1mB,KAAKs+C,aAAa53B,EAAQ1mB,KAAKs+C,WAC7C,OAAO,EAGTt+C,KAAKs+C,UAAY53B,EACjB1mB,KAAKke,gBAAgBlW,YAAY,eAAgB0e,GAEjD1mB,KAAKgU,WAAWC,UAAU,4BAA6B,CACrDkvC,QAAQ,EAAAxkC,GAAA,GAAmB+H,KAIlBu3C,2CACXp8D,EACAknB,EACAlQ,EACA8Q,EACAu0C,EACAC,G,kDAEA,MAAMC,EAA4B,CAChCthC,UAAW,GACX5hB,MAAO,EACPs7B,iBAAa1rC,GAGTuzD,QAAuCr+D,KAAKq+D,+BAA+Bx8D,GAOjF,OANGw8D,QAA4CvzD,IAAVie,EACnCA,EAAQ,SACUje,IAAVie,IACRA,EAAQ,IAGHpnB,QAAQ8Q,IAAI,EACjB4rD,GAAmCxlD,GAAaqlD,EAAkH,GAA3Fl+D,KAAKs+D,2BAA2Bz8D,EAAQmV,OAAQnV,EAAQ6iB,KAAKrW,OAAM,IAAM,MAE7G,QAAnC,EAAiB,QAAjB,EAAAxM,EAAQi7B,iBAAS,eAAElkB,wBAAgB,eAAEza,UAAWggE,EAAoBn+D,KAAKu+D,oBAAoBC,wBAAwB38D,EAAQmV,OAAQnV,EAAQ6iB,IAAKqE,EAAOlQ,EAAU8Q,GAAQtb,OAAO5E,GAAQ20D,IAA6BA,IACtNp5D,MAAK,EAAEiU,EAASwlD,MACjB,MAAMC,EAA0BzlD,EAAQ7U,KAAKkT,GAAWA,EAAO7Q,aAEzDk4D,EAA2BD,EAAwB92D,SACzD,EAAAoe,GAAA,GAAe24C,GAA0B,CAAC3nD,EAAQxS,EAAK0G,KAClDuzD,EAAqB3hC,UAAUhO,MAAMjW,GAAa7Y,KAAK0b,gBAAgB5C,UAAUD,EAASE,WAAa/B,KACxG9L,EAAIjB,OAAOzF,EAAK,MAIpB,IAAIisC,EAAoDguB,EAAqB3hC,UAAU14B,KAAKyU,IAAa,CAAE7B,OAAQhX,KAAK0b,gBAAgB5C,UAAUD,EAASE,SAAUF,SAAUA,EAASA,aAGxL,OAFA43B,EAAWA,EAASvsC,OAAOy6D,EAAyBv6D,KAAKw6D,IAAe,CAAE5nD,OAAQ4nD,OAE3E,CACL9hC,UAAW2hC,EAAqB3hC,UAChC+hC,eAAgBJ,EAAqBvjD,MACrC4jD,iBAAkBJ,EAClBjuB,SAAUA,EACV6D,WAAYmqB,EAAqBjoB,mBAKhC8nB,2BAA2BtnD,EAAgB0N,GAChD,OAAO1kB,KAAKgU,WAAWqa,gBAAgB,sCAAuC,CAC5E5S,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C0iC,QAAQ,EAAA/6B,GAAA,GAAmB+F,KAC1B1f,MAAMiU,GACAA,EAAQ7U,KAAKkT,GAAWA,EAAOsV,eAI7ByxC,+BAA+Bx8D,G,0CAC1C,GACiB,aAAfA,MAAAA,OAAO,EAAPA,EAASxD,IACTwD,EAAQjD,OAAOgmB,cACd/iB,EAAQjD,OAAOmb,MACf/Z,KAAK0b,gBAAgBiR,WAAW9qB,EAAQmV,QAEzC,OAAO,EAGT,MAAMyG,EAAiCzd,KAAK0d,gBAAgBC,QAAQ9b,EAAQmV,OAAO8M,YAC7Ei7C,QAAkB/+D,KAAKgU,WAAWgrD,eACxC,OAAOvhD,EAAKgb,oBAAsBsmC,EAAUE,gCACzC,EAAAl9C,GAAA,IAAM,GAAQlgB,EAAQggB,KAAQk9C,EAAUG,gCAGtCC,sBAAsBnoD,EAAgBitC,GAC3C,GAAIA,EAAK9lD,OAIT,OAAO6B,KAAKgU,WAAWqa,gBAAgB,4BAA6B,CAClE5S,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C1Y,GAAI2lD,EAAK7/C,KAAKsgB,IAAQ,EAAA/F,GAAA,GAAmB+F,KACzC06C,WAAW,IACVp6D,MAAMogD,IACP,MAAMz+B,EAAoB,IAAI7lB,MAAMmjD,EAAK9lD,QACnCylB,EAAY5M,EAAO8M,WACzB,IAAI,IAAIje,EAAI,EAAG1H,EAAS8lD,EAAK9lD,OAAQ0H,EAAI1H,IAAU0H,EACjD8gB,EAAQ9gB,GAAK,CACXxH,EAAG,4BACHgb,WAAYuK,EACZtlB,GAAI2lD,EAAKp+C,GACTu/C,MAAOA,EAAMA,MAAMv/C,GAAGu/C,OAI1BplD,KAAK6d,kBAAkBkS,qBAAqB,CAC1C1xB,EAAG,UACHsoB,QAAAA,EACAR,MAAOi/B,EAAMj/B,MACbjN,MAAOksC,EAAMlsC,WAKXinC,mBAAmBt+C,EAAoBzE,EAI1C,IACH,MAAM4Z,EAAShX,KAAK0gD,eAAe7+C,GAEnC,GAAG7B,KAAK0b,gBAAgBmc,aAAa7gB,GACnC,OAGF,MAAMmmC,EAAO,aACb,IAAIG,EAAMH,EAAK55C,MAAM+5C,IACnB,MAAM,YAAC+hB,GAAe/hB,EAAIn2C,MAC1B,OAAOk4D,EAAYA,EAAYlhE,OAAS,KAAO6Y,KAG7CsmC,IACFH,EAAK19B,MAAK,CAACC,EAAGC,IAAMD,EAAEvY,MAAMm4D,cAAgB3/C,EAAExY,MAAMm4D,gBACpDhiB,EAAOH,EAAK,GAAGh2C,MAAMm4D,cAA0BniB,EAAKA,EAAKh/C,OAAS,GAA7Bg/C,EAAK,IAG/B,kBACRr2C,WAAW,oBAAqB,OAAF,QACjCjF,QAAAA,GACGzE,GACFkgD,EAAI1G,QAGF+R,4BAA4B3xC,G,MACjC,OAA4C,QAArC,EAAAhX,KAAKm/C,yBAAyBnoC,UAAO,QAAKhX,KAAKm/C,yBAAyBnoC,GAAUhX,KAAK4gD,qBAAqB5pC,EAAQ,aAGtHuoD,0BAA0BvoD,EAAgB0N,GAC/C,OAAO1kB,KAAK2kB,sBAAsB3kB,KAAK2oD,4BAA4B3xC,GAAS0N,GAGvE86C,qBAAqBxoD,GAC1B,IAAIhX,KAAKq9D,cAAcrmD,GAAS,OAEhC,MAAMtT,EAAU1D,KAAK2oD,4BAA4B3xC,GACjD,OAAGtT,EAAQ+P,KACF,IAAI/P,EAAQ2P,QAGdrT,KAAKgU,WAAWqa,gBAAgB,+BAAgC,CACrE5S,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C0mB,KAAM,KACL14B,MAAM2vD,IACP,GAAuB,iCAApBA,EAAct2D,EAAsC,CACrD2B,KAAK6c,gBAAgBoJ,aAAa0uC,EAAcz7C,OAChDlZ,KAAK0d,gBAAgBwI,aAAayuC,EAAcxuC,OAEhD,MAAMziB,EAAU1D,KAAK2oD,4BAA4B3xC,GAEjD,OADAhX,KAAK6e,aAAa81C,EAAcvuC,SAAU,CAAC1iB,QAAAA,EAASqiD,aAAa,IAC1D,IAAIriD,EAAQ2P,QAGrB,MAAO,MAIJosD,sBAAsBzoD,EAAgBitC,GAC3C,OAAOjkD,KAAKgU,WAAWC,UAAU,iCAAkC,CACjEwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C1Y,GAAI2lD,EAAK7/C,KAAKsgB,IAAQ,EAAA/F,GAAA,GAAmB+F,OACxC1f,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAIzC+4C,wBAAwB1oD,EAAgBitC,GAC7C,OAAOjkD,KAAKgU,WAAWC,UAAU,mCAAoC,CACnEwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C1Y,GAAI2lD,EAAK7/C,KAAKsgB,IAAQ,EAAA/F,GAAA,GAAmB+F,OACxC1f,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAIzCk0C,sBAAsBh5D,GAC3B,OAAO7B,KAAK+1D,eAAel0D,GAAUA,KAAeA,EAA4B4tD,UAAS,GAGpFkQ,6BAA6B99D,GAClC,GAAGA,EAAQmV,SAAW,KAAiB,CAErC,MAAMy4C,EAAU5tD,OADhBA,EAAU7B,KAAK66D,sBAAsBh5D,SACd,EAAPA,EAAS4tD,QACzB,IAAKA,IAAWA,EAAQ7wD,OAAOkxD,UAAYL,EAAQp2C,WAAWyK,aAAe,KAC3E,OAIJ,OAAOjiB,EAGF+9D,sBAAsB5oD,GAC3B,OAAOA,EAAO+N,cAAgB/kB,KAAK0d,gBAAgB+b,SAASziB,EAAO8M,YAGxD+7C,cAAc7oD,EAAgBo4B,G,gDACzC,IAAIpvC,KAAK4/D,sBAAsB5oD,GAC7B,OAGF,MAAMoN,EAAiBpkB,KAAKqkB,kBAAkBrN,EAAQo4B,GAChDxnC,EAAQwc,EAAeI,QAAQ5c,MACrC,IAAIA,EAAMsgB,MAAM,aACd,cAGK9D,EAAesC,MACtB9e,EAAMk4D,SAAS,aAGf,MAAMnL,QAAsB30D,KAAK00D,WAAW19C,EAAgB,QAAR,EAAApP,EAAM,UAAE,QAAI,EAAG,EAAG,GAAIwnC,GAC1E,IAAI,IAAIvpC,EAAI,EAAG1H,EAASw2D,EAAcnwC,QAAQrmB,OAAQ0H,EAAI1H,IAAU0H,EAClE7F,KAAKyhD,iBAAiBzhD,KAAK+e,iBAAiB/H,EAAQ29C,EAAcnwC,QAAQ3e,KAG5E,MAAO,CAACk6D,YAAa37C,EAAeI,QAAQ5c,MAAMsgB,MAAM,iBAQnDwsC,WAAW19C,EAAgB0P,EAAgB,EAAGqC,EAAgB0wC,EAAoBrqB,GACvF,MAAMhrB,EAAiBpkB,KAAKqkB,kBAAkBrN,EAAQo4B,GAEtD,GAAGpvC,KAAK0b,gBAAgBmc,aAAa7gB,GAAS,CAC5C,MAAMjP,EAAQqc,EAAeI,QAAQzc,MACrCA,EAAMqgB,OAAO,WAEb,MAAMxgB,EAAQG,EAAMH,MAAM,EAAG,GAG7B,OAFAA,EAAMwgB,OAAO,WAEN,CACLlN,MAAO,EACPsJ,QAAS1jB,MAAMC,KAAK6G,GACpBsgB,MAAOtgB,EAAMo4D,UACbC,eAAgB,GAIpB,IAAIt2C,EAAS,EAsCV8vC,IACD9vC,GAAU8vC,EACV1wC,GAAS0wC,GAcX,MAAMyG,EAAY97C,EAAeI,QAAQ27C,QAAQz5C,EAAOiD,EAAQZ,GAChE,OAAGm3C,GAAcA,EAAUt4D,MAAMzJ,SAAW4qB,IAAUm3C,EAAUE,UAAY,aAAmB,UAaxFpgE,KAAKqgE,mBAAmBrpD,EAAQ0P,EAAOqC,EAAOY,EAAQvF,EAAgBgrB,GAAUpqC,MAAK,KAC1F,MAAM4C,EAAQwc,EAAeI,QAAQ27C,QAAQz5C,EAAOiD,EAAQZ,GACtD6E,GAAIhmB,MAAAA,OAAK,EAALA,EAAOA,QAASwc,EAAeI,QAAQ87C,iBACjD,MAAO,CACLplD,MAAOkJ,EAAelJ,MACtBsJ,QAAS1jB,MAAMC,KAAK6sB,GACpB1F,MAAO0F,EAAEoyC,UACTC,gBAAgBr4D,MAAAA,OAAK,EAALA,EAAOq4D,iBAAkB77C,EAAelJ,UAnBnD,CACLA,MAAOkJ,EAAelJ,MACtBsJ,QAAS1jB,MAAMC,KAAKm/D,EAAUt4D,OAC9BsgB,MAAOg4C,EAAUt4D,MAAMo4D,UACvBC,eAAgBC,EAAUD,gBAoBzBM,mBAAmB5L,EAAwF5rC,EAAegxC,GAC/H,MAAM,iBAACL,EAAgB,SAAEtzC,GAAYuuC,EAE/Bz5C,EAASy5C,EAAyDz5C,OAASkL,EAASjoB,OACpF8hE,EAAiBvG,GAAoB,EAErC8G,EAAoBzG,EAAa,EAAIhxC,EAAQgxC,EAAahxC,EAKhE,MAAO,CAAC7N,MAAAA,EAAO+kD,eAAAA,EAAgBn2C,SAHdm2C,GAAmB/kD,EAAQslD,GAAsBtlD,EAAQslD,EAGjCT,aAFpBE,GAAmBlG,EAAa,GAAMkG,EAAiBlG,GAAe,GAKtFiC,mBAAmBP,EACxB9G,EACArD,EACAvoC,EACAgxC,GACA,MAAM,SAAC3zC,GAAYuuC,EACbzsC,EAAQloB,KAAKugE,mBAAmB5L,EAAe5rC,EAAOgxC,IACtD,MAAC7+C,EAAK,eAAE+kD,EAAc,SAAEn2C,EAAQ,YAAEi2C,GAAe73C,EACjD+7B,EAAO79B,EAAShiB,KAAKvC,GACjBA,EAAsB6iB,MAMhC,GAAG4sC,IAAa,EAAA3yC,GAAA,GAAmB2yC,KAAerN,EAAKx4B,SAAS6lC,IAAc2O,EAAiB/kD,EAAO,CACpG,IAAIrV,EAAI,EACR,IAAI,MAAM1H,EAAS8lD,EAAK9lD,OAAQ0H,EAAI1H,KAC/BmzD,EAAYrN,EAAKp+C,MADwBA,GAM9Co+C,EAAKh6C,OAAOpE,EAAG,EAAGyrD,GAGpB,MAAM1pD,EAAQ6zD,EAAYtzC,YAAY87B,IAASwX,EAAY7zD,MAS3D,OARGkiB,GACDliB,EAAMwgB,OAAO,UAGZ23C,GACDn4D,EAAMwgB,OAAO,aAGR,OAAP,QAAQxgB,MAAAA,EAAOq8C,KAAAA,EAAM79B,SAAAA,GAAa8B,GAG7Bm4C,mBAAmBrpD,EAAgBs6C,EAAmBvoC,EAAegxC,EAAoB31C,EAAgCgrB,GAC9H,MAAMqxB,EAAWr8C,EAAesC,MAChC,OAAO1mB,KAAK0gE,eAAe1pD,EAAQs6C,EAAWvoC,EAAOgxC,OAAYjvD,EAAWskC,GAAUpqC,MAAM2vD,IAC1F,MAAM,MAACz5C,EAAK,YAAE6kD,EAAW,MAAEn4D,EAAK,SAAEwe,GAAYpmB,KAAKg8D,mBAAmB53C,EAAeI,QAASmwC,EAAerD,EAAWvoC,EAAOgxC,GAE/H31C,EAAelJ,MAAQA,EAQvB,IAAI,IAAIrV,EAAI,EAAG1H,EAASioB,EAASjoB,OAAQ0H,EAAI1H,IAAU0H,EAAG,CACxD,MAAMhE,EAAUukB,EAASvgB,GACtB7F,KAAKqoB,mBAAmBjE,EAAgBviB,IACzC7B,KAAK4c,UAAUhW,cAAc,uBAAwB,CAACoQ,OAAAA,IAI1D,GAAG+oD,EAAa,CACd,MAAMY,EAAW/4D,EAAM,GAEvB,GAAGwc,EAAesC,QAAU+5C,EAAU,CACpC,MAAM14D,EAAQqc,EAAeI,QAAQzc,MAClCA,IAAUH,GACXwc,EAAeI,QAAQo8C,YAAY74D,GAGlCqc,EAAesC,QAAUi6C,IAC1Bv8C,EAAesC,MAAQ9e,EAAM,GAE7B5H,KAAKgf,mBAAmBhI,SA0C3B0pD,eAAe1pD,EAAgB0P,EAAeqC,EAAQ,EAAGY,EAAS,EAAGrK,EAAa,EAAG8vB,EAAW,GAKrG,MAAMhyC,EAAe,CACnBqe,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5Cs6C,WAAW,EAAA3yC,GAAA,GAAmB+H,IAAU,EACxC2qC,YAAa/xC,EACby6C,WAAYpwC,EACZZ,MAAAA,EACAo6B,OAAQ,EACR6W,OAAQ,EACRt8B,KAAM,GAYR,OATG0R,IACDhyC,EAAQs8C,QAAS,EAAA/6B,GAAA,GAAmBywB,IAAa,GAGepvC,KAAKgU,WAAWqa,gBAAgB+gB,EAAW,sBAAwB,sBAAuBhyC,EAAS,CAEnKs2B,YAAY,IAGC1uB,MAAM2vD,IAChB,MACD30D,KAAKG,IAAI,yBAA0B6W,EAAQ29C,EAAejuC,EAAOqC,EAAOY,GAG1E3pB,KAAK6c,gBAAgBoJ,aAAa0uC,EAAcz7C,OAChDlZ,KAAK0d,gBAAgBwI,aAAayuC,EAAcxuC,OAChDnmB,KAAK6e,aAAa81C,EAAcvuC,UAE7BpmB,KAAK0b,gBAAgBmI,UAAU7M,IAChChX,KAAK6d,kBAAkB6K,gBAAgB1R,EAAO8M,WAAa6wC,EAA2DxwC,KAGxH,IAAIhmB,EAASw2D,EAAcvuC,SAASjoB,OAAQ+c,EAASy5C,EAAyDz5C,MAC3G/c,IAAWw2D,EAAcvuC,SAASjoB,EAAS,KAC5Cw2D,EAAcvuC,SAASnc,OAAO9L,EAAS,EAAG,GAC1CA,IACA+c,KAKF,MAAMkJ,EAAiBpkB,KAAKqkB,kBAAkBrN,EAAQo4B,GAChDyxB,EAAiClM,EAAcvuC,SAASjoB,EAAS,GACvE,GAAGA,GAAU0iE,EAAc5d,WAAY,CACrC,MAAM6d,EAAa18C,EAAeI,QAAQ68B,UAAUwf,EAAcn8C,KAClE,GAAGo8C,GAAeA,EAAWl5D,MAAMzJ,OAASw2D,EAAcvuC,SAASjoB,OAAU+c,EAC3E,OAAOlb,KAAK0gE,eAAe1pD,EAAQ6pD,EAAcn8C,IAAK,GAAI,EAAGpF,EAAY8vB,GAAUpqC,MAAM+7D,GAChFpM,IAKb,OAAOA,KACLr1D,IACF,GACO,oBADAA,EAAMG,KACX,CACE,IAAIskB,EAAU/jB,KAAK0d,gBAAgBC,QAAQ3G,EAAO8M,YAClDC,EAAU,CAAC1lB,EAAG,mBAAoBq4B,YAAa3S,EAAQ2S,YAAatM,MAAOrG,EAAQqG,OACnFpqB,KAAK6d,kBAAkBkS,qBAAqB,CAC1C1xB,EAAG,UACHsoB,QAAS,CAAC,CACRtoB,EAAG,gBACHgb,WAAYrC,EAAO8M,aAErBqC,MAAO,CAACpC,GACR7K,MAAO,KAKb,MAAM5Z,KAIH0hE,sBACL,OAAGhhE,KAAKo+C,2BACCp+C,KAAKo+C,2BAGPp+C,KAAKo+C,4BAA6B,EAAAl0C,EAAA,GAAM,GAAGlF,MAAK,KACrD,MAAMi8D,EAAmC,GAEzC,IAAI,MAAOjqD,EAAQ5S,KAAQpE,KAAKm+C,mBAAoB,CAClD,MAAM8F,EAAO,IAAI7/C,EAAIiP,QACf+oD,EAAyBnY,EAAK7/C,KAAKsgB,IAChC,CACLrmB,EAAG,iBACHC,IAAI,EAAAqgB,GAAA,GAAmB+F,OAI3B,IAAI5a,EAEFA,EADCkN,EAAO+N,aAAe/kB,KAAK0b,gBAAgBmI,UAAU7M,GAC5ChX,KAAKgU,WAAWqa,gBAAgB,uBAAwB,CAChEtK,QAAS/jB,KAAK0d,gBAAgBmV,gBAAgB7b,EAAO8M,YACrDxlB,GAAI89D,IAGIp8D,KAAKgU,WAAWqa,gBAAgB,uBAAwB,CAChE/vB,GAAI89D,IAIR,MAAMz/C,EAAQ7S,EAAQ9E,MAAMk8D,KAC1B,EAAA1yC,GAAA,GAAqG0yC,GAErGlhE,KAAK6c,gBAAgBoJ,aAAai7C,EAAkBhoD,OACpDlZ,KAAK0d,gBAAgBwI,aAAag7C,EAAkB/6C,OACpD,MAAMC,EAAWpmB,KAAK6e,aAAaqiD,EAAkB96C,UAErD,IAAI,IAAIvgB,EAAI,EAAGA,EAAIugB,EAASjoB,SAAU0H,EAAG,CACvC,MAAMhE,EAAUukB,EAASvgB,GACzB,IAAIhE,EACF,SAGF,MAAM6iB,GAAM,EAAAsC,GAAA,GAAkBnlB,EAAQvD,IACtB8F,EAAIM,IAAIggB,GAChBziB,QAAQJ,GAChBuC,EAAIL,OAAO2gB,GAGb,GAAGtgB,EAAIqP,KACL,IAAI,MAAOiR,EAAK5a,KAAY1F,EAC1B0F,EAAQ7H,QAAQjC,KAAKozD,qBAAqB1uC,OAG7Cgf,SAAQ,KACT1jC,KAAK4c,UAAUhW,cAAc,sBAAuB,CAACoQ,OAAAA,EAAQitC,KAAAA,OAG/Dgd,EAAgB3gE,KAAKqc,GAKvB,OAFA3c,KAAKm+C,mBAAmB95C,QAEjB1C,QAAQ8Q,IAAIwuD,GAAiBj8D,KAAKomD,GAAA,EAAMA,GAAA,GAAMpmD,MAAK,KACxDhF,KAAKo+C,2BAA6B,KAC/Bp+C,KAAKm+C,mBAAmB1qC,MAAMzT,KAAKghE,4BAOrCjqD,eAAeC,EAAgB0N,EAAwB0J,GAC5D,GAAGttB,MAAMmD,QAAQygB,GACf,OAAO/iB,QAAQ8Q,IAAIiS,EAAItgB,KAAKsgB,GACnB1kB,KAAK+W,eAAeC,EAAQ0N,EAAK0J,MAI5C,MAAMvsB,EAAU7B,KAAK+e,iBAAiB/H,EAAQ0N,GAC9C,GAAG7iB,IAAYusB,EAEb,OADApuB,KAAK4c,UAAUhW,cAAc,sBAAuB,CAACoQ,OAAAA,EAAQitC,KAAM,CAACv/B,KAC7D/iB,QAAQM,QAAQJ,GAClB,CACL,IAAIuC,EAAMpE,KAAKm+C,mBAAmBz5C,IAAIsS,GAClC5S,GACFpE,KAAKm+C,mBAAmB/1C,IAAI4O,EAAQ5S,EAAM,IAAIwN,KAGhD,IAAI9H,EAAU1F,EAAIM,IAAIggB,GACtB,OAAG5a,IAIHA,GAAU,SACV1F,EAAIgE,IAAIsc,EAAK5a,GACb9J,KAAKghE,sBACEl3D,IAIJq3D,iBAAiBnqD,EAAgBitC,GACtC,IAAI7/C,EAAMpE,KAAKq+C,cAAc35C,IAAIsS,GAC7B5S,GACFpE,KAAKq+C,cAAcj2C,IAAI4O,EAAQ5S,EAAM,IAAIwN,KAG3C,MAAMzW,GAAW,SACXimE,EAAsB,GACtBp4C,EAAWi7B,EAAK7/C,KAAKsgB,IACzB,IAAI5a,EAAU1F,EAAIM,IAAIggB,GAatB,OAZI5a,IACF1F,EAAIgE,IAAIsc,EAAK5a,EAAU3O,GACvBimE,EAAU9gE,KAAKokB,GAEf5a,EAAQ9E,MAAK,KACXZ,EAAIL,OAAO2gB,GACPtgB,EAAIqP,MAAQzT,KAAKq+C,cAAc35C,IAAIsS,KAAY5S,GACjDpE,KAAKq+C,cAAct6C,OAAOiT,OAKzBlN,KAeT,OAZIs3D,EAAUjjE,OAGZ6B,KAAKgU,WAAWC,UAAU,4BAA6B,CACrDwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C1Y,GAAI8iE,EAAUh9D,KAAKsgB,IAAQ,EAAA/F,GAAA,GAAmB+F,OAC7C1f,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,GAC5CxrB,EAAS8G,aAPX9G,EAAS8G,UAWJN,QAAQ8Q,IAAIuW,GAGdq4C,oBAAoBx/D,GACzB,IAAIA,EAAQm/C,aAAc,OAAOr/C,QAAQM,QAAQjC,KAAKozD,qBAAqB,IAC3E,MAAMkO,EAAgBz/D,EAAQ4uB,SAASswB,iBAAmB/gD,KAAK0b,gBAAgB5C,UAAUjX,EAAQ4uB,SAASswB,kBAAoBl/C,EAAQmV,OACtI,OAAOhX,KAAK+W,eAAeuqD,EAAez/D,EAAQm/C,cAAch8C,MAAMkrD,IAMpE,GALIA,UACFruD,EAAU7B,KAAK+e,iBAAiBld,EAAQmV,OAAQnV,EAAQ6iB,MACzCs8B,aAGA,mBAAdn/C,EAAQxD,EAAwB,CACjC,MAAM2Y,EAASnV,EAAQmV,OACvBhX,KAAK4c,UAAUhW,cAAc,eAAgB,CAC3C2qC,WAAY,GAAGv6B,YACfA,OAAQA,EACR0N,IAAK7iB,EAAQ6iB,IACb7iB,QAAAA,IAGC7B,KAAK28D,sBAAsB96D,IAC5B7B,KAAK4c,UAAUhW,cAAc,sBAAuB,IAAIgL,IAAI,CAAC,CAACoF,EAAQhX,KAAKkc,cAAclF,OAI7F,OAAOk5C,KAIJ/C,UAAUn2C,EAAgBgC,EAA2B42B,G,MAC1D,IAAI2xB,EAASvhE,KAAK4+C,QAAQ5nC,GAC1B,OACGA,GACAhX,KAAKq9D,cAAcrmD,IACpBA,IAAWhX,KAAK0b,gBAAgB1E,SAE9B44B,IAAuB,QAAd,EAAA2xB,MAAAA,OAAM,EAANA,EAAQvoD,cAAM,eAAE3a,KAAM2a,EAAO3a,KAKvCkjE,MAAAA,OAAM,EAANA,EAAQp8D,UACTD,aAAaq8D,EAAOp8D,SAGtBo8D,EAASvhE,KAAK4+C,QAAQ5nC,GAAU,CAC9BgC,OAAAA,GAGKhZ,KAAKgU,WAAWC,UAAU,qBAAsB,CACrDwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5CgC,OAAAA,IACC0qB,SAAQ,KACN69B,IAAWvhE,KAAK4+C,QAAQ5nC,KACzBuqD,EAAOp8D,QAAU6J,EAAA,cAAe,YACvBhP,KAAK4+C,QAAQ5nC,KACnB,UAlBErV,QAAQM,SAAQ,GAuBnB+7D,uBAAuBn8D,EAAoB6B,GACjD,MAAM4U,EAASzW,EAA4ByW,MAC3C,GAAGA,EAAO,CACR,MAAMzB,EAAKyB,EAA2CswC,SAA8BtwC,EAC9EkpD,EAAkC3qD,EAAqCme,OAAiBne,EAAwC2qB,SAMtI,IAJGggC,MAAAA,OAAI,EAAJA,EAAMt2B,iBACPlrC,KAAKmrC,kBAAkBx0B,cAAc6qD,EAAKt2B,eAAgB,CAACzrC,KAAM,UAAWuX,OAAQnV,EAAQmV,OAAQ7I,UAAWtM,EAAQ6iB,MAGtH,YAAapM,GAASA,EAAMswC,QAAS,CACtC,MAAM7C,EAAc/lD,KAAK2oD,4BAA4B9mD,EAAQmV,UAAYtT,EACnEkzD,EAAa52D,KAAK6oD,mBAAmBgO,+BAA+Bh1D,EAAQmV,OAAQnV,EAAQ6iB,IAAKqhC,GACvG/lD,KAAK6oD,mBAAmB4Y,yBAAyBnpD,EAAMswC,QAASgO,GAG9Dt+C,EAAwC0wC,MAC1ChpD,KAAKipD,gBAAgByY,oBAAoB7/D,GAA4B,IAKnE8iD,sBAAsB3tC,EAAgBtT,EAA0B0iB,GACtE,MAAM5B,EAMF,CACFtJ,MAAO,EACP8M,OAAQ,EACR62B,eAAgB,EAChBgG,KAAM,IAAIzuC,KAGZ,IAAI,MAAMsO,KAAO0B,EAAU,CACzB,MAAMvkB,EAAqB7B,KAAK2kB,sBAAsBjhB,EAASghB,GAC/D,IAAI7iB,EAAS,CACX7B,KAAKokD,mCAAmCptC,GACxC,SAGFhX,KAAKg+D,uBAAuBn8D,EAAS6B,GAErC1D,KAAKohD,6BAA6Bv/C,GAE9BA,EAAQjD,OAAOmb,KAAQlY,EAAQjD,OAAOgmB,cAAe/iB,EAAQjD,OAAOopB,WACpExD,EAAQwD,OACVhoB,KAAK4c,UAAUhW,cAAc,sBAAuB,MAAQ8d,GAEzD7iB,EAAQjD,OAAOshD,cACd17B,EAAQq6B,eACV7+C,KAAK2hD,qBAAqB3qC,EAAQ0N,GAAK,OAIzCF,EAAQtJ,MACVsJ,EAAQqgC,KAAKtuC,IAAImO,GAEjB7iB,EAAQwlB,SAAU,EAElB,MAAMuuC,EAAa/zD,EAA4BohD,WAC/C,GAAG2S,EAAW,CACZ,MAAM+L,EAAiB3hE,KAAKk/C,uBAAuB0W,GAChD+L,IACDA,EAAe59D,OAAO2gB,GAElBF,EAAQo9C,SAAQp9C,EAAQo9C,OAAS,KACpCp9C,EAAQo9C,OAAOhM,KAAepxC,EAAQo9C,OAAOhM,GAAa,IAAIx/C,MAAQG,IAAImO,GAEvEi9C,EAAeluD,cACV+Q,EAAQo9C,cACR5hE,KAAKk/C,uBAAuB0W,KAKzClyD,EAAQK,OAAO2gB,GAGjB,GAAGF,EAAQo9C,OACT,IAAI,MAAMhM,KAAapxC,EAAQo9C,OAC7B5hE,KAAK6hE,kBAAkBjM,EAAWlyD,EAAS,IAAI8gB,EAAQo9C,OAAOhM,KASlE,OAAOpxC,EAGDo+B,oBAAoBF,EAAqBC,EAAqBj/C,G,MACpE,GAAoB,YAAjBg/C,EAAWrkD,EAAiB,CAC7B,GAAyD,QAArD,EAAAqkD,EAAWpqC,aAA0C,eAAEswC,QAAS,CAClE,MAAMgO,EAAa52D,KAAK6oD,mBAAmBgO,+BAA+BnU,EAAW1rC,OAAQ0rC,EAAWh+B,MAAOg+B,EAAW9jD,OAAOgrD,cACjI5pD,KAAK6oD,mBAAmB4Y,yBAA0B/e,EAAWpqC,MAA2CswC,QAASgO,GAGnH,MAAMhB,EAAYlT,EAAWO,WAC1B2S,GACD51D,KAAK6hE,kBAAkBjM,EAAWlyD,EAAS,KAKzCm+D,kBAAkBjM,EAAmBlyD,EAA0Bo+D,GACrE,MACM17C,EADOpmB,KAAK21D,eAAeC,GACXxxD,KAAKsgB,GAAQ1kB,KAAK2kB,sBAAsBjhB,EAASghB,KACvE1kB,KAAK4c,UAAUhW,cAAc,aAAc,CAACoQ,OAAQoP,EAAS,GAAGpP,OAAQk3C,QAAS0H,EAAWkM,YAAaA,GAAe,GAAI17C,SAAAA,IAGvHvD,qBAAqB3I,GAC1B,OAAOA,EAAO+N,iBAAmB/N,EAAOtb,OAAO4jD,YAG1Cn2B,eAAenS,GACpB,QAASla,KAAK6iB,qBAAqB3I,GAG9B25C,WAAWhyD,GAChB,MAAsB,aAAfA,MAAAA,OAAO,EAAPA,EAASxD,KAAqBwD,EAA4BjD,OAAOmjE,aAAe/hE,KAAK0b,gBAAgBsmD,WAAWngE,EAAQmV,QAGzHorC,gBACNjgD,EACAyC,EACA2C,EACA06D,GAEA,IAAIpmB,EAAU77C,KAAK++C,aAAa58C,GAC5B05C,IAEFA,EAAU77C,KAAK++C,aAAa58C,GAAS,CACnCyC,SAAAA,EACAuhD,MAAO,IAAIv0C,MAIXiqC,EAAQsK,MAAM38B,IAAIjiB,KAEpBs0C,EAAQsK,MAAM/9C,IAAIb,EAAK06D,EAAqBA,SAAuBn3D,GACnE9K,KAAKmpD,yBAID9C,mBAA4CjiD,GAClD,MAAM89D,EAAgD,IAAItwD,IAC1D,IAAI,MAAOrK,EAAKhD,KAAUH,EAAK,CAC7B,MAAO+9D,EAAWz9C,GAAOnd,EAAIG,MAAM,KAC7B7F,EAAU7B,KAAK+e,iBAAiBojD,EAAU17D,YAAaie,GACzD7iB,GAIJqgE,EAAO95D,IAAIvG,EAAS0C,GAGtB,OAAO29D,EA8CFE,kBAAkBprD,EAAgB2zC,GAGvC,OAFoB3qD,KAAKoX,kBAAkB4lB,kBAAkBhmB,EAAO8M,YACxDu+C,gBAAkBriE,KAAK0b,gBAAgB0L,cAAcujC,GAC1D3qD,KAAKgU,WAAWC,UAAU,6BAA8B,CAC7DwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C+zC,QAAS/qD,KAAK0b,gBAAgB4R,iBAAiBq9B,M,eEt3LtC,SAAS2X,GAAuCC,GAC7D,MAAMnkE,EAAMmkE,EAAS9kE,QAAQ,QAAS,IACtC,OAAQW,EAAI,GAAGjC,cAAgBiC,EAAIwJ,MAAM,GC0B3C,MAAM46D,GAA2B,gBAK1B,MAAMC,WAAgC3vD,EAA7C,c,oBACU,KAAA4vD,aAAe,CACrB7gB,WAAY,GACZ8gB,YAAa,KACbC,YAAa,KACbC,iBAAkB,MAqLZ,KAAAC,eAAiB,UACWh4D,IAA/B9K,KAAK+iE,wBACN79D,aAAalF,KAAK+iE,uBAClB/iE,KAAK+iE,2BAAwBj4D,GAG/B,MAAMgxB,GAAY,EAAA/Z,GAAA,IAAM,GACxB,IAAIihD,EAAmB,KACvB,IAAI,MAAMhsD,KAAUhX,KAAK0iE,aAAa7gB,WAAY,CAChD,MAAMohB,EAAqBjjE,KAAK0iE,aAAa7gB,WAAW7qC,GACxD,GAAGisD,aAA8BthE,QAC/B,SAGF,MAAMs7D,EAAYgG,EAAmB/F,WACjCD,IAIDA,GAAanhC,GAEdmnC,EAAmB/F,WAAa,EAEhCl9D,KAAK6d,kBAAkBgJ,WAAW,CAChCxoB,EAAG,uBACHod,KAAM,CACJpd,EAAG,aACHod,KAAMzb,KAAK0b,gBAAgB0L,cAAcpQ,EAAOvQ,aAElDgiB,gBAAiBw6C,KAEXhG,EAAY+F,IACpBA,EAAmB/F,IAIvB,MAAM93D,EAAUoa,KAAKC,IAAI,KAAyC,KAAhCwjD,EAAmBlnC,IACrD97B,KAAK+iE,sBAAwB/zD,EAAA,aAAehP,KAAK8iE,eAAgB39D,IA/MzDwX,QAgBR,OAfA3c,KAAKkjE,yBAA0B,EAAAC,GAAA,GAASnjE,KAAK8iE,eAAgB,KAAM,GAEnE9iE,KAAK6d,kBAAkBC,2BAA2B,CAChDwqC,qBAAuBjtC,IACrB,MAAMrE,EAA2B,eAAlBqE,EAAOI,KAAKpd,GAAsB2B,KAAK0b,gBAAgB5C,UAAUuC,EAAOI,KAAKA,MACtFlU,EAAwB,eAAlB8T,EAAOI,KAAKpd,EAAqBgd,EAAOI,KAAKpd,OAAIyM,EAC7D9K,KAAKwoB,iBAAiB,CACpBjhB,IAAAA,EACAyP,OAAAA,EACAjQ,SAAUsU,EAAOoN,kBAEnBzoB,KAAK4c,UAAUhW,cAAc,kBAAmByU,MAI7Crb,KAAKke,gBAAgB7W,WAAWrC,MAAMmC,IAC3C,GAAGA,EAAMi8D,eACP,IAAI,MAAM77D,KAAOJ,EAAMi8D,gBACrB,EAAA50C,GAAA,GAAmDjnB,GACnDvH,KAAKwoB,iBAAiB,CACpBjhB,IAAAA,EACAR,SAAUI,EAAMi8D,eAAe77D,QAOlCk1D,kBAAkBhhD,GACvB,IAGIzE,EAHAzP,EAAW+6D,GAAqB7mD,EAAKpd,GACrCmT,EAAWxR,KAAK0iE,aAAan7D,GAQjC,MALc,oBAAXkU,EAAKpd,IACN2Y,EAASzP,EAAMvH,KAAK0b,gBAAgB5C,UAAU2C,EAAKA,MACnDjK,EAAMA,EAAIjK,IAGTiK,KAIKA,GAAOxR,KAAK0iE,cAAcn7D,GAAOvH,KAAKgU,WAAWC,UAAU,4BAA6B,CAACwH,KAAAA,IAChGzW,MAAM+B,IACL/G,KAAKwoB,iBAAiB,CACpBjhB,IAAAA,EACAyP,OAAAA,EACAjQ,SAAAA,IAGKA,MAIJy1D,4BACL,GAAGx8D,KAAKqjE,yBAA0B,OAAOrjE,KAAKqjE,yBAE9C,MAAMr6C,EAAY,CAAC,wBAAyB,mBAAoB,oBAC/D5kB,KAAKm+D,GACGviE,KAAKy8D,kBAAkB,CAACp+D,EAAGkkE,MAGpC,OAAOviE,KAAKqjE,yBAA2B1hE,QAAQ8Q,IAAIuW,GAG9Cs/B,qBAAqB7sC,EAAuB1U,GAMjD,OAAO/G,KAAKgU,WAAWC,UAAU,+BAAgC,CAC/DwH,KAAAA,EACA1U,SAAAA,IACC/B,MAAMT,IACJA,GACDvE,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,uBACHod,KAAM,OAAF,wBACCA,GAAW,CACdpd,EAAGikE,GAAqB7mD,EAAKpd,KAE/BoqB,gBAAiB,OAAF,wBACV1hB,GAAQ,CACX1I,EAAG,4BAcNilE,+BACL,OAAGtjE,KAAKujE,qBAA6BvjE,KAAKujE,qBACnCvjE,KAAKujE,qBAAuBvjE,KAAKgU,WAAWC,UAAU,wCAGxDuvD,6BAA6Bj1C,GAClCvuB,KAAKgU,WAAWC,UAAU,uCAAwC,CAACsa,OAAAA,IAClEvpB,MAAMT,IACLvE,KAAKujE,qBAAuB5hE,QAAQM,SAASssB,MAI1Ck1C,sBAAsBC,GAC3B,OAAQA,GACHA,EAAMt5C,QAAUo4C,GAIVmB,wBAAwB3sD,G,qCACnC,MAAMisD,QAA2BjjE,KAAKy8D,kBAAkB,CACtDp+D,EAAG,kBACHod,WAAYzb,KAAK0b,gBAAgB4R,iBAAiBtW,KAGpD,SACEhX,KAAKyjE,sBAAsBR,EAAmBW,eAC3C5jE,KAAKyjE,sBAAuBR,EAA2BS,S,+RAQvDG,qBAAqB7sD,GAC1B,MAKMjQ,EAAoC,CACxC1I,EAAG,0BACHqlE,MAPkE,CAClErlE,EAAG,yBACH+rB,MAAOo4C,GACP/3D,KA7J0B,qBAkK1ByyD,WAAY,MAGd,OAAOl9D,KAAKsoD,qBAAqB,CAC/BjqD,EAAG,kBACHod,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,IAC3CjQ,GAGE+8D,2BAA2B9sD,EAAgBomD,GAIhD,OAAIA,EACKp9D,KAAK6jE,qBAAqB7sD,GAQ5BhX,KAAKsoD,qBAAqB,CAC/BjqD,EAAG,kBACHod,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,IANJ,CACxC3Y,EAAG,4BAiDAmqB,kBAAiB,IAACjhB,EAAG,OAAEyP,EAAM,SAAEjQ,IAKpC,IAAIyK,EACDwF,IACDzP,EAAMyP,EACNxF,EAAMxR,KAAK0iE,aAAyB,aAGrClxD,GAAOxR,KAAK0iE,cAAcn7D,GAAOR,EAE9BiQ,EAQFhX,KAAKkjE,2BAPLljE,KAAK4c,UAAUhW,cAAc,4BAA6B,CAACW,IAAAA,EAAKR,SAAAA,IAChE/G,KAAKke,gBAAgB7W,WAAWrC,MAAMmC,IACpC,MAAMi8D,EAAiBj8D,EAAMi8D,eAC7BA,EAAe77D,GAAOR,EACtB/G,KAAKke,gBAAgBlW,YAAY,iBAAkBo7D,OASlDrsB,QAAQksB,GACb,MAAgC,uBAAzBA,EAAmB5kE,IACvB4kE,EAAmB10C,aAA6CzjB,IAAlCm4D,EAAmB/F,YAA6D,IAAhC+F,EAAmB/F,YAAqB,EAAAn7C,GAAA,MAGpHgiD,aAAa/sD,GAClB,MAAM82C,EAAM9tD,KAAKy8D,kBAAkB,CAACp+D,EAAG,kBAAmBod,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,KACtG,OAAQ82C,aAAensD,QAAUmsD,EAAMnsD,QAAQM,QAAQ6rD,IACtD9oD,MAAMi+D,GAAuBjjE,KAAK+2C,QAAQksB,KAGrCe,qBAAqBhtD,EAAgBitD,GAAc,GACzD,MAAMC,EAAwB,CAC5B7lE,EAAG,sBAGC+kE,EAAiBpjE,KAAK0iE,aAAyB,WAAE1rD,GAMvD,IAJGosD,GAAoBA,aAA0BzhE,SAC/C/F,OAAOC,OAAOqoE,EAAGd,GAGhBa,EAAa,CACd,MACM18D,EAAM+6D,GADQtiE,KAAK0b,gBAAgBghD,uBAAuB1lD,GAAQ,GAC3B3Y,GACvC8lE,EAAqBnkE,KAAK0iE,aAAan7D,GAC7C,GAAG48D,KAAwBA,aAA8BxiE,SACvD,IAAI,MAAMkE,KAAKs+D,OAEDr5D,IAATo5D,EAAEr+D,KAEHq+D,EAAEr+D,GAAKs+D,EAAmBt+D,IAMlC,OAAOq+D,EAGFrjD,iBAAiB7J,EAAgBitD,GAAc,GACpD,GAAGjtD,IAAWhX,KAAK0b,gBAAgB1E,OAAQ,OAAO,EAElD,MAAMosD,EAAiBpjE,KAAKgkE,qBAAqBhtD,EAAQitD,GACzD,OAAOjkE,KAAK+2C,QAAQqsB,I,yBCpTjB,MAAMgB,WAAwBtxD,EACxBkE,aACT,OAAOhX,KAAK6c,gBAAgBvF,OAAO7Q,WAO9B49D,cAAcrtD,GACnB,OAAOA,EAAOqc,UAAYrzB,KAAK0d,gBAAgBub,UAAUjiB,EAAO8M,WAAY,gBAGvEwgD,aAAattD,GAClB,GAAGhX,KAAK63B,aAAa7gB,GACnB,OAGF,MAAMge,EAAQhe,EAAOqc,SACnBrzB,KAAK6c,gBAAgB0nD,aAAavtD,EAAO4V,YACzC5sB,KAAK0d,gBAAgBqc,aAAa/iB,EAAO8M,YAE3C,MAAmB,mBAAZkR,EAAM32B,GAAsC,0BAAZ22B,EAAM32B,EAAgC22B,OAAQlqB,EAGhFs/C,kBAAkBpzC,GACvB,GAAGA,EAAOqc,SACR,OAAO,EAGT,MAAM5V,EAAkBzd,KAAK0d,gBAAgBC,QAAQ3G,EAAO8M,YAC5D,SAAGrG,GAAQA,EAAK8J,aAAe9J,EAAK7e,OAAO4oB,eAClC,EAAA1O,GAAA,GAAU2E,EAAK8J,aAMnBH,cAAcpQ,GACnB,GAAGA,EAAOqc,SACR,MAAO,CAACh1B,EAAG,WAAYma,QAASxB,EAAO4V,YAGzC,MAAMrT,EAASvC,EAAO8M,WACtB,OAAG9jB,KAAK0d,gBAAgBmG,UAAUtK,GACzB,CAAClb,EAAG,cAAegb,WAAYE,GAGjC,CAAClb,EAAG,WAAYib,QAASC,GAG3BgiD,cAAcvkD,GACnB,OAAGA,EAAOqc,SACDrzB,KAAK6c,gBAAgB2nD,cAAcxtD,EAAO4V,YAE5C5sB,KAAK0d,gBAAgBsc,cAAchjB,EAAO8M,YAG5C2gD,gBAAgBztD,GACrB,OAAOhX,KAAKkvD,QAAQl4C,GAAQmkB,UAAY,GAGnC+zB,QAAQl4C,GACb,OAAOA,EAAOqc,SACZrzB,KAAK6c,gBAAgBu8B,QAAQpiC,EAAO4V,YACpC5sB,KAAK0d,gBAAgBC,QAAQ3G,EAAO8M,YAGjChL,UAAU9B,GACf,OAAO,EAAA8B,GAAA,GAAU9B,KAAY,EAAA4K,GAAA,GAAoB5K,IAAwB,kBAAbA,EAAO3Y,GAAyB2B,KAAKgX,QAAW,KAGvGkhD,cAAclhD,GACnB,MAAO,CACL3Y,EAAG,aACHod,KAAMzb,KAAKonB,cAAcpQ,IAItB6M,UAAU7M,GACf,OAAQA,EAAOqc,UAAYrzB,KAAK0d,gBAAgBmG,UAAU7M,EAAO8M,YAG5DyV,YAAYviB,GACjB,OAAQA,EAAOqc,UAAYrzB,KAAK0d,gBAAgB6b,YAAYviB,EAAO8M,YAG9D6I,WAAW3V,GAChB,OAAQA,EAAOqc,WAAarzB,KAAK0d,gBAAgB+O,YAAYzV,EAAO8M,YAG/D2I,YAAYzV,GACjB,OAAOhX,KAAK6jB,UAAU7M,KAAYhX,KAAKu5B,YAAYviB,GAG9C6V,MAAM7V,GACX,OAAOA,EAAOqc,UAAYrzB,KAAK6c,gBAAgBgQ,MAAM7V,EAAO4V,YAGvDI,UAAUhW,GACf,OAAOA,EAAOqc,UAAYrzB,KAAK6c,gBAAgBmQ,UAAUhW,EAAO4V,YAG3DyG,OAAOrc,GACZ,OAAO,EAAAqc,GAAA,GAAOrc,GAGT+N,UAAU/N,GACf,OAAO,EAAA+N,GAAA,GAAU/N,GAGZ6gB,aAAa7gB,GAClB,OAAOA,EAAOqc,SAAWrzB,KAAK6c,gBAAgBgb,aAAa7gB,EAAO4V,YAAc5sB,KAAK0d,gBAAgBma,aAAa7gB,EAAO8M,YAGpH4gD,yBAAyB1tD,GAC9B,MAAMyE,EAAiCzb,KAAKkvD,QAAQl4C,GAC9Cic,EAASxX,EAAK0hB,mBAAqBxF,GAAqBlc,EAAK0hB,yBAAsBryB,EACzF,OAAGmoB,EACMA,EAAOl2B,KAEPia,EAAOqc,SAAW,0BAA4B,0BAsClDqpC,uBAAuB1lD,EAAgB2tD,GAC5C,OAAGA,EACE3tD,EAAOqc,SACD,CAACh1B,EAAG,oBAER2B,KAAKysB,YAAYzV,GACX,CAAC3Y,EAAG,yBAEJ,CAACA,EAAG,oBAIR,CACLA,EAAG,kBACHod,KAAMzb,KAAKstB,iBAAiBtW,IAK3BsW,iBAAiBtW,GACtB,IAAIA,EACF,MAAO,CAAC3Y,EAAG,kBAGb,IAAI2Y,EAAOqc,SAAU,CACnB,MAAM9Z,EAASvC,EAAO8M,WACtB,OAAO9jB,KAAK0d,gBAAgBic,aAAapgB,GAG3C,MAAMjC,EAASN,EAAO4V,WACtB,OAAO5sB,KAAK6c,gBAAgB+nD,iBAAiBttD,GAMxC+9B,mBACL,MAAO,CAACh3C,EAAG,iBAGN21D,uBAAuBh9C,GAC5B,MAAO,CACL3Y,EAAG,kBACHod,MAAM,EAAAmG,GAAA,GAAoB5K,GAAUA,EAAShX,KAAKstB,iBAAiBtW,IAIhEgG,kBAAkBhG,GACvB,IAAIja,EAQJ,OANEA,EADCiD,KAAKqzB,OAAOrc,GACN,OAAShX,KAAK6c,gBAAgBgoD,kBAAkB7tD,EAAO4V,YAGvD,QADM5sB,KAAK0d,gBAAgBC,QAAQ3G,EAAO8M,YAC3BsG,OAAS,IAG1BrtB,EAGF+nE,cAAc9tD,GACnB,OAAGhX,KAAKu5B,YAAYviB,GACX,YACChX,KAAK6jB,UAAU7M,GAChB,UACEhX,KAAKqzB,OAAOrc,GAGdA,IAAWhX,KAAKgX,OAAS,QAAU,OAFnC,QAMJ+tD,oBAAoB/tD,GACzB,OAAOhX,KAAK8kE,cAAc9tD,IACxB,IAAK,UACH,OAAOhX,KAAK0d,gBAAgBub,UAAUjiB,EAAO8M,WAAY,eAAiB,gBAAkB,gCAE9F,IAAK,YACL,IAAK,QACH,OAAO9jB,KAAK0d,gBAAgBub,UAAUjiB,EAAO8M,WAAY,eAAiB,aAAe,8BAE3F,QACE,MAAO,+BAINk+C,WAAWhrD,G,MAChB,OAAGA,EAAOqc,aAG2B,QAA1B,EADIrzB,KAAK0d,gBAAgBsb,aAAahiB,EAAO8M,YACzBllB,cAAM,eAAEmjE,aCxPpC,MAAMiD,WAAyBlyD,EAAtC,c,oBACU,KAAAmyD,OAEJ,GAEG1sB,UAAUvjB,EAAc9e,G,MAC7B,IAAI8e,GAAqB,eAAZA,EAAM32B,EAAoB,OAYvC,MAAM6mE,EAAWllE,KAAKilE,OAAOjwC,EAAM12B,IAMnC,GALG02B,EAAMkW,iBACP7C,GAAyB,iBAAkB68B,EAAUlwC,GACrDh1B,KAAKmrC,kBAAkBn1B,YAAYgf,EAAMkW,eAAgBh1B,IAG7C,QAAX,EAAA8e,EAAMm3B,aAAK,eAAEhuD,OAAQ,CAEtB62B,EAAMm3B,MAAM1sC,MAAK,CAACC,EAAGC,KACVD,EAA0BjM,OAAUiM,EAAqCysC,MAAQgZ,EAAAA,EAAW,KAAQxlD,EAA0BlM,OAAUkM,EAAqCwsC,MAAQgZ,EAAAA,EAAW,MAG3M,MAAM1xD,EAAOuhB,EAAMm3B,MAAMn3B,EAAMm3B,MAAMhuD,OAAS,GAChC,yBAAXsV,EAAKpV,IACNoV,EAAKA,KAAOA,EAAK04C,MAAM14C,EAAK04C,MAAMhuD,OAAS,IAI/C,OAAG+mE,EACMtpE,OAAOC,OAAOqpE,EAAUlwC,GAG1Bh1B,KAAKilE,OAAOjwC,EAAM12B,IAAM02B,EAG1BowC,cAAc9tD,EAAgBoP,EAA2B,IAAKqC,EAAgB,IACnF,MAAMs8C,EAAYrlE,KAAK6c,gBAAgBua,aAAa9f,GACpD,OAAOtX,KAAKgU,WAAW6pB,mBAAmB,uBAAwB,CAChErlB,QAAS6sD,EACT17C,OAAQ,EACRZ,MAAAA,EACAo6B,OAAQz8B,GACP,CAACoX,aAAc,KAAK94B,MAAMsgE,IAC3BtlE,KAAK6c,gBAAgBoJ,aAAaq/C,EAAapsD,OAC/C,MAAMqsD,EAAWD,EAAaL,OAAO7gE,KAAI,CAAC4wB,EAAOxwB,KAC/C8gE,EAAaL,OAAOzgE,GAAOxE,KAAKu4C,UAAUvjB,EAAO,CAACv1B,KAAM,eAAgBuX,OAAQM,EAAO7Q,aAChFuuB,EAAM12B,MAIf,GAAa,MAAVooB,GAAiBA,EAAO,CACzB,MAAMliB,EAAM+gE,EAASnpE,QAAQsqB,IACjB,IAATliB,GACD+gE,EAASt7D,OAAOzF,EAAK,GAIzB,MAAO,CACL0W,MAAQoqD,EAAgDpqD,OAASqqD,EAASpnE,OAC1E8mE,OAAQM,MAyBPvW,SAASwW,GACd,OAAO,EAAA5jD,GAAA,GAAS4jD,GAAWA,EAAqBxlE,KAAKilE,OAAOO,ICpGzD,MAAMC,WAAwB3yD,EAArC,c,oBACS,KAAAirD,MAA8B,GAC9B,KAAA14D,QAAuC,GACvC,KAAA6jD,eAA8C,GAE7C,KAAA/oD,KAAM,EAAAyI,EAAA,IAAO,QAAS,YAEpB+T,QACR3c,KAAK6d,kBAAkBC,2BAA2B,CAChD4nD,kBAAoBrqD,IAClBrb,KAAKG,IAAI,qBAAsBkb,GAE/B,IAAI2tC,EAAa3tC,EAAO2tC,MAAQhpD,KAAK+9D,MAAM1iD,EAAOsqD,SAClD,IAAI3c,EACF,OAGF,IAAI3jD,EAAUgW,EAAOhW,QACrB,MAAMyoD,EAAM9tD,KAAK6uD,SAAS7F,EAAM3jD,GAChC2jD,EAAO8E,EAAI9E,KACX3jD,EAAUyoD,EAAIzoD,QAEdrF,KAAK4c,UAAUhW,cAAc,cAAe,CAACoiD,KAAAA,EAAM3jD,QAASA,OAK3DwpD,SAAS7F,EAAY3jD,EAAsBxD,GAC7CA,GACD7B,KAAK0hE,oBAAoB7/D,GAAS,GAGpC,MAAMvD,EAAK0qD,EAAK1qD,GAWhB,OAVG0B,KAAK+9D,MAAMz/D,IACZ0qD,EAAOptD,OAAOC,OAAOmE,KAAK+9D,MAAMz/D,GAAK0qD,GACrC3jD,EAAUrF,KAAK4lE,YAAY5c,EAAM3jD,KAEjCrF,KAAK+9D,MAAMz/D,GAAM0qD,EAEjBA,EAAK6c,cAAgB,GACrBxgE,EAAUrF,KAAK4lE,YAAY5c,EAAM3jD,IAG5B,CAAC2jD,KAAAA,EAAM3jD,QAAAA,GAGTugE,YAAY5c,EAAY3jD,G,MAkB7B,OAjBGrF,KAAKqF,QAAQ2jD,EAAK1qD,IACnB+G,EAAUzJ,OAAOC,OAAOmE,KAAKqF,QAAQ2jD,EAAK1qD,IAAK+G,GAE/CrF,KAAKqF,QAAQ2jD,EAAK1qD,IAAM+G,EAGtBA,EAAQzG,OAAO4gB,MACjBwpC,EAAK6c,cAAc1nE,OAAS,GACT,QAAhB,EAAAkH,MAAAA,OAAO,EAAPA,EAASA,eAAO,eAAElH,SACnBkH,EAAQA,QAAQnC,SAAQ,CAAC4iE,EAAQthE,K,OACf,QAAb,EAAAshE,EAAOlnE,cAAM,eAAEmnE,SAChB/c,EAAK6c,cAAcvlE,KAAKkE,OAMzBa,EAGF0pD,QAAQH,GACb,MAAO,CACL5F,KAAMhpD,KAAK+9D,MAAMnP,GACjBvpD,QAASrF,KAAKqF,QAAQupD,IAInBoX,kBAAkBhd,EAAYid,EAA+BC,EAAmBC,GAWrF,OAVGD,GACGC,IACFA,EAAmB,IAGrBD,GAAW,EAAA7xC,GAAA,GAAc6xC,EAAUC,IAEnCD,OAAWp7D,EAGN,CACLzM,EAAG,iBACH2qD,KAAAA,EACAod,gBAAiBH,EACjBC,SAAAA,EACAG,kBAAmBH,EAAWC,OAAmBr7D,GAI9C42D,oBAAoB7/D,EAA0B0U,GACnD,MAAM,GAACjY,GAAOuD,EAAQyW,MAAwC0wC,KAC9D,IAAI5gD,EAAMpI,KAAKkpD,eAAe5qD,GAE9B,IAAIiY,IAAQnO,EACV,OAGEA,IACFA,EAAMpI,KAAKkpD,eAAe5qD,GAAM,IAAI8X,KAGtC,MAAM7O,EAAM1F,EAAQmV,OAAS,IAAMnV,EAAQ6iB,IACxCnO,EAAKnO,EAAImO,IAAIhP,GACXa,EAAIrE,OAAOwD,GAEZgP,GAAQnO,EAAIqL,cACPzT,KAAK+9D,MAAMz/D,UACX0B,KAAKqF,QAAQ/G,UACb0B,KAAKkpD,eAAe5qD,IAIxBgoE,SAASzkE,EAA0B0kE,GACxC,MAAMvd,EAAcnnD,EAAQyW,MAAwC0wC,KAE9D5rD,EAAwBmpE,EAAUniE,KAAKjD,GACpC6nD,EAAKwd,QAAQrlE,GAAOslE,SAGvBt4D,EAAYtM,EAAQ6iB,IACpB1N,EAASnV,EAAQmV,OACjBgX,EAAYhuB,KAAK0b,gBAAgB4R,iBAAiBtW,GAExD,OAAGnV,EAAQjD,OAAOgmB,YACT5kB,KAAK8W,mBAAmB0yC,yBAAyBr7C,EAAW,YAAatM,IAC9E7B,KAAKG,IAAI,4BACFH,KAAKsmE,SAASzkE,EAA4B0kE,MAI9CvmE,KAAKgU,WAAWC,UAAU,oBAAqB,CACpDwH,KAAMuS,EACN0rB,QAAQ,EAAA/6B,GAAA,GAAmB9c,EAAQ6iB,KACnCtnB,QAAAA,IACC4H,MAAM2hB,IACP3mB,KAAKG,IAAI,oBAAqBwmB,GAC9B3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAIzC+/C,WAAW7kE,GAChB,MAAMmsB,EAAYhuB,KAAK0b,gBAAgB4R,iBAAiBzrB,EAAQmV,QAEhE,OAAOhX,KAAKgU,WAAWC,UAAU,0BAA2B,CAC1DwH,KAAMuS,EACN0rB,QAAQ,EAAA/6B,GAAA,GAAmB9c,EAAQ6iB,OAClC1f,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,GAC5C3mB,KAAKG,IAAI,sBAAuBwmB,MAI7BggD,SAAS9kE,EAA0B4kE,EAAqB98C,EAAiBZ,EAAQ,IACtF,OAAO/oB,KAAKgU,WAAWC,UAAU,wBAAyB,CACxDwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBzrB,EAAQmV,QACpD1Y,IAAI,EAAAqgB,GAAA,GAAmB9c,EAAQ6iB,KAC/B+hD,OAAAA,EACA98C,OAAAA,EACAZ,MAAAA,IACC/jB,MAAM4hE,IACP5mE,KAAKG,IAAI,yBAA0BymE,GAEnC5mE,KAAK6c,gBAAgBoJ,aAAa2gD,EAAU1tD,OAErC0tD,KAIJC,SAAShlE,GACd,MAAMmnD,EAAcnnD,EAAQyW,MAAwC0wC,KAEpE,GAAGA,EAAKpqD,OAAOkoE,OAAQ,OAAOnlE,QAAQM,UAEtC,MAAM8kE,GAAU,EAAA17C,GAAA,GAAK29B,GAErB,OADA+d,EAAQnoE,OAAOkoE,QAAS,EACjB9mE,KAAK8W,mBAAmB6yC,YAAY9nD,OAASiJ,EAAW,CAC7D++C,SAAU7pD,KAAKgmE,kBAAkBe,KAChC/hE,MAAK,SAELyE,IACDzJ,KAAKG,IAAIb,MAAM,kBAAmBmK,OC9LjC,MAAMu9D,WAA0Bl0D,EAAvC,c,oBACU,KAAAm0D,QAEH,GAEKtqD,QACR3c,KAAK6d,kBAAkBC,2BAA2B,CAChDopD,cAAgB7rD,IACd,MAAM9T,EAAM8T,EAAO9T,IAAIlJ,EACvB2B,KAAKinE,QAAQ1/D,GAAO8T,EAAO8rD,MAC3BnnE,KAAK4c,UAAUhW,cAAc,iBAAkByU,MAK9C+rD,WAAW7E,EAAgC4E,GAChD,OAAOnnE,KAAKgU,WAAWC,UAAU,qBAAsB,CACrD1M,IAAK,CACHlJ,EAAGkkE,GAEL4E,MAAAA,IACCniE,MAAMqiE,IACPrnE,KAAK6c,gBAAgBoJ,aAAaohD,EAAanuD,OAC/ClZ,KAAK0d,gBAAgBwI,aAAamhD,EAAalhD,OAE/CnmB,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,gBACHkJ,IAAK,CACHlJ,EAAGikE,GAAqBC,IAE1B4E,MAAOA,EAAM/iE,KAAKkjE,IAChB,MAAMC,EAAoB,GAG1B,OAFA3rE,OAAOC,OAAO0rE,EAAMD,GACpBC,EAAKlpE,EAAIikE,GAAqBiF,EAAKlpE,GAC5BkpE,OAMJF,EAAaF,SAIjBK,WAAWjF,GAChB,MAAMkF,EAA8BnF,GAAqBC,GACnD4E,EAAQnnE,KAAKinE,QAAQQ,GAC3B,OAAGN,EACMxlE,QAAQM,QAAQklE,GAGlBnnE,KAAKinE,QAAQQ,GAAcznE,KAAKgU,WAAWC,UAAU,qBAAsB,CAChF1M,IAAK,CACHlJ,EAAGkkE,KAEJv9D,MAAMqiE,IACPrnE,KAAK6c,gBAAgBoJ,aAAaohD,EAAanuD,OAC/ClZ,KAAK0d,gBAAgBwI,aAAamhD,EAAalhD,OAIxCnmB,KAAKinE,QAAQQ,GAAcJ,EAAaF,SAI5CO,2BACL,OAAO1nE,KAAKgU,WAAWC,UAAU,oCAG5B0zD,yBAAyB5gE,GAC9B,OAAO/G,KAAKgU,WAAWC,UAAU,mCAAoC,CAAClN,SAAAA,K,2SCxD1E,MAAM6gE,GAAgB,KAEf,MAAMC,WAA0B/0D,EAAvC,c,oBAEU,KAAAg1D,UAA+C,GAC/C,KAAAC,UAAsC,GACtC,KAAAC,eAA6C,GAimB7C,KAAAC,mBAAsB5sD,I,MAC5B,MAAMlD,EAAUkD,EAAmC7C,QAChD6C,EAAmC7C,QAAQ/R,WAC5CzG,KAAK0b,gBAAgB5C,UAAWuC,EAAuC8L,SACzE,GAAGnnB,KAAK0b,gBAAgB1E,SAAWmB,GAA8B,8BAApBkD,EAAOrC,OAAO3a,EACzD,OAGF,MAAM2Y,EAAShX,KAAK0b,gBAAgB5C,UAAUuC,GACxCujC,EAAoC,QAA1B,EAAA5+C,KAAKkoE,cAAclxD,UAAO,QAAKhX,KAAKkoE,cAAclxD,GAAU,GAC5E,IAAIuqD,EAAS3iB,EAAQr7C,MAAM4kE,GAAMA,EAAE7wD,SAAWa,IAE9C,MAAMiwD,EAAe,YACZ7G,EAAOp8D,QAEd,MAAMX,EAAMo6C,EAAQxiD,QAAQmlE,IAChB,IAAT/8D,GACDo6C,EAAQ30C,OAAOzF,EAAK,GAGtBxE,KAAK4c,UAAUhW,cAAc,eAAgB,CAACoQ,OAAAA,EAAQ4nC,QAAAA,IAElDA,EAAQzgD,eACH6B,KAAKkoE,cAAclxD,IAQ9B,GAJGuqD,QAA6Bz2D,IAAnBy2D,EAAOp8D,SAClBD,aAAaq8D,EAAOp8D,SAGC,4BAApBkW,EAAOrC,OAAO3a,EAAiC,CAChD,IAAIkjE,EACF,OAIF,YADA6G,IAIE7G,IACFA,EAAS,CACPjqD,OAAQa,GAGVymC,EAAQt+C,KAAKihE,IAKfA,EAAOvoD,OAASqC,EAAOrC,OAEvB,MAAMka,EAAUlzB,KAAK6c,gBAAgBqW,QAAQ/a,GACzC+a,EAcFlzB,KAAK6c,gBAAgB0kC,gBAAgBppC,GAZrB,yBAAbkD,EAAOhd,GACLgd,EAAO/B,SAAWtZ,KAAK0d,gBAAgB0V,QAAQ/X,EAAO/B,WAAatZ,KAAK0d,gBAAgBmG,UAAUxI,EAAO/B,UAC1G3X,QAAQM,QAAQjC,KAAKqoE,YAAYhtD,EAAO/B,UAAUtU,MAAK,UAC/B8F,IAAnBy2D,EAAOp8D,SAAyBnF,KAAK6c,gBAAgBqW,QAAQ/a,IAC9DnY,KAAK4c,UAAUhW,cAAc,eAAgB,CAACoQ,OAAAA,EAAQ4nC,QAAAA,OAWhE2iB,EAAOp8D,QAAU6J,EAAA,aAAeo5D,EAAc,KAC3Cl1C,GACDlzB,KAAK4c,UAAUhW,cAAc,eAAgB,CAACoQ,OAAAA,EAAQ4nC,QAAAA,KAIlD,KAAA0pB,oBAAuBjtD,IAC7B,MAAMrE,EAAShX,KAAK0b,gBAAgB5C,UAAUuC,EAAOtC,SACrD,GAAG/Y,KAAK0b,gBAAgB2X,OAAOrc,GAAS,CACtC,MAAMM,EAASN,EAAO4V,WAChByjC,EAAWrwD,KAAK8nE,UAAUxwD,GAC7B+4C,IACEh1C,EAAOktD,QAASlY,EAASzxD,OAAO2pE,SAAU,SACjClY,EAASzxD,OAAO2pE,SAG9BvoE,KAAK4c,UAAUhW,cAAc,mBAAoB0Q,GAGnDtX,KAAK4c,UAAUhW,cAAc,aAAc,CAACoQ,OAAAA,EAAQuxD,QAASltD,EAAOktD,WAvrB5D5rD,QACR3c,KAAK6d,kBAAkBC,2BAA2B,CAChD0qD,uBAAyBntD,IACvB,MAAMs4B,EAAet4B,EAAOs4B,aAC5B,GAAsB,qBAAnBA,EAAat1C,EAA0B,CACxC,MAAMkb,EAASo6B,EAAar6B,QACtByjB,EAAW/8B,KAAK+nE,UAAUxuD,QAChBzO,IAAbiyB,IACDA,EAAS4W,aAAeA,EACxB3zC,KAAK4c,UAAUhW,cAAc,mBAAoB2S,MAKvDkvD,yBAA2BptD,IACzB,MAAM0hB,EAAW/8B,KAAK+nE,UAAU1sD,EAAO/B,SACvC,QAAgBxO,IAAbiyB,EAAwB,CACzB,MAAM2rC,EAAgB3rC,EAAS4W,aACzBA,EAAe+0B,EAAc/0B,cAAgB,GACnD,IAAI,IAAI9tC,EAAI,EAAG1H,EAASw1C,EAAax1C,OAAQ0H,EAAI1H,EAAQ0H,IACvD,GAAG8tC,EAAa9tC,GAAG2S,UAAY6C,EAAO7C,QACpC,OAIJm7B,EAAarzC,KAAK,CAChBjC,EAAG,kBACHma,QAAS6C,EAAO7C,QAChBW,WAAYkC,EAAOlC,WACnB0I,MAAM,EAAAE,GAAA,IAAM,KAGd2mD,EAAc/sE,QAAU0f,EAAO1f,QAC/BqE,KAAK4c,UAAUhW,cAAc,mBAAoByU,EAAO/B,WAI5DqvD,4BAA8BttD,IAC5B,MAAM0hB,EAAW/8B,KAAK+nE,UAAU1sD,EAAO/B,SACvC,QAAgBxO,IAAbiyB,EAAwB,CACzB,MAAM2rC,EAAgB3rC,EAAS4W,aACzBA,EAAe+0B,EAAc/0B,cAAgB,GACnD,IAAI,IAAI9tC,EAAI,EAAG1H,EAASw1C,EAAax1C,OAAQ0H,EAAI1H,EAAQ0H,IACvD,GAAG8tC,EAAa9tC,GAAG2S,UAAY6C,EAAO7C,QAIpC,OAHAm7B,EAAa1pC,OAAOpE,EAAG,GACvB6iE,EAAc/sE,QAAU0f,EAAO1f,aAC/BqE,KAAK4c,UAAUhW,cAAc,mBAAoByU,EAAO/B,WAOhEsvD,iBAAkB5oE,KAAKioE,mBACvBY,qBAAsB7oE,KAAKioE,mBAC3Ba,wBAAyB9oE,KAAKioE,mBAE9Bc,kBAAmB/oE,KAAKsoE,sBAG1BtoE,KAAK4c,UAAUpW,iBAAiB,eAAgB+S,I,QAC9C,MAAMyvD,EAAWhpE,KAAK+nE,UAAUxuD,GAC1BkE,EAA8Ezd,KAAK0d,gBAAgBC,QAAQpE,GACjH,IAAIyvD,IAAavrD,EACf,OAGF,IAAIwrD,GAAU,IACTD,EAAS3yC,SAAqC,QAA1B,EAAC5Y,EAAmB7e,cAAM,eAAEsqE,eACnDD,GAAU,GAGZ,MAAM,MAACj0C,GAASvX,EAChB,GAAGuX,EAAO,CACR,MAAMm0C,EAA2B,mBAAZn0C,EAAM32B,GAGzB8qE,OAF0BH,EAASI,YAAwC,eAA1BJ,EAASI,WAAW/qE,IAGnE8qE,GACAn0C,EAAMr2B,YAAgC,QAAnB,EAAAqqE,EAASI,kBAAU,eAAE9qE,OAG1C2qE,GAAU,GAIXA,GACDjpE,KAAKqpE,gBAAgB9vD,EAAO9S,UAAS,OAIzCzG,KAAK4c,UAAUpW,iBAAiB,kBAAmB+S,IACjDvZ,KAAKqpE,gBAAgB9vD,EAAO9S,UAAS,OAIvCzG,KAAK4c,UAAUpW,iBAAiB,oBAAqB+S,IACnDvZ,KAAK4c,UAAUhW,cAAc,mBAAoB2S,EAAO9S,UAAS,OAInEzG,KAAK4c,UAAUpW,iBAAiB,oBAAqB8Q,IACnDtX,KAAK4c,UAAUhW,cAAc,mBAAoB0Q,EAAO7Q,UAAS,OAGnEzG,KAAK4c,UAAUpW,iBAAiB,2BAA4B+S,IAC1DvZ,KAAKspE,8BAA8B/vD,MAGrCvZ,KAAKkoE,cAAgB,GAuBhB7wD,WAAW/Y,EAAYsyB,GAC5B,OAAG5wB,KAAK8nE,UAAUxpE,KAAQsyB,GAAYjiB,KAAK5J,MAAQ/E,KAAKgoE,eAAe1pE,EAAGmI,YACjEzG,KAAK8nE,UAAUxpE,GAGjB0B,KAAKgU,WAAWspB,uBAAuB,CAC5Cr0B,OAAQ,oBACRoL,OAAQ,CACN/V,GAAI0B,KAAK6c,gBAAgBua,aAAa94B,IAExCi/B,cAAgBgsC,IACdvpE,KAAK0d,gBAAgBwI,aAAaqjD,EAAcpjD,OAAO,GACvDnmB,KAAK6c,gBAAgBoJ,aAAasjD,EAAcrwD,OAEhD,MAAMm3C,EAAWkZ,EAAcC,UACzBxyD,EAAS1Y,EAAGmI,UAAS,GACxB4pD,EAASoZ,gBACVpZ,EAASoZ,cAAgBzpE,KAAKs4C,iBAAiBC,UAAU8X,EAASoZ,cAAe,CAAChqE,KAAM,eAAgBuX,OAAAA,KAG1G,MAAM0yD,EAAUrZ,EAASsZ,SACzB,GAAGD,EAAS,CACV,MAAME,EAAqC,CAACnqE,KAAM,WAAY6X,OAAQhZ,GACtEorE,EAAQG,qBAAuB7pE,KAAKgzC,eAAehI,QAAQ0+B,EAAQG,qBAAsBD,GACzFF,EAAQI,kBAAoB9pE,KAAKs4C,iBAAiBC,UAAUmxB,EAAQI,kBAAmBF,GAkBzF,OAfA5pE,KAAK4gB,wBAAwB4H,iBAAiB,CAC5CxR,OAAAA,EACAjQ,SAAUspD,EAAS5nC,kBAGrBzoB,KAAK8nE,UAAUxpE,GAAM+xD,EACrBrwD,KAAKgoE,eAAehxD,GAAUrI,KAAK5J,MAAQ6iE,GAQ3C5nE,KAAK4c,UAAUhW,cAAc,mBAAoBtI,GAC1C+xD,KAKN0Z,mBAAmB/yD,EAAgB4Z,GACxC,OAAG5wB,KAAK0b,gBAAgBqJ,UAAU/N,GAAgBhX,KAAKqoE,YAAYrxD,EAAO8M,WAAY8M,GAC1E5wB,KAAKqX,WAAWL,EAAO4V,WAAYgE,GAG1CoM,kBAAkBzjB,GACvB,OAAOvZ,KAAK+nE,UAAUxuD,GAGjB+2C,kBAAkBh5C,GACvB,OAAOtX,KAAK8nE,UAAUxwD,GAGjB0yD,yBAAyBhzD,GAC9B,OAAOA,EAAOqc,SAAWrzB,KAAKswD,kBAAkBt5C,EAAO4V,YAAc5sB,KAAKg9B,kBAAkBhmB,EAAO8M,YAGxFmmD,aAAajzD,G,0CACxB,MAAMkzD,QAAgBlqE,KAAK+pE,mBAAmB/yD,GAC9C,OAAOkzD,EAAQ7rE,GACb,IAAK,WACH,OAAO6rE,EAAQT,cACjB,IAAK,cACL,IAAK,WACH,OAAOS,EAAQd,eA4Bdf,YAAY/pE,EAAYsyB,GAC7B,GAAG5wB,KAAK0d,gBAAgBmG,UAAUvlB,GAChC,OAAO0B,KAAKmqE,eAAe7rE,EAAIsyB,GAGjC,MAAM5Z,EAAS1Y,EAAGmI,UAAS,GACrBuiE,EAAWhpE,KAAK+nE,UAAUzpE,GAChC,GAAG0qE,IAAap4C,GAAYjiB,KAAK5J,MAAQ/E,KAAKgoE,eAAehxD,GAAS,CACpE,MAAMyG,EAAkBzd,KAAK0d,gBAAgBC,QAAQrf,GACrD,GACEmf,EAAK7e,OAAO+G,MACZ8X,EAAK7e,OAAO4oB,aACZ/J,EAAK9hB,UAAaqtE,EAASr1B,aAAmDh4C,QAE9E,OAAOqtE,EAIX,OAAOhpE,KAAKgU,WAAWspB,uBAAuB,CAC5Cr0B,OAAQ,uBACRoL,OAAQ,CACNiF,QAAShb,GAEXi/B,cAAgBn7B,IACdpC,KAAK0d,gBAAgBwI,aAAa9jB,EAAO+jB,OAAO,GAChDnmB,KAAK6c,gBAAgBoJ,aAAa7jB,EAAO8W,OACzC,MAAM6jB,EAAW36B,EAAOgoE,UAmBxB,OAlBGrtC,GAAYA,EAASqsC,YAAcrsC,EAASqsC,WAAW9qE,KACxDy+B,EAASqsC,WAAappE,KAAKs4C,iBAAiBC,UAAUxb,EAASqsC,WAAY,CAAC3pE,KAAM,eAAgBuX,OAAAA,KAGjG+lB,EAAS1G,MACVr2B,KAAKs3D,qBAAqBxjB,cAAc/W,EAAS1G,KAAM/3B,GAIzD0B,KAAK4gB,wBAAwB4H,iBAAiB,CAC5CxR,OAAAA,EACAjQ,SAAUg2B,EAAStU,kBAGrBzoB,KAAK+nE,UAAUzpE,GAAMy+B,EACrB/8B,KAAKgoE,eAAehxD,GAAUrI,KAAK5J,MAAQ6iE,GAC3C5nE,KAAK4c,UAAUhW,cAAc,mBAAoBtI,GAE1Cy+B,KAKAstC,kBAAkB/rE,EAAYsxC,G,0CACzC,MAAM7S,QAAiB/8B,KAAKqoE,YAAY/pE,GACxC,OAAIsxC,GACF7S,EAASutC,iBACqB,sBAA9BvtC,EAASutC,gBAAgBjsE,EAClB0+B,EAASutC,gBAAgBC,KAG3BvqE,KAAKgU,WAAWC,UAAU,4BAA6B,CAC5DwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBhvB,EAAGmI,UAAS,MACvDzB,MAAMwlE,SACmB1/D,IAAvB9K,KAAK+nE,UAAUzpE,KAChB0B,KAAK+nE,UAAUzpE,GAAIgsE,gBAAkBE,GAG/BA,EAAyDD,WAI9DE,uBAAuBnsE,EAAYE,EAAoC,CAACH,EAAG,6BAA8B0qB,EAAQ,IAAKY,EAAS,GACpI,GAAgB,8BAAbnrB,EAAOH,EAAmC,CAC3C,MAAMof,EAAOzd,KAAK0d,gBAAgBC,QAAQrf,GAC1C,GAAGmf,GACCA,EAAK7e,QAEP6e,EAAK7e,OAAO8rE,YAAcjtD,EAAK7e,OAAOq8D,UAAYx9C,EAAKuzC,aAEvD,OAAOrvD,QAAQC,SAInB,OAAO5B,KAAKgU,WAAW6pB,mBAAmB,2BAA4B,CACpE9Z,QAAS/jB,KAAK0d,gBAAgBmV,gBAAgBv0B,GAC9CE,OAAAA,EACAmrB,OAAAA,EACAZ,MAAAA,EACA2U,KAAM,KACL,CAACI,aAAc,KAAK94B,MAAM5C,IAC3BpC,KAAK6c,gBAAgBoJ,aAAc7jB,EAAmE8W,OAC/F9W,KA6BJuoE,sBAAsBrsE,EAAY0Y,GACvC,OAAOhX,KAAKgU,WAAWqa,gBAAgB,0BAA2B,CAChEtK,QAAS/jB,KAAK0d,gBAAgBmV,gBAAgBv0B,GAC9Cs9B,YAAa57B,KAAK0b,gBAAgB4R,iBAAiBtW,KAClDhS,MAAM4lE,IACP5qE,KAAK6c,gBAAgBoJ,aAAa2kD,EAAmB1xD,OAC9C0xD,EAAmBhvC,eAIvBuuC,eAAe7rE,EAAYsyB,GAChC,MAAM5Z,EAAS1Y,EAAGmI,UAAS,GAC3B,YAA0BqE,IAAvB9K,KAAK+nE,UAAUzpE,KAAsBsyB,GAAYjiB,KAAK5J,MAAQ/E,KAAKgoE,eAAehxD,GAC5EhX,KAAK+nE,UAAUzpE,GAGjB0B,KAAKgU,WAAWspB,uBAAuB,CAC5Cr0B,OAAQ,0BACRoL,OAAQ,CACN0P,QAAS/jB,KAAK0d,gBAAgBmV,gBAAgBv0B,IAEhDi/B,cAAgBn7B,IACdpC,KAAK0d,gBAAgBwI,aAAa9jB,EAAO+jB,OAAO,GAChDnmB,KAAK6c,gBAAgBoJ,aAAa7jB,EAAO8W,OACzC,MAAM2xD,EAAczoE,EAAOgoE,UAmB3B,OAlBGS,GAAeA,EAAYzB,WAAW9qE,KACvCusE,EAAYzB,WAAappE,KAAKs4C,iBAAiBC,UAAUsyB,EAAYzB,WAAY,CAAC3pE,KAAM,eAAgBuX,OAAAA,KAIvG6zD,EAAYx0C,MACbr2B,KAAKs3D,qBAAqBxjB,cAAc+2B,EAAYx0C,KAAM/3B,GAG5D0B,KAAK4gB,wBAAwB4H,iBAAiB,CAC5CxR,OAAAA,EACAjQ,SAAU8jE,EAAYpiD,kBAGxBzoB,KAAK+nE,UAAUzpE,GAAMusE,EACrB7qE,KAAKgoE,eAAehxD,GAAUrI,KAAK5J,MAAQ6iE,GAC3C5nE,KAAK4c,UAAUhW,cAAc,mBAAoBtI,GAE1CusE,GAETC,aAAexrE,IACb,GACO,oBADAA,EAAMG,KACX,CACE,MAAMskB,EAAgD/jB,KAAK0d,gBAAgBC,QAAQrf,GACnF0B,KAAK6d,kBAAkBkS,qBAAqB,CAC1C1xB,EAAG,UACHsoB,QAAS,CAAC,CACRtoB,EAAG,gBACHgb,WAAY/a,IAEd6nB,MAAO,CAAC,CACN9nB,EAAG,mBACHC,GAAAA,EACAo4B,YAAa3S,EAAQ2S,YACrBtM,MAAOrG,EAAQqG,MACfxrB,OAAQmlB,EAAQnlB,SAElBsa,MAAO,KAKb,MAAM5Z,KAKLyrE,YAAYxxD,EAAgB0B,EAAem0B,GAChD,MAAM47B,EAAkBryB,IACmB,MAApB19B,EAAM1d,OAAO,KACjB0d,EAAQA,EAAMrT,MAAM,IAKrC,MAAMzG,EAAQ,IAAI,KAAoB,CACpChE,YAAY,IAGR8tE,EAAiC,IAAIr5D,IAC3C+mC,EAASz1C,SAASuY,IAChBta,EAAM8b,YAAYxB,EAAKnd,GAAI0B,KAAK6c,gBAAgBgoD,kBAAkBppD,EAAKnd,KACvE2sE,EAAU7iE,IAAIqT,EAAKnd,GAAImd,EAAKq9B,WAG9B,MAAM5gC,EAAUpX,MAAMC,KAAKI,EAAMjF,OAAO+e,IAExC,OADA/C,EAAQuH,MAAK,CAACC,EAAGC,IAAMsrD,EAAUvmE,IAAIib,GAAKsrD,EAAUvmE,IAAIgb,KACjDxH,GAGT,IAAIpO,EAiBJ,OAfEA,EADC9J,KAAK0d,gBAAgBmG,UAAUtK,GACtBvZ,KAAKyqE,uBAAuBlxD,EAAQ,CAC5Clb,EAAG,8BACH+pC,EAAGntB,EACHumC,YAAY,EAAA7iC,GAAA,GAAmBywB,IAC9B,GAAI,GAAGpqC,MAAMkmE,GACPA,EAAGv3B,aAAavvC,KAAKgyB,IAAM,EAAAyF,GAAA,GAAqBzF,OAEjD7c,EACE5X,QAAQM,QAAQjC,KAAKqoE,YAAY9uD,IAASvU,MAAM+3B,GAC/CA,EAA+B4W,aAAmDA,aAAavvC,KAAKgyB,GAAMA,EAAE5d,QAAQ/R,eAGrH9E,QAAQM,QAAQ,IAGrBN,QAAQ8Q,IAAI,CAEjBzS,KAAK6c,gBAAgB67B,YAAY,eAAerqC,OAAM,IAAM,KAC5DvE,IACC9E,MAAMK,IACP,MAAMyoB,EAAQzoB,EAAQ,GAAGnB,OAAOmB,EAAQ,GAAGjB,KAAK4S,IAAW,CAAE1Y,GAAI0Y,EAAQ8hC,OAAQ,OAEjF,OAAOkyB,EAAel9C,MAIlBw7C,8BAA8BhrE,GACpC0B,KAAKgU,WAAWkkB,WAAW,4BAA6B7jB,GAAYA,EAAO0P,QAAsC1K,aAAe/a,IAChI0B,KAAKqpE,gBAAgB/qE,EAAGmI,UAAS,IAG3B4iE,gBAAgBryD,GACtB,GAAGA,EAAOqc,SAAU,CAClB,MAAM/b,EAASN,EAAO4V,kBACf5sB,KAAK8nE,UAAUxwD,GACtBtX,KAAK4c,UAAUhW,cAAc,mBAAoB0Q,OAC5C,CACL,MAAMiC,EAASvC,EAAO8M,kBACf9jB,KAAK+nE,UAAUxuD,GACtBvZ,KAAK4c,UAAUhW,cAAc,mBAAoB2S,IAQ9C4xD,cAAcpwB,EAAqBC,EAAoBtf,GAC5D,OAAO17B,KAAKgU,WAAWC,UAAU,wBAAyB,CACxD8mC,WAAAA,EACAC,UAAAA,EACAtf,MAAAA,IACC12B,MAAMwQ,IAGP,GAFAxV,KAAK6c,gBAAgBuuD,YAAY51D,QAEpB1K,IAAV4wB,EAAqB,CACtB,MAAM1kB,EAASxB,EAAKlX,GAAGmI,WACjB4pD,EAAWrwD,KAAK8nE,UAAUtyD,EAAKlX,IAClC+xD,IACDA,EAAS30B,MAAQA,GAGnB17B,KAAK4c,UAAUhW,cAAc,gBAAiBoQ,GAGhD,OAAOhX,KAAKqX,WAAW7B,EAAKlX,IAAI,MAI7B+sE,mBAAmBhwC,GACxB,OAAOr7B,KAAKgU,WAAWC,UAAU,4BAA6B,CAC5DsnB,KAAMF,IACLr2B,MAAMsmE,IAEP,MAAMt2C,EAAQs2C,EAAat2C,MAC3B,IAAIs2C,EAAapyD,MAAM/a,OAAQ,CAC7B,MAAMotE,EAAgBv2C,EAAMm3B,MAAM5oD,MAAMkQ,GAAoB,sBAAXA,EAAKpV,IACtDitE,EAAapyD,MAAM5Y,KAAK,OAAD,wBAClBN,KAAK6c,gBAAgBC,WAAS,CACjCkY,MAAO,CACL32B,EAAG,mBACH82B,MAAOH,EAAMG,MACbx2B,SAAUq2B,EAAM12B,GAChBktE,eAAgBD,MAAAA,OAAa,EAAbA,EAAep+D,MAC/BvO,OAAQ,OAMdoB,KAAK6c,gBAAgBoJ,aAAaqlD,EAAapyD,OAE/C,MAAM7S,EAAOrG,KAAK0b,gBAAgB1E,OAClChX,KAAKs4C,iBAAiBC,UAAU+yB,EAAat2C,MAAO,CAClDv1B,KAAM,eACNuX,OAAQ3Q,IAGV,MAAMiR,EAASjR,EAAKumB,WACpB5sB,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,kBACHma,QAASlB,EACTuK,MAAM,EAAAE,GAAA,IAAM,GACZiT,MAAOh1B,KAAK6c,gBAAgBu8B,QAAQ9hC,GAAQ0d,MAC5Cy2C,UAAU,OAKTC,aAAanG,GAClB,OAAOvlE,KAAKgU,WAAWqa,gBAAgB,sBAAuB,CAC5D/vB,GAAIinE,EAASnhE,KAAKohE,GAETtuB,GADOl3C,KAAKs4C,iBAAiB0W,SAASwW,QAG9CxgE,MAAM2mE,QAKHC,gCAAgChwC,GACtC,MAAMpmB,EAAOxV,KAAK6c,gBAAgBu8B,QAAQxd,EAAYpjB,SACtD,SAAUhD,IAAQA,EAAK7O,QAA4B,qBAAlB6O,EAAK7O,OAAOtI,GAGvCwtE,iCAAiCl4B,GACvC,OAAOA,EAAatB,QAAO,CAACC,EAAK1W,IACxB0W,IAAOtyC,KAAK4rE,gCAAgChwC,IAClD,GAGQkwC,WAAWxtE,G,gDAEtB,GAAG0B,KAAK0d,gBAAgB+O,YAAYnuB,GAClC,OAFgB,EAKlB,MAAMytE,QAAiB/rE,KAAKqoE,YAAY/pE,GACxC,GAAG0B,KAAK0d,gBAAgB6b,YAAYj7B,GAAK,CACvC,GAAIytE,EAAkCtzC,oBAAsB,IAAK,CAC/D,MAAMuzC,QAA4BhsE,KAAKyqE,uBAAuBnsE,EAAI,CAACD,EAAG,6BAA8B,KACpG,OAAO2B,KAAK6rE,iCAAiCG,EAAoBr4B,cAGnE,MAAMzf,QAAYl0B,KAAKgU,WAAW6pB,mBAAmB,sBAAuB,CAC1EpiB,KAAMzb,KAAK0d,gBAAgBkc,oBAAoBt7B,IAC9C,CAACw/B,aAAc,KAGlB,OAD2B,QAAX,EAAA5J,EAAI+3C,eAAO,QAhBX,EAoBlB,MAAMvD,EAAiBqD,EAA+Bp4B,aACtD,OAAG+0B,MAAAA,OAAa,EAAbA,EAAe/0B,cACT3zC,KAAK6rE,iCAAiCnD,EAAc/0B,cAtB3C,KAwHbu4B,eAAel1D,GACpB,OAAOhX,KAAKkoE,cAAclxD,ICptBf,SAASm1D,GACtBz1D,EACA9R,GAEA,OAAG8R,EAAOoY,MAAMvqB,GAAUA,aAAiB5C,UAClCA,QAAQ8Q,IAAIiE,GAAQ1R,KAAKJ,GAEzBA,EAAS8R,G,2SCIpB,MAAM01D,GAAgB,CACpB,cACA,mBACA,mBACA,qBACA,mBACA,mBACA,eAGIC,GAAsC,CAC1C5sE,KAAM,aAGD,MAAM6sE,WAA4Bx5D,EAK7B6J,QACR3c,KAAK4c,UAAUpW,iBAAiB,mBAAmB,KACjDxG,KAAKusE,wBAAqBzhE,EAC1B9K,KAAKwsE,2BAGPxsE,KAAKysE,qBAAuB,IAAI76D,IAChC5R,KAAK0sE,iBAAmB,IAAI96D,IAE5B5R,KAAK4c,UAAUpW,iBAAiB,aAAa,KAC3CzE,YAAW,KACTJ,QAAQM,QAAQjC,KAAKwsE,yBAAyBxnE,MAAWunE,GAAuB,mCAC9E,IAAI,MAAMI,KAAqBJ,QACvB5qE,QAAQ8Q,IAAI,CAChBk6D,EAAkBC,kBAAoB5sE,KAAKq1B,eAAekY,cAAc,CAACj1B,MAAOq0D,EAAkBC,mBAClGD,EAAkBE,aAAe7sE,KAAKq1B,eAAekY,cAAc,CAACj1B,MAAOq0D,EAAkBE,cAC7FF,EAAkBG,kBAAoB9sE,KAAKq1B,eAAekY,cAAc,CAACj1B,MAAOq0D,EAAkBG,mBAClGH,EAAkBI,aAAe/sE,KAAKq1B,eAAekY,cAAc,CAACj1B,MAAOq0D,EAAkBI,sBAGzF,EAAA7iE,EAAA,GAAM,YAGf,SAIAsiE,wBACL,OAAGxsE,KAAKusE,mBAA2BvsE,KAAKusE,mBACjCvsE,KAAKgU,WAAWspB,uBAAuB,CAC5Cr0B,OAAQ,iCACRs0B,cAAgByvC,KACd,EAAAx+C,GAAA,GAAkEw+C,GAElE,MAAMT,EAAqBvsE,KAAKusE,mBAAqBS,EAA2BlwC,UAChF,IAAI,MAAMjkB,KAAY0zD,EACpB,IAAI,MAAMhlE,KAAO6kE,GACXvzD,EAAStR,KAIbsR,EAAStR,GAAOvH,KAAKgzC,eAAehI,QAAQnyB,EAAStR,GAAM8kE,KAI/D,OAAOE,GAETl4D,OAAQ,CACNqpB,KAAM,KAKLuvC,8BACL,OAAO,EAAAC,EAAA,GAAYltE,KAAKwsE,yBAA0BD,GACzCA,EAAmB/tE,QAAQmuE,IAAuBA,EAAkB/tE,OAAOuuE,aAI/EC,6BAA6Bp2D,GAClC,MAAMq2D,EAA2BrtE,KAAKitE,8BACtC,OAAGj2D,EAAOqc,SACDrzB,KAAKstE,qBAAqBD,GAI5BlB,GAAe,CAACkB,EADNrtE,KAAKoX,kBAAkBixD,YAAYrxD,EAAO8M,YACA9jB,KAAKutE,qBAAqB,EAAEF,EAA0BtwC,EAAUywC,M,MACzH,MAAMC,EAAqD,QAA5B,EAAA1wC,EAASE,2BAAmB,QAAI,CAAC5+B,EAAG,qBAEnE,IAAIqvE,EAAsD,GAS1D,MARgC,qBAA7BD,EAAuBpvE,EACxBqvE,EAAiCL,EACI,sBAA7BI,EAAuBpvE,IAC/BqvE,EAAiCD,EAAuB3wC,UAAU14B,KAAKyU,GAC9Dw0D,EAAyB9pE,MAAMopE,GAAsBA,EAAkB9zD,WAAcA,EAAoC7Z,aAC/HR,OAAOC,UAGLuB,KAAK2tE,0BAA0BD,EAAgCF,MAIlEG,0BAA0BpB,EAAyCiB,GACzE,GAAGA,GAAqC,kBAApBA,EAAcnvE,GAA6C,sBAApBmvE,EAAcnvE,EAA2B,OAAOkuE,EAC3G,MAAMvtE,EAAYwuE,EAAyCxuE,UAAawuE,EAAoC30D,SACtG8zD,GAAoB,EAAAzhD,GAAA,GAAcqhD,GAAqBI,GAAsBA,EAAkB9zD,WAAa7Z,IAKlH,OAJG2tE,GACDJ,EAAmBtoD,QAAQ0oD,GAGtBJ,EAGDe,qBACNf,EACAiB,EAAqExtE,KAAKutE,oBAE1E,OAAOpB,GAAe,CACpBI,EACAiB,IACC,EAAEjB,EAAoBiB,KAChBxtE,KAAK2tE,0BAA0BpB,EAAoBiB,KAIvDI,+BAA+B/rE,G,MACpC,IAAIA,EAAS,MAAO,GACpB,MAAMmV,GAA0B,QAAhB,EAAAnV,EAAQ2uB,gBAAQ,eAAEggC,eAAgBxwD,KAAK0b,gBAAgB6d,YAAY13B,EAAQmV,SAAWnV,EAAQwW,WAAcxW,EAAQmV,OACpI,OAAOhX,KAAKotE,6BAA6Bp2D,GAGpC62D,iBAAiBh1D,GACtB,QAAI7Y,KAAKusE,sBACAvsE,KAAKusE,mBAAmBhpE,MAAMopE,GAAsBA,EAAkB9zD,WAAaA,IAGvF00D,mBACL,OAAOpB,GAAe,CACpBnsE,KAAKgU,WAAWoZ,YAChBptB,KAAKwsE,0BACJ,EAAEva,EAAQsa,MACX,MAAM1zD,EAAWo5C,EAAO6b,kBACxB,MAAmB,mBAAhBj1D,MAAAA,OAAQ,EAARA,EAAUxa,GACJkuE,EAAmBhpE,MAAMopE,GAAsBA,EAAkB9zD,WAAaA,EAAS7Z,WAGzF6Z,KAIJk1D,kBAAkBl1D,GACvB,OAAO7Y,KAAKusE,mBAAmBhpE,MAAMopE,GAAsBA,EAAkB9zD,WAAaA,IAGrFm1D,YAAYn1D,GACjB,OAAO,EAAAq0D,EAAA,GAAYltE,KAAKwsE,yBAAyB,IACxCxsE,KAAK+tE,kBAAkBl1D,KAI3Bo1D,qBAAqBj3D,EAAgBitC,GAC1C,OAAOjkD,KAAKgU,WAAWspB,uBAAuB,CAC5Cr0B,OAAQ,gCACRoL,OAAQ,CACN/V,GAAI2lD,EAAK7/C,KAAKsgB,IAAQ,EAAA/F,GAAA,GAAmB+F,KACzCjJ,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,IAE9CumB,cAAgB5W,IACd3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAQ3C63C,wBAAwBxnD,EAAgB0N,EAAaqE,EAAelQ,EAAqB8Q,GAC9F,OAAO3pB,KAAKgU,WAAWspB,uBAAuB,CAC5Cr0B,OAAQ,mCACRoL,OAAQ,CACNoH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C1Y,IAAI,EAAAqgB,GAAA,GAAmB+F,GACvBqE,MAAAA,EACAlQ,SAAAA,EACA8Q,OAAAA,GAEF4T,cAAgBkhC,IACdz+D,KAAK6c,gBAAgBoJ,aAAaw4C,EAAqBvlD,OAChDulD,KAKNyP,mBAAmBr1D,GACxB,OAAO7Y,KAAKgU,WAAWC,UAAU,8BAA+B,CAAC4E,SAAAA,IAAW7T,MAAWT,GAAU,mCAC/F,GAAGA,EAAO,CACR,MAAMw6D,QAAkB/+D,KAAKgU,WAAWoZ,YACrC2xC,IACDA,EAAU+O,kBAAoBj1D,GAKhC7Y,KAAK4c,UAAUhW,cAAc,iBAAkBiS,GAGjD,OAAOtU,OAIE4pE,aAAatsE,EAA0BgX,EAAyC3Q,G,kDACzE,sBAAf2Q,EAASxa,IACVwa,EAAW,CACTxa,EAAG,gBACHW,SAAU6Z,EAASA,WAIvB,MAAMkQ,QAAc/oB,KAAKgU,WAAW6a,SAAS,aAEvCu/C,EAAqBvsE,EAAQmV,OAAS,IAAMnV,EAAQ6iB,IAE1D,GADwB1kB,KAAK0sE,iBAAiBhoE,IAAI0pE,GAEhD,OAEApuE,KAAK0sE,iBAAiBtkE,IAAIgmE,EAAoBz/D,KAAK5J,OACnDhD,YAAW,KACT/B,KAAK0sE,iBAAiB3oE,OAAOqqE,KAC5B,KAGL,MAAM,OAACp3D,EAAM,IAAE0N,GAAO7iB,EAChB61D,EAAW13D,KAAK0b,gBAAgB1E,OAEhCq3D,EAAsB7nB,MACxBA,EAActrC,aACTsrC,EAAcI,cAElB,EAAAD,GAAA,GAAe9tC,EAAsB2tC,EAAc3tC,YACpDA,OAAW/N,GAGT07C,EAActrC,QAChB,EAAAzJ,EAAA,GAAiBqrB,EAAUz3B,QAASmhD,GAKnC1pB,EAAUlkB,mBACX,EAAAsS,GAAA,GAAc4R,EAAUlkB,kBAAmBmpC,IAAmB,EAAA4E,GAAA,GAAe5E,EAAelpC,SAAU2tC,EAAc3tC,WAAa7Y,KAAK0b,gBAAgB5C,UAAUipC,EAAehpC,WAAa2+C,IAG1L56B,EAAUz3B,QAAQlH,SACpB2+B,OAAYhyB,IAIVwjE,GAAsC,QAAzB,EAAiB,QAAjB,EAAAzsE,EAAQi7B,iBAAS,eAAEl+B,cAAM,eAAE2vE,gBAAiBvuE,KAAK0b,gBAAgB+Q,YAAY5qB,EAAQmV,SAAWnV,EAAQmV,OAAOqc,SAC9HxxB,EAAQi7B,YACVj7B,EAAQi7B,UAAY,CAClBz+B,EAAG,mBACHgH,QAAS,GACTuT,iBAAkB01D,EAAa,QAAKxjE,EACpClM,OAAQ,CACN2vE,aAAcD,QAAcxjE,KAKlC,IAAIgyB,EAAY50B,EAAYrG,EAAQi7B,WAAY,EAAAzR,GAAA,GAAKxpB,EAAQi7B,WAC7D,MAAM0xC,EAAkB1xC,EAAUz3B,QAAQ7G,QAAQgoD,QAAiD17C,IAA/B07C,EAAcI,eAClF4nB,EAAgB/uD,MAAK,CAACC,EAAGC,IAAMA,EAAEinC,aAAelnC,EAAEknC,eAClD,MAAM6nB,EAAkC,GAClCC,EAAoBF,EAAgBluD,WAAWkmC,IAAkB,EAAAG,GAAA,GAAeH,EAAc3tC,SAAUA,MACpF,IAAvB61D,GAA0BD,EAAenuE,QAAQkuE,EAAgBvkE,OAAOykE,EAAmB,IAC9FD,EAAenuE,QAAQkuE,EAAgBvkE,OAAO8e,KAAiC,IAAvB2lD,KACxDD,EAAevrE,SAASsjD,IACtBgoB,EAAgBtrE,SAASyrE,IACpBA,EAAoB/nB,aAAeJ,EAAcI,gBAChD+nB,EAAoB/nB,gBAI1BynB,EAAmB7nB,MAGrB,MAAMooB,EAAwBJ,EAAgBrwE,OAK9C,GAJAqwE,EAAgBtrE,SAAQ,CAACsjD,EAAehiD,KACtCgiD,EAAcI,aAAegoB,EAAwB,EAAIpqE,KAGxDqU,EAAU,CACPikB,IACFA,EAAsC,CACpCz+B,EAAG,mBACHgH,QAAS,GACTzG,OAAQ,IAGP0vE,IACDxxC,EAAUl+B,OAAO2vE,cAAe,IAIpC,IAAIM,EAAmB/xC,EAAUz3B,QAAQib,WAAWkmC,IAAkB,EAAAG,GAAA,GAAeH,EAAc3tC,SAAUA,KACzG2tC,GAAsC,IAAtBqoB,GAA2B/xC,EAAUz3B,QAAQwpE,GAmBjE,GAlBIroB,IACFA,EAAgB,CACdnoD,EAAG,gBACH6c,MAAO,EACPrC,SAAAA,GAGFg2D,EAAmB/xC,EAAUz3B,QAAQ/E,KAAKkmD,GAAiB,KAG3DA,EAActrC,MAChBsrC,EAAcI,aAAe4nB,EAAgBrwE,OAASqwE,EAAgB,GAAG5nB,aAAe,EAAI,EAC5F4nB,EAAgBvqD,QAAQuiC,IAEpB1pB,EAAUlkB,kBAAoB01D,IAChCxxC,EAAUlkB,iBAAmB,IAG5BkkB,EAAUlkB,iBAAkB,CAC7B,MAAMupC,EAAoC,CACxC9jD,EAAG,sBACHwa,SAAAA,EACAE,QAAS/Y,KAAK0b,gBAAgB0L,cAAcswC,IAG1C13D,KAAK0b,gBAAgB6d,YAAYviB,GAInC8lB,EAAUlkB,iBAAiBqL,QAAQk+B,GACnCrlB,EAAUlkB,iBAAmBkkB,EAAUlkB,iBAAiBhR,MAAM,EAAG,IAOvE,MAAM2kE,EAAqBvsE,KAAKusE,mBAChC,GAAGzvC,IAAayvC,MAAAA,OAAkB,EAAlBA,EAAoBpuE,QAAQ,CAC1C,MAAM+C,EAAuC,IAAI0Q,IACjD26D,EAAmBrpE,SAAQ,CAACypE,EAAmBnoE,KAC7CtD,EAAQkH,IAAIukE,EAAkB9zD,SAAUrU,MAG1Cs4B,EAAUz3B,QAAQoa,MAAK,CAACC,EAAGC,K,QACzB,MAAMmvD,EAAOpvD,EAAE7G,SAA0Ci6B,aAAgBpzB,EAAE7G,SAAoC7Z,SACzG+vE,EAAOpvD,EAAE9G,SAA0Ci6B,aAAgBnzB,EAAE9G,SAAoC7Z,SAC/G,OAAQ2gB,EAAEzE,MAAQwE,EAAExE,QAA4B,QAAhB,EAAAha,EAAQwD,IAAIoqE,UAAI,QAAI,IAAsB,QAAhB,EAAA5tE,EAAQwD,IAAIqqE,UAAI,QAAI,MAIlF,GAAG7mE,EAGD,OAFArG,EAAQi7B,UAAYA,EACpB98B,KAAK4c,UAAUhW,cAAc,qBAAsB,CAAC,CAAC/E,QAAAA,EAAS0kD,eAAgB,MACvE5kD,QAAQM,UAGjBjC,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,yBACHod,KAAM5Z,EAAQkX,QACd2gC,OAAQ73C,EAAQvD,GAChBw+B,UAAWA,EACXqD,OAAO,IAGT,MAAM6uC,EAAa,CAACh4D,EAAQ0N,GAAKhmB,KAAK,KAChC23D,GAAQ,EAAA13C,GAAA,GAAmB+F,GAC3B5a,EAAU9J,KAAKgU,WAAWC,UAAU,wBAAyB,CACjEwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C0iC,OAAQ2c,EACRx9C,SAAU21D,EAAgBpqE,KAAKoiD,GAAkBA,EAAc3tC,aAC9D7T,MAAM2hB,KACP,EAAA6H,GAAA,GAA4B7H,GAE5B,MAAMsoD,EAAuBtoD,EAAQA,QAAQrG,WAAWjF,GAAwB,sBAAbA,EAAOhd,GAA0C,6BAAbgd,EAAOhd,IAC9G,IAA6B,IAA1B4wE,EAA6B,CAC9B,MAAMC,EAAoBvoD,EAAQA,QAAQsoD,GAC1CtoD,EAAQA,QAAQsoD,GAAwB,CACtC5wE,EAAG,yBACHq7C,OAAQ2c,EACR56C,KAAMzb,KAAK0b,gBAAgB0L,cAAcpQ,GACzC8lB,UAAYoyC,EAAkBrtE,QAA4Bi7B,UAC1D3Y,IAAK+qD,EAAkB/qD,IACvBwM,UAAWu+C,EAAkBv+C,WAIjC3wB,KAAK6d,kBAAkBkS,qBAAqBpJ,MAC3CtY,OAAO5E,I,MACQ,qBAAbA,EAAIhK,MAA+BO,KAAKysE,qBAAqB/nE,IAAIsqE,KAAgBllE,GAClF9J,KAAKmuE,aAAatsE,EAA2B,QAAlB,EAAA2sE,EAAgB,UAAE,eAAE31D,UAAU,MAE1D6qB,SAAQ,KACN1jC,KAAKysE,qBAAqB/nE,IAAIsqE,KAAgBllE,GAC/C9J,KAAKysE,qBAAqB1oE,OAAOirE,MAKrC,OADAhvE,KAAKysE,qBAAqBrkE,IAAI4mE,EAAYllE,GACnCA,M,2SChZX,MAEMqlE,GAAqB,QACrBC,GAAgC,kBAChCC,GAAgB,IAAIj5D,IAAI,CAC5B+4D,GACAC,KAYK,MAAME,WAA2Bx8D,EAAxC,c,oBACU,KAAApP,QAAU,IAAI,IAAsE,IAAgB,eA+kBpG,KAAA6rE,yBAA4BC,KAClC,EAAAhhD,GAAA,GAAoDghD,IAEpD,EAAAxpD,GAAA,GAAewpD,EAAYC,MAAM,CAACC,EAAYlrE,EAAK0G,KAC9CwkE,EAAW9wE,OAAO+wE,SAAW3pE,IAAiBmmC,mBAC/CjhC,EAAIjB,OAAOzF,EAAK,MAIbgrE,GAvkBC7yD,QACR3c,KAAK4vE,sBAAwB,GAC7B5vE,KAAK6vE,+BAAiC,GACtC7vE,KAAK8vE,OAAS,GACd9vE,KAAK4T,MAAQ,GAEb5T,KAAK4c,UAAUpW,iBAAiB,aAAa,KAC3CzE,YAAW,KACT/B,KAAK+vE,+BAEJ,KAEC/vE,KAAKgwE,iCAAkEllE,IAApC9K,KAAKiwE,6BAC1CjwE,KAAKiwE,2BAA6BjhE,EAAA,cAAe,KAC/ChP,KAAKiwE,gCAA6BnlE,EAClC9K,KAAKkwE,oBAAmB,KACvB,SAIPlwE,KAAK4c,UAAUpW,iBAAiB,cAAc,IAAMxG,KAAKmwE,kBAAkB,SAAS,KAEpFnwE,KAAK6d,kBAAkBC,2BAA2B,CAChDsyD,oBAAsB/0D,IACpB,MAAMq0D,EAAar0D,EAAOvc,WAC1BkB,KAAKqwE,eAAeX,EAAYA,EAAWtnE,IAAI9J,IAC/C0B,KAAK4c,UAAUhW,cAAc,qBAAsB8oE,EAAWtnE,MAGhEkoE,qBAAsB,IAAMtwE,KAAKmwE,kBAAkB,UAAU,GAE7DI,oBAAqB,IAAMvwE,KAAKmwE,kBAAkB,SAAS,GAE3DK,0BAA4Bn1D,IAC1Brb,KAAK4c,UAAUhW,cAAc,eAAgByU,EAAOvc,eAK5CqxE,kBAAkB1wE,EAA0B2uB,G,0CACxD,MAAMqiD,OAA2B,UAAThxE,EAAmBO,KAAK0wE,yBAAyBtiD,GAAapuB,KAAK2wE,0BAA0BviD,GACrHpuB,KAAK4c,UAAUhW,cAAc,mBAAoB,CAC/CnH,KAAAA,EACAgxE,SAAAA,OAIGP,mBAAmBU,GAAc,GActC,OAbG5wE,KAAKiwE,6BACN/qE,aAAalF,KAAKiwE,4BAClBjwE,KAAKiwE,gCAA6BnlE,GAGhC9K,KAAKgwE,6BACPhwE,KAAKgwE,2BAA6BhwE,KAAK6wE,sBAAsB,QAAQ,GAAO7rE,MAAMwlC,IAChF,IAAIA,EAAKrsC,OAAQ,KAAM,cACvB6B,KAAK8wE,iBAAmBtmC,EAAK5iC,QAC7B5H,KAAK8wE,iBAAiBrxD,MAAK,CAACC,EAAGC,IAAMJ,KAAKwxD,SAAWxxD,KAAKwxD,eAIvD/wE,KAAKgwE,2BAA2BhrE,MAAK,KAC1C,IAAIylC,EAQJ,OAPImmC,IACFnmC,EAAMzqC,KAAK8wE,iBAAiBxiE,QAC5BtO,KAAK8wE,iBAAiBxwE,KAAKmqC,IAG7BzqC,KAAKq1B,eAAekY,cAAc,CAACj1B,MAAOtY,KAAK8wE,iBAAiB,KAEzDrmC,KAIHumC,aAAaxmC,IACnB,EAAAxkB,GAAA,GAAewkB,GAAM,CAACC,EAAKjmC,MACzBimC,EAAMzqC,KAAKgzC,eAAehI,QAAQP,IAG7BD,EAAKhmC,GAAOimC,EADRD,EAAKvgC,OAAOzF,EAAK,MAKtBysE,sBAAsB7oE,EAA2B8oE,G,MACvD,OAAO9oE,IAAoB,QAAb,EAAAA,EAAI2qC,iBAAS,eAAE50C,UAAYwQ,KAAK5J,MAAQqD,EAAI+oE,YAxH3C,MAwHwED,GAGlFE,cAAchpE,EAAwBiM,EAIxC,IACH,IAAI,GAAC/V,GAAM8J,EAMX,GALIA,EAAIsuB,cACNtuB,EAAMpI,KAAK4T,MAAMtV,IAAO8J,EACxB9J,EAAK8J,EAAI9J,IAGR0B,KAAK4vE,sBAAsBtxE,GAC5B,OAAO0B,KAAK4vE,sBAAsBtxE,GAGpC,IAAI+V,EAAO+Z,UAAW,CACpB,MAAMijD,EAAYrxE,KAAK0D,QAAQ20B,aAAa/5B,GAC5C,GAAG0B,KAAKixE,sBAAsBI,EAAWh9D,EAAO68D,UAC9C,OAAOG,EAIX,MAAMvnE,EAAU9J,KAAK4vE,sBAAsBtxE,GAAM,IAAIqD,SAAcM,GAAY,mCAC7E,IAAIoS,EAAO+Z,UAAW,CACpB,MAAMijD,QAAkBrxE,KAAK0D,QAAQgB,IAAIpG,GACzC,GAAG0B,KAAKixE,sBAAsBI,EAAWh9D,EAAO68D,UAQ9C,OAPAlxE,KAAKgxE,aAAaK,EAAUt+B,WAC5B9wC,EAAQovE,QAELrxE,KAAK4vE,sBAAsBtxE,KAAQwL,UAC7B9J,KAAK4vE,sBAAsBtxE,IAOxC,IACE,MAAMoxE,QAAmB1vE,KAAKgU,WAAWC,UAAU,yBAA0B,CAC3EnV,WAAYkB,KAAKsxE,mBAAmBlpE,GACpCs1B,KAAM,IAGF6zC,EAAWl9D,EAAOk9D,SAAWjzE,EAAKoxE,EAAWtnE,IAAI9J,GACvD0B,KAAKqwE,eAAeX,EAAY6B,GAEhCtvE,EAAQytE,GACR,MAAMjmE,GACNxH,EAAQ,MAGPjC,KAAK4vE,sBAAsBtxE,KAAQwL,UAC7B9J,KAAK4vE,sBAAsBtxE,QAItC,OAAOwL,EAGFimE,6BACL,OAAOpuE,QAAQ8Q,IAAI,CACjBzS,KAAKoxE,cAAc,CAAC9yE,GAAI6wE,IAAqB,CAACoC,UAAU,IACxDvxE,KAAKoxE,cAAc,CAAC9yE,GAAI8wE,IAAgC,CAACmC,UAAU,IACnEvxE,KAAKmX,2BACJnS,MAAK,EAAE2tC,EAAO6+B,MACR,CAAC7+B,MAAAA,EAAO6+B,WAAAA,MAIZr6D,uBAAuBiX,GAC5B,GAAGpuB,KAAKyxE,gCAAkCrjD,EAAW,OAAOpuB,KAAKyxE,8BACjE,MAAM3nE,EAAU9J,KAAKyxE,8BAAgC9vE,QAAQ8Q,IAAI,CAC/DzS,KAAKgU,WAAWgrD,aAAa5wC,GAC7BpuB,KAAKgU,WAAWoZ,cACfpoB,MAAK,EAAE+5D,EAAW9M,MACnB,GAAGjyD,KAAKyxE,gCAAkC3nE,EAI1C,IAAI,MAAM6oC,KAASosB,EAAU2S,eAAgB,CAC3C,MAAMhO,EAAQ3E,EAAU2S,eAAe/+B,GACjCg/B,EAAWC,KAAqBlO,EAAMmO,sBC/NrCp0E,QAAQ,KAAM,KAAKA,QAAQ,KAAM,MDgOlC0P,EAAQ,IAAI5D,WAAWooE,EAASxzE,QACtC,IAAI,IAAI0H,EAAI,EAAG1H,EAASgP,EAAMhP,OAAQ0H,EAAI1H,IAAU0H,EAClDsH,EAAMtH,GAAK8rE,EAAS9rE,GAAGisE,WAAW,GAQpC,MAAMrnC,EAAMzqC,KAAKgzC,eAAehI,QAAQ,CACtC3sC,EAAG,WACHO,OAAQ,GACRurB,MAAO,EACP7rB,GAAIolE,EAAMplE,GACVo4B,YAAagtC,EAAMhtC,YACnB0U,WAAY,CAAC,CACX/sC,EAAG,yBACHk5B,SAAU,EACV34B,OAAQ,CACN4sC,OAAO,KAGX3pB,KAAM,EACNsT,MAAO88B,EAAO8f,QACd7mC,eAAgB/9B,EAChBs+B,UAAW,aAEV,CACDhsC,KAAM,kBAGRO,KAAK8vE,OAAOn9B,GAASlI,MAQzB,OAAO3gC,EAGIkoE,kBAAkB5jD,G,0CAe7B,aAZkBpuB,KAAKgU,WAAWg6B,kBAAkB,CAClD/kC,OAAQ,6BACRs0B,cAAgBrJ,KACd,EAAA1F,GAAA,GAA0D0F,GAE1Dl0B,KAAKiyE,eAAiB/9C,EAAIu8C,SAC1BzwE,KAAKgxE,aAAa98C,EAAIu8C,UACfv8C,GAET9F,UAAAA,OAMGuiD,0BAA0BviD,GAC/B,GAAGA,EAAWpuB,KAAKiyE,oBAAiBnnE,OAC/B,GAAG9K,KAAKiyE,eAAgB,OAAOjyE,KAAKiyE,eACzC,OAAOjyE,KAAKgyE,kBAAkB5jD,GAAWppB,MAAK,IAAMhF,KAAKiyE,iBAGpDC,kBAAkBz6D,EAAc06D,EAAkBriD,GACvD,MAAM2a,EAAMzqC,KAAKgzC,eAAe7F,OAAO11B,GAGvC,IADA,EAAAyT,GAAA,GAAclrB,KAAKiyE,gBAAiBG,GAASA,EAAK9zE,KAAOmZ,KACrD06D,EAAQ,CACVnyE,KAAKiyE,eAAehuD,QAAQwmB,GAE5B,MAAM4nC,GAAc,EAAAz/B,GAAA,GAASnI,EAAIqB,iBACjC,IAAI,MAAM9sC,KAAYgB,KAAK6vE,+BACT7vE,KAAK6vE,+BAA+B7wE,GAC5CgG,MAAMyrE,IACZ,MAAM2B,GAAO,EAAAlnD,GAAA,GAAculD,GAAW2B,GAASA,EAAK9zE,KAAOmsC,EAAInsC,KAC5D8zE,EACD3B,EAASxsD,QAAQmuD,GACTpzE,EAASysB,SAAS4mD,IAC1B5B,EAASxsD,QAAQwmB,MAYzB,OANAzqC,KAAK4c,UAAUhW,cAAc,kBAAmB,CAACnH,KAAM,SAAU6yE,OAAQH,EAAQ3wC,SAAUiJ,IAExF0nC,GACDnyE,KAAKmwE,kBAAkB,UAAU,GAG5BnwE,KAAKgU,WAAWC,UAAU,6BAA8B,CAC7D3V,GAAIm/C,GAAiBhT,GACrB0nC,OAAAA,EACAriD,SAAAA,IAIIyiD,WAAW5/B,GACjB,OAAOA,EAAMl1C,QAAQ,UAAW,IAAIA,QAAQ,kBAAmB,IAG1D+0E,wBAAwB7/B,EAAe8/B,GAC5C,MAAMn0E,EAAKm0E,EAAcrD,GAAgCD,GACnDO,EAAa1vE,KAAK0D,QAAQ20B,aAAa/5B,GAE7C,KAAIoxE,MAAAA,OAAU,EAAVA,EAAY38B,WAAW,OAExB0/B,GACE,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMhnD,SAASknB,KAC3DA,EAAQ,MAIZA,EAAQ3yC,KAAKuyE,WAAW5/B,GACxB,MAAMnB,EAAOk+B,EAAWgD,MAAMnvE,MAAM6yB,GAAMA,EAAEp3B,WAAa2zC,IACzD,OAAOnB,EAAOxxC,KAAKgzC,eAAe7F,OAAOqE,EAAKuB,UAAU,SAAMjoC,EAGzD6nE,8BAA8BhgC,GACnC,OAAO3yC,KAAK8vE,OAAO9vE,KAAKuyE,WAAW5/B,IAG9BigC,4BAA4BjgC,GACjC,MAAMkgC,EAAsB7yE,KAAK+vE,6BAA6B/qE,MAAK,IAC1DhF,KAAKwyE,wBAAwB7/B,KAGtC,OAAOhxC,QAAQ8Q,IAAI,CACjBogE,EACA7yE,KAAK8yE,qCAAqCngC,KACzC3tC,MAAK,EAAEylC,EAAK/qB,MACN,CACL+qB,IAAKA,EACLsoC,UAAWrzD,MAAAA,OAAC,EAADA,EAAG+qB,IACdi5B,MAAOhkD,MAAAA,OAAC,EAADA,EAAGgkD,UAKToP,qCAAqCngC,GAC1C,OAAO3yC,KAAK+vE,6BAA6B/qE,MAAK,IACrChF,KAAKwyE,wBAAwB7/B,GAAO,KAC1C3tC,MAAMylC,IACP,IAAIA,EACF,OAGF,MAAMi5B,EAAQ1jE,KAAK2yE,8BAA8BhgC,GACjD,OAAOhxC,QAAQ8Q,IAAI,CACjBzS,KAAKgzE,eAAevoC,EAAInsC,IACxBolE,EAAQ1jE,KAAKgzE,eAAetP,EAAMplE,SAAMwM,IACvC9F,MAAK,KACC,CAACylC,IAAAA,EAAKi5B,MAAAA,SAKZsP,eAAev7D,EAAcw7D,G,MAClC,MAAMxoC,EAAMzqC,KAAKgzC,eAAe7F,OAAO11B,GACvC,OAAOzX,KAAKq1B,eAAekY,cAAc,CAACj1B,MAAOmyB,EAAKuC,MAAOimC,EAAkC,QAAhB,EAAAxoC,EAAIyoC,oBAAY,eAAG,QAAKpoE,IAGjGulE,eAAen8C,EAAuD51B,GAC5E,MAAM60E,EAA6B,CACjC90E,EAAG,sBACH+J,IAAK8rB,EAAI9rB,IACTsqE,MAAOx+C,EAAIw+C,MACX3/B,UAAW7e,EAAI6e,UACfjC,SAAU5c,EAAI4c,UAGhB,IAAI4+B,EAAa1vE,KAAK0D,QAAQ20B,aAAa/5B,GACxCoxE,EACD9zE,OAAOC,OAAO6zE,EAAYyD,GAE1BzD,EAAa1vE,KAAK0D,QAAQ0vE,WAAW90E,EAAI60E,GAGxCzD,EAAWtnE,IAAIrJ,aAChBiB,KAAK4T,MAAM87D,EAAWtnE,IAAIrJ,YAAciB,KAAKsxE,mBAAmB6B,EAAO/qE,MAGzEpI,KAAKgxE,aAAa98C,EAAI6e,WAGtB,MAAMsgC,EAAW3D,EAAWtnE,IAAIkrE,gBAAkBjE,GAAc7lD,IAAIlrB,GACpEoxE,EAAWyB,YAAcxiE,KAAK5J,MAC9B/E,KAAK0D,QAAQ0E,IAAI,CAAC,CAAC9J,GAAKoxE,IAAc2D,GAGjCE,kCAAkC7D,G,MACvC,MAAM1iC,EAAQ0iC,EAAW1jC,OAAOzoC,MAAMypC,GAAsB,cAAZA,EAAM3uC,IAChDiK,EAAOonE,EAAW8D,YAElBC,EAA8B,QAAjB,EAAA/D,EAAW9wE,cAAM,eAAEwtC,SAQtC,MAAO,CAAC9jC,KAAAA,EAAMrK,SANwC,CACpDI,EAAG,uBACHS,WAAYkB,KAAKsxE,mBAAmB5B,GACpCzwE,cAAeywE,EAAWzwE,eAGGwU,KAAMu5B,EAAMv5B,KAAMigE,SAAUD,EAAa,0BAA4B,cAsB/FnC,mBAAmBlpE,GACxB,OAAGA,EAAI9J,KAAO6wE,GACL,CACL9wE,EAAG,gCAEG+J,EAAI9J,KAAO8wE,GACZ,CACL/wE,EAAG,0CAEI+J,EAAIsuB,YAMN,CACLr4B,EAAG,oBACHC,GAAI8J,EAAI9J,GACRo4B,YAAatuB,EAAIsuB,aARZ,CACLr4B,EAAG,2BACHU,WAAY,GAAKqJ,EAAI9J,IAWdq1E,sB,0CAoBX,aAnBkB3zE,KAAKgU,WAAWg6B,kBAAkB,CAClD/kC,OAAQ,+BACRs0B,cAAgBrJ,KACd,EAAA1F,GAAA,GAA8D0F,IAE9D,EAAAlO,GAAA,GAAekO,EAAIu7C,MAAM,CAACmE,EAASpvE,EAAK0G,KACnC0oE,EAAQxrE,IAAIxJ,OAAO+wE,SAAW3pE,IAAiBmmC,mBAChDjhC,EAAIjB,OAAOzF,EAAK,MAIpB0vB,EAAIu7C,KAAKvsE,SAAS0wE,IAChB5zE,KAAKqwE,eAAe,CAACjoE,IAAKwrE,EAAQxrE,IAAK2qC,UAAW,GAAI2/B,MAAO,GAAI5hC,SAAU,IAAK8iC,EAAQxrE,IAAI9J,OAGvF41B,MAIAu7C,QAGNoE,0BACL,OAAO7zE,KAAK6wE,sBAAsB,QAAQ,GAGrCiD,qBACL,OAAO9zE,KAAK6wE,sBAAsB,QAAQ,GAGrCkD,iBAAiB3lD,GACtB,OAAOpuB,KAAKgU,WAAWg6B,kBAAkB,CACvC/kC,OAAQ,4BACRs0B,cAAgBy2C,KACd,EAAAxlD,GAAA,GAAwDwlD,GACxDh0E,KAAKgxE,aAAagD,EAAcvD,UAChCzwE,KAAKg0E,cAAgBA,EAAcvD,SAC5BuD,GAET5lD,UAAAA,IAIGsiD,yBAAyBtiD,GAC9B,GAAGA,EAAWpuB,KAAKg0E,mBAAgBlpE,OAC9B,GAAG9K,KAAKg0E,cAAe,OAAOh0E,KAAKg0E,cACxC,OAAOh0E,KAAK+zE,iBAAiB3lD,GAAWppB,MAAK,IAAMhF,KAAKg0E,gBAGnDC,wBACL,OAAOj0E,KAAKgU,WAAW6a,SAAS,iBAGrBqlD,YAAYz8D,EAAc08D,G,0CACjCn0E,KAAKg0E,sBACDh0E,KAAK0wE,4BAGb,MAAM3nD,QAAc/oB,KAAKi0E,wBAEnBxpC,EAAMzqC,KAAKgzC,eAAe7F,OAAO11B,GAUvC,OATA,EAAAyT,GAAA,GAAclrB,KAAKg0E,eAAgB5B,GAASA,EAAK9zE,KAAOmsC,EAAInsC,KAExD61E,IACFn0E,KAAKg0E,cAAc/vD,QAAQwmB,GACXzqC,KAAKg0E,cAAc/pE,OAAO8e,EAAO/oB,KAAKg0E,cAAc71E,OAAS4qB,IAG/E/oB,KAAK4c,UAAUhW,cAAc,kBAAmB,CAACnH,KAAM,QAAS6yE,OAAQ6B,EAAQ3yC,SAAUiJ,IAEnFzqC,KAAKgU,WAAWC,UAAU,uBAAwB,CACvD3V,GAAIm/C,GAAiBhT,GACrB0pC,OAAAA,IACCnvE,MAAK,KACHmvE,GACDn0E,KAAKmwE,kBAAkB,SAAS,SAKzBiE,iBAAiBhsE,G,0CAG5B,IAFAA,EAAMpI,KAAK0D,QAAQ20B,aAAajwB,EAAI9J,IAAI8J,KAEjCkrE,gBAKL,SAJkBtzE,KAAKgU,WAAWC,UAAU,+BAAgC,CAC1EnV,WAAYkB,KAAKsxE,mBAAmBlpE,KAOpC,cAHOA,EAAIkrE,eACXtzE,KAAK4c,UAAUhW,cAAc,mBAAoBwB,GACjDpI,KAAK0D,QAAQK,OAAOqE,EAAI9J,IAAI,IACrB,OAQT,SALkB0B,KAAKgU,WAAWC,UAAU,6BAA8B,CACxEnV,WAAYkB,KAAKsxE,mBAAmBlpE,GACpCisE,UAAU,IAMV,OAFAjsE,EAAIkrE,eAAiB3kE,KAAK5J,MAAQ,IAAO,EACzC/E,KAAK4c,UAAUhW,cAAc,qBAAsBwB,IAC5C,EAIX,OAAO,KAGFksE,kBAAkB7E,GACvB,OAAO9tE,QAAQ8Q,IAAIg9D,EAAKrrE,KAAKgE,GAAQpI,KAAKo0E,iBAAiBhsE,MAGhDmsE,kBAAkBt5D,EAAeu5D,GAAkB,G,0CAC9D,MAAMrqD,EAAQqqD,EAAkB,EAAI,EAC9BtgD,QAAYl0B,KAAKgU,WAAWg6B,kBAAkB,CAClD/kC,OAAQ,6BACRoL,OAAQ,CACN8V,MAAAA,EACAsqD,iBAAkBD,QAAmB1pE,EACrCs9B,EAAGntB,GAELsiB,cAAgBrJ,KACd,EAAA1F,GAAA,GAA8D0F,IAE9D,EAAAlO,GAAA,GAAekO,EAAIu7C,MAAM,CAACmE,EAASpvE,EAAK0G,KACnC0oE,EAAQxrE,IAAIxJ,OAAO+wE,SAAW3pE,IAAiBmmC,mBAChDjhC,EAAIjB,OAAOzF,EAAK,MAIpB0vB,EAAIu7C,KAAKvsE,SAAS0wE,IAChB5zE,KAAKqwE,eAAe,CAACjoE,IAAKwrE,EAAQxrE,IAAK2qC,UAAW,GAAI2/B,MAAO,GAAI5hC,SAAU,IAAK8iC,EAAQxrE,IAAI9J,OAGvF41B,KAILwgD,EAAkC,GAClCC,EAAQ30E,KAAK0D,QAAQ0a,WAC3B,IAAI,MAAM9f,KAAMq2E,EAAO,CACrB,MAAM,IAACvsE,GAAOusE,EAAMr2E,GAEjB8J,EAAIgiB,MAAMjuB,cAAcsvB,SAASxQ,EAAM9e,iBAAmB+3B,EAAIu7C,KAAKlsE,MAAMsT,GAAMA,EAAEzO,IAAI9J,KAAO8J,EAAI9J,MACjGo2E,EAAWp0E,KAAK,CAACjC,EAAG,oBAAqB+J,IAAAA,EAAKwsE,MAAO,OAIzD,OAAO1gD,EAAIu7C,KAAKvrE,OAAOwwE,MAelBG,iBACL,OAAO70E,KAAKgU,WAAWg6B,kBAAkB,CACvC/kC,OAAQ,0BACRs0B,cAAev9B,KAAKuvE,2BAIjB/7B,mBACL,OAAOxzC,KAAKgU,WAAWg6B,kBAAkB,CACvC/kC,OAAQ,4BACRs0B,cAAev9B,KAAKuvE,2BAIjBuF,qBACL,OAAO90E,KAAK60E,iBAAiB7vE,MAAMwqE,GAC1B7tE,QAAQ8Q,IAAK+8D,EAAwDC,KAAKrrE,KAAKgE,GAAQpI,KAAKoxE,cAAchpE,EAAK,CAAC8oE,UAAU,SAK9HL,sBAAsB7xE,EAAkB+1E,GAAqB,GAElE,OADA/1E,GAAW,EAAA4zC,GAAA,GAAS5zC,GACjBgB,KAAK6vE,+BAA+B7wE,GAAkBgB,KAAK6vE,+BAA+B7wE,GAEtFgB,KAAK6vE,+BAA+B7wE,GAAY2C,QAAQ8Q,IAAI,CACjEzS,KAAKgU,WAAWg6B,kBAAkB,CAChC/kC,OAAQ,uBACRoL,OAAQ,CACNrV,SAAAA,GAEFu+B,cAAgBkzC,GAAaA,IAE/BsE,EAAqB/0E,KAAK80E,qBAAuB,GACjDC,EAAqB/0E,KAAKgyE,yBAAsBlnE,IAC/C9F,MAAK,EAAEgwE,EAAkBC,EAAehD,MACzC,MAAMiD,EAAiBF,EAAuDvE,SAASrsE,KAAK8nC,GAAYlsC,KAAKgzC,eAAehI,QAAQkB,KAC9HipC,EAA8C,GAAIC,EAA4C,GAI9FC,EAAgB3C,IACpB,IAAI,MAAMlhC,KAAQkhC,EAEhB,IADqB,EAAA9/B,GAAA,GAASpB,EAAKxyC,UACnBysB,SAASzsB,GACvB,IAAI,MAAMyY,KAAS+5B,EAAKuB,UAAW,CACjC,MAAMtI,EAAMzqC,KAAKgzC,eAAe7F,OAAO11B,IACtCgzB,EAAI2B,SAAW+oC,EAAyBC,GAAsB90E,KAAKmqC,KAM5E,GAAGwnC,EAAgB,CACjBoD,EAAapD,EAAeS,OAC5B,MAAMjC,EAAWwB,EAAexB,SAChC,CAAC0E,EAAwBC,GAAsBlyE,SAASowD,IACtDA,EAAE7zC,MAAK,CAACC,EAAGC,IAAM8wD,EAASr0E,QAAQsjB,GAAK+wD,EAASr0E,QAAQujB,QAI5D,IAAI,MAAMvX,KAAO6sE,EACfI,EAAajtE,EAAIsqE,OAenB,MAAMjC,EAAW,IAAI,IAAIr6D,IAAI++D,EAAuBjxE,OAAOkxE,EAAsBF,KASjF,OAPA,EAAAlvD,GAAA,GAAeyqD,GAAU,CAACvkC,EAAS1nC,EAAK0G,MACd,IAApBghC,EAAQA,UAAkBlmC,IAAiBmmC,oBAC3CnsC,KAAK4c,UAAUrW,UAAW,EAAAosD,GAAA,GAAsBzmB,KAClDhhC,EAAIjB,OAAOzF,EAAK,MAIbisE,KAIJ6E,sBAML,OALGt1E,KAAKiyE,iBACNjyE,KAAKiyE,eAAe9zE,OAAS,EAC7B6B,KAAKmwE,kBAAkB,UAAU,IAG5BnwE,KAAKgU,WAAWC,UAAU,iC,cE1tBtB,SAASshE,GAAcp6C,GACpC,OAAOA,GAAYA,EAASh/B,eAAiB,G,eCqBxC,MAAMq5E,WAAwB1iE,EAArC,c,oBA+JS,KAAAzO,MAAQ,CAACsH,GAAO,KACrB,GAAIA,EAgBF3L,KAAKkZ,MAAQ,GACblZ,KAAKy1E,UAAY,QAhBjB,IAAI,MAAMn+D,KAAUtX,KAAKkZ,MAAO,CAE9B,IAAI5B,EAAQ,SACZ,MAAMN,EAASM,EAAO7Q,WACtB,IAAIzG,KAAK6kB,aAAakT,aAAa/gB,GAAS,CAC1C,MAAMxB,EAAOxV,KAAKkZ,MAAM5B,GACrB9B,EAAK2lB,iBACCn7B,KAAKy1E,UAAUF,GAAc//D,EAAK2lB,WAG3Cn7B,KAAK0D,QAAQK,OAAOuT,UACbtX,KAAKkZ,MAAM5B,IAQxBtX,KAAK01E,oBAAsB,GAC3B11E,KAAK21E,cAAgB31E,KAAK41E,oBAC1B51E,KAAK61E,yBAAsB/qE,EAC3B9K,KAAK81E,aAAe,IAAI1/D,IACxBpW,KAAK+1E,qBAAsB,GA8drB,KAAAC,oBAAsB,KAC5B,MAAMC,GAAe,EAAAl0D,GAAA,IAAM,GAC3B,IAAI,MAAMlc,KAAK7F,KAAKkZ,MAAO,CACzB,MAAM1D,EAAOxV,KAAKkZ,MAAMrT,GACxB7F,KAAKk2E,iBAAiB1gE,EAAMygE,KA9oBtBt5D,QA6ER,OA5EA3c,KAAKqE,OAAM,GAEX8xE,YAAYn2E,KAAKg2E,oBAAqB,KAEtCh2E,KAAK4c,UAAUpW,iBAAiB,qBAAsBxG,KAAKg2E,qBAE3Dh2E,KAAK6d,kBAAkBC,2BAA2B,CAChDo4D,iBAAmB76D,IACjB,MAAM/D,EAAS+D,EAAO7C,QAChBhD,EAAOxV,KAAKkZ,MAAM5B,GACrB9B,IACDA,EAAK7O,OAAS0U,EAAO1U,OAClB6O,EAAK7O,SACH,YAAa6O,EAAK7O,SACnB6O,EAAK7O,OAAOyvE,SAAWp2E,KAAKgiB,YAAYC,uBAGvC,eAAgBzM,EAAK7O,SACtB6O,EAAK7O,OAAO0vE,YAAcr2E,KAAKgiB,YAAYC,wBAK/CjiB,KAAK4c,UAAUhW,cAAc,cAAe0Q,GAC5CtX,KAAKs2E,uBAAuB9gE,KAIhC+gE,gBAAkBl7D,I,QAChB,MAAM/D,EAAS+D,EAAO7C,QAChBhD,EAAOxV,KAAKkZ,MAAM5B,GACxB,GAAG9B,EAAM,CACP,IAAoD,QAAjD,EAACA,EAAKwf,aAA2C,eAAEr2B,aAAgE,QAAlD,EAAA0c,EAAO2Z,aAA2C,eAAEr2B,UACtH,OAGFqB,KAAKuhD,gBAAgBjqC,EAAQ+D,EAAOwG,MAEd,0BAAnBxG,EAAO2Z,MAAM32B,SACPmX,EAAKwf,MAEZxf,EAAKwf,MAAQld,GAAkBtC,EAAKwf,MAAO3Z,EAAO2Z,OAGpDh1B,KAAKs2E,uBAAuB9gE,GAE5BxV,KAAK4c,UAAUhW,cAAc,cAAe0Q,GAC5CtX,KAAK4c,UAAUhW,cAAc,gBAAiB0Q,EAAO7Q,iBAChDpH,QAAQyD,KAAK,iBAAkBwU,IAGxCk/D,eAAiBn7D,IACf,MAAM/D,EAAS+D,EAAO7C,QAChBhD,EAAOxV,KAAKkZ,MAAM5B,GACrB9B,IACDxV,KAAKuhD,gBAAgBjqC,GAErBtX,KAAKorE,YAAY,OAAD,wBACX51D,GAAI,CACPulC,WAAY1/B,EAAO0/B,WACnBC,UAAW3/B,EAAO2/B,UAClB7f,SAAU9f,EAAO8f,YAChB,OASTn7B,KAAK4c,UAAUpW,iBAAiB,mBAAoBjE,IAClD,MAAM+U,EAAStX,KAAK8c,UAAUxe,GAC9B0B,KAAK21E,cAAc14D,YAAY3F,EAAQtX,KAAK6kE,kBAAkBvtD,OAGzD3V,QAAQ8Q,IAAI,CACjBzS,KAAKke,gBAAgB7W,WACrBrH,KAAKme,mBAAmBrK,YAAY,WACnC9O,MAAK,EAAEmC,GAAQ9B,QAAS6T,EAAOxV,QAAAA,OAGhC,GAFA1D,KAAK0D,QAAUA,EAEZwV,EAAM/a,OACP,IAAI,IAAI0H,EAAI,EAAG1H,EAAS+a,EAAM/a,OAAQ0H,EAAI1H,IAAU0H,EAAG,CACrD,MAAM2P,EAAO0D,EAAMrT,GAChB2P,IACDxV,KAAKkZ,MAAM1D,EAAKlX,IAAMkX,EACtBxV,KAAKy2E,mBAAmBjhE,GAExBxV,KAAK02E,aAAalhE,GAEfrO,EAAMwvE,yBAA2BnhE,EAAK5W,OAAOg4E,SAAWphE,EAAK5W,OAAOi4E,kBACrE72E,KAAK82E,YAAYthE,EAAKlX,IAElB0B,KAAK61E,sBACP71E,KAAK61E,qBAAsB,SAC3B71E,KAAK61E,oBAAoB5zE,QAAQjC,KAAK81E,iBAmBhD,MAAMiB,EAAe5vE,EAAM4vE,cAAgB,GAC3C,IAAI,IAAIlxE,EAAI,EAAG1H,EAAS44E,EAAa54E,OAAQ0H,EAAI1H,IAAU0H,EACzD7F,KAAK6kB,aAAaK,YAAY6xD,EAAalxE,GAAI,gBAGjD7F,KAAK6kB,aAAare,iBAAiB,cAAewQ,IAChD,IAAIhX,KAAK0b,gBAAgB2X,OAAOrc,GAC9B,OAGF,MAAMM,EAASN,EAAO4V,WAClB5sB,KAAK0D,QAAQ20B,aAAa/gB,IAC5BtX,KAAK0D,QAAQ0E,IAAI,CACf,CAACkP,GAAStX,KAAKo5C,QAAQ9hC,QAK7BtX,KAAK6kB,aAAare,iBAAiB,gBAAiBwQ,IAClD,IAAIhX,KAAK0b,gBAAgB2X,OAAOrc,GAC9B,OAGF,MAAMM,EAASN,EAAO4V,WACnB5sB,KAAK0D,QAAQ20B,aAAa/gB,IAC3BtX,KAAK0D,QAAQK,OAAOuT,SAkCjBA,aACT,OAAOtX,KAAK4c,UAAUvW,KAAKumB,WAGrBoqD,mBAAmBC,GAItBA,GACDj3E,KAAKke,gBAAgBlW,YAAY,0BAA0B,EAAA+Z,GAAA,IAAM,IAI9Dm1D,iBAAiBlgE,GACtB,OAAOhX,KAAKke,gBAAgB7W,WAAWrC,MAAMmC,IAC3C,MAAM4vE,EAAe5vE,EAAM4vE,cAAgB,GAC3C,GAAGA,EAAa,KAAO//D,EAAQ,EAC7B,EAAAvF,EAAA,GAAiBslE,EAAc//D,GAC/B+/D,EAAa9yD,QAAQjN,GAClB+/D,EAAa54E,OAAS,KACvB44E,EAAa54E,OAAS,IAGxB6B,KAAKke,gBAAgBlW,YAAY,eAAgB+uE,GACjD,IAAI,MAAM//D,KAAU+/D,EAClB/2E,KAAK6kB,aAAaK,YAAYlO,EAAQ,oBAMvCmgE,oBACL,OAAOn3E,KAAKke,gBAAgB7W,WAAWrC,MAAMmC,IAC3C,MAAM4vE,EAAe5vE,EAAM4vE,cAAgB,GAC3C,IAAI,MAAM//D,KAAU+/D,EAClB/2E,KAAK6kB,aAAagB,YAAY7O,EAAQ,gBAGxC+/D,EAAa54E,OAAS,EACtB6B,KAAKke,gBAAgBlW,YAAY,eAAgB+uE,MAI9C7tD,e,MACL,GAAGlpB,KAAK61E,qBAAuB71E,KAAK+1E,oBAClC,MAAO,CACL5sD,OAAQnpB,KAAK61E,oBAAoBxjE,YACjCvI,QAAS9J,KAAK61E,qBAIlB71E,KAAK+1E,qBAAsB,EAE3B,MAAMjsE,GAAU,SAqBhB,OApBA9J,KAAKgU,WAAWC,UAAU,wBAAwBjP,MAAM5C,IACtC,sBAAbA,EAAO/D,IACR2B,KAAK81E,aAAazxE,QAElBrE,KAAKimB,aAAa7jB,EAAO8W,OAEzB9W,EAAO6qB,SAAS/pB,SAAS0zE,IACvB52E,KAAK82E,YAAYF,EAAQp+D,YAG3BxY,KAAKg3E,oBAAmB,GAExBh3E,KAAK61E,oBAAsB/rE,GAG7BA,EAAQ7H,QAAQjC,KAAK81E,iBACpB,KACD91E,KAAK+1E,qBAAsB,KAGtB,CACL5sD,OAAgC,QAAxB,EAAAnpB,KAAK61E,2BAAmB,eAAExjE,YAClCvI,QAAS9J,KAAK61E,sBAAwB71E,KAAK61E,oBAAsB/rE,IAI9DstE,gBAAgBj8C,GACF,MAAhBA,EAAS,KACVA,EAAWA,EAASvzB,MAAM,IAG5BuzB,EAAWA,EAASh/B,cACpB,MAAMmb,EAAStX,KAAKy1E,UAAUt6C,GAC9B,OAAG7jB,EACMtX,KAAKkZ,MAAM5B,GAGbtX,KAAKgU,WAAWC,UAAU,2BAA4B,CAACknB,SAAAA,IAAWn2B,MAAMqyE,GACtEr3E,KAAKs3E,oBAAoBD,KAI5BC,oBAAoBD,GAI1B,OAHAr3E,KAAKimB,aAAaoxD,EAAan+D,OAC/BlZ,KAAK0d,gBAAgBwI,aAAamxD,EAAalxD,OAExCnmB,KAAK0b,gBAAgBwzC,SAAQ,EAAAp2C,GAAA,GAAUu+D,EAAa57D,OAGtD87D,aAAa/xB,GAClB,OAAOxlD,KAAKgU,WAAWC,UAAU,wBAAyB,CAACuxC,MAAAA,IAAQxgD,MAAMqyE,GAChEr3E,KAAKs3E,oBAAoBD,KAI5BP,YAAYx4E,GAClB0B,KAAK81E,aAAav/D,IAAIjY,GACtB0B,KAAK21E,cAAc14D,YAAY3e,EAAI0B,KAAK6kE,kBAAkBvmE,IAC1D0B,KAAK6kB,aAAaK,YAAY5mB,EAAGmI,WAAY,WAGvC+wE,WAAWl5E,GACjB0B,KAAK81E,aAAa/xE,OAAOzF,GACzB0B,KAAK21E,cAAc14D,YAAY3e,EAAI,IACnC0B,KAAK6kB,aAAagB,YAAYvnB,EAAGmI,WAAY,WAGxCo+D,kBAAkBvmE,GACvB,MAAMkX,EAAOxV,KAAKkZ,MAAM5a,GACxB,OAAIkX,EAIkB,CACpBA,EAAKulC,WACLvlC,EAAKwlC,UACLxlC,EAAKgwC,MACLhwC,EAAK2lB,SAEL3lB,EAAK5W,OAAOmyB,KAAO,iBAAmB,IAG7BvyB,OAAOC,SAASC,KAAK,KAZvB,GAeJ+4E,YAAYx8D,EAAgBy8D,GAAe,EAAOC,EAAqC,QAC5F,OAAO33E,KAAKkpB,eAAepf,QAAQ9E,MAAM4yE,IACvC,IAAI9B,EAAe,IAAI8B,GACvB,GAAG38D,EAAO,CACR,MAAM5V,EAAUrF,KAAK21E,cAAcz5E,OAAO+e,GAG1C66D,EAF6B,IAAIA,GAAct3E,QAAQF,GAAO+G,EAAQmkB,IAAIlrB,KAK9D,SAAXq5E,EACD7B,EAAar2D,MAAK,CAACo4D,EAASC,KAC1B,MAAMC,GAAa/3E,KAAKkZ,MAAM2+D,IAAY,IAAIG,UAAY,GACpDC,GAAaj4E,KAAKkZ,MAAM4+D,IAAY,IAAIE,UAAY,GAC1D,OAAOD,EAAUG,cAAcD,MAEd,WAAXN,GACR7B,EAAar2D,MAAK,CAACo4D,EAASC,KAC1B,MAAMK,EAAUn4E,KAAKo4E,qBAAqBp4E,KAAKo5C,QAAQy+B,GAASlxE,QAEhE,OADgB3G,KAAKo4E,qBAAqBp4E,KAAKo5C,QAAQ0+B,GAASnxE,QAC/CwxE,KAIrB,MAAME,EAAWr4E,KAAKsX,OAQtB,OAPA,EAAA7F,EAAA,GAAiBqkE,EAAcuC,GAC5BX,GACE13E,KAAKs4E,eAAer9D,IACrB66D,EAAa7xD,QAAQo0D,GAIlBvC,KAIJyC,mBACLt9D,EACAy8D,EACAC,EACA5uD,GAEA,OAAO/oB,KAAKy3E,YAAYx8D,EAAOy8D,EAAcC,GAAQ3yE,MAAMiU,IACzD,MAAMf,EAAUe,EAAQ7U,KAAKkT,GAAWA,EAAO7Q,UAAS,KACxD,OAAGsiB,EACM7Q,EAAQtQ,MAAM,EAAGmhB,GAGnB7Q,KAIJsgE,YAAYxhE,EAAgByhE,GACjC,OAAOz4E,KAAKgU,WAAWqa,gBAAgBoqD,EAAQ,iBAAmB,mBAAoB,CACpFn6E,GAAI0B,KAAK0b,gBAAgB4R,iBAAiBtW,KACzChS,MAAMT,IACJA,GACDvE,KAAK6d,kBAAkBiU,mBAAmB,CACxCzzB,EAAG,oBACH0a,QAAS/Y,KAAK0b,gBAAgB0L,cAAcpQ,GAC5CuxD,QAASkQ,IAINl0E,KAIJ+zE,eAAer9D,GACpB,MAAMzF,EAAOxV,KAAK8c,UACZ3b,EAAQnB,KAAK41E,oBAEnB,OADAz0E,EAAM8b,YAAYzH,EAAKlX,GAAI0B,KAAK6kE,kBAAkBrvD,EAAKlX,KAChD6C,EAAMjF,OAAO+e,GAAOuO,IAAIhU,EAAKlX,IAG9Bs3E,oBACN,OAAO,IAAI,KAAoB,CAC7B14E,eAAe,EACfC,YAAY,EACZH,UAAU,EACVM,YAAY,IAIT2oB,aAAayyD,EAAoB9nD,GAClC8nD,EAAiB5jD,QACpB4jD,EAAiB5jD,OAAQ,EAC1B4jD,EAASx1E,SAASsS,GAASxV,KAAKorE,YAAY51D,EAAMob,MAG5C6lD,mBAAmBjhE,EAAmBmjE,GAC5C,IAAIA,GAAWA,EAAQx9C,WAAa3lB,EAAK2lB,SAAU,CACjD,GAAGw9C,MAAAA,OAAO,EAAPA,EAASx9C,SAAU,CACpB,MAAMy9C,EAAoBrD,GAAcoD,EAAQx9C,iBACzCn7B,KAAKy1E,UAAUmD,GAGxB,GAAGpjE,EAAK2lB,SAAU,CAChB,MAAM09C,EAAiBtD,GAAc//D,EAAK2lB,UAC1Cn7B,KAAKy1E,UAAUoD,GAAkBrjE,EAAKlX,KAKrC8sE,YAAY51D,EAAcob,G,QAC/B,GAAc,cAAXpb,EAAKnX,EAAmB,OAE3B,MAAMiZ,EAAS9B,EAAKlX,GACdq6E,EAAU34E,KAAKkZ,MAAM5B,GAY3B,QAJmBxM,IAAhB0K,EAAK5W,SACN4W,EAAK5W,OAAS,KAGb4W,EAAK5W,OAAO4gB,UAAmB1U,IAAZ6tE,EAAtB,CASA,GAFA34E,KAAKy2E,mBAAmBjhE,EAAMmjE,GAE1BA,QACmB7tE,IAArB6tE,EAAQX,UACRW,EAAQ59B,aAAevlC,EAAKulC,YAC5B49B,EAAQ39B,YAAcxlC,EAAKwlC,UAK3BxlC,EAAKwiE,SAAWW,EAAQX,aALc,CACtC,MAAMc,EAAWtjE,EAAKulC,YAAcvlC,EAAKwlC,UAAY,IAAMxlC,EAAKwlC,UAAY,IAE5ExlC,EAAKwiE,SAAWxiE,EAAK5W,OAAOyoB,QAAU,IAAK,EAAAvqB,GAAA,IAAgBg8E,GAAU,GAiBvE,GAZGtjE,EAAK7O,SACF6O,EAAK7O,OAAuCyvE,UAC7C5gE,EAAK7O,OAAuCyvE,SAAWp2E,KAAKgiB,YAAYC,uBAGvEzM,EAAK7O,OAAwC0vE,aAC9C7gE,EAAK7O,OAAwC0vE,YAAcr2E,KAAKgiB,YAAYC,6BAMlEnX,IAAZ6tE,EACD34E,KAAKkZ,MAAM5B,GAAU9B,MAChB,CACL,MAAMmjB,EAAenjB,EAAKulC,aAAe49B,EAAQ59B,YAC/CvlC,EAAKwlC,YAAc29B,EAAQ39B,WAC3BxlC,EAAK2lB,WAAaw9C,EAAQx9C,SAItBzC,GAFiE,QAAnD,EAAAigD,EAAQ3jD,aAA2C,eAAEr2B,aACL,QAAhD,EAAA6W,EAAKwf,aAA2C,eAAEr2B,UAGhEi6B,EAAkB+/C,EAAQ/5E,OAAO2H,UAAYiP,EAAK5W,OAAO2H,SAC7DoyE,EAAQ/5E,OAAOi6B,WAAarjB,EAAK5W,OAAOi6B,UACxC8/C,EAAQ/5E,OAAOk6B,OAAStjB,EAAK5W,OAAOk6B,MACpC6/C,EAAQ/5E,OAAOm6B,OAASvjB,EAAK5W,OAAOm6B,KAMhCggD,IAAeJ,EAAQ/5E,OAAOg4E,QAC9BoC,IAAexjE,EAAK5W,OAAOg4E,QAEjC9+D,GAAkB6gE,EAASnjE,GAC3BxV,KAAK4c,UAAUhW,cAAc,cAAe0Q,GAEzCyhE,IAAeC,GAChBh5E,KAAKi5E,iBAAiB3hE,EAAQ0hE,EAAYD,GAGzCrgD,GACD14B,KAAK4c,UAAUhW,cAAc,gBAAiB4O,EAAKlX,GAAGmI,aAGrDkyB,GAAgBC,IACjB54B,KAAK4c,UAAUhW,cAAc,kBAAmB4O,EAAKlX,GAAGmI,YAI5DzG,KAAK02E,aAAalhE,GAClBxV,KAAKs2E,uBAAuB9gE,IAGtBkhE,aAAalhE,GACnB,GAAGA,EAAK5W,OAAOmyB,KAAM,CACnB,MAAMrqB,IAAc8O,EAAK5W,OAAO2H,QAC7BvG,KAAK4c,UAAUrW,UAAYG,GAC5B1G,KAAK4c,UAAUhW,cAAc,iBAAkBF,IAK7C4vE,uBAAuB9gE,GAC1BxV,KAAK6kB,aAAakT,aAAaviB,EAAKlX,GAAGmI,aACxCzG,KAAK0D,QAAQ0E,IAAI,CACf,CAACoN,EAAKlX,IAAKkX,IAKV0jE,oBAAoB56E,GACzB,OAAO0B,KAAKo4E,qBAAqB95E,GAAM,EAGlC85E,qBAAqBzxE,GAK1B,GAJsB,iBAAb,IACPA,EAAS3G,KAAKo5C,QAAQzyC,GAAQA,QAG7BA,EAAQ,CACT,MAAMyvE,EAAuB,qBAAbzvE,EAAOtI,EAA2BsI,EAAOyvE,QAAwB,sBAAbzvE,EAAOtI,EAA4BsI,EAAO0vE,WAAa,EAC3H,GAAGD,EACD,OAAOA,EAYT,OAAOzvE,EAAOtI,GACZ,IAAK,qBACH,OAAO,EACT,IAAK,qBACH,OAAO,EACT,IAAK,sBACH,OAAO,GAIb,OAAO,EAGF+6C,QAAQ96C,GACb,OAAG,EAAAsjB,GAAA,GAAetjB,GACTA,EAGF0B,KAAKkZ,MAAM5a,IAAO,CAACD,EAAG,YAAaC,GAAAA,EAAIM,OAAQ,CAACyoB,SAAS,GAAOqP,YAAa,IAG/E5Z,UACL,OAAO9c,KAAKo5C,QAAQp5C,KAAKsX,QAGpBuV,MAAMvuB,GACX,OAAO0B,KAAKkZ,MAAM5a,MAAS0B,KAAKkZ,MAAM5a,GAAIM,OAAOo5C,IAG5ChrB,UAAU1uB,GACf,OAAO0B,KAAK81E,aAAatsD,IAAIlrB,OAAU0B,KAAKkZ,MAAM5a,KAAO0B,KAAKkZ,MAAM5a,GAAIM,OAAOg4E,SAG1EuC,cAAc76E,GACnB,MAAMkX,EAAOxV,KAAKkZ,MAAM5a,GACxB,OAAOkX,IAASxV,KAAK6sB,MAAMvuB,KAAQkX,EAAK5W,OAAOyoB,UAAY7R,EAAK5W,OAAOw6E,QAGlEC,iBAAiB/6E,GACtB,OAAO0B,KAAKm5E,cAAc76E,KAAQ0B,KAAKgtB,UAAU1uB,IAAOA,IAAO0B,KAAKsX,OAG/D4b,QAAQ50B,EAAYw7B,GACzB,MAAMtkB,EAAOxV,KAAKkZ,MAAM5a,GACxB,OAAO,EAAAsjB,GAAA,GAASpM,KAAUskB,IAAatkB,EAAK5W,OAAO4gB,KAG9C+kD,aAAajmE,GAClB,MAAMkX,EAAOxV,KAAKo5C,QAAQ96C,GAE1B,OAAOkX,GAAQA,EAAKwf,OAAS,CAC3B32B,EAAG,yBAIAmmE,cAAclmE,GACnB,MAAMkX,EAAOxV,KAAKo5C,QAAQ96C,GAC1B,MAAO,IAAMA,GAAMkX,EAAKkhB,YAAc,IAAMlhB,EAAKkhB,YAAc,IAG1DU,aAAa94B,GAClB,MAAMkX,EAAOxV,KAAKo5C,QAAQ96C,GAC1B,OAAGkX,EAAK5W,QAAU4W,EAAK5W,OAAOmyB,KACrB,CAAC1yB,EAAG,iBAGN,CACLA,EAAG,YACHma,QAASla,EACTo4B,YAAalhB,EAAKkhB,aAIfkuC,iBAAiBtmE,GAOtB,MAAO,CACLD,EAAG,gBACHma,QAASla,EACTo4B,YATW12B,KAAKo5C,QAAQ96C,GASNo4B,aAIfi4B,qBAAqBrwD,GAC1B,MAAMkX,EAAOxV,KAAKo5C,QAAQ96C,GAE1B,MAAO,CACLD,EAAG,oBACH08C,WAAYvlC,EAAKulC,WACjBC,UAAWxlC,EAAKwlC,UAChBF,aAActlC,EAAKgwC,MACnBvK,MAAO,GACPziC,QAASla,GAYL43E,iBAAiB1gE,EAAmBygE,GAAe,EAAAl0D,GAAA,IAAM,IAC5DvM,EAAK7O,QACY,qBAAlB6O,EAAK7O,OAAOtI,GACZmX,EAAK7O,OAAOyvE,QAAUH,IACtBzgE,EAAK7O,OAAS,CAACtI,EAAG,oBAAqBg4E,WAAY7gE,EAAK7O,OAAOyvE,SAC/Dp2E,KAAK4c,UAAUhW,cAAc,cAAe4O,EAAKlX,IAEjD0B,KAAKs2E,uBAAuB9gE,IAIzB+rC,gBAAgBjjD,EAAYg7E,GACjC,GAAGt5E,KAAK6sB,MAAMvuB,GACZ,OAGF,MAAMw9B,GAAY,EAAA/Z,GAAA,IAAM,GAExB,GAAGu3D,GACD,GAAIx9C,EAAYw9C,GAFI,GAGlB,YAEG,GAAGt5E,KAAK6d,kBAAkB2R,aAAaI,YAC5C,OAGF,MAAMpa,EAAOxV,KAAKo5C,QAAQ96C,KACvBkX,MAAAA,OAAI,EAAJA,EAAM7O,SACW,qBAAlB6O,EAAK7O,OAAOtI,GACM,oBAAlBmX,EAAK7O,OAAOtI,GACXmX,EAAK5W,OAAOw6E,SACZ5jE,EAAK5W,OAAOyoB,UACb7R,EAAK7O,OAAS,CACZtI,EAAG,mBACH+3E,QAASt6C,EAjBS,IAqBpB97B,KAAK4c,UAAUhW,cAAc,cAAetI,GAE5C0B,KAAKs2E,uBAAuB9gE,IAIzB+jE,cAAcx+B,EAAoBC,EAAmBwK,GAC1D,OAAOxlD,KAAKw5E,eAAe,CAAC,CAC1Bz+B,WAAAA,EACAC,UAAAA,EACAy+B,OAAQ,CAACj0B,MACPxgD,MAAMiU,IACR,IAAIA,EAAQ9a,OAAQ,CAClB,MAAMmB,EAAQ,IAAI8L,MAElB,MADC9L,EAAcG,KAAO,UAChBH,EAGR,OAAO2Z,EAAQ,MAIZugE,eAAevsD,GACpB,MAAMysD,EAAgC,GAEtC,IAAI,IAAI7zE,EAAI,EAAGA,EAAIonB,EAAS9uB,SAAU0H,EACpC,IAAI,IAAI8zE,EAAI,EAAGA,EAAI1sD,EAASpnB,GAAG4zE,OAAOt7E,SAAUw7E,EAC9CD,EAAcp5E,KAAK,CACjBjC,EAAG,oBACHu7E,WAAY/zE,GAAK,GAAK8zE,GAAGvsE,SAAS,IAClCo4C,MAAOv4B,EAASpnB,GAAG4zE,OAAOE,GAC1B5+B,WAAY9tB,EAASpnB,GAAGk1C,WACxBC,UAAW/tB,EAASpnB,GAAGm1C,YAK7B,OAAOh7C,KAAKgU,WAAWC,UAAU,0BAA2B,CAC1DgZ,SAAUysD,IACT10E,MAAM60E,IACP75E,KAAKimB,aAAa4zD,EAAuB3gE,OAEzB2gE,EAAuBC,SAAS11E,KAAK21E,IACnD/5E,KAAKi5E,iBAAiBc,EAAgBvhE,SAAS,GACxCuhE,EAAgBvhE,cAOtBkgC,YAAYj5C,GACjB,OAAGO,KAAK01E,oBAAoBj2E,GAAcO,KAAK01E,oBAAoBj2E,GAE5DO,KAAK01E,oBAAoBj2E,GAAQO,KAAKke,gBAAgB7W,WAAWrC,MAAMmC,IAC5E,MAAMgiB,EAAShiB,EAAM6yE,cAAcv6E,GACnC,OAAG0pB,GAAWA,EAAO8wD,WAAa,MAAWtrE,KAAK5J,OAASokB,EAAO2E,MACzD3E,EAAO2E,MAGT9tB,KAAKgU,WAAWC,UAAU,uBAAwB,CACvD,CAACxU,IAAO,EACRkqB,OAAQ,EACRZ,MAAO,GACP2U,KAAM,MACL14B,MAAM5C,IACP,IAAIu2C,EAAwB,GAqB5B,MApBgB,sBAAbv2C,EAAO/D,IAER2B,KAAKimB,aAAa7jB,EAAO8W,OACzBlZ,KAAK0d,gBAAgBwI,aAAa9jB,EAAO+jB,OAEtC/jB,EAAO83E,WAAW/7E,SACnBw6C,EAAWv2C,EAAO83E,WAAW,GAAGpsD,MAAM1pB,KAAKy0C,IACzC,MAAM7hC,GAAS,EAAA8B,GAAA,GAAU+/B,EAAQp9B,MAEjC,OADAzb,KAAK6kB,aAAaK,YAAYlO,EAAQ,WAC/B,CAAC1Y,GAAI0Y,EAAQ8hC,OAAQD,EAAQC,aAK1C3xC,EAAM6yE,cAAcv6E,GAAQ,CAC1BquB,MAAO6qB,EACPshC,WAAYtrE,KAAK5J,OAEnB/E,KAAKke,gBAAgBlW,YAAY,gBAAiBb,EAAM6yE,eAEjDrhC,QAKNwhC,WAAWxwD,EAAS,EAAGZ,EAAQ,GACpC,OAAO/oB,KAAKgU,WAAWqa,gBAAgB,sBAAuB,CAAC1E,OAAAA,EAAQZ,MAAAA,IAAQ/jB,MAAMo1E,IACnFp6E,KAAKimB,aAAam0D,EAAgBlhE,OAClClZ,KAAK0d,gBAAgBwI,aAAak0D,EAAgBj0D,OAK3C,CAACjL,MAJ4B,qBAAtBk/D,EAAgB/7E,EAA2B+7E,EAAgBlhE,MAAM/a,OAASi8E,EAAgBj0D,MAAMhoB,OAASi8E,EAAgBl/D,MAIxHhD,QAFWkiE,EAAgBlhE,MAAM9U,KAAKi2B,GAAMA,EAAE/7B,GAAGmI,aAAYvC,OAAOk2E,EAAgBj0D,MAAM/hB,KAAKyS,GAAMA,EAAEvY,GAAGmI,UAAS,UAM/H4zE,WACL1iC,EACAC,EACAC,EACAgW,GAAsB,EACtBysB,EAAuB,GAEvB,MAAMriC,EAA2B,CAC/B55C,EAAG,gBACHs5C,IAAAA,EACAC,KAAAA,EACAC,gBAAAA,GAGF,OAAO73C,KAAKgU,WAAWC,UAAU,sBAAuB,CACtDgkC,UAAAA,EACA4V,WAAAA,IACC7oD,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,GACrCA,KA4BJ4zD,eAAet/D,EAAe8N,EAAQ,IAE3C,MAAM2H,GAAW,EAAAonC,GAAA,GAAc78C,GAC/B,GAAGyV,EAASvyB,QAAUuyB,EAAS,GAAGvyB,SAAW8c,EAAMqtB,OAAOnqC,QAA4B,qBAAlBuyB,EAAS,GAAGryB,EAC9E,IACE,MACM6R,EADM,IAAIqlB,KAAI,EAAAqN,GAAA,GAAQ3nB,GAAO7b,KAClBo7E,SAAS5yE,MAAM,GAC7BsI,IACD+K,EAAQ/K,GAEV,MAAMzG,IAGV,OAAOzJ,KAAKgU,WAAW6pB,mBAAmB,kBAAmB,CAC3DuK,EAAGntB,EACH8N,MAAAA,GACC,CAAC+U,aAAc,KAAK94B,MAAM8oB,IAC3B9tB,KAAKimB,aAAa6H,EAAM5U,OACxBlZ,KAAK0d,gBAAgBwI,aAAa4H,EAAM3H,OAE5B,CACVs0D,YAAY,EAAAjmD,GAAA,GAAa1G,EAAM2sD,WAAWr2E,KAAKgyB,IAAM,EAAAtd,GAAA,GAAUsd,MAC/D/wB,QAASyoB,EAAMzoB,QAAQjB,KAAKgyB,IAAM,EAAAtd,GAAA,GAAUsd,SAO1C6iD,iBAAiB3hE,EAAgB0V,EAAoB0tD,EAAe16E,KAAKgtB,UAAU1V,IACtF0V,IAAc0tD,IACZ1tD,EACDhtB,KAAK82E,YAAYx/D,GAEjBtX,KAAKw3E,WAAWlgE,GAGlBtX,KAAKg3E,qBAELh3E,KAAK4c,UAAUhW,cAAc,kBAAmB0Q,IAI7C4jB,eAAeC,GACpB,OAAOn7B,KAAKgU,WAAWC,UAAU,yBAA0B,CACzDknB,SAAAA,IACCn2B,MAAMwQ,IACPxV,KAAKorE,YAAY51D,MAIdmlE,cAAcrjE,EAAgBsjE,GACnC,GAAG56E,KAAK6sB,MAAMvV,GACZ,OAGF,MAAM9B,EAAOxV,KAAKkZ,MAAM5B,GACxB,GAAG9B,EAAM,CACP,MAAM7O,EAAqBi0E,EAAU,CACnCv8E,EAAG,oBACHg4E,YAAY,EAAAt0D,GAAA,IAAM,IAChB,CACF1jB,EAAG,mBACH+3E,SAAS,EAAAr0D,GAAA,IAAM,GAAQ,IAGzBvM,EAAK7O,OAASA,EAEd3G,KAAK4c,UAAUhW,cAAc,cAAe0Q,GAE5CtX,KAAKs2E,uBAAuB9gE,IAIzBqlE,qBAAqBD,GAE1B,OADA56E,KAAK26E,cAAc36E,KAAK8c,UAAUxe,GAAIs8E,GAC/B56E,KAAKgU,WAAWqa,gBAAgB,uBAAwB,CAACusD,QAAAA,IAG3DE,WAAWxjE,EAAgByjC,EAAoBC,EAAmBwK,EAAeu1B,GAStF,OAAO/6E,KAAKgU,WAAWC,UAAU,sBAAuB,CACtD3V,GAAI0B,KAAKo3B,aAAa9f,GACtByjC,WAAAA,EACAC,UAAAA,EACAwK,MAAAA,EACAw1B,4BAA6BD,IAC5B/1E,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,EAAS,CAACiK,UAAU,IAEhE5wB,KAAKi5E,iBAAiB3hE,GAAQ,MAI3B2jE,eAAehiE,GACpB,OAAOjZ,KAAKgU,WAAWC,UAAU,0BAA2B,CAC1D3V,GAAI2a,EAAQ7U,KAAKkT,GAAWtX,KAAKo3B,aAAa9f,OAC7CtS,MAAM2hB,IACP3mB,KAAK6d,kBAAkBkS,qBAAqBpJ,EAAS,CAACiK,UAAU,IAEhE3X,EAAQ/V,SAASoU,IACftX,KAAKi5E,iBAAiB3hE,GAAQ,SAK7BugB,aAAavgB,GAClB,MAAM9B,EAAoBxV,KAAKo5C,QAAQ9hC,GACjC4lB,EAAqB1nB,EAAK2nB,mBAEhC,SAAU3nB,EAAK5W,OAAOw+B,YAAcF,GAAsBrF,GAAaqF,IAGlES,cAAcxC,GACnB,OAAOn7B,KAAKgU,WAAWC,UAAU,wBAAyB,CAACknB,SAAAA,IAGtDmiC,cAAchmD,GACnB,OAAO,EAAAgmD,GAAA,GAAct9D,KAAKo5C,QAAQ9hC,KCz+BtC,MAAM4jE,GAAe,IAAI9kE,IAAI,CAAC,QAAS,QAAS,MAAO,aAIhD,MAAM+kE,WAA2BroE,EAAxC,c,oBACU,KAAAsoE,SAEJ,GACI,KAAAC,gBAEJ,GAEM1+D,QACR3c,KAAK6d,kBAAkBC,2BAA2B,CAChDw9D,cAAgBjgE,IACdrb,KAAK82D,YAAYz7C,EAAOutC,YAKvBkO,YAAYykB,EAAqB3kB,EAAgCH,G,QACtE,GAAoB,uBAAjB8kB,EAAWl9E,EAA4B,OAC1C,MAAM,GAACC,GAAMi9E,EAEPC,EAAax7E,KAAKo7E,SAAS98E,GAC3Bm9E,EAAYD,GAChBA,EAAWn9E,IAAMk9E,EAAWl9E,GAC3Bm9E,EAA+B99C,MAAU89C,EAA+B99C,KAE3E,GAAoB,YAAjB69C,EAAWl9E,EAAiB,CACF,WAAR,QAAhB,EAAAk9E,EAAWvmD,aAAK,eAAE32B,GACnBk9E,EAAWvmD,MAAQh1B,KAAKs4C,iBAAiBC,UAAUgjC,EAAWvmD,MAAOyhC,UAE9D8kB,EAAWvmD,MAGU,cAAR,QAAnB,EAAAumD,EAAW/5C,gBAAQ,eAAEnjC,GACtBk9E,EAAW/5C,SAAWxhC,KAAKgzC,eAAehI,QAAQuwC,EAAW/5C,SAAUi1B,IAEhD,aAApB8kB,EAAW97E,aACL87E,EAAW97E,YAGb87E,EAAW/5C,UAGpB,MAAMk6C,EAAWH,EAAWI,UACtBC,EAAaL,EAAWnxD,OAASmxD,EAAWM,QAAUH,GAAY,GACrEA,GAAYE,IAAeF,UACrBH,EAAWI,UAKhBT,GAAa1xD,IAAI+xD,EAAW97E,OAC7B87E,EAAWrgC,cACZqgC,EAAWvmD,QACXumD,EAAW97E,KAAO,SAItB,IAAIq8E,EAAa97E,KAAKq7E,gBAAgB/8E,GAYtC,GAXGs4D,IACGklB,IAAYA,EAAa97E,KAAKq7E,gBAAgB/8E,GAAM,IAAI8X,KAC5D0lE,EAAWvlE,IAAIqgD,SAGC9rD,IAAf0wE,EACDx7E,KAAKo7E,SAAS98E,GAAMi9E,EAEpBzjE,GAAkB0jE,EAAYD,IAG5B3kB,QAA6B9rD,IAAfgxE,GAA4BL,EAAW,CACvD,MAAM52B,EAA8D,GACpEi3B,EAAW54E,SAASqB,IAClB,MAAOyS,EAAQ0N,EAAKqhC,GAAexhD,EAAMmD,MAAM,KAC/Cm9C,EAAKvkD,KAAK,CACR0W,OAAQA,EAAOvQ,WACfie,KAAMA,EACNqhC,cAAeA,OAInB/lD,KAAK4c,UAAUhW,cAAc,kBAAmB,CAC9CtI,GAAAA,EACAumD,KAAAA,IAIJ,OAAO02B,EAGF1kB,+BAA+B7/C,EAAgB0N,EAAaqhC,GACjE,OAAO/uC,EAAS,IAAM0N,GAAOqhC,EAAc,KAAO,IAG7C0b,yBAAyBtX,EAAkByM,GAChD,MAAMt4D,EAAM6rD,EAA4B7rD,GACxC,IAAIA,EAAI,OAER,MAAM8J,EAAMpI,KAAKq7E,gBAAgB/8E,GAC9B8J,GAAOA,EAAIohB,IAAIotC,KAChBxuD,EAAIrE,OAAO6yD,GAEPxuD,EAAIqL,aACCzT,KAAKq7E,gBAAgB/8E,IAK3BwqD,iBAAiBxqD,GACtB,OAAO0B,KAAKo7E,SAAS98E,GAGhBy9E,WAAW38E,GAChB,OAAOY,KAAKgU,WAAWg6B,kBAAkB,CACvC/kC,OAAQ,sBACRs0B,cAAgB4sB,GACPnqD,KAAK82D,YAAY3M,GAE1B91C,OAAQ,CACNjV,IAAAA,M,0BClIO,SAAS48E,GAAsB1mD,GAC5C,OAAO,EAAA2mD,GAAA,GAAW3mD,EAAM,qB,0BCTX,SAAS4mD,GAAYxtC,GAElC,OAAOhvC,mBAAmBgvC,GAAUjxC,QAAQ,SAAU0+E,QAAQ1+E,QAAQ,MAAO,OCQhE,MAAM2+E,GACnBt8E,YACUu8E,EACA98E,GADA,KAAA88E,mBAAAA,EACA,KAAA98E,WAAAA,EAERS,KAAKq8E,mBAAqBC,KAGfC,MAAMx/B,EAAkBpzB,G,qCACnC,OAAO3pB,KAAKq8E,mBAAmBjuB,OAAO,gBAAiB,CACrD9vD,GAAI0B,KAAKT,WACTi9E,MAAOz/B,K,+RAIJ2M,SAAS+yB,GACd,OAAOz8E,KAAKq8E,mBAAmBjuB,OAAO,mBAAoBpuD,KAAKT,YAAYyF,MAAK,UCbrE,MAAM03E,GACZC,QAAQjuC,GACb,OAAO/sC,QAAQC,QAAO,EAAAiW,EAAA,GAAU,mBAG3B+kE,gBAAe,SAACluC,EAAQ,WAAEnvC,EAAU,KAAEkU,IAK3C,MAAMopE,EAAU,OAAH,QACX,eAAgB,0CAChB,sBAAuB,gCAAoCX,GAAYxtC,IACnEj7B,EAAO,CAAC,iBAAkBA,GAAQ,IAGlC4oE,EAAqBC,KACrBxyE,EAAUuyE,EAAmBjuB,OAAO,WAAY,CACpDyuB,QAAAA,EACAv+E,GAAIiB,IAGApE,GAAW,SAWjB,OAVAA,EAAS2hF,OAAS,KAChB3hF,EAASyG,QAAO,EAAAiW,EAAA,GAAU,uBAG5B1c,EAASkT,OAAM,KACbiuE,KAAwBluB,OAAO,iBAAkB7uD,MAGnDuK,EAAQ9E,KAAK7J,EAAS8G,QAAS9G,EAASyG,QAEjC,CACLzG,SAAAA,EACA4hF,UAAW,IACF,IAAIX,GAAeC,EAAoB98E,K,2SCsCtD,MAEMy9E,GAAgB,OAOhBC,GAAgC,IAAI7mE,IAAI,CAC5C,oBACA,kBACA,UACA,mBAGK,MAAM8mE,WAAuBpqE,EAApC,c,oBACU,KAAAqqE,aAAe,IAAI,KAAuB,eAC1C,KAAAC,gBAAkB,IAAIV,GAEtB,KAAAW,iBAEJ,GAMI,KAAAC,eAEJ,GAEI,KAAAC,cAWJ,GACI,KAAAC,gBAA4C,GAE7C,KAAAC,yBAKH,GAEI,KAAAt9E,KAAiC,EAAAyI,EAAA,IAAO,MAAO,WAAiB,KAAAD,KAChE,KAAA43C,OAAS,EACT,KAAAlT,QAAU,EACV,KAAA5kC,MAAQ,UAER,KAAAi1E,eAAiB,IACjB,KAAAC,iBAAmB,IA4MnB,KAAAC,cAAgB,CAACzwE,EAAmBuhC,IAGnC1uC,KAAK2U,aAAaC,aAAa,iBAAkBzH,EAAMvF,QAAQwB,QAAQ,GAGxE,KAAAy0E,cAAgB,CAAC1wE,EAAmBuhC,KAG1C,MAAMtlC,EAAS+D,EAAMvF,QAAQwB,OAC7B,OAAGpD,IAAiBtJ,WACXsD,KAAK2U,aAAaC,aAAa,iBAAkBxL,GAAQ,GAAMpE,MAAMjI,GCnWnE,SAAuBA,GACpC,MAAM+gF,EAAW/gF,EAAKX,QAAQ,QACd,IAAb0hF,IACD/gF,EAAOA,EAAK6K,MAAMk2E,IAGpB,MAAOz/E,EAAG0/E,EAAIpwC,EAAOC,GAAU7wC,EAAKN,MAAM,mBAAmB,GAAGiL,MAAM,KAEtE,OADO3K,EAAKU,QAAQ,IAAK,WAAWkwC,cAAkBC,OAAYnwC,QAAQ,gBAAiB,ID6V9EugF,CAAcjhF,KACpBiI,MAAMjI,IACa,IAAIkhF,aACLtxE,OAAO5P,KAIvBiD,KAAK2U,aAAaC,aAAa,iBAAkBxL,GAAQ,IAG1D,KAAA80E,YAAc,CAAC/wE,EAAmBuhC,IACvB,kBACD0f,OAAO,cAAe,CAAC1f,SAAAA,EAAUvhC,MAAAA,IAG3C,KAAAgxE,YAAc,CAAChxE,EAAmBuhC,IACvB,kBACD0f,OAAO,cAAe,CAAC1f,SAAAA,EAAUvhC,MAAAA,IAtOzCwP,QACRw5D,aAAY,KACV,IAAI,MAAMz+D,KAAO1X,KAAKy9E,yBAA0B,CAC9C,MAAM,SAACtiF,GAAY6E,KAAKy9E,yBAAyB/lE,IAC9Cvc,EAASkX,aAAelX,EAASmX,oBAC3BtS,KAAKy9E,yBAAyB/lE,MAGxC,MAEH1X,KAAK4c,UAAUpW,iBAAiB,UAAWyrD,IACzCjyD,KAAKo+E,YAAcnsB,EAAOosB,iBAG5Br+E,KAAK4c,UAAUpW,iBAAiB,cAAeu4D,IAC7C/+D,KAAK09E,eAAiB19E,KAAK4c,UAAUrW,QAAUw4D,EAAUuf,6BAA+Bvf,EAAUwf,6BAClGv+E,KAAK29E,iBAAmB5e,EAAUuf,gCAM9BE,gBAAgBl2E,EAAuBhK,EAAYq/C,EAAwC8gC,EAAqBpxC,EAAkB,QACxGviC,IAA7B9K,KAAKu9E,cAAcj1E,KACpBtI,KAAKu9E,cAAcj1E,GAAQ,GAC3BtI,KAAKw9E,gBAAgBl1E,GAAQ,GAG/B,MAAMo2E,EAAe1+E,KAAKu9E,cAAcj1E,GAElCwB,EAAU,IAAInI,SAA6B,CAACM,EAASL,KACzD88E,EAAap+E,KAAK,CAAChC,GAAAA,EAAI+uC,QAAAA,EAASsQ,GAAAA,EAAIxiD,SAAU,CAAC8G,QAAAA,EAASL,OAAAA,GAAS68E,YAAAA,OAOnE,OAJA18E,YAAW,KACT/B,KAAK2+E,cAAcr2E,KAClB,GAEIwB,EAGD60E,cAAcr2E,GACpB,MAAMo2E,EAAe1+E,KAAKu9E,cAAcj1E,GAClCs2E,EAAgD5+E,KAAK4c,UAAUrW,QAlG1C,IAFA,GAuG3B,GAAGvG,KAAKw9E,gBAAgBl1E,IAASs2E,KAAkBF,MAAAA,OAAY,EAAZA,EAAcvgF,QAC/D,OAAO,EAIT,MAAMsM,GAAO,EAAAygB,GAAA,GAAcwzD,GAAehiE,GAAoB,IAAdA,EAAE2wB,YAAkB,EAAAniB,GAAA,GAAcwzD,GAAehiE,GAAMA,EAAE2wB,UAAYrtC,KAAKqtC,WAAYqxC,EAAapwE,QAC7ImwE,EAAch0E,EAAKg0E,aAAe,EAExCz+E,KAAKw9E,gBAAgBl1E,IAASm2E,EAE9B,MAAM30E,EAAUW,EAAKkzC,KAKhB7zC,EAAQ9E,MAAK,KAChBhF,KAAKw9E,gBAAgBl1E,IAASm2E,EAC9Bz+E,KAAK2+E,cAAcr2E,MAGjBhJ,KACEA,MAAAA,OAAK,EAALA,EAAOG,OAASw9E,GAAczzD,IAAIlqB,EAAMG,OAC1CO,KAAKG,IAAIb,MAAM,uBAAwBA,GAGzCU,KAAKw9E,gBAAgBl1E,IAASm2E,EAC9Bz+E,KAAK2+E,cAAcr2E,MAGlBo7B,SAAQ,KACT55B,EAAQ9E,KAAKyF,EAAKtP,SAAS8G,QAASwI,EAAKtP,SAASyG,WAI/Ci9E,WAAWxxC,GAEhBrtC,KAAKqtC,QAAUA,EAGTyxC,iBACN,OAAO9+E,KAAKm9E,aAGP4B,eAAerwC,GACpB,MAAM1lB,EAAW,CAAChpB,KAAKq9E,iBAAiB3uC,GAAW1uC,KAAKs9E,eAAe5uC,IAAWlwC,OAAOC,SACzF,IAAIugF,GAAW,EACf,IAAI,IAAIn5E,EAAI,EAAG1H,EAAS6qB,EAAS7qB,OAAQ0H,EAAI1H,IAAU0H,EAAG,CACxD,MAAMiE,EAAUkf,EAASnjB,IACtBiE,GAAYA,EAAQwI,YAAexI,EAAQuI,cAC5CvI,EAAQgzE,SACRkC,GAAW,GAIf,OAAOA,EAGFC,mBAAmB32E,EAAYrK,EAAgC0rB,EAAgBZ,EAAezqB,EAAK,EAAG+uC,EAAU,EAAG6xC,GACxH,OAAOl/E,KAAKw+E,gBAAgBl2E,EAAMhK,GAAI,IAAW,mCAG/C,OAFA4gF,MAAAA,GAAAA,IAEOl/E,KAAKgU,WAAWC,UAAU,oBAAqB,CACpDhW,SAAAA,EACA0rB,OAAAA,EACAZ,MAAAA,GACC,CACDzgB,KAAAA,EACA62E,cAAc,QAEfn/E,KAAKo/E,SAASr2D,GAAQskB,GAGpB0B,gBACLzmC,EACArK,EACA0rB,EACAZ,EACAzqB,EAAK,EACL+uC,EAAU,EACV6xC,GAEA,OAAOl/E,KAAKw+E,gBAAgBl2E,EAAMhK,GAAI,IAAW,mCAC/C4gF,MAAAA,GAAAA,IAEA,MAAM9wB,EAAS,IAAkC,mC,MAC/C8wB,MAAAA,GAAAA,IAGA,MAAMjpE,EAAoF,QAAvE,EAAAhY,EAAyDitC,sBAAc,eAAEtjC,QAY5F,OATA5H,KAAKgU,WAAWC,UAAU,iBAAkB,CAC1ChW,SAAAA,EACA0rB,OAAAA,EACAZ,MAAAA,GACC,CACDzgB,KAAAA,EACA62E,cAAc,IAGD9wE,OAAO5E,IAGpB,GAFAy1E,MAAAA,GAAAA,IAEgB,2BAAbz1E,EAAIhK,KACL,OAAOO,KAAK4W,iBAAiB3Y,EAAyDgY,GAAWjR,KAAKopD,GAGxG,MAAM3kD,SAIV,EAAA+kB,GAAA,GAAwDvwB,GACxD,MAAMgY,EAAYhY,EAASitC,eAC3B,GAAGj1B,IAAchY,EAASohF,iBAAkB,CAC1CphF,EAASohF,kBAAmB,EAC5B,MAAM3nE,EAAMxK,EAAW+I,GACvB,GAAGjW,KAAKy9E,yBAAyB/lE,GAC/B,OAAO1X,KAAK4W,iBAAiB3Y,EAAUgY,GAAWjR,KAAKopD,GAI3D,OAAOA,QACNpuD,KAAKo/E,SAASr2D,GAAQskB,GAOnB+xC,SAASjyE,GACf,OAAOA,EAAQ6vE,GAGTsC,aAAa7rE,EAAc8rE,GACjC,IAAI9rE,EACF,OAhPgB,OAqPlB,IAAItG,EAAQ6vE,GAEZ,MAAMwC,EAAWD,EAAWv/E,KAAK09E,eAAiB19E,KAAK29E,iBACjD8B,EAAcF,EA1PU,OADE,QA6PhC,KAAO9rE,EAAOtG,EAASqyE,GAAYryE,EAAQsyE,GACzCtyE,GAAS,EAMX,OAAOA,EAmCDyJ,iBACN8oE,EACAzpE,EACAyB,EAAMxK,EAAW+I,IAEjB,IAAI1Q,EAAIvF,KAAKy9E,yBAAyB/lE,GACtC,IAAInS,EAAG,CACL,MAAMpK,GAAW,SAEjBoK,EAAIvF,KAAKy9E,yBAAyB/lE,GAAO,CACvCvc,SAAAA,GAaF6E,KAAKmrC,kBAAkBv0B,iBAAiBX,GAAWjR,MAAMiR,IACpDyB,IAAQxK,EAAW+I,IACpB9a,EAASyG,QAAO,EAAAiW,EAAA,GAAU,+BAG5B1c,EAAS8G,QAAQgU,KAChB9a,EAASyG,QAId,OAAO2D,EAAEpK,SAAS6J,MAAMiR,IACtBypE,EAAkBx0C,eAAiBj1B,KAIhC0pE,cAAcjxC,GACnB,QAAS1uC,KAAKq9E,iBAAiB3uC,GAG1BkxC,YAAYlxC,GACjB,OAAO1uC,KAAKq9E,iBAAiB3uC,GAGxBmxC,UAAUnxC,GACf,OAAO1uC,KAAKs9E,eAAe5uC,GAGrBoxC,iBAAiBpM,GACvB,IAAIlnE,EAeJ,MAdgB,gCAAbknE,GACDlnE,EAAUxM,KAAK69E,cACfnK,EAAW,iBACU,eAAbA,GAA8B1tE,IAAiBimC,kBAGlC,4BAAbynC,GACRlnE,EAAUxM,KAAK49E,cACflK,EAAW,oBACU,cAAbA,GAA6B1tE,IAAiB+5E,oBACtDvzE,EAAUxM,KAAKm+E,YACfzK,EAAW,cAPXlnE,EAAUxM,KAAKk+E,YACfxK,EAAW,aASN,CAACA,SAAAA,EAAUlnE,QAAAA,GAGZwzE,yBAAyBC,EAAqBxsE,EAAc2hB,GAClE,MAAM8qD,EAAqB,GAC3B,IAEEC,EAFEx2D,EAASs2D,EACTG,EAAyCz+E,QAAQM,UAErD,GACEk+E,GAAgB,SAChBD,EAAQ5/E,KAAK,CAACqpB,OAAAA,EAAQy2D,aAAAA,EAAcD,cAAAA,IACpCC,EAAeD,EACfx2D,GAAUyL,QACJzL,EAASlW,GAEjB,OAAOysE,EAGF/uE,SAAS/T,G,QACd,MAAMqW,EAAmB,QAAZ,EAAArW,EAAQqW,YAAI,QAAI,GACvB,KAACnL,EAAI,SAAErK,GAAYb,EACzB,IAAI,WAACmC,GAAcnC,EAChBmC,IAAe+8E,OAChBt8E,KAAKG,IAAIb,MAAM,4BAA6BlC,GAC5CmC,OAAauL,GAGf,MAAMu1E,EAAmBjjF,EAAQs2E,SAC3B4M,EAAgBtgF,KAAK8/E,iBAAiBO,IACtC,QAAC7zE,GAAW8zE,EAClBljF,EAAQs2E,SAAW4M,EAAc5M,UAAY,aAE7C,MAAMhlC,GAAW,EAAA6xC,GAAA,GAA+BnjF,GAC1CojF,EAAgBjhF,GAAa,EAAAghF,GAAA,GAA+B,OAAD,yBAAK,EAAAl1D,GAAA,GAAKjuB,IAAQ,CAAEmC,gBAAYuL,KAAc4jC,EACzGyuC,EAA4Bn9E,KAAK8+E,iBACjC1B,EAA+B79E,EAAaS,KAAKo9E,qBAAkBtyE,EACzE,IAAI3P,EAA4BoE,OAAauL,EAAY9K,KAAKq9E,iBAAiB3uC,GAI/E,GAFA1uC,KAAKyI,OAASzI,KAAKG,IAAI,eAAgBuuC,EAAUtxC,GAE9CjC,EACD,OAAOA,EAuBT,MAAMslF,EAAe,CAACl9C,EAA4BjkC,KAChD,KAAGikC,MAAAA,OAAI,EAAJA,EAAMjkC,OAIT,IAAI,MAAM82B,KAAKsqD,EACVn9C,GAAQA,IAASnN,IAIpBA,EAAE92B,MAAQA,EACV82B,EAAEj7B,SAASyG,OAAOtC,KAIhBhB,EAAK0B,KAAKugD,SACVnrB,EAAYh4B,EAAQg4B,WAAap1B,KAAKs/E,aAAa7rE,GAAM,GAE/D,IAEIktE,EACFC,EAHEjE,EAAkCQ,EAAaR,QAAQp+D,KAAK4+D,GAIhE,MAAMuD,EAAqC,GACrCG,EAAeptE,GAAQ2hB,EAIvB5B,EAAS,CAAC+P,EAA4BmL,KAC1C,MAAM,SAACvzC,GAAYooC,EACbu9C,EAAgBL,EAAaliE,KAAK,KAAMglB,GAE9CpoC,EAAS2hF,OAAS,IAAM3hF,EAASyG,QAAO,EAAAiW,EAAA,GAAU,sBAClD1c,EAASkT,OAAO/O,I,QACdwhF,EAAcxhF,GACO,QAArB,EAAW,QAAX,EAAAikC,EAAKw9C,cAAM,eAAEC,gBAAQ,oBACpBt9C,SAAQ,KACN1jC,KAAKq9E,iBAAiB3uC,KAAcvzC,UAC9B6E,KAAKq9E,iBAAiB3uC,UAGxBnL,EAAKw9C,UAId/gF,KAAKq9E,iBAAiB3uC,GAAYvzC,EAElCulF,EAASpgF,KAAKijC,IAQhB,GALG45C,KAAkBC,GAAmByD,GAAgB,QACtDF,EAAgBxD,EAAaP,eAAe4D,EAAeK,EAAczjF,EAAQs2E,UACjFlgD,EAAOmtD,EAAeH,IAGrBpD,EAAiB,CAClB,IAAI6D,EAAmB7jF,EAAQsxC,SAC/B,IAAIuyC,EAAkB,CACpBA,EAAmBT,EACnB,MAAMtiF,EAAMksC,GAAwBhtC,EAAQs2E,UACzCx1E,IACD+iF,GAAoB,IAAM/iF,GAI9B0iF,EAAmBxD,EAAgBR,eAAe,CAChDluC,SAAUuyC,EACV1hF,WAAAA,EACAkU,KAAMotE,IAERrtD,EAAOotD,EAAkBlyC,GAEtBiyC,GACDC,EAAiBzlF,SAASkT,OAAO5E,GAAQk3E,EAAcxlF,SAASyG,OAAO6H,KAW3EtO,EAAqC,QAA1B,EAAAylF,MAAAA,OAAgB,EAAhBA,EAAkBzlF,gBAAQ,QAAIwlF,EAAcxlF,SAEpDiiF,GAAmB5wE,IACpBmwE,EAAUS,EAAgBT,QAAQp+D,KAAK6+D,IAGzCT,EAAQ6D,GAAex7E,MAAWswB,GAAe,mCAY/C,GAXA4pD,IAWG0B,EAAkB,CACnB,MAAMG,EAASH,EAAiBG,OAASH,EAAiB7D,YAC1DmC,IAEA,MAAMh0E,QEjmBC,SAA8BoqB,GAC3C,OAAO0mD,GAAsB1mD,GAAMtwB,MAAMoE,GAAW,IAAIG,WAAWH,KFgmB3C83E,CAAqB5rD,GACvC4pD,UACM6B,EAAOxE,MAAMrxE,GACnBg0E,IAEA0B,EAAiBzlF,SAAS8G,cAAc8+E,EAAOr3B,YAG9Ci3B,GACDA,EAAcxlF,SAAS8G,QAAQqzB,QAEhCjnB,OAAY5E,GAAkB,mCAC/B,GAAGrM,EAAQkwC,UAET,YADAmzC,EAAa,KAAMh3E,GAIrBi3E,EAASx9E,SAASkzB,IAChBA,EAAE2qD,OAAS3qD,EAAE2mD,eAGf,MAEMoE,EAA2B,yBAAfljF,EAASI,EACrB+iF,GAAeD,EAAYnhF,KAAKi/E,mBAAqBj/E,KAAK+uC,iBAAiBxwB,KAAKve,MAEnFmhF,QAAkCr2E,IAArB9K,KAAKo+E,oBACbp+E,KAAKgU,WAAWoZ,YACtB8xD,KAGF,MAAMgB,EAAUlgF,KAAKggF,yBAAyB,EAAGvsE,EAAM2hB,GAEjDi4B,EAAqB,CAACG,KAAM,EAAG7jC,OAAQ,EAAG8jC,MAAOh6C,EAAMi7B,SAAAA,GACvD2yC,EAAmB,KACvB,IACEnC,IACA7xB,EAASG,KAAOA,EAChBxtD,KAAK4c,UAAUhW,cAAc,oBAAqBymD,GAClD,MAAM5jD,MAGJ63E,GAA4B,EAAAne,GAAA,GAASke,EAAkB,IAAI,GAEjE,IAAI7zB,EAAO,EACX,MAAM+zB,EAAa,IAAW,mCAC5B,MAAM,OAAC53D,EAAM,aAAEy2D,EAAY,cAAED,GAAiBD,EAAQ5xE,QACtD,IACE4wE,IAEoBp6E,YAAYC,MAAhC,MACM3C,QAAeg/E,EAAY94E,EAAMrK,EAAiB0rB,EAAQyL,EAAW92B,EAAIlB,EAAQiwC,QAAS6xC,GAG1F/xE,GAFcrI,YAAYC,MAElB3C,EAAO+K,OAElB+yE,EAAQ/hF,QACTojF,IAGF,MAAM72E,EAAayC,EAAMzC,WACzB1K,KAAKyI,OAASzI,KAAKG,IAAI,uCAAwCuuC,EAAUtsC,GACzE,MAAMo/E,EAAW73D,EAASyL,GAAc3hB,IAAS/I,EACjD,GAAGA,EAAY,CACb8iD,GAAQ9iD,EAEL82E,EACDH,IAEAC,IAGqBx8E,YAAYC,YAC7Bq7E,EACNlB,IACuBp6E,YAAYC,MAEtBD,YAAYC,YACnBpD,QAAQ8Q,IAAIiuE,EAASt8E,KAAI,EAAE28E,OAAAA,KAAYA,MAAAA,OAAM,EAANA,EAAQxE,MAAMpvE,EAAOwc,MAClEu1D,IAUF,GANGsC,KACG/tE,GAAQ+5C,EAAO/5C,IACjBitE,EAASx9E,SAAQ,EAAE69E,OAAAA,MAAW,MAAC,OAAY,QAAZ,EAAAA,MAAAA,OAAM,EAANA,EAAQz4C,YAAI,sBAAGklB,MAI/Cg0B,GAAWh1E,EAAS,CACrB,MAAMwc,EAAW03D,EAChBliF,QAAO,EAAEuiF,OAAAA,MAAYA,MAAAA,OAAM,EAANA,EAAQU,WAAYV,EAAOW,eAChDt9E,KAAI,EAAO28E,OAAAA,KAAY,mCACtB,MAAM5zE,EAAQ4zE,EAAOU,WACfE,QAAwBn1E,EAAQW,EAAOqzE,GAC7CO,EAAOW,aAAaC,cAGhBhgF,QAAQ8Q,IAAIuW,GAClBk2D,IAKF,GAFAiB,EAAcl+E,UAEXu/E,EAAS,CACV,MAAM/E,EAAgBjvB,GAAQ,KAC9BkzB,EAASx9E,SAASqgC,IAChB,MAAM,SAACpoC,EAAQ,OAAE4lF,GAAUx9C,EAC3B,GAAGpoC,EAASkX,aAAelX,EAASmX,aAAeyuE,EACjD,OAGF,MAAM3+E,EAAS2+E,EAAOr3B,SAAS+yB,GAC/BthF,EAAS8G,QAAQG,OAGrB,MAAMqH,GACNg3E,EAAa,KAAMh3E,OAIvB,IAAI,IAAI5D,EAAI,EAAG1H,EAASohB,KAAKC,IApGT2lD,EAAAA,EAoG0B+a,EAAQ/hF,QAAS0H,EAAI1H,IAAU0H,EAC3E07E,SAEDlzE,MAAM+8C,GAAA,GAET,MAAM8zB,EAAc,KAClB,GA/M2BwB,EAASruC,QAAO,CAACC,EAAK/O,IAAS+O,MAAS/O,EAAKjkC,OAAO,KA+MvDohF,EAASviF,OAC/B,MAAMuiF,EAAS,GAAGphF,OAItB,OAAOnE,EAGFoyC,cAAcnwC,GACnB,IAAI,MAACkb,EAAK,MAAE00B,GAAS5vC,EACrB,MAAMwuD,EAAsB,UAAZtzC,EAAMja,EACtB,GAAGutD,IAAY5e,EACb,OAAOrrC,QAAQC,OAAO,4BAIxB,MAAM8pD,EAAyB,aAAZpzC,EAAMja,EAEtBqtD,EAAYpzC,EAAQtY,KAAKgzC,eAAe7F,OAAQ70B,EAA4Bha,IACvEstD,IAAStzC,EAAQtY,KAAKs4C,iBAAiB0W,SAAU12C,EAAsBha,KAE/E,MAAM,SAACowC,EAAQ,gBAAExZ,IAAmB,EAAA0sD,GAAA,GAAwBxkF,GAE5D,IAAI0M,EAAU9J,KAAK4/E,YAAYlxC,GAY/B,OAXI5kC,IACFA,EAAU9J,KAAKmR,SAAS+jB,GAErBw2B,IAAe1e,IAChBhtC,KAAK4c,UAAUhW,cAAc,uBAAyB0R,EAA4Bha,IAClFwL,EAAQuE,MAAM+8C,GAAA,GAAM1nB,SAAQ,KAC1B1jC,KAAK4c,UAAUhW,cAAc,sBAAwB0R,EAA4Bha,SAKhFwL,EAGF+3E,iBAAiBzkF,GACtB,MAAM,MAACkb,EAAK,MAAE00B,GAAS5vC,EAEvB,IAAIkxC,EAAetuC,KAAK2qC,cAAcmC,gBAAgBx0B,EAAc00B,MAAAA,OAAK,EAALA,EAAOvtC,MAC3E,QAAIutC,GAASsB,EAAaK,aAAe,SAAU3B,EAAQA,EAAMv5B,KAAO,KAAe66B,EAAalvC,IAC3FuC,QAAQM,QAAQqsC,EAAalvC,KAG/BY,KAAKutC,cAAcnwC,GAAS4H,MAAMswB,IACvC,IAAIgZ,EAAaK,YAAcL,EAAaK,WAAarZ,EAAK7hB,KAAM,CAClE,MAAMrU,EAAMm2B,IAAIC,gBAAgBF,GAChCgZ,EAAetuC,KAAK2qC,cAAcoC,mBAAmBz0B,EAAcg2B,EAAa7uC,KAAML,EAAKk2B,EAAK7hB,MAGlG,OAAO66B,EAAalvC,OAIjB0iF,kBAAkB1kF,GACvB,OAAO4C,KAAKutC,cAAcnwC,GAAS4H,KAAKomD,GAAA,GAGlCrnD,OAAO2qC,GAEb,cADO1uC,KAAKq9E,iBAAiB3uC,GACtB1uC,KAAK8+E,iBAAiB/6E,OAAO2qC,GAG/Bt9B,QAAO,KAACmqB,EAAI,SAAEmT,IACnBA,IAAAA,GAAa,EAAAme,GAAA,GAAqBtxB,IAElC,MAAMwmD,EAAWxmD,EAAK9nB,KAChBuuE,EAAYD,GAAY,SACxBE,EAAWjiF,KAAKs/E,aAAayC,GAAU,GACvCtD,EAAcz+E,KAAKo/E,SAAS6C,GAC5BC,EAAa3iE,KAAK+mB,KAAKy7C,EAAWE,GAClCE,GAAS,UACTC,EAA6B,CACjC/jF,EAAG2jF,EAAY,eAAiB,YAChC1jF,GAAI6jF,EACJE,MAAOH,EACPjiF,KAAMyuC,EACN4zC,aAAc,IAGVnnF,GAAW,SACjB,GAAG+mF,EAAaliF,KAAK09E,eAEnB,OADAviF,EAASyG,QAAO,EAAAiW,EAAA,GAAU,iBACnB1c,EAGT,IAAI6jF,GAAW,EAAOuD,GAAW,EAC7B9B,EAAgBnhF,IACC,qBAAhBA,MAAAA,OAAK,EAALA,EAAOG,OACRO,KAAKG,IAAIb,MAAM,WAAYA,GAG7BnE,EAASyG,OAAOtC,GAChB0/E,GAAW,EACXyB,EAAer1B,GAAA,GAGjB,MAAMniD,EAAS+4E,EAAY,yBAA2B,sBAChD1jF,EAAK0B,KAAKugD,SAEVxvB,EAAO/wB,KAuCPwiF,EAtCN,YACE,IAAIC,EAAQ,EAAGC,EAAY,EAC3B,IAAI,IAAI/4D,EAAS,EAAGA,EAASo4D,EAAUp4D,GAAUs4D,EAAU,CACzD,MAAMllC,EAAO0lC,UACP1xD,EAAKytD,gBAAgB,SAAUlgF,GAAI,IAAW,mCAClD4gF,IAEA,MAAM5pD,EAAOiG,EAAK3zB,MAAM+hB,EAAQA,EAASs4D,GACnC74E,QAAe4yE,GAAsB1mD,GAK3C,OAJA4pD,IAEAnuD,EAAKtoB,OAASsoB,EAAK5wB,IAAI,2BAA4B6hF,EAAWjlC,EAAM3zC,EAAOsB,WAAY,IAAInB,WAAWH,GAAQjL,OAAQ,IAAIoL,WAAWH,GAAQxB,QAAQzJ,QAE9I4yB,EAAK/c,WAAWC,UAAUhL,EAAQ,CACvC05E,QAASR,EACTS,UAAW7lC,EACX8lC,iBAAkBX,EAClB/0E,MAAO/D,GACC,CACR05E,YAAY,IACX99E,MAAK,KACN,GAAGg6E,EACD,SAGA0D,EACF,MAAMr1B,EAAqB,CAACG,KAAMk1B,EAAYT,EAAUt4D,OAAAA,EAAQ8jC,MAAOs0B,EAAUrzC,SAAAA,GACjFvzC,EAASk0C,OAAOge,GAEbq1B,GAAaR,IACd/mF,EAAS8G,QAAQmgF,GACjBG,GAAW,KAEZ9B,OACFhC,GAAapwE,MAAMoyE,IAIfsC,GACLv2E,EAAU,KACd,GAAGwyE,EAAU,OACb,MAAMz5E,EAAIi9E,EAAGhnF,OACV+J,EAAEioD,MAAQwxB,GACZz5E,EAAEhB,MAAwBS,KAAKwH,IAIlC,IAAI,IAAI3G,EAAI,EAAG1H,EAASohB,KAAKC,IADT2lD,EAAAA,EAC0B+c,GAAar8E,EAAI1H,IAAU0H,EACvE2G,IAGF,MAAM0yE,EAAc,KAClB,GAAGF,EACD,MAAM,EAAAnnE,EAAA,GAAU,oBAqBpB,OAjBA1c,EAAS2hF,OAAS,KACZkC,GAAauD,IACfvD,GAAW,EACXyB,GAAa,EAAA5oE,EAAA,GAAU,sBAI3B1c,EAASk0C,OAAUge,IACjBrtD,KAAK4c,UAAUhW,cAAc,oBAAqBymD,IAGpDlyD,EAASuoC,SAAQ,KACZ1jC,KAAKs9E,eAAe5uC,KAAcvzC,UAC5B6E,KAAKs9E,eAAe5uC,MAIxB1uC,KAAKs9E,eAAe5uC,GAAYvzC,G,qCG93B5B,MAAe6nF,WAA0BlwE,EAwBtDhT,cACEsG,QAvBM,KAAA6O,OAA0C,GAC1C,KAAAguE,yBAEJ,GACI,KAAAC,kBAEJ,GACI,KAAAC,qBAUJ,GAOFnjF,KAAKojF,mBAAqB,EAKrB7tE,QAAQC,GAEb,OAAOxV,KAAKqjF,YAAY7tE,EAAKlX,IAKxBusD,eAA8C5hD,EAAWoL,EAAkC,GAAIjX,EAA4B,IAChI,IAAI+wD,EAAI/wD,EAOR,OANA+wD,EAAEm1B,qBAAuB,MAAOtjF,KAAKojF,mBAErCj1B,EAAI,OAAH,UAAO/wD,GACPA,EAAsB+Q,UAAYggD,EAAEm1B,qBAG9BtjF,KAAKiU,UAAUhL,EAAQoL,EAAQ85C,GAGjCngB,kBAAoDmgB,G,QASjD,QAAR,EAAAA,EAAE95C,cAAM,QAAR85C,EAAE95C,OAAW,IACJ,QAAT,EAAA85C,EAAE/wD,eAAO,QAAT+wD,EAAE/wD,QAAY,IAGd,MAAM,OAACiX,EAAM,QAAEjX,EAAO,OAAE6L,EAAM,UAAEmlB,GAAa+/B,EAEvCo1B,EAAY5jF,KAAKC,UAAUyU,GACjC,IAAI8U,EAaJ,OAZGnpB,KAAKiV,OAAOhM,KACbkgB,EAASnpB,KAAKiV,OAAOhM,GAAQs6E,GAC1Bp6D,IACEiF,UACMpuB,KAAKiV,OAAOhM,GAAQs6E,GAC3Bp6D,OAASre,GAERuJ,EAAeqpB,KAAOvU,EAAOuU,OAK7B19B,KAAKs9B,uBAA6B,CACvCr0B,OAAAA,EACAs0B,cAAgBn7B,IACd,GAAGA,EAAO/D,EAAEotB,SAAS,eAEnB,OAAOtC,EAAO/mB,OAGhB,GAAGA,EAAOs7B,KAA+B,CACvC,MAAMA,EAAOt7B,EAAOs7B,KAEhB19B,KAAKiV,OAAOhM,KAASjJ,KAAKiV,OAAOhM,GAAU,IAC/CjJ,KAAKiV,OAAOhM,GAAQs6E,GAAa,CAC/B7lD,KAAAA,EACAt7B,OAAAA,GAIJ,OAAG+rD,EAAE5wB,cACI4wB,EAAE5wB,cAAcn7B,GAGlBA,GAETiS,OAAAA,EACAjX,QAAAA,IAIGixB,gBAA+CplB,EAAWoL,EAAkC,GAAWjX,EAA4B,IACxI,MAAMgrC,EAAIn/B,EAAS,IAAMtJ,KAAKC,UAAUyU,GAClCsgE,EAAQ30E,KAAKkjF,kBACnB,OAAGvO,EAAMvsC,GACAusC,EAAMvsC,GAGRusC,EAAMvsC,GAAKpoC,KAAKiU,UAAUhL,EAAQoL,EAAQjX,GAASsmC,SAAQ,YACzDixC,EAAMvsC,MAIV9K,uBAAyD6wB,G,UAOtD,QAAR,EAAAA,EAAE95C,cAAM,QAAR85C,EAAE95C,OAAW,IACJ,QAAT,EAAA85C,EAAE/wD,eAAO,QAAT+wD,EAAE/wD,QAAY,IAEd,MAAM,OAAC6L,EAAM,cAAEs0B,EAAa,aAAEutC,EAAY,OAAEz2D,EAAM,QAAEjX,GAAW+wD,EACzDwmB,EAAQ30E,KAAKijF,yBACbO,EAAWpmF,EAAQomF,UAAY7jF,KAAKC,UAAUyU,GAC9CjQ,EAAmB,QAAb,EAAAuwE,EAAM1rE,UAAO,QAAK0rE,EAAM1rE,GAAU,IAAI2I,IAC5C6xE,EAAar/E,EAAIM,IAAI8+E,GAC3B,GAAGC,EACD,OAAOA,EAGT,MAAMC,EAAgB,KACpB,MAAM55E,EAAU1F,EAAIM,IAAI8+E,GACxB,OAAO15E,IAAYssB,OAAItrB,EAAYhB,GAI/B65E,EADkB3jF,KAAKiU,UAAUhL,EAAQoL,EAAQjX,GACC4H,MAAM5C,GACrDshF,KAAmBnmD,EAAcn7B,KACtC9C,IACF,MAAMwK,EAAU45E,IAChB,GAAG55E,EACD,OAAOA,EAGT,IAAIghE,EACF,MAAMxrE,EAGR,OAAOwrE,EAAaxrE,MAGhB82B,EAAIutD,EAAWjgD,SAAQ,KACxBt/B,EAAIM,IAAI8+E,KAAcptD,IAIzBhyB,EAAIL,OAAOy/E,GACPp/E,EAAIqP,aACCkhE,EAAM1rE,OAKjB,OADA7E,EAAIgE,IAAIo7E,EAAUptD,GACXA,EAGFyH,mBAAkD50B,EAAWoL,EAAkC,GAAWjX,EAAiF,I,MAChM,MAAMu3E,EAAyC,QAAjC,EAAA30E,KAAKmjF,qBAAqBl6E,UAAO,QAAKjJ,KAAKmjF,qBAAqBl6E,GAAU,GAClFs6E,EAAY5jF,KAAKC,UAAUyU,GAC3BkvB,EAAOoxC,EAAM4O,GACnB,GAAGhgD,KAAUnmC,EAAQwzB,WAAa2S,EAAK68B,WACrC,OAAO78B,EAAKz5B,QAYd,IAAI3E,EATD/H,EAAQwzB,WACN2S,GAAQA,EAAKp+B,UACdD,aAAaq+B,EAAKp+B,gBACXo+B,EAAKp+B,gBAGP/H,EAAQwzB,UAIdxzB,EAAQ0gC,eACT34B,EAAU6J,EAAA,cAAe,YAChB2lE,EAAM4O,KACW,IAAvBnmF,EAAQ0gC,qBACJ1gC,EAAQ0gC,cAGjB,MAAMh0B,EAAU9J,KAAKiU,UAAUhL,EAAQoL,EAAQjX,GAU/C,OARAu3E,EAAM4O,GAAa,CACjBznD,UAAWntB,KAAK5J,MAChBq7D,WAAW,EACXj7D,QAAAA,EACA2E,QAAAA,EACAuK,OAAAA,GAGKvK,EAGFouB,WAA0CjvB,EAAW+sD,GAC1D,MAAM2e,EAAQ30E,KAAKmjF,qBAAqBl6E,GACxC,GAAG0rE,EACD,IAAI,MAAM4O,KAAa5O,EAAO,CAC5B,MAAMpxC,EAAOoxC,EAAM4O,GACnB,IACKvtB,EAAOzyB,EAAKlvB,UACVkvB,EAAKp+B,SACND,aAAaq+B,EAAKp+B,gBAGbwvE,EAAM4O,IAEf,MAAM95E,MAOP2jB,UAAUgB,GACf,OAAGpuB,KAAKiyD,SAAW7jC,EACVpuB,KAAKiyD,OAGPjyD,KAAKs9B,uBAAuB,CACjCr0B,OAAQ,iBACRoL,OAAQ,GACRkpB,cAAgB00B,IACdjyD,KAAKiyD,OAASA,EACdjyD,KAAK4c,UAAUhW,cAAc,SAAUqrD,GAChCA,GAET70D,QAAS,CAACgxB,UAAAA,KAIP4wC,aAAa5wC,GAClB,OAAGpuB,KAAK++D,YAAc3wC,EACbpuB,KAAK++D,UAGP/+D,KAAKs9B,uBAAuB,CACjCr0B,OAAQ,oBACRoL,OAAQ,GACRkpB,cAAgB00B,I,M3CzQmBr6B,E2C6QjC,OAHA53B,KAAK++D,UAAY9M,E3C1QgBr6B,E2C2QyB,QAAjC,EAAAq6B,EAAO2xB,kCAA0B,QAAI,G3C1QpElsD,GAAOrzB,QACPuzB,EAAQ10B,SAAS+vB,IACfyE,GAAOnhB,IAAI0c,M2CyQPjzB,KAAK4c,UAAUhW,cAAc,aAAcqrD,GACpCA,GAET70D,QAAS,CAACgxB,UAAAA,KAIPS,SAASpvB,EAAoBiH,GAClC,OAAO,EAAAwmE,EAAA,GAAYltE,KAAKg/D,gBAAiBD,IAUvCr4D,MAAAA,IAAAA,EAAc1G,KAAK4c,UAAUrW,SAGtBw4D,EAZuE,CAC5E8kB,IAAK,CAAC,+BAAgC,gCACtCC,UAAW,CAAC,sCAAuC,uCACnDxpE,QAAS,CAAC,+BAAgC,gCAC1C05D,cAAe,CAAC,+BAAgC,gCAChDl3C,UAAW,CAAC,6BAA8B,8BAC1CinD,IAAK,CAAC,6BAA8B,+BAKtBtkF,GAAMiH,EAAY,EAAI,Q,sTC9PrC,MAAMs9E,WAAmBhB,GA8B9BljF,cACEsG,QACApG,KAAKG,KAAM,EAAAyI,EAAA,IAAO,OAElB5I,KAAKikF,iBAAmB,GACxBjkF,KAAKkkF,oBAAsB,GAC3BlkF,KAAKmkF,kBAAoB,GACzBnkF,KAAKokF,SAAW,EAChBpkF,KAAKqkF,oBAAsB,GAE3BrkF,KAAK+Q,cAAgB,cAGrB,mBAAqC,aAAcA,IACjD/Q,KAAKskF,oBAAoBvzE,MAKnB4L,QACR3c,KAAK6d,kBAAkBC,2BAA2B,CAChDymE,aAAc,KACZvkF,KAAKotB,WAAU,GACfptB,KAAKg/D,cAAa,MAItBh/D,KAAK4c,UAAUpW,iBAAiB,aAAa,KACxCxG,KAAKiyD,QACNjyD,KAAK6d,kBAAkBiU,mBAAmB,CAACzzB,EAAG,oBAIlD2B,KAAK4c,UAAUpW,iBAAiB,kBAAmBE,IACjD1G,KAAKwkF,mBAAkB,EAAE36E,UAAAA,EAAWkG,eAAAA,EAAgBzH,KAAAA,EAAMyI,cAAAA,MACxD,GAAsB,WAAnBhB,GAAiD,cAAlBgB,EAChC,OAGF,MAAMQ,EAAY1H,EAAU0H,UAC5B,GAAIA,GAKJ,GAAIA,EAA4B3D,WAAY,CAC1C,MAAMxO,EAAM4Q,EAA8B1H,EAAMyH,EAAgBrJ,GAC/D6K,EAA4BhC,UAAUnQ,SANvCY,KAAKG,IAAIb,MAAM,0BAA2BuK,SA+B1C46E,iBAAiB10E,GAUvB,OAHqC/P,KAAK+Q,cAMpCyzE,kBAAkB5/E,GACxB,IAAI,MAAMmM,KAAiB/Q,KAAKikF,iBAAkB,CAChD,MAAMS,EAAc1kF,KAAKikF,iBAAiBlzE,GAC1C,IAAI,MAAMhB,KAAkB20E,EAAa,CACvC,MAAMC,EAAMD,EAAY30E,GACxB,IAAI,MAAMzH,KAAQq8E,EACGA,EAAIr8E,GACZpF,SAAQ,CAAC2G,EAAWrF,EAAK0G,KAClCtG,EAAS,CACPiF,UAAAA,EACAvB,MAAOA,EACPyH,eAAgBA,EAChBgB,cAAeA,EACf5P,MAAOqD,EACPogF,MAAO15E,SAQX4F,aAAaxI,EAAYyH,EAAgCgB,GAC/D,OAAO/Q,KAAK+R,eAAejB,aAAaxI,EAAMyH,EAAgBgB,EAAkC,WAAnBhB,EAA6B/P,KAAK4c,UAAUrW,SAGpH+9E,oBAAoBvzE,GACzB,MAAM8zE,EAAmB7kF,KAAK+Q,cAC9B,GAAG8zE,IAAqB9zE,EACtB,OAGF/Q,KAAKG,IAAI,0BAA2B0kF,EAAkB,KAAM9zE,GAE5D,MAAM+zE,EAAY9kF,KAAKikF,iBAAiBY,GAClC7sE,EAAYhY,KAAKikF,iBAAiBlzE,GACxC/Q,KAAKikF,iBAAiBlzE,GAAiB+zE,EACvC9kF,KAAKikF,iBAAiBY,GAAoB7sE,EAE1ChY,KAAK+Q,cAAgBA,EAErB,IAAI,MAAMg0E,KAAa/kF,KAAKmkF,kBAAmB,CAC7C,MAAMr6E,EAAU9J,KAAKmkF,kBAAkBY,UAChC/kF,KAAKmkF,kBAAkBY,GAE9B,MAAMC,EAAYD,EAAUtnF,QAAQonF,EAAkB9zE,GACtD/Q,KAAKmkF,kBAAkBa,GAAal7E,EAEpC9J,KAAKG,IAAI,gCAAiC4kF,EAAW,KAAMC,GAG7DhlF,KAAKwkF,mBAAmBS,IACtB,MAAMl0E,EAAgB/Q,KAAKykF,iBAAiBQ,EAAKl1E,gBAC3CwB,EAAYvR,KAAK8Q,aAAam0E,EAAK38E,KAAM28E,EAAKl1E,eAAgBgB,GACpE/Q,KAAKklF,yBAAyBD,EAAKp7E,UAAW0H,MAIrC4zE,c,0CACX,GAAGnlF,KAAKokF,SACN,OAAOpkF,KAAKokF,SAGd,MAAMA,QAAiBgB,GAAA,MAAmB,MAS1C,OARIplF,KAAKokF,WACHA,EAGFpkF,KAAKokF,SAAWA,EAFhBpkF,KAAKqlF,YAAY,eAMdrlF,KAAKokF,YAGDf,YAAYiC,G,0CAOvB,GANwB,iBAAf,GAAgD,iBAAf,IACxCA,EAAW,CAACC,KAAM,EAAG1jE,KAAMlT,KAAK5J,MAAQ,IAAO,EAAGzG,GAAIgnF,EAAS7+E,UAAS,KAG1EzG,KAAK4c,UAAUhW,cAAc,YAAa0+E,IAEtCA,EAASC,KAAM,CACjB,MAAMnB,QAAiBpkF,KAAKmlF,cAC5BG,EAASC,KAAOnB,EAGlBgB,GAAA,MAAmB,CACjBI,UAAWF,OAMRD,YAAY/8E,GACjB,MAAMm9E,EAAUzlF,KAAKokF,SAClBqB,GACDzlF,KAAK0lF,aAAaD,GAASzgF,MAAM6E,IAC/B7J,KAAK2lF,mBAAmB97E,MAI5B7J,KAAKokF,SAAW97E,EAEhB88E,GAAA,MAAmB,CACjBQ,GAAI5lF,KAAKokF,WAIAyB,S,0CACX,GAAG7lF,KAAK8lF,WACN,OAGF9lF,KAAK8lF,YAAa,EAClB,MAAMC,EAAgC,GAGtC,IAAI,IAAIz9E,EAAO,EAAGA,GAAQ,EAAGA,IAC3By9E,EAAYzlF,KAFC,KAEagI,EAAO,aAInC,MAAM09E,QAAsBrkF,QAAQ8Q,IAAIszE,EAAY3hF,KAAKmD,GAAQ69E,GAAA,MAAmB79E,MAE9E0+E,EAAiC,GACvC,IAAI,IAAIpgF,EAAI,EAAGA,EAAImgF,EAAc7nF,OAAQ0H,IACpCmgF,EAAcngF,IACfogF,EAAe3lF,KAAKN,KAAKiU,UAAU,cAAe,GAAI,CAAC3L,KAAOzC,EAAI,EAAYqgF,cAAc,KAIhG,MAAM7hF,EAAQ,IAAW,mCACvBrE,KAAKokF,cAAWt5E,QAEV,EAAAq7E,GAAA,IAAe,GAAO,GAC5B,sBACAnmF,KAAK4c,UAAUhW,cAAc,kBAO/B,OAJA7E,WAAWsC,EAAO,KAIX1C,QAAQ8Q,IAAIwzE,GAAgB53E,OAAO/O,IACxCA,EAAMyqD,SAAU,KACfrmB,QAAQr/B,MAKL+hF,wBAAwB99E,EAAYyI,EAA8BhB,GACxE,MAAO,CAACzH,EAAMyI,EAAehB,GAAgBrR,KAAK,KAG7CgnF,aAAap9E,EAAYlL,EAA4B,IAC1D,MAAM2S,EAAiC3S,EAAQ+hF,aAAe,WAAc/hF,EAAQ0lF,WAAa,SAAW,SAGtG/xE,EAAgB/Q,KAAKykF,iBAAiB10E,GACxC/P,KAAKikF,iBAAiBlzE,KACxB/Q,KAAKikF,iBAAiBlzE,GAAiB,CACrCG,OAAQ,GACRC,SAAU,GACVC,OAAQ,KAIZ,MAAMujE,EAAQ30E,KAAKikF,iBAAiBlzE,GAAehB,GAC9CzH,KAAQqsE,IACXA,EAAMrsE,GAAQ,IAGhB,MAAM+9E,EAAa1R,EAAMrsE,GAEnBg+E,EAAmC,WAAnBv2E,GAAiD,UAAlBgB,EAA4B,EAAK/Q,KAAK4c,UAAUrW,QArSnE,EACA,EAqSlC,GAAG8/E,EAAWloF,QAAUmoF,EAAe,CACrC,IAAIzgF,EAAIygF,EAAgB,EAAGC,GAAQ,EACnC,KAAM1gF,GAAK,IAAKA,EACd,GAAGwgF,EAAWxgF,GAAG2gF,SAAU,CACzBD,GAAQ,EACR,MAIJ,MAAM18E,EAAYw8E,EAAWp8E,OAAOs8E,EAAQ1gF,EAAIygF,EAAgB,EAAG,GAAG,GAEtE,OADAD,EAAWpiE,QAAQpa,GACZlI,QAAQM,QAAQ4H,GAGzB,IAAIylC,EAAStvC,KAAKomF,wBAAwB99E,EAAMyI,EAAehB,GAC/D,GAAG/P,KAAKmkF,kBAAkB70C,GACxB,OAAOtvC,KAAKmkF,kBAAkB70C,GAGhC,MAAMm3C,EAAgB,KAAKn+E,aACrBssD,EAAmB,KAAKtsD,gBAE9B,IAAIiJ,EAAYvR,KAAK8Q,aAAaxI,EAAMyH,EAAgBgB,GACxD,OAAO/Q,KAAKmkF,kBAAkB70C,GAAU3tC,QAAQ8Q,IAAI,CAACg0E,EAAI7xB,GAAIxwD,KAAKmD,GAAQ69E,GAAA,MAAmB79E,MAC5FvC,MAAK,EAAO0hF,EAAYC,KAAmB,mCAC1C,IAAI98E,EAAyBvK,EAC7B,GAAGonF,GAAoC,MAAtBA,EAAWvoF,OAAgB,CACtCwoF,GAA0C,KAAzBA,EAAcxoF,SACjCwoF,EAAgB,oBAGlB,MAAMC,GAAU,EAAAC,GAAA,GAAaH,GACvBI,SAAmB,iBAA0B,OAAQF,IAAUh/E,OAAO,GACtEm/E,GAAa,EAAAF,GAAA,GAAaF,GAEhC98E,EAAY7J,KAAK+xC,iBAAiB2zC,aAAap9E,EAAMs+E,EAASE,EAAWC,EAAY3pF,QAErF,IACE,MAAMkY,QAAatV,KAAKgnF,WAAW1xE,KAAKhN,GAExC88E,GAAA,MAAmB,CACjB,CAACqB,GAAKv5E,EAAWoI,EAAKsxE,SACtB,CAAChyB,GAAK1nD,EAAWoI,EAAKyxE,cAGxBl9E,EAAY7J,KAAK+xC,iBAAiB2zC,aAAap9E,EAAMgN,EAAKsxE,QAAStxE,EAAKwxE,UAAWxxE,EAAKyxE,WAAY3pF,GACpG,MAAM6pF,GACN3nF,EAAQ2nF,EAKZ,MAAMC,EAAmBlnF,KAAKykF,iBAAiB10E,GAmB/C,GAlBGm3E,IAAqBn2E,IACtBu+B,EAAStvC,KAAKomF,wBAAwB99E,EAAM4+E,EAAkBn3E,GAC9DwB,EAAU5H,UACVwG,EAAeg3E,gBAAgBnnF,KAAK+R,eAAevB,cAAee,GAE/D1H,IACD0H,EAAYvR,KAAK8Q,aAAaxI,EAAMyH,EAAgBm3E,IAGtDlnF,KAAKG,IAAI,uDAAwD4Q,EAAe,KAAMm2E,WAOjFlnF,KAAKmkF,kBAAkB70C,GAE3BhwC,EAED,MADAU,KAAKG,IAAI,sBAAuBb,EAAQA,EAAgB8nF,OAClD9nF,EAMR,OAHAU,KAAKklF,yBAAyBr7E,EAAW0H,GACzC80E,EAAWpiE,QAAQpa,GACnB7J,KAAK2lF,mBAAmB97E,GACjBA,OAIJw9E,iBAAiB/+E,GACtB,OAAOtI,KAAK0lF,aAAap9E,GAAMtD,KAAKomD,GAAA,EAAMA,GAAA,GAGpC85B,yBAAyBr7E,EAAyB0H,GACxD,MAAM+1E,EAAez9E,EAAU0H,UAC5B+1E,GACDn3E,EAAeg3E,gBAAgBnnF,KAAK+R,eAAevB,cAAe82E,GAGpEz9E,EAAU09E,gBAAgBh2E,GAGpBi2E,iBAAiB39E,GACvB7J,KAAKG,IAAI,kBAAmB0J,EAAUvB,MACtCuB,EAAU49E,aAAU38E,EACpB9K,KAAKklF,yBAAyBr7E,GAC9BA,EAAUF,UACV3J,KAAK+xC,iBAAiB21C,gBAAgB79E,GACtCsG,EAAeg3E,gBAAgBnnF,KAAKikF,iBAAkBp6E,GAGjD87E,mBAAmB97E,GACrBA,EAAU49E,UAI0B59E,EAAU89E,gBAC/ChmF,QAAQM,SAAQ,GAChBjC,KAAKmlF,cAAcngF,MAAMo/E,GAAav6E,EAAUvB,OAAS87E,KAC9Cp/E,MAAM4iF,IACd/9E,EAAU49E,SAIVG,IACD/9E,EAAU49E,QAAU,IAAMznF,KAAKwnF,iBAAiB39E,GAChDA,EAAUg+E,sBAKTj0D,oBAAoBhvB,GACzB5E,KAAK8nF,iBAAmBljF,EACxB5E,KAAK+xC,iBAAiBne,oBAAoBhvB,GAGrCqP,UAAyChL,EAAWoL,EAAkC,GAAIjX,EAA4B,IAQ3H,MAAMjC,GAAW,SAEjB,IA4DImN,EAEAy/E,GA9DA,eAACt9B,EAAc,qBAAE64B,GAAwBlmF,EAO7C,GANGkmF,GACDnoF,EAAS6J,MAAK,YACLhF,KAAKqkF,oBAAoBf,MAIjC,KAAgB,CACjB,MAAM0E,EAAYr5E,KAAK5J,MACjBkjF,EAAWj5E,EAAA,eAAgB,KAC3B+4E,GAAoBA,EAAgBG,aACtCloF,KAAKG,IAAIb,MAAM,+BAAgC2J,EAAQoL,EAAQjX,EAAS,SAAUuR,KAAK5J,MAAQijF,GAAa,OAG7G,KAEH7sF,EAASkT,MAAM+8C,GAAA,GAAM1nB,SAAQ,KAC3BykD,cAAcF,MA8ClB,MAAMb,GAAQ,IAAKh8E,OAASg8E,OAAS,cAC/BgB,EAAiB,KACrB,GAAG39B,EAAgB,CACjB,MAAM9tC,EAAQ3c,KAAKqkF,oBAAoB55B,GACpC9tC,IACDvf,EAAQqtD,eAAiB9tC,EAAMxO,WAInC,MAAMrE,EAAUi+E,EAAgBM,YAAYp/E,EAAQoL,EAAQjX,GAS5D,OAPGkmF,IACDtjF,KAAKqkF,oBAAoBf,GAAwB,CAC/Cn1E,UAAY/Q,EAAsB+Q,UAClCrE,QAAS3O,IAIN2O,EAAQuE,OAAO/O,I,MAMpB,GAJkB,2BAAfA,EAAMG,MACPO,KAAKG,IAAIb,MAAM,QAASA,EAAMoW,KAAMpW,EAAMG,KAAMO,KAAKokF,SAAU97E,EAAMW,EAAQoL,GAG7D,MAAf/U,EAAMoW,MAAgB1V,KAAKokF,WAAa97E,EAOzC,KANkB,4BAAfhJ,EAAMG,OACP2lF,GAAA,SAAsB,MACtBA,GAAA,SAAsB,cAIlB9lF,EACD,GAAkB,MAAfA,EAAMoW,MAAgB1V,KAAKokF,UAAY97E,IAAStI,KAAKokF,SAAU,CACvE,QAAsCt5E,IAAnC9K,KAAKkkF,oBAAoB57E,GAAqB,CAC/C,MAAMwB,EAAU,IAAInI,SAAQ,CAAC2mF,EAAeC,KAC1CvoF,KAAKiU,UAAU,2BAA4B,CAACkhB,MAAO7sB,GAAO,CAACorB,YAAY,IAAO1uB,MAAMwjF,IAClFxoF,KAAKiU,UAAU,2BAA4B,CACzC3V,GAAIkqF,EAAalqF,GACjB6O,MAAOq7E,EAAar7E,OACnB,CAAC7E,KAAAA,EAAMorB,YAAY,IAAO1uB,KAAKsjF,EAAeC,KAChDA,MAGLvoF,KAAKkkF,oBAAoB57E,GAAQwB,EAGnC,OAAO9J,KAAKkkF,oBAAoB57E,GAAMtD,MAAK,IAAMojF,MAC5C,GAAkB,MAAf9oF,EAAMoW,KAWT,IAAkB,MAAfpW,EAAMoW,MAAuD,IAAvCpW,EAAMG,KAAKrD,QAAQ,gBAAuB,CACxE,MAAMqsF,GAAWnpF,EAAMG,KAAKhD,MAAM,yBAAyB,GAC3D,GAAGgsF,IAAYngF,EAEb,OADAlL,EAAQkL,KAAOmgF,EACRzoF,KAAKiU,UAAUhL,EAAQoL,EAAQjX,GAEtC,MAAMkC,EAEH,GAAkB,MAAfA,EAAMoW,MAA+B,0BAAfpW,EAAMG,KAEpC,OADAO,KAAK+xC,iBAAiB22C,wBACfN,IACF,GAAIhrF,EAAQurF,UAA2B,MAAfrpF,EAAMoW,KAQ9B,KAAItY,EAAQurF,UAAY,CAAC,kBAAmB,oBAAoBl9D,SAASnsB,EAAMG,MAAO,CAC3F,MAAMkd,EAAQ3c,KAAKqkF,oBAAoB55B,GAKvC,OAHAA,OAAiB3/C,SACV1N,EAAQqtD,eAEZ9tC,EAAcA,EAAM7S,QAAQ9E,MAAK,IAAMojF,MAC9BA,IACP,GAAIhrF,EAAQurF,UAA2B,MAAfrpF,EAAMoW,KAU9B,IAAkB,YAAfpW,EAAMG,MAAqC,4BAAfH,EAAMG,KAC1C,OAAO,EAAAyK,EAAA,GAAM,KAAMlF,MAAK,IAAMojF,MAE9B,MAAM9oF,EAb2C,CACjD,MAAMyF,EAAM4J,KAAK5J,MACjB,GAAG3H,EAAQ86C,UACNnzC,GAAO3H,EAAQ86C,SAChB,MAAM54C,EAKV,OADAlC,EAAQwrF,SAAWxrF,EAAQwrF,SAAWrpE,KAAKC,IAAI,GAAuB,IAAnBpiB,EAAQwrF,UAAkB,GACtE,EAAA1+E,EAAA,GAAyB,IAAnB9M,EAAQwrF,UAAiB5jF,MAAK,IAAMojF,OAzBA,CACjD,MAAMQ,GAAYtpF,EAAMG,KAAKhD,MAAM,qBAAqB,IAAM,EAE9D,GAAGmsF,GAAmC,QAAvB,EAAAxrF,EAAQyrF,uBAAe,QAAI,MAAQzrF,EAAQkmF,qBACxD,MAAMhkF,EAGR,OAAO,EAAA4K,EAAA,GAAqC,IAA/B0+E,GAAqC5jF,MAAK,IAAMojF,OA7BjC,CAC5B,MAAMK,GAAWnpF,EAAMG,KAAKhD,MAAM,yDAAyD,GAC3F,GAAGgsF,IAAYngF,EAOb,OANGlL,EAAQkL,KACTlL,EAAQkL,KAAOmgF,EAEfzoF,KAAKqlF,YAAYoD,GAGZzoF,KAAKiU,UAAUhL,EAAQoL,EAAQjX,QA+C9C,IAAIg5B,EAiBJ,OAfEA,GADC9tB,EAAQlL,EAAQkL,MAAQtI,KAAKokF,UAC1BpkF,KAAK0lF,aAAap9E,EAAMlL,GAExB4C,KAAKmlF,cAAcngF,MAAMo/E,GAAapkF,KAAK0lF,aAAap9E,EAAO87E,EAAUhnF,KAG/Eg5B,EAAEpxB,MAAM6E,IACNk+E,EAAkBl+E,EAClB,MAAMC,EAAUs+E,IAEhB,OADAL,EAAgBe,cAAc3tF,EAAUiC,GACjC0M,KAER9E,KAAK7J,EAAS8G,SACdoM,OA/J2B/O,GAAoB,mCAY9C,GAXIA,GAEO,EAAAsiB,GAAA,GAAStiB,KAClBA,EAAQ,CAACuC,QAASvC,IAFlBA,EAAQ,CAACG,KAAM,gBAKE,MAAfH,EAAMoW,MAA+B,oBAAfpW,EAAMG,MACd,MAAfH,EAAMoW,MAA+B,wBAAfpW,EAAMG,OAC7BO,KAAK6lF,SAGJzoF,EAAQ8oF,aACT,MAAM5mF,EAuBR,MApBkB,MAAfA,EAAMoW,OACPpW,EAAMyqD,SAAU,GAGd3sD,EAAQs2B,aACVp0B,EAAM66B,MAAQlxB,EACd3J,EAAM8nF,MAAQA,GAAU9nF,EAAMypF,eAAiBzpF,EAAMypF,cAAc3B,OAAU9nF,EAAM8nF,QAAS,IAAKh8E,OAASg8E,MAC1GrlF,YAAW,KACLzC,EAAMyqD,UACU,MAAfzqD,EAAMoW,MACP1V,KAAK6lF,SAKPvmF,EAAMyqD,SAAU,KAEjB,MAGCzqD,OA4HP+O,MAAMlT,EAASyG,QAETzG,GC7oBX,MAAM6tF,GAIJlpF,cAHQ,KAAAmpF,YAAiD,IAAIr3E,IACrD,KAAAs3E,cAAmD,IAAIt3E,IAG7D5R,KAAK6wB,cAAa,GAGVlU,QACR3c,KAAK4c,UAAUpW,iBAAiB,aAAa,KAC3CxG,KAAKklB,YAAYllB,KAAK0b,gBAAgB1E,OAAQ,WAI3CkO,YAAYlO,EAAgBzP,GACjC,IAAIa,EAAMpI,KAAKipF,YAAYvkF,IAAIsS,GAC5B5O,GAAOA,EAAIohB,IAAIjiB,KAIda,IACFA,EAAM,IAAIgO,IACVpW,KAAKipF,YAAY7gF,IAAI4O,EAAQ5O,IAG/BA,EAAImO,IAAIhP,GAERvH,KAAK4G,cAAc,aAAcoQ,IAG5B6O,YAAY7O,EAAgBzP,GACjC,MAAMa,EAAMpI,KAAKipF,YAAYvkF,IAAIsS,GAC7B5O,IAIJA,EAAIrE,OAAOwD,GAEPa,EAAIqL,OACNzT,KAAKipF,YAAYllF,OAAOiT,GACxBhX,KAAK4G,cAAc,eAAgBoQ,KAIhC8N,mBAAmB5M,EAAiC3Q,GACtDzG,MAAMmD,QAAQiU,KACfA,EAAU,IAAI9B,IAAI8B,IAGpB,IAAI9P,EAAMpI,KAAKkpF,cAAcxkF,IAAI6C,GACjC,GAAGa,EAAK,CACN,IAAI,MAAM4O,KAAU5O,EACf8P,EAAQsR,IAAIxS,KAIfhX,KAAK6lB,YAAY7O,EAAQzP,GACzBa,EAAIrE,OAAOiT,IAGb,IAAI5O,EAAIqL,OAASyE,EAAQzE,KAEvB,YADAzT,KAAKkpF,cAAcnlF,OAAOwD,GAK9B,GAAG2Q,EAAQzE,KAAM,CACXrL,IACFA,EAAM,IAAIgO,IACVpW,KAAKkpF,cAAc9gF,IAAIb,EAAKa,IAG9B,IAAI,MAAM4O,KAAUkB,EACf9P,EAAIohB,IAAIxS,KAIXhX,KAAKklB,YAAYlO,EAAQzP,GACzBa,EAAImO,IAAIS,KAKP+gB,aAAa/gB,GAClB,OAAOhX,KAAKipF,YAAYz/D,IAAIxS,IAQhC+X,GAAYi6D,GAAc,CAAC,IAAmBl2E,IAE9C,YCrFMq2E,GAAgB,KAIP,MAAMC,GAArB,cACU,KAAAC,YAA2B,GAE3B/5C,OAAOh3B,G,MACb,OAAOA,EAAMja,GAA0B,QAApB,EAAAia,EAAkBha,UAAE,QAAKga,EAAsBlZ,KAG7D0tC,gBAAgBx0B,EAA0BwlD,EAAoBqrB,I,YAKnE,MAAMxU,EAA2C,QAAtC,KAAG30E,KAAKqpF,aAAW,EAACrpF,KAAKsvC,OAAOh3B,WAAM,aAAM,GACvD,OAAsB,QAAtB,EAAOq8D,EAAM7W,UAAS,QAAf6W,EAAM7W,GAAe,CAACnvB,WAAY,EAAGvvC,IAAK,GAAIK,KAAMq+D,GAGtD/wB,mBAAmBz0B,EAA0BwlD,EAAoBqrB,GAAe/pF,EAAauvC,EAAqB,GACvH,MAAML,EAAetuC,KAAK8sC,gBAAgBx0B,EAAOwlD,GAGjD,OAFAxvB,EAAalvC,IAAMA,EACnBkvC,EAAaK,WAAaA,EACnBL,EAGF1D,mBAAmBtyB,EAA0BwlD,EAAoBqrB,IACtE,MAAMxU,EAAQ30E,KAAKqpF,YAAYrpF,KAAKsvC,OAAOh3B,IACxCq8D,UACMA,EAAM7W,IC1BnB,UAAgB,QAAU,CAAC,aAAe,CAAC,CAAC,GAAK,UAAU,UAAY,SAAS,OAAS,GAAG,KAAO,YAAY,CAAC,GAAK,SAAS,UAAY,QAAQ,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,KAAK,KAAO,SAAS,CAAC,KAAO,iCAAiC,KAAO,iBAAiB,KAAO,SAAS,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,mBAAmB,KAAO,UAAU,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,SAAS,CAAC,KAAO,MAAM,KAAO,SAAS,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,wBAAwB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,UAAU,KAAO,wBAAwB,CAAC,GAAK,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,WAAW,KAAO,+BAA+B,CAAC,GAAK,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,WAAW,KAAO,+BAA+B,CAAC,IAAM,WAAW,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,WAAW,KAAO,+BAA+B,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,QAAQ,CAAC,KAAO,kBAAkB,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,6BAA6B,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,wBAAwB,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,OAAO,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,qBAAqB,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,UAAU,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,YAAY,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,UAAU,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,WAAW,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,gBAAgB,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,gBAAgB,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,SAAS,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,GAAK,SAAS,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,gBAAgB,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,GAAG,KAAO,sBAAsB,QAAU,CAAC,CAAC,IAAM,WAAW,OAAS,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,SAAS,CAAC,IAAM,UAAU,OAAS,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,yBAAyB,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,UAAU,KAAO,oBAAoB,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,iBAAiB,KAAO,UAAU,KAAO,+BAA+B,CAAC,GAAK,WAAW,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,iBAAiB,CAAC,IAAM,WAAW,OAAS,mBAAmB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,eAAe,CAAC,GAAK,WAAW,OAAS,OAAO,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,QAAQ,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,YAAY,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,YAAY,CAAC,IAAM,UAAU,OAAS,mBAAmB,OAAS,GAAG,KAAO,uBAAuB,IAAM,CAAC,aAAe,CAAC,CAAC,IAAM,WAAW,UAAY,YAAY,OAAS,GAAG,KAAO,QAAQ,CAAC,IAAM,WAAW,UAAY,WAAW,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,OAAO,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,UAAU,UAAY,SAAS,OAAS,GAAG,KAAO,YAAY,CAAC,IAAM,UAAU,UAAY,QAAQ,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,SAAS,CAAC,GAAK,WAAW,UAAY,OAAO,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,WAAW,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,cAAc,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,kBAAkB,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,sBAAsB,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,qBAAqB,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,iBAAiB,KAAO,mBAAmB,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,eAAe,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,UAAU,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,UAAU,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,UAAU,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,QAAQ,UAAY,mBAAmB,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,cAAc,CAAC,GAAK,QAAQ,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,OAAO,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,aAAa,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,wBAAwB,CAAC,KAAO,eAAe,KAAO,4BAA4B,CAAC,KAAO,wBAAwB,KAAO,8BAA8B,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,UAAU,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,oBAAoB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,kBAAkB,KAAO,sBAAsB,CAAC,KAAO,kBAAkB,KAAO,+BAA+B,CAAC,KAAO,WAAW,KAAO,2BAA2B,CAAC,KAAO,gBAAgB,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,2BAA2B,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,4BAA4B,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,mBAAmB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,yBAAyB,CAAC,KAAO,sBAAsB,KAAO,2BAA2B,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,4BAA4B,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,2BAA2B,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,UAAU,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,4BAA4B,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,8BAA8B,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,wBAAwB,CAAC,KAAO,eAAe,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,2BAA2B,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,mBAAmB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,YAAY,KAAO,6BAA6B,CAAC,KAAO,qBAAqB,KAAO,sCAAsC,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,8BAA8B,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,GAAG,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,aAAa,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,SAAS,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,oBAAoB,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,wBAAwB,KAAO,OAAO,CAAC,KAAO,yBAAyB,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,sBAAsB,CAAC,KAAO,MAAM,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,wBAAwB,CAAC,KAAO,YAAY,KAAO,gBAAgB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,SAAS,CAAC,IAAM,SAAS,UAAY,QAAQ,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,cAAc,KAAO,6BAA6B,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,SAAS,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,aAAa,CAAC,GAAK,SAAS,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,GAAG,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,qBAAqB,CAAC,KAAO,kBAAkB,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,yBAAyB,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,yBAAyB,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,8BAA8B,KAAO,2BAA2B,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,6BAA6B,CAAC,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,KAAO,cAAc,KAAO,8BAA8B,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,yBAAyB,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,qBAAqB,KAAO,kBAAkB,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,YAAY,CAAC,KAAO,WAAW,KAAO,8BAA8B,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,CAAC,KAAO,sBAAsB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,KAAO,wBAAwB,KAAO,iBAAiB,CAAC,KAAO,2BAA2B,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,KAAO,kBAAkB,KAAO,sBAAsB,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,gBAAgB,KAAO,eAAe,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,mBAAmB,CAAC,KAAO,uBAAuB,KAAO,mBAAmB,CAAC,KAAO,yBAAyB,KAAO,4BAA4B,CAAC,KAAO,6BAA6B,KAAO,4BAA4B,CAAC,KAAO,gBAAgB,KAAO,uCAAuC,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,WAAW,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,eAAe,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,2BAA2B,CAAC,KAAO,kBAAkB,KAAO,0BAA0B,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,uBAAuB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,uBAAuB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,mBAAmB,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,4BAA4B,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,gCAAgC,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,QAAQ,UAAY,yBAAyB,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,sBAAsB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,sBAAsB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,qBAAqB,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,eAAe,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,oBAAoB,CAAC,KAAO,WAAW,KAAO,SAAS,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,SAAS,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,mBAAmB,CAAC,KAAO,yBAAyB,KAAO,4BAA4B,CAAC,KAAO,gBAAgB,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,mBAAmB,CAAC,KAAO,yBAAyB,KAAO,4BAA4B,CAAC,KAAO,gBAAgB,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,qBAAqB,KAAO,kBAAkB,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,GAAG,KAAO,WAAW,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,4BAA4B,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,8BAA8B,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,4BAA4B,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,8BAA8B,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,WAAW,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,SAAS,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,oBAAoB,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,mBAAmB,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,SAAS,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,qBAAqB,KAAO,gBAAgB,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,4BAA4B,KAAO,gBAAgB,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,oBAAoB,CAAC,KAAO,qBAAqB,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,sBAAsB,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,wBAAwB,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,sBAAsB,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,OAAO,CAAC,KAAO,oBAAoB,KAAO,OAAO,CAAC,KAAO,uBAAuB,KAAO,OAAO,CAAC,KAAO,iBAAiB,KAAO,OAAO,CAAC,KAAO,wBAAwB,KAAO,OAAO,CAAC,KAAO,uBAAuB,KAAO,OAAO,CAAC,KAAO,6BAA6B,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,2BAA2B,KAAO,OAAO,CAAC,KAAO,4BAA4B,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,uBAAuB,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,yBAAyB,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,UAAU,CAAC,KAAO,wBAAwB,KAAO,kBAAkB,CAAC,KAAO,sBAAsB,KAAO,kBAAkB,CAAC,KAAO,wBAAwB,KAAO,mBAAmB,CAAC,KAAO,sBAAsB,KAAO,mBAAmB,CAAC,KAAO,uBAAuB,KAAO,mBAAmB,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,OAAO,CAAC,KAAO,sBAAsB,KAAO,kBAAkB,CAAC,KAAO,oBAAoB,KAAO,eAAe,CAAC,KAAO,yBAAyB,KAAO,eAAe,CAAC,KAAO,oBAAoB,KAAO,sBAAsB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,WAAW,KAAO,oBAAoB,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,UAAU,KAAO,qBAAqB,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,oBAAoB,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,SAAS,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,UAAU,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,SAAS,CAAC,KAAO,kBAAkB,KAAO,SAAS,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,kBAAkB,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,iCAAiC,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,kBAAkB,KAAO,iCAAiC,CAAC,IAAM,SAAS,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,qBAAqB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,6BAA6B,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,oBAAoB,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,UAAU,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,SAAS,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,6BAA6B,CAAC,KAAO,eAAe,KAAO,6BAA6B,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,8BAA8B,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,cAAc,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,cAAc,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,CAAC,KAAO,kBAAkB,KAAO,uBAAuB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,SAAS,UAAY,0BAA0B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,iCAAiC,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,cAAc,CAAC,KAAO,QAAQ,KAAO,wBAAwB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,iCAAiC,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,iCAAiC,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,sBAAsB,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,oCAAoC,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,sBAAsB,KAAO,oBAAoB,CAAC,IAAM,OAAO,UAAY,4BAA4B,OAAS,GAAG,KAAO,eAAe,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,eAAe,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,kBAAkB,CAAC,GAAK,SAAS,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,cAAc,KAAO,uBAAuB,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,qBAAqB,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,kBAAkB,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,qBAAqB,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,iBAAiB,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,kCAAkC,OAAS,GAAG,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,uBAAuB,KAAO,wBAAwB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,6BAA6B,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,WAAW,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,UAAU,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,oBAAoB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,sCAAsC,KAAO,WAAW,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,8BAA8B,KAAO,gBAAgB,CAAC,KAAO,yBAAyB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,iBAAiB,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,yBAAyB,KAAO,OAAO,CAAC,KAAO,iBAAiB,KAAO,0BAA0B,KAAO,0BAA0B,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,2BAA2B,CAAC,KAAO,QAAQ,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,4BAA4B,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,kBAAkB,KAAO,yBAAyB,CAAC,KAAO,gBAAgB,KAAO,SAAS,CAAC,KAAO,qBAAqB,KAAO,eAAe,CAAC,KAAO,sBAAsB,KAAO,mBAAmB,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,kBAAkB,KAAO,iCAAiC,KAAO,4BAA4B,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,2BAA2B,CAAC,KAAO,oBAAoB,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,sBAAsB,KAAO,iCAAiC,KAAO,iCAAiC,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,WAAW,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,SAAS,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,yBAAyB,KAAO,cAAc,CAAC,GAAK,SAAS,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,QAAQ,UAAY,uBAAuB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,eAAe,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,6BAA6B,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,gBAAgB,KAAO,eAAe,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,cAAc,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,0BAA0B,CAAC,KAAO,YAAY,KAAO,qBAAqB,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,OAAO,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,MAAM,KAAO,iBAAiB,CAAC,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,MAAM,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,kBAAkB,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,kBAAkB,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,sBAAsB,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,4BAA4B,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,qBAAqB,KAAO,sCAAsC,CAAC,KAAO,yBAAyB,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,mBAAmB,CAAC,KAAO,eAAe,KAAO,yBAAyB,KAAO,QAAQ,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,oBAAoB,KAAO,iBAAiB,CAAC,KAAO,uBAAuB,KAAO,oBAAoB,CAAC,KAAO,WAAW,KAAO,8BAA8B,CAAC,KAAO,cAAc,KAAO,0BAA0B,KAAO,WAAW,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,2BAA2B,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,iBAAiB,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,mBAAmB,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,6BAA6B,CAAC,KAAO,cAAc,KAAO,mBAAmB,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,wBAAwB,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,WAAW,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,MAAM,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,qCAAqC,CAAC,KAAO,eAAe,KAAO,4BAA4B,CAAC,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,KAAO,wBAAwB,KAAO,6BAA6B,CAAC,KAAO,qBAAqB,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,yBAAyB,CAAC,IAAM,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,iBAAiB,CAAC,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,KAAK,CAAC,KAAO,qBAAqB,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,qBAAqB,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,SAAS,CAAC,KAAO,kBAAkB,KAAO,sBAAsB,CAAC,KAAO,kBAAkB,KAAO,+BAA+B,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,CAAC,KAAO,uBAAuB,KAAO,eAAe,CAAC,KAAO,gBAAgB,KAAO,eAAe,CAAC,KAAO,aAAa,KAAO,sBAAsB,CAAC,KAAO,mBAAmB,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,4BAA4B,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,2BAA2B,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,sBAAsB,KAAO,2BAA2B,CAAC,KAAO,4BAA4B,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,mBAAmB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,yBAAyB,CAAC,KAAO,kBAAkB,KAAO,iBAAiB,CAAC,KAAO,sBAAsB,KAAO,2BAA2B,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,gBAAgB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,mBAAmB,CAAC,KAAO,gBAAgB,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,GAAG,KAAO,yBAAyB,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,yBAAyB,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,WAAW,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,8BAA8B,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,gCAAgC,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,sBAAsB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,+BAA+B,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,6BAA6B,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,YAAY,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,wBAAwB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,iBAAiB,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,gCAAgC,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,qBAAqB,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,4BAA4B,CAAC,KAAO,UAAU,KAAO,4BAA4B,CAAC,KAAO,eAAe,KAAO,0BAA0B,KAAO,wBAAwB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,UAAU,KAAO,uBAAuB,CAAC,KAAO,eAAe,KAAO,qBAAqB,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,6BAA6B,CAAC,KAAO,UAAU,KAAO,2BAA2B,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,oBAAoB,CAAC,KAAO,YAAY,KAAO,+BAA+B,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,oBAAoB,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,oCAAoC,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,mBAAmB,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,IAAM,SAAS,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,SAAS,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,8BAA8B,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,kBAAkB,KAAO,mBAAmB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,4BAA4B,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,gCAAgC,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,GAAK,WAAW,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,oCAAoC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,GAAK,SAAS,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,YAAY,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,gCAAgC,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,cAAc,CAAC,KAAO,eAAe,KAAO,0BAA0B,KAAO,wBAAwB,CAAC,IAAM,OAAO,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,0BAA0B,KAAO,wBAAwB,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,oBAAoB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,eAAe,KAAO,qBAAqB,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,2BAA2B,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,2BAA2B,CAAC,KAAO,gBAAgB,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,kBAAkB,KAAO,mBAAmB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,SAAS,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,oBAAoB,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,gCAAgC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,IAAM,SAAS,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,uCAAuC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,6BAA6B,CAAC,KAAO,SAAS,KAAO,iBAAiB,KAAO,6BAA6B,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,qCAAqC,OAAS,GAAG,KAAO,2BAA2B,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,oBAAoB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,KAAO,2BAA2B,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,8BAA8B,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,0CAA0C,OAAS,GAAG,KAAO,oCAAoC,CAAC,GAAK,UAAU,UAAY,0CAA0C,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,8BAA8B,KAAO,oCAAoC,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,cAAc,CAAC,KAAO,QAAQ,KAAO,aAAa,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,GAAG,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,cAAc,CAAC,IAAM,SAAS,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,cAAc,CAAC,KAAO,SAAS,KAAO,qBAAqB,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,eAAe,KAAO,uBAAuB,CAAC,GAAK,SAAS,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,kBAAkB,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,OAAO,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,qBAAqB,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,0BAA0B,KAAO,wBAAwB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,IAAM,SAAS,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,cAAc,KAAO,cAAc,CAAC,GAAK,SAAS,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,aAAa,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,qBAAqB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,GAAG,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,IAAM,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,YAAY,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,qBAAqB,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,YAAY,CAAC,KAAO,iBAAiB,KAAO,QAAQ,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,yBAAyB,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,UAAU,KAAO,aAAa,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,UAAU,KAAO,aAAa,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,cAAc,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,IAAI,KAAO,eAAe,CAAC,KAAO,IAAI,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,kBAAkB,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,qBAAqB,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,GAAK,SAAS,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,KAAO,WAAW,CAAC,IAAM,SAAS,UAAY,2BAA2B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,0BAA0B,CAAC,IAAM,UAAU,UAAY,mCAAmC,OAAS,GAAG,KAAO,0BAA0B,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,0BAA0B,CAAC,IAAM,SAAS,UAAY,6BAA6B,OAAS,GAAG,KAAO,0BAA0B,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,eAAe,KAAO,UAAU,CAAC,IAAM,SAAS,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,+BAA+B,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,6BAA6B,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,wBAAwB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,wBAAwB,KAAO,wBAAwB,CAAC,KAAO,sBAAsB,KAAO,mBAAmB,KAAO,WAAW,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,4BAA4B,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,UAAU,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,YAAY,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,iBAAiB,KAAO,uBAAuB,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,qBAAqB,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,gCAAgC,CAAC,KAAO,qBAAqB,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,kBAAkB,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,6BAA6B,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,iBAAiB,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,iBAAiB,KAAO,iCAAiC,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,mBAAmB,KAAO,wBAAwB,KAAO,wBAAwB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,2BAA2B,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,8BAA8B,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,8BAA8B,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,wBAAwB,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,oBAAoB,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,kBAAkB,CAAC,KAAO,gBAAgB,KAAO,oBAAoB,CAAC,KAAO,qBAAqB,KAAO,qCAAqC,CAAC,KAAO,aAAa,KAAO,gCAAgC,CAAC,KAAO,oBAAoB,KAAO,2CAA2C,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,kBAAkB,CAAC,KAAO,mBAAmB,KAAO,mCAAmC,KAAO,mCAAmC,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,0BAA0B,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,OAAO,KAAO,gCAAgC,CAAC,KAAO,WAAW,KAAO,0BAA0B,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,QAAQ,CAAC,KAAO,oBAAoB,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,2BAA2B,CAAC,IAAM,SAAS,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,iCAAiC,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,KAAO,2BAA2B,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,2BAA2B,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,SAAS,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,yBAAyB,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,SAAS,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,gCAAgC,CAAC,KAAO,qBAAqB,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,SAAS,KAAO,UAAU,CAAC,IAAM,QAAQ,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,uBAAuB,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,cAAc,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,qBAAqB,CAAC,KAAO,eAAe,KAAO,gBAAgB,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,SAAS,CAAC,KAAO,kBAAkB,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,qBAAqB,CAAC,KAAO,cAAc,KAAO,2BAA2B,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,kCAAkC,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,KAAO,mBAAmB,CAAC,IAAM,SAAS,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,kCAAkC,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,gCAAgC,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,SAAS,CAAC,KAAO,iBAAiB,KAAO,SAAS,CAAC,KAAO,gBAAgB,KAAO,SAAS,CAAC,KAAO,cAAc,KAAO,qBAAqB,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,UAAU,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,yBAAyB,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,2BAA2B,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,WAAW,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,uBAAuB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,qBAAqB,KAAO,sBAAsB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,WAAW,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,WAAW,KAAO,6BAA6B,CAAC,IAAM,UAAU,UAAY,wCAAwC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,wCAAwC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,2CAA2C,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,wCAAwC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,CAAC,KAAO,YAAY,KAAO,UAAU,KAAO,8BAA8B,CAAC,GAAK,UAAU,UAAY,0CAA0C,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,8BAA8B,CAAC,GAAK,UAAU,UAAY,6CAA6C,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,yCAAyC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,wCAAwC,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,WAAW,CAAC,KAAO,cAAc,KAAO,YAAY,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,0CAA0C,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,8BAA8B,CAAC,GAAK,UAAU,UAAY,4CAA4C,OAAS,GAAG,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,6CAA6C,OAAS,GAAG,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,8CAA8C,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,iDAAiD,OAAS,CAAC,CAAC,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,KAAO,kBAAkB,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,mDAAmD,OAAS,CAAC,CAAC,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,KAAO,kBAAkB,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,+BAA+B,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,gCAAgC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,4BAA4B,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,kBAAkB,KAAO,+BAA+B,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,oCAAoC,OAAS,GAAG,KAAO,0BAA0B,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,qBAAqB,KAAO,0BAA0B,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,oCAAoC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,GAAG,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,6CAA6C,OAAS,CAAC,CAAC,KAAO,kBAAkB,KAAO,mBAAmB,CAAC,KAAO,iBAAiB,KAAO,oBAAoB,KAAO,8BAA8B,CAAC,IAAM,SAAS,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,aAAa,KAAO,2BAA2B,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,mDAAmD,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,gCAAgC,KAAO,gBAAgB,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,YAAY,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,gCAAgC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,eAAe,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,sBAAsB,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,uBAAuB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,0CAA0C,OAAS,GAAG,KAAO,gCAAgC,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,cAAc,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,iBAAiB,KAAO,4BAA4B,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,SAAS,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,uCAAuC,OAAS,GAAG,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,8BAA8B,KAAO,6BAA6B,CAAC,IAAM,UAAU,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,YAAY,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,8BAA8B,KAAO,eAAe,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,wBAAwB,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,kCAAkC,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,SAAS,UAAY,6BAA6B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,sCAAsC,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,uCAAuC,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,aAAa,KAAO,sBAAsB,CAAC,KAAO,eAAe,KAAO,sBAAsB,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,cAAc,KAAO,8BAA8B,CAAC,KAAO,QAAQ,KAAO,8BAA8B,CAAC,KAAO,aAAa,KAAO,2BAA2B,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,aAAa,KAAO,2BAA2B,CAAC,KAAO,eAAe,KAAO,2BAA2B,CAAC,KAAO,SAAS,KAAO,2BAA2B,CAAC,KAAO,cAAc,KAAO,mCAAmC,CAAC,KAAO,QAAQ,KAAO,mCAAmC,CAAC,KAAO,aAAa,KAAO,4BAA4B,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,GAAK,SAAS,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,8BAA8B,CAAC,KAAO,SAAS,KAAO,uBAAuB,CAAC,KAAO,SAAS,KAAO,4BAA4B,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,qBAAqB,KAAO,mBAAmB,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,uBAAuB,CAAC,KAAO,cAAc,KAAO,+BAA+B,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,4BAA4B,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,eAAe,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,wBAAwB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,QAAQ,UAAY,+BAA+B,OAAS,GAAG,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,kDAAkD,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,yBAAyB,CAAC,KAAO,gBAAgB,KAAO,SAAS,CAAC,KAAO,mBAAmB,KAAO,SAAS,KAAO,wBAAwB,CAAC,GAAK,UAAU,UAAY,oEAAoE,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,SAAS,CAAC,KAAO,QAAQ,KAAO,SAAS,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,UAAU,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,yBAAyB,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,KAAK,KAAO,UAAU,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,oBAAoB,KAAO,sBAAsB,CAAC,GAAK,SAAS,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,+BAA+B,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,GAAG,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,aAAa,KAAO,uBAAuB,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,cAAc,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,WAAW,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,SAAS,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,sBAAsB,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,4BAA4B,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,GAAK,SAAS,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,QAAQ,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,oBAAoB,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,YAAY,CAAC,KAAO,OAAO,KAAO,yBAAyB,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,SAAS,KAAO,aAAa,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,sBAAsB,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,sBAAsB,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,gCAAgC,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,qBAAqB,CAAC,KAAO,QAAQ,KAAO,aAAa,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,KAAO,sBAAsB,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,YAAY,CAAC,KAAO,WAAW,KAAO,+BAA+B,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,YAAY,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,OAAO,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,qBAAqB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,YAAY,KAAO,oBAAoB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,KAAO,QAAQ,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,SAAS,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,6BAA6B,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,OAAO,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,sBAAsB,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,aAAa,KAAO,gBAAgB,KAAO,QAAQ,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,oCAAoC,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,gBAAgB,KAAO,wBAAwB,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,oBAAoB,KAAO,kCAAkC,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,kBAAkB,KAAO,yBAAyB,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,oBAAoB,KAAO,kCAAkC,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,eAAe,CAAC,GAAK,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,YAAY,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,WAAW,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,gDAAgD,OAAS,CAAC,CAAC,KAAO,qBAAqB,KAAO,oBAAoB,CAAC,KAAO,oBAAoB,KAAO,qBAAqB,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,qCAAqC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,8BAA8B,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,sBAAsB,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,mBAAmB,KAAO,eAAe,CAAC,KAAO,0BAA0B,KAAO,eAAe,CAAC,KAAO,yBAAyB,KAAO,eAAe,CAAC,KAAO,0BAA0B,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,sBAAsB,KAAO,gBAAgB,CAAC,KAAO,qBAAqB,KAAO,gBAAgB,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,OAAO,CAAC,KAAO,iBAAiB,KAAO,QAAQ,CAAC,KAAO,gBAAgB,KAAO,QAAQ,CAAC,KAAO,0BAA0B,KAAO,QAAQ,KAAO,wBAAwB,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,wBAAwB,CAAC,KAAO,SAAS,KAAO,wBAAwB,CAAC,KAAO,OAAO,KAAO,yBAAyB,KAAO,gCAAgC,CAAC,IAAM,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,yBAAyB,KAAO,2BAA2B,CAAC,IAAM,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,8BAA8B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,SAAS,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,SAAS,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,gBAAgB,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,SAAS,UAAY,SAAS,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,yBAAyB,KAAO,gBAAgB,CAAC,KAAO,8BAA8B,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,sBAAsB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,2BAA2B,KAAO,OAAO,CAAC,KAAO,6BAA6B,KAAO,OAAO,CAAC,KAAO,8BAA8B,KAAO,OAAO,CAAC,KAAO,gCAAgC,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,cAAc,CAAC,IAAM,SAAS,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,sBAAsB,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,aAAa,CAAC,GAAK,SAAS,UAAY,6BAA6B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,SAAS,UAAY,8BAA8B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,SAAS,UAAY,6CAA6C,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,0BAA0B,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,cAAc,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,yCAAyC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,4CAA4C,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,oCAAoC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,eAAe,CAAC,GAAK,WAAW,UAAY,uCAAuC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,SAAS,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,iBAAiB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,YAAY,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,wBAAwB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,2CAA2C,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,oBAAoB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,iCAAiC,OAAS,GAAG,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,2CAA2C,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,mBAAmB,KAAO,gCAAgC,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,qCAAqC,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,0BAA0B,CAAC,GAAK,SAAS,UAAY,+BAA+B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,QAAQ,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,oBAAoB,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,KAAO,SAAS,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,kBAAkB,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,uBAAuB,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,uBAAuB,KAAO,iBAAiB,KAAO,2BAA2B,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,0BAA0B,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,SAAS,UAAY,eAAe,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,8BAA8B,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,sBAAsB,KAAO,eAAe,CAAC,KAAO,iBAAiB,KAAO,uBAAuB,CAAC,KAAO,YAAY,KAAO,0BAA0B,CAAC,KAAO,qBAAqB,KAAO,8BAA8B,KAAO,sBAAsB,CAAC,IAAM,SAAS,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,sBAAsB,KAAO,eAAe,CAAC,KAAO,iBAAiB,KAAO,uBAAuB,CAAC,KAAO,YAAY,KAAO,sBAAsB,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,4BAA4B,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,2BAA2B,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,4BAA4B,KAAO,yBAAyB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,eAAe,CAAC,GAAK,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,iBAAiB,CAAC,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,eAAe,KAAO,qBAAqB,CAAC,KAAO,gBAAgB,KAAO,qBAAqB,CAAC,KAAO,gBAAgB,KAAO,sBAAsB,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,yBAAyB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,sBAAsB,OAAS,GAAG,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,aAAa,KAAO,mBAAmB,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,YAAY,KAAO,wBAAwB,CAAC,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,KAAO,kBAAkB,KAAO,wBAAwB,CAAC,KAAO,wBAAwB,KAAO,qBAAqB,CAAC,KAAO,eAAe,KAAO,cAAc,CAAC,KAAO,kBAAkB,KAAO,cAAc,CAAC,KAAO,aAAa,KAAO,cAAc,CAAC,KAAO,kBAAkB,KAAO,cAAc,CAAC,KAAO,qBAAqB,KAAO,cAAc,CAAC,KAAO,wBAAwB,KAAO,cAAc,CAAC,KAAO,wBAAwB,KAAO,cAAc,CAAC,KAAO,gCAAgC,KAAO,cAAc,CAAC,KAAO,kBAAkB,KAAO,cAAc,CAAC,KAAO,8BAA8B,KAAO,uCAAuC,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,mBAAmB,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,iBAAiB,KAAO,mBAAmB,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,uBAAuB,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,UAAU,KAAO,wBAAwB,CAAC,KAAO,WAAW,KAAO,wBAAwB,CAAC,KAAO,UAAU,KAAO,wBAAwB,CAAC,KAAO,UAAU,KAAO,wBAAwB,CAAC,KAAO,eAAe,KAAO,cAAc,CAAC,KAAO,gBAAgB,KAAO,cAAc,CAAC,KAAO,8BAA8B,KAAO,cAAc,CAAC,KAAO,kBAAkB,KAAO,cAAc,CAAC,KAAO,iBAAiB,KAAO,cAAc,CAAC,KAAO,gBAAgB,KAAO,cAAc,CAAC,KAAO,kBAAkB,KAAO,cAAc,CAAC,KAAO,iBAAiB,KAAO,cAAc,CAAC,KAAO,cAAc,KAAO,+BAA+B,CAAC,KAAO,aAAa,KAAO,8BAA8B,CAAC,KAAO,eAAe,KAAO,gCAAgC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,wCAAwC,KAAO,iBAAiB,KAAO,yBAAyB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,0BAA0B,CAAC,KAAO,WAAW,KAAO,2BAA2B,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,gBAAgB,KAAO,6BAA6B,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,wBAAwB,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,2BAA2B,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,SAAS,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,gBAAgB,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,wBAAwB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,yBAAyB,CAAC,IAAM,UAAU,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,oCAAoC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,oBAAoB,KAAO,eAAe,CAAC,KAAO,qBAAqB,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,qBAAqB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,wBAAwB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,sBAAsB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,SAAS,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,IAAI,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,eAAe,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,4BAA4B,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,sBAAsB,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,oBAAoB,KAAO,eAAe,CAAC,KAAO,gBAAgB,KAAO,eAAe,CAAC,KAAO,sBAAsB,KAAO,gBAAgB,CAAC,KAAO,sBAAsB,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,mBAAmB,CAAC,KAAO,oBAAoB,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,qCAAqC,CAAC,KAAO,eAAe,KAAO,uCAAuC,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,eAAe,KAAO,gCAAgC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,eAAe,KAAO,gCAAgC,CAAC,KAAO,2BAA2B,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,gCAAgC,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,2BAA2B,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,uBAAuB,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,uBAAuB,CAAC,GAAK,UAAU,UAAY,2CAA2C,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,6CAA6C,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,4CAA4C,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,yBAAyB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,8CAA8C,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,yBAAyB,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,mDAAmD,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,aAAa,KAAO,2BAA2B,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,0BAA0B,CAAC,IAAM,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,gCAAgC,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,kCAAkC,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,gBAAgB,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,2BAA2B,CAAC,KAAO,kBAAkB,KAAO,2BAA2B,CAAC,KAAO,SAAS,KAAO,8BAA8B,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,8BAA8B,CAAC,KAAO,kBAAkB,KAAO,8BAA8B,CAAC,KAAO,SAAS,KAAO,8BAA8B,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,iBAAiB,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,8BAA8B,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,gCAAgC,CAAC,GAAK,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,+BAA+B,CAAC,GAAK,UAAU,UAAY,sCAAsC,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,aAAa,KAAO,sBAAsB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,+BAA+B,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,8BAA8B,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,gCAAgC,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,gBAAgB,KAAO,OAAO,CAAC,KAAO,wBAAwB,KAAO,QAAQ,KAAO,wBAAwB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,gCAAgC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kCAAkC,CAAC,GAAK,WAAW,UAAY,oDAAoD,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,iDAAiD,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,iDAAiD,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,+CAA+C,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,sBAAsB,CAAC,KAAO,aAAa,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,8CAA8C,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,yBAAyB,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,6CAA6C,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,oCAAoC,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,WAAW,KAAO,qCAAqC,CAAC,GAAK,SAAS,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,eAAe,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,iCAAiC,CAAC,IAAM,UAAU,UAAY,oCAAoC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,4BAA4B,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,UAAU,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,YAAY,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,6BAA6B,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,gBAAgB,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,uCAAuC,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,wCAAwC,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,gDAAgD,CAAC,KAAO,eAAe,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,aAAa,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,+BAA+B,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,+BAA+B,CAAC,IAAM,UAAU,UAAY,qCAAqC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,+BAA+B,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,+BAA+B,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,uBAAuB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,sBAAsB,CAAC,KAAO,mBAAmB,KAAO,kBAAkB,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,4BAA4B,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,8BAA8B,CAAC,GAAK,UAAU,UAAY,yCAAyC,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,aAAa,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,2BAA2B,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,+BAA+B,CAAC,GAAK,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,uCAAuC,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kCAAkC,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,yBAAyB,CAAC,GAAK,WAAW,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,kCAAkC,KAAO,mCAAmC,CAAC,IAAM,UAAU,UAAY,mCAAmC,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,OAAO,CAAC,KAAO,oBAAoB,KAAO,iBAAiB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,qDAAqD,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,sBAAsB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,6CAA6C,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,iCAAiC,OAAS,GAAG,KAAO,uBAAuB,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,wCAAwC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,oBAAoB,KAAO,kBAAkB,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,qBAAqB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,yBAAyB,CAAC,KAAO,mBAAmB,KAAO,wCAAwC,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,+BAA+B,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,mBAAmB,KAAO,iCAAiC,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,YAAY,CAAC,KAAO,mBAAmB,KAAO,YAAY,CAAC,KAAO,mBAAmB,KAAO,YAAY,CAAC,KAAO,qBAAqB,KAAO,YAAY,CAAC,KAAO,mBAAmB,KAAO,YAAY,CAAC,KAAO,mBAAmB,KAAO,oBAAoB,CAAC,KAAO,cAAc,KAAO,qBAAqB,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,yCAAyC,OAAS,GAAG,KAAO,+BAA+B,CAAC,GAAK,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,8BAA8B,KAAO,+BAA+B,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,qDAAqD,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,YAAY,KAAO,kBAAkB,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,GAAG,KAAO,2BAA2B,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,2BAA2B,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,aAAa,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,oBAAoB,KAAO,SAAS,KAAO,0BAA0B,CAAC,IAAM,UAAU,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,mCAAmC,KAAO,iCAAiC,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,mCAAmC,OAAS,GAAG,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,gCAAgC,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,0BAA0B,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,SAAS,KAAO,2CAA2C,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,8BAA8B,CAAC,KAAO,QAAQ,KAAO,8BAA8B,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,yBAAyB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,uBAAuB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,oCAAoC,KAAO,sBAAsB,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,SAAS,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,kBAAkB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,SAAS,UAAY,oCAAoC,OAAS,GAAG,KAAO,0BAA0B,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,qBAAqB,KAAO,0BAA0B,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,QAAQ,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,aAAa,KAAO,yBAAyB,CAAC,GAAK,WAAW,UAAY,8BAA8B,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,GAAG,KAAO,sBAAsB,CAAC,GAAK,SAAS,UAAY,yBAAyB,OAAS,GAAG,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,8BAA8B,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,4BAA4B,CAAC,GAAK,QAAQ,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,mBAAmB,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,sBAAsB,OAAS,GAAG,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,yBAAyB,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,oBAAoB,CAAC,KAAO,iBAAiB,KAAO,qCAAqC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,iBAAiB,CAAC,IAAM,SAAS,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,oBAAoB,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,cAAc,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,0BAA0B,CAAC,KAAO,YAAY,KAAO,qBAAqB,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,uCAAuC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,4BAA4B,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,4BAA4B,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,mBAAmB,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,SAAS,UAAY,kCAAkC,OAAS,GAAG,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,sCAAsC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,mBAAmB,KAAO,wBAAwB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,GAAG,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,eAAe,CAAC,IAAM,SAAS,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,gBAAgB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,mCAAmC,OAAS,GAAG,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,GAAG,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,YAAY,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,qBAAqB,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,qBAAqB,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,sCAAsC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,wBAAwB,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,WAAW,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,gCAAgC,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,yBAAyB,CAAC,IAAM,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,kBAAkB,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,mBAAmB,KAAO,6BAA6B,CAAC,GAAK,SAAS,UAAY,wCAAwC,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,sCAAsC,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,IAAI,KAAO,eAAe,CAAC,KAAO,IAAI,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,iBAAiB,KAAO,yBAAyB,KAAO,UAAU,CAAC,IAAM,SAAS,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,mBAAmB,KAAO,mBAAmB,QAAU,CAAC,CAAC,IAAM,UAAU,OAAS,iBAAiB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,GAAK,WAAW,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,IAAM,WAAW,OAAS,gBAAgB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,IAAM,WAAW,OAAS,cAAc,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,sBAAsB,CAAC,IAAM,WAAW,OAAS,cAAc,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,kBAAkB,CAAC,KAAO,qBAAqB,KAAO,8BAA8B,KAAO,sBAAsB,CAAC,GAAK,WAAW,OAAS,cAAc,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,OAAS,2BAA2B,OAAS,GAAG,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,8BAA8B,CAAC,IAAM,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,mBAAmB,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,oBAAoB,KAAO,UAAU,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,SAAS,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,WAAW,KAAO,4BAA4B,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,oBAAoB,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,8BAA8B,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,sBAAsB,KAAO,gBAAgB,CAAC,IAAM,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,cAAc,KAAO,kBAAkB,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,eAAe,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,GAAG,KAAO,yBAAyB,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,yBAAyB,KAAO,6BAA6B,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,sBAAsB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,mBAAmB,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,mBAAmB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,oBAAoB,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,yBAAyB,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,oBAAoB,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,qBAAqB,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,6BAA6B,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,4BAA4B,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,GAAK,SAAS,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iCAAiC,CAAC,GAAK,WAAW,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,sBAAsB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,2BAA2B,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,uBAAuB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,2BAA2B,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,cAAc,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,uBAAuB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,sBAAsB,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,YAAY,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,uBAAuB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,yBAAyB,CAAC,IAAM,WAAW,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,mBAAmB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,eAAe,KAAO,gBAAgB,CAAC,IAAM,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,qBAAqB,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,iBAAiB,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,IAAM,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,IAAM,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,qBAAqB,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,eAAe,CAAC,IAAM,UAAU,OAAS,iBAAiB,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,UAAU,OAAS,oBAAoB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,WAAW,OAAS,qBAAqB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,UAAU,KAAO,iBAAiB,CAAC,GAAK,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,MAAM,KAAO,SAAS,CAAC,KAAO,kBAAkB,KAAO,SAAS,KAAO,iBAAiB,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,iCAAiC,CAAC,GAAK,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,uBAAuB,KAAO,iCAAiC,CAAC,GAAK,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,iCAAiC,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,gBAAgB,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,uBAAuB,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,iBAAiB,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,mBAAmB,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,4BAA4B,CAAC,KAAO,SAAS,KAAO,qBAAqB,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,IAAM,WAAW,OAAS,kBAAkB,OAAS,GAAG,KAAO,gBAAgB,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,oBAAoB,KAAO,wBAAwB,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,6BAA6B,KAAO,wBAAwB,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,mBAAmB,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,yBAAyB,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,wBAAwB,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,iBAAiB,KAAO,WAAW,KAAO,sBAAsB,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,gBAAgB,CAAC,IAAM,UAAU,OAAS,4BAA4B,OAAS,GAAG,KAAO,0BAA0B,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,4BAA4B,CAAC,IAAM,WAAW,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,eAAe,KAAO,kCAAkC,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,GAAG,KAAO,yBAAyB,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,0CAA0C,KAAO,sBAAsB,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,IAAM,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,GAAK,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,cAAc,CAAC,GAAK,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,uBAAuB,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,WAAW,KAAO,SAAS,KAAO,oCAAoC,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,oBAAoB,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,mBAAmB,KAAO,WAAW,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,yBAAyB,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,yBAAyB,KAAO,qBAAqB,CAAC,GAAK,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,6BAA6B,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,gCAAgC,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,cAAc,KAAO,+BAA+B,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,yBAAyB,KAAO,kBAAkB,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,yBAAyB,CAAC,KAAO,UAAU,KAAO,mBAAmB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,eAAe,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,sBAAsB,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,SAAS,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,yBAAyB,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,6BAA6B,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,sBAAsB,CAAC,GAAK,UAAU,OAAS,mBAAmB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,yBAAyB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,uBAAuB,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,gCAAgC,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,8BAA8B,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,uBAAuB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,uBAAuB,CAAC,GAAK,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,UAAU,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,SAAS,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,4BAA4B,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,eAAe,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,gBAAgB,KAAO,iBAAiB,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,2BAA2B,CAAC,KAAO,UAAU,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,eAAe,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,8BAA8B,CAAC,IAAM,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,4BAA4B,KAAO,wBAAwB,CAAC,IAAM,WAAW,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,GAAG,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,6BAA6B,CAAC,GAAK,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,iBAAiB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,2BAA2B,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,6BAA6B,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,kBAAkB,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,GAAK,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,wBAAwB,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,wBAAwB,KAAO,6BAA6B,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,mBAAmB,KAAO,iBAAiB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,2BAA2B,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,uBAAuB,CAAC,GAAK,UAAU,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,2BAA2B,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,uBAAuB,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,wBAAwB,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,oBAAoB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,4BAA4B,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,wBAAwB,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,aAAa,KAAO,YAAY,CAAC,IAAM,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,wBAAwB,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,kBAAkB,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,qBAAqB,KAAO,wBAAwB,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,2BAA2B,CAAC,IAAM,WAAW,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,yBAAyB,KAAO,mCAAmC,CAAC,GAAK,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,kBAAkB,CAAC,KAAO,qBAAqB,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,2BAA2B,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,0BAA0B,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,uBAAuB,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,iBAAiB,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,mBAAmB,KAAO,mCAAmC,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,yBAAyB,CAAC,KAAO,WAAW,KAAO,+BAA+B,CAAC,KAAO,WAAW,KAAO,mBAAmB,KAAO,uBAAuB,CAAC,IAAM,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,kBAAkB,KAAO,uBAAuB,CAAC,IAAM,QAAQ,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,uBAAuB,CAAC,IAAM,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,UAAU,KAAO,wBAAwB,KAAO,uBAAuB,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,eAAe,KAAO,gBAAgB,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,GAAG,KAAO,YAAY,CAAC,GAAK,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,mBAAmB,CAAC,GAAK,WAAW,OAAS,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,mBAAmB,CAAC,GAAK,UAAU,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,SAAS,CAAC,KAAO,kBAAkB,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,mBAAmB,CAAC,GAAK,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,0BAA0B,CAAC,KAAO,gBAAgB,KAAO,SAAS,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,aAAa,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,CAAC,KAAO,gBAAgB,KAAO,UAAU,KAAO,oBAAoB,CAAC,GAAK,WAAW,OAAS,oBAAoB,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,0BAA0B,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,4BAA4B,CAAC,IAAM,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,gBAAgB,KAAO,qBAAqB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,uCAAuC,CAAC,KAAO,SAAS,KAAO,6BAA6B,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,4BAA4B,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,oBAAoB,CAAC,IAAM,UAAU,OAAS,sCAAsC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,kBAAkB,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,oBAAoB,KAAO,QAAQ,CAAC,GAAK,SAAS,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,0BAA0B,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,sBAAsB,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,UAAU,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,4BAA4B,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,2BAA2B,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,4BAA4B,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,uBAAuB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,OAAO,KAAO,uBAAuB,KAAO,iBAAiB,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,GAAG,KAAO,6BAA6B,CAAC,GAAK,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,iCAAiC,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,6BAA6B,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,qBAAqB,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,oBAAoB,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,GAAG,KAAO,6BAA6B,CAAC,IAAM,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,aAAa,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,GAAG,KAAO,uBAAuB,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,4BAA4B,KAAO,uBAAuB,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,oBAAoB,CAAC,KAAO,mBAAmB,KAAO,SAAS,KAAO,eAAe,CAAC,IAAM,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,4BAA4B,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,6BAA6B,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,6BAA6B,CAAC,IAAM,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,2BAA2B,CAAC,KAAO,cAAc,KAAO,+BAA+B,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,sBAAsB,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,yBAAyB,CAAC,GAAK,SAAS,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,sBAAsB,CAAC,KAAO,eAAe,KAAO,sBAAsB,KAAO,yBAAyB,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,oBAAoB,OAAS,GAAG,KAAO,wBAAwB,CAAC,IAAM,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,qBAAqB,KAAO,gBAAgB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,iBAAiB,KAAO,mBAAmB,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,GAAG,KAAO,wBAAwB,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,IAAM,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,IAAM,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,oBAAoB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,gCAAgC,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,0BAA0B,OAAS,GAAG,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,oBAAoB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,WAAW,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,0BAA0B,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,uBAAuB,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,GAAG,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,GAAG,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,SAAS,OAAS,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,iBAAiB,CAAC,GAAK,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,iBAAiB,CAAC,IAAM,WAAW,OAAS,uCAAuC,OAAS,GAAG,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,uCAAuC,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,4BAA4B,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,kBAAkB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,eAAe,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,uCAAuC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,gBAAgB,KAAO,qBAAqB,KAAO,WAAW,CAAC,IAAM,SAAS,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,mBAAmB,KAAO,aAAa,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,aAAa,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,QAAQ,CAAC,IAAM,SAAS,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,kCAAkC,OAAS,GAAG,KAAO,gCAAgC,CAAC,GAAK,WAAW,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,yBAAyB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,2BAA2B,CAAC,GAAK,UAAU,OAAS,sCAAsC,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,QAAQ,KAAO,2BAA2B,CAAC,GAAK,WAAW,OAAS,qCAAqC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,KAAO,yBAAyB,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,4BAA4B,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,2BAA2B,KAAO,kCAAkC,CAAC,IAAM,UAAU,OAAS,kCAAkC,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,qBAAqB,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,qBAAqB,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,8BAA8B,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,aAAa,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,cAAc,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,gBAAgB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,WAAW,KAAO,uCAAuC,KAAO,SAAS,CAAC,GAAK,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,cAAc,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,WAAW,KAAO,uCAAuC,KAAO,SAAS,CAAC,IAAM,UAAU,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,cAAc,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,sBAAsB,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,sBAAsB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,mBAAmB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,cAAc,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,SAAS,CAAC,GAAK,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,kBAAkB,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,mBAAmB,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,mBAAmB,CAAC,IAAM,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,iBAAiB,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,oBAAoB,KAAO,iBAAiB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,GAAG,KAAO,2BAA2B,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,GAAG,KAAO,0BAA0B,CAAC,GAAK,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,2BAA2B,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,sBAAsB,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,4BAA4B,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,yBAAyB,CAAC,IAAM,UAAU,OAAS,4BAA4B,OAAS,GAAG,KAAO,wBAAwB,CAAC,IAAM,WAAW,OAAS,qCAAqC,OAAS,GAAG,KAAO,iCAAiC,CAAC,GAAK,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,yBAAyB,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,iBAAiB,KAAO,cAAc,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,KAAO,uBAAuB,CAAC,GAAK,SAAS,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,uBAAuB,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,6BAA6B,CAAC,IAAM,WAAW,OAAS,oBAAoB,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,QAAQ,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,IAAM,UAAU,OAAS,mCAAmC,OAAS,GAAG,KAAO,yBAAyB,CAAC,GAAK,UAAU,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,yBAAyB,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,8BAA8B,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,4BAA4B,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,aAAa,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,sBAAsB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,SAAS,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,qBAAqB,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,2BAA2B,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,eAAe,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,iBAAiB,KAAO,kCAAkC,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,gCAAgC,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,0BAA0B,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,eAAe,KAAO,gBAAgB,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,aAAa,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,gCAAgC,CAAC,GAAK,WAAW,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,+BAA+B,CAAC,IAAM,WAAW,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,+BAA+B,CAAC,GAAK,WAAW,OAAS,4CAA4C,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,kCAAkC,CAAC,IAAM,UAAU,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,IAAI,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,gCAAgC,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,SAAS,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,cAAc,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,qCAAqC,CAAC,IAAM,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,sBAAsB,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,qBAAqB,CAAC,IAAM,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,iCAAiC,CAAC,GAAK,UAAU,OAAS,yCAAyC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,aAAa,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,+BAA+B,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,sBAAsB,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,GAAG,KAAO,+BAA+B,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,kBAAkB,CAAC,IAAM,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,UAAU,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,8BAA8B,CAAC,GAAK,UAAU,OAAS,sCAAsC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,gBAAgB,CAAC,GAAK,WAAW,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,kCAAkC,CAAC,GAAK,WAAW,OAAS,qCAAqC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,mCAAmC,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,wBAAwB,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,yBAAyB,KAAO,QAAQ,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,sCAAsC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,8BAA8B,KAAO,gBAAgB,CAAC,KAAO,yBAAyB,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,cAAc,KAAO,4BAA4B,CAAC,IAAM,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,6BAA6B,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,oBAAoB,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,iCAAiC,CAAC,IAAM,SAAS,OAAS,qCAAqC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,sBAAsB,KAAO,kBAAkB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,+BAA+B,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,aAAa,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,qBAAqB,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,2BAA2B,CAAC,IAAM,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,4BAA4B,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,yBAAyB,CAAC,GAAK,UAAU,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,iCAAiC,CAAC,IAAM,UAAU,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,gCAAgC,CAAC,GAAK,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,kBAAkB,CAAC,GAAK,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,cAAc,KAAO,qBAAqB,CAAC,GAAK,UAAU,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,SAAS,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,eAAe,KAAO,oBAAoB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,uBAAuB,KAAO,iBAAiB,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,uBAAuB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,oBAAoB,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,uBAAuB,CAAC,GAAK,UAAU,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,yBAAyB,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,kBAAkB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,iBAAiB,CAAC,IAAM,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,0BAA0B,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,yBAAyB,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,OAAS,yCAAyC,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,oBAAoB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,qCAAqC,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,oBAAoB,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,eAAe,KAAO,4BAA4B,CAAC,GAAK,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,6BAA6B,CAAC,GAAK,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,qCAAqC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,CAAC,KAAO,UAAU,KAAO,6BAA6B,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,uCAAuC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,CAAC,KAAO,UAAU,KAAO,6BAA6B,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,6BAA6B,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,UAAU,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,iBAAiB,KAAO,oBAAoB,CAAC,IAAM,SAAS,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,wBAAwB,CAAC,GAAK,UAAU,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,6BAA6B,CAAC,IAAM,SAAS,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,gBAAgB,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,yBAAyB,CAAC,GAAK,UAAU,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,yBAAyB,CAAC,GAAK,UAAU,OAAS,mCAAmC,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,sBAAsB,CAAC,GAAK,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,sBAAsB,CAAC,IAAM,WAAW,OAAS,gCAAgC,OAAS,GAAG,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,iBAAiB,KAAO,WAAW,KAAO,wBAAwB,MAAQ,K,+CC3B9mzS,SAASwrB,GAAUt9E,GAEhC,OAAOA,IAAQ,ECCF,SAASu9E,GAAcC,EAAcC,GAElD,OADAD,EAAOF,GAAUE,GAAOC,EAAMH,GAAUG,GACjC,KAAOD,GAAME,UAAU,IAAInzE,IAAI,KAAOkzE,ICHxC,MAAME,GAAa,KAAO/4B,OAAOC,kBAC3B+4B,GAAc,KAAO,SAAWC,IAAI,IACpCC,GAAaF,GAAYG,OAAO,SCDtC,SAASC,GAAgB78E,EAA8B88E,EAAO,KACnE,OAAO,eAAiB98E,aAAiB5D,WAAa,IAAI4D,GAASA,EAAO88E,GCkB5E,MAAMC,IAAa,0BAA8BrzE,GAAsB,cAAhBA,EAAEszE,YAA2B7rF,GAC9E8rF,IAAY,0BAA8BvzE,GAAsB,aAAhBA,EAAEszE,YAA0B7rF,GAC5E+rF,IAAU,0BAA8BxzE,GAAsB,WAAhBA,EAAEszE,YAAwB7rF,GACxEgsF,IAAc,8BAAkCzzE,GAAsB,gBAAhBA,EAAEszE,YAA6B7rF,GAK3F,MAAMisF,GAUJzqF,YAAY1C,EAA4D,IAThE,KAAAs/C,UAAY,KACZ,KAAA/yB,OAAS,EACT,KAAA6gE,SAAU,EACV,KAAA/hF,OAAQ,EAOdzI,KAAK08C,UAAYt/C,EAAQqtF,gBAAkB,KAC3CzqF,KAAKwqF,QAAUptF,EAAQotF,UAAW,EAClCxqF,KAAK0qF,eAGAA,eACL1qF,KAAKoJ,OAAS,IAAIuhF,YAAY3qF,KAAK08C,WACnC18C,KAAK4qF,QAAU,IAAIC,WAAW7qF,KAAKoJ,QACnCpJ,KAAK8qF,SAAW,IAAIvhF,WAAWvJ,KAAKoJ,QAG/B2hF,WACL,MAAMC,EAAe,IAAIL,YAAY3qF,KAAK2pB,QAQpCshE,EAAc,IAAIJ,WAAWG,GAQnC,OAPAC,EAAY7iF,IAAIpI,KAAK4qF,QAAQM,SAAS,EAAGlrF,KAAK2pB,OAAS,IAOhDshE,EAGFE,YACL,OAAOnrF,KAAK+qF,WAAW3hF,OAKlBgiF,SAASC,GAAiB,GAC/B,GAAGA,EAAO,CACR,MAAML,EAAe,IAAIL,YAAY3qF,KAAK2pB,QACpC2hE,EAAc,IAAI/hF,WAAWyhF,GAInC,OAFAM,EAAYljF,IAAIpI,KAAK8qF,SAASI,SAAS,EAAGlrF,KAAK2pB,SAExC2hE,EAGT,MAAMn+E,EAAkB,IAAIrM,MAAMd,KAAK2pB,QACvC,IAAI,IAAI9jB,EAAI,EAAGA,EAAI7F,KAAK2pB,OAAQ9jB,IAC9BsH,EAAMtH,GAAK7F,KAAK8qF,SAASjlF,GAE3B,OAAOsH,EAGFo+E,YACL,OAAOvrF,KAAK2pB,OAGP6hE,YAAYC,GACjB,GAAGzrF,KAAK2pB,OAAS8hE,EAAYzrF,KAAK08C,UAChC,OAIF18C,KAAK08C,UAAwF,EAA5En9B,KAAK+mB,KAAK/mB,KAAK8D,IAAqB,EAAjBrjB,KAAK08C,UAAe18C,KAAK2pB,OAAS8hE,EAAY,IAAM,GACxF,MAAMC,EAAiB1rF,KAAKoJ,OAEtBuiF,EAAgB,IAAId,WAAWa,GAErC1rF,KAAK0qF,eAEL,IAAIG,WAAW7qF,KAAKoJ,QAAQhB,IAAIujF,GAK3BC,SAAS/lF,EAAWgmF,GACzB7rF,KAAKyI,OAASpJ,QAAQc,IAAI,MAAO0F,EAAEuH,SAAS,IAAKvH,EAAGgmF,GAEpD,MAAMliE,EAAS3pB,KAAK2pB,OAAS,EAK7B,OAJA3pB,KAAKwrF,YAAY,GACjBxrF,KAAK4qF,QAAQjhE,GAAU9jB,EACvB7F,KAAK2pB,QAAU,EAERA,EAGFmiE,SAASjmF,EAAWgmF,GACzB,OAAO7rF,KAAK4rF,SAAS/lF,GAAIgmF,GAAS,IAAM,QAGnCE,UAAUlmF,EAAYgmF,GACxBhmF,EACD7F,KAAK4rF,SAASxB,IAAWyB,GAAS,IAAM,SAExC7rF,KAAK4rF,SAAS1B,IAAY2B,GAAS,IAAM,SAItCG,WAAWC,EAAeC,EAAcL,GAC7C7rF,KAAK4rF,SAASM,GAAOL,GAAS,IAAM,cACpC7rF,KAAK4rF,SAASK,GAAQJ,GAAS,IAAM,eAGhCM,UAAUC,EAAwCP,GACvD,GAAG/qF,MAAMmD,QAAQmoF,GACf,OAAoB,IAAjBA,EAAMjuF,OACA6B,KAAKgsF,WAAWI,EAAM,GAAIA,EAAM,GAAIP,GAEpC7rF,KAAKqsF,cAAcD,EAAO,GAAIP,GAIzC,MAAMS,GD3IuBC,EC2II,KAAOH,ID1I5BI,aAAe5C,GAAYrzE,IAAIg2E,GAAUA,EADlD,IAA0BA,EC4I7B,MAAM,SAACE,EAAQ,UAAEC,GAAaJ,EAAQK,OAAO,YACvCnD,EAAOiD,EAASG,aAChBnD,EAAMiD,EAAUE,aAEtB5sF,KAAK4rF,SAASnC,GAAMoC,GAAS,IAAM,cACnC7rF,KAAK4rF,SAASpC,GAAOqC,GAAS,IAAM,eAG/BgB,YAAYj/D,EAAQi+D,GACzB,MAAMziF,EAAS,IAAIuhF,YAAY,GACzBC,EAAU,IAAIC,WAAWzhF,GACZ,IAAI0jF,aAAa1jF,GAEzB,GAAKwkB,EAEhB5tB,KAAK4rF,SAAShB,EAAQ,IAAKiB,GAAS,IAAM,gBAC1C7rF,KAAK4rF,SAAShB,EAAQ,IAAKiB,GAAS,IAAM,iBAGrCkB,YAAYz5B,EAAWu4B,GAC5B7rF,KAAKyI,OAASpJ,QAAQc,IAAI,MAAOmzD,GAAIu4B,GAAS,IAAM,gBAE3C/gF,IAANwoD,IACDA,EAAI,IAEN,MAAM05B,EAAQC,SAASvtF,mBAAmB4zD,IAE1CtzD,KAAKwrF,YAAYwB,EAAM7uF,OAAS,GAEhC,MAAM4O,EAAMigF,EAAM7uF,OACf4O,GAAO,IACR/M,KAAK8qF,SAAS9qF,KAAK2pB,UAAY5c,GAE/B/M,KAAK8qF,SAAS9qF,KAAK2pB,UAAY,IAC/B3pB,KAAK8qF,SAAS9qF,KAAK2pB,UAAkB,IAAN5c,EAC/B/M,KAAK8qF,SAAS9qF,KAAK2pB,WAAmB,MAAN5c,IAAiB,EACjD/M,KAAK8qF,SAAS9qF,KAAK2pB,WAAmB,SAAN5c,IAAmB,IAErD,IAAI,IAAIlH,EAAI,EAAGA,EAAIkH,EAAKlH,IACtB7F,KAAK8qF,SAAS9qF,KAAK2pB,UAAYqjE,EAAMlb,WAAWjsE,GAIlD,KAAM7F,KAAK2pB,OAAS,GAClB3pB,KAAK8qF,SAAS9qF,KAAK2pB,UAAY,EAI5BujE,WAAW//E,EAA4C0+E,GACzD1+E,aAAiBw9E,YAClBx9E,EAAQ,IAAI5D,WAAW4D,QACLrC,IAAVqC,IACRA,EAAQ,IAGVnN,KAAKyI,OAASpJ,QAAQc,IAAI,MAAO+M,EAAWC,IAAqB0+E,GAAS,IAAM,UAGhF,MAAM9+E,EAAOI,EAAqBhP,OAelC,IAdA6B,KAAKwrF,YAAYz+E,EAAM,GACpBA,GAAO,IACR/M,KAAK8qF,SAAS9qF,KAAK2pB,UAAY5c,GAE/B/M,KAAK8qF,SAAS9qF,KAAK2pB,UAAY,IAC/B3pB,KAAK8qF,SAAS9qF,KAAK2pB,UAAkB,IAAN5c,EAC/B/M,KAAK8qF,SAAS9qF,KAAK2pB,WAAmB,MAAN5c,IAAiB,EACjD/M,KAAK8qF,SAAS9qF,KAAK2pB,WAAmB,SAAN5c,IAAmB,IAGrD/M,KAAK8qF,SAAS1iF,IAAI+E,EAAqBnN,KAAK2pB,QAC5C3pB,KAAK2pB,QAAU5c,EAGT/M,KAAK2pB,OAAS,GAClB3pB,KAAK8qF,SAAS9qF,KAAK2pB,UAAY,EAI5B0iE,cAAcl/E,EAA4CggF,EAActB,GAC1E1+E,aAAiBw9E,cAClBx9E,EAAQ,IAAI5D,WAAW4D,IAGzB,MAAMJ,EAAOI,EAAqBhP,OAClC,GAAIgvF,EAAO,IAAc,EAANpgF,IAAaogF,EAAM,CACpC,MAAM7tF,EAAQ,IAAI8L,MAAM,iBAAmB+hF,EAAO,KAAOpgF,GAEzD,MADA1N,QAAQC,MAAMA,EAAO6N,EAAO0+E,GACtBvsF,EAGRU,KAAKyI,OAASpJ,QAAQc,IAAI,MAAO+M,EAAWC,IAAuB0+E,GAAS,IAAM,OAASsB,GAC3FntF,KAAKwrF,YAAYz+E,GAEjB/M,KAAK8qF,SAAS1iF,IAAI+E,EAAqBnN,KAAK2pB,QAC5C3pB,KAAK2pB,QAAU5c,EAGVqgF,cAAcjgF,EAA0B0+E,GAC1C1+E,aAAiBw9E,cAClBx9E,EAAQ,IAAI5D,WAAW4D,IAGzB,MAAMJ,EAAMI,EAAMhP,OAElB6B,KAAKyI,OAASpJ,QAAQc,IAAI,MAAO+M,EAAWC,GAAS0+E,GAAS,IAC9D7rF,KAAKwrF,YAAYz+E,GAEjB/M,KAAK8qF,SAAS1iF,IAAI+E,EAAOnN,KAAK2pB,QAC9B3pB,KAAK2pB,QAAU5c,EAGVsgF,YAAYC,EAAoBj5E,GACrC,MACMk5E,GADSvtF,KAAKwqF,QAAU,WAAiB,QACrBgD,QAAQjqF,MAAMkqF,GAAMA,EAAExkF,SAAWqkF,IAE3D,IAAIC,EACF,MAAM,IAAIniF,MAAM,aAAekiF,EAAa,UAG9CttF,KAAK8rF,SAASyB,EAAWjvF,GAAIgvF,EAAa,QAE1C,MAAM1uF,EAASyV,EAAOzV,QAAUyV,EAC1Bq5E,EAA8C,GAEpD,IAAI,MAAMC,KAASJ,EAAWl5E,OAAQ,CACpC,IAAI5U,EAAOkuF,EAAMluF,KAEjB,IAA0B,IAAvBA,EAAKrD,QAAQ,KAAa,CAC3B,MAAMwxF,EAAWnuF,EAAKiI,MAAM,KACtBmmF,EAAWD,EAAS,GAAGlmF,MAAM,KAEnC,KAAK2M,EAAOw5E,EAAS,IAAO,IAAMA,EAAS,IAAM,CAC/C,KAAmB,SAAhBD,EAAS,GAAgBhvF,EAAO+uF,EAAM1tF,WAA+B6K,IAAvBuJ,EAAOs5E,EAAM1tF,OAI5D,SAFAoU,EAAOw5E,EAAS,KAAO,IAAMA,EAAS,GAO1CpuF,EAAOmuF,EAAS,GAIlB,MAAMxrF,EAASpC,KAAK8tF,YAAYz5E,EAAOs5E,EAAM1tF,MAAOR,EAAM6tF,EAAa,IAAMK,EAAM1tF,KAAO,KAE9E,MAATR,IACD4U,EAAOs5E,EAAM1tF,MAAQoU,EAAOs5E,EAAM1tF,OAAS,EAC3CytF,EAAaC,EAAM1tF,MAAQmC,GAI/B,IAAI,MAAM2rF,KAAaL,EACrB1tF,KAAK4qF,QAAQ8C,EAAaK,IAAc15E,EAAO05E,GAGjD,OAAOR,EAAW9tF,KAGbquF,YAAYt8E,EAAU/R,EAAcosF,GAEzC,OAAOpsF,GACL,IAAK,IACH+R,EAAMA,GAAO,EACf,IAAK,MACH,OAAOxR,KAAK8rF,SAASt6E,EAAKq6E,GAC5B,IAAK,OACH,OAAO7rF,KAAKmsF,UAAU36E,EAAKq6E,GAC7B,IAAK,SACH,OAAO7rF,KAAKqsF,cAAc76E,EAAK,IAAKq6E,GACtC,IAAK,SACH,OAAO7rF,KAAKqsF,cAAc76E,EAAK,IAAKq6E,GACtC,IAAK,SACH,OAAO7rF,KAAKqsF,cAAc76E,EAAK,IAAKq6E,GACtC,IAAK,SACH,OAAO7rF,KAAK+sF,YAAYv7E,EAAKq6E,GAC/B,IAAK,QACH,OAAO7rF,KAAKktF,WAAW17E,EAAKq6E,GAC9B,IAAK,SACH,OAAO7rF,KAAK6sF,YAAYr7E,EAAKq6E,GAC/B,IAAK,OACH,OAAO7rF,KAAK+rF,UAAUv6E,EAAKq6E,GAC7B,IAAK,OACH,OAGJ,GAAG/qF,MAAMmD,QAAQuN,GAAM,CACrB,GAAyB,WAAtB/R,EAAKuuF,OAAO,EAAG,GAChBhuF,KAAK4rF,SAASvB,GAAQwB,EAAQ,aACzB,GAAyB,WAAtBpsF,EAAKuuF,OAAO,EAAG,GACvB,MAAM,IAAI5iF,MAAM,uBAAyB3L,GAG3C,MAAMwuF,EAAWxuF,EAAKuuF,OAAO,EAAGvuF,EAAKtB,OAAS,GAC9C6B,KAAK4rF,SAASp6E,EAAIrT,OAAQ0tF,EAAQ,WAClC,IAAI,IAAIhmF,EAAI,EAAGA,EAAI2L,EAAIrT,OAAQ0H,IAC7B7F,KAAK8tF,YAAYt8E,EAAI3L,GAAIooF,EAAUpC,EAAQ,IAAMhmF,EAAI,KAGvD,OAAO,EACF,GAAuC,WAApCpG,EAAKuuF,OAAO,EAAG,GAAG7xF,cAC1B,MAAM,IAAIiP,MAAM,yBAGlB,KAAI,EAAAwW,GAAA,GAASpQ,GACX,MAAM,IAAIpG,MAAM,2BAA6B3L,GAG/C,MAAMyuF,EAASluF,KAAKwqF,QAAU,WAAiB,OACzCL,EAAY34E,EAAO,EACzB,IAAI28E,GAAS,EACb,MAAMC,EAAsCF,EAAOj/D,aAAa1rB,MAAMsT,GAAMA,EAAEszE,YAAcA,IAM5F,IAJGgE,EAA6B,MAAnB1uF,EAAKlC,OAAO,MACvBkC,EAAOA,EAAKuuF,OAAO,KAGjBI,EACF,MAAM,IAAIhjF,MAAM,gBAAkB++E,EAAY,UAG7CA,IAAc1qF,IACf0uF,GAAS,GAGPA,GACFnuF,KAAK4rF,SAASwC,EAAgB9vF,GAAIutF,EAAQ,IAAM1B,EAAY,SAG9D,MAAMvrF,EAAS4S,EAAI5S,OACb8uF,EAA8C,GAEpD,IAAI,MAAMC,KAASS,EAAgB/5E,OAAQ,CACzC,IAAI5U,EAAOkuF,EAAMluF,KAGjB,IAA0B,IAAvBA,EAAKrD,QAAQ,KAAa,CAC3B,MAAMwxF,EAAWnuF,EAAKiI,MAAM,KACtBmmF,EAAWD,EAAS,GAAGlmF,MAAM,KAInC,KAAK8J,EAAIq8E,EAAS,IAAO,IAAMA,EAAS,IAAM,CAC5C,KAAmB,SAAhBD,EAAS,GAAgBhvF,GAAUA,EAAO+uF,EAAM1tF,WAA4B6K,IAApB0G,EAAIm8E,EAAM1tF,OAInE,SAFAuR,EAAIq8E,EAAS,KAAO,IAAMA,EAAS,GAMvCpuF,EAAOmuF,EAAS,GAIlB,MAAMxrF,EAASpC,KAAK8tF,YAAYt8E,EAAIm8E,EAAM1tF,MAAOR,EAAMosF,EAAQ,IAAM1B,EAAY,KAAOwD,EAAM1tF,KAAO,KAEzF,MAATR,IACD+R,EAAIm8E,EAAM1tF,MAAQuR,EAAIm8E,EAAM1tF,OAAS,EACrCytF,EAAaC,EAAM1tF,MAAQmC,GAI/B,IAAI,MAAM2rF,KAAaL,EACrB1tF,KAAK4qF,QAAQ8C,EAAaK,IAAcv8E,EAAIu8E,GAG9C,OAAOK,EAAgB3uF,MAI3B,MAAM4uF,GAYJvuF,YAAYsJ,EAAkChM,EAAgE,IAXtG,KAAAusB,OAAS,EAQT,KAAA6gE,SAAmB,EAKtBphF,aAAkBuhF,aACnB3qF,KAAKoJ,OAASA,EACdpJ,KAAK4qF,QAAU,IAAIC,WAAWzhF,GAC9BpJ,KAAK8qF,SAAW,IAAIvhF,WAAWvJ,KAAKoJ,UAEpCpJ,KAAKoJ,OAASA,EAAOA,OACrBpJ,KAAK4qF,QAAU,IAAIC,WAAWzhF,EAAOA,QACrCpJ,KAAK8qF,SAAW1hF,GAKlBpJ,KAAK4wB,SAAWxzB,EAAQwzB,UAAY,GACpC5wB,KAAKwqF,UAAYptF,EAAQotF,QACzBxqF,KAAKyI,WAA0BqC,IAAlB1N,EAAQqL,OAAsBrL,EAAQqL,MAO7C6lF,QAAQzC,GAEd,GAAI7rF,KAAK8qF,SAAS3sF,OAAS6B,KAAK2pB,OAAU,EAExC,MADAtqB,QAAQC,MAAMU,KAAK8qF,SAAU9qF,KAAK2pB,QAC5B,IAAIve,MAAM,qBAAuBygF,GAGzC,MAAMhmF,EAAI7F,KAAK4qF,QAAQ5qF,KAAK2pB,OAAS,GAUrC,OAPA3pB,KAAKyI,OACHpJ,QAAQc,IAAI,MAAO0F,EAAEuH,SAAS,IAAKvH,EAAGgmF,EACpC7rF,KAAK8qF,SAASljF,MAAM5H,KAAK2pB,OAAS,GAAI3pB,KAAK2pB,OAAS,IACpDzc,EAAWlN,KAAK8qF,SAASljF,MAAM5H,KAAK2pB,OAAS,GAAI3pB,KAAK2pB,OAAS,MAEnE3pB,KAAK2pB,QAAU,EAER9jB,EAGF0oF,SAAS1C,GACd,OAAO7rF,KAAKsuF,SAASzC,GAAS,IAAM,QAG/B2C,YAAY3C,GACjB,MAAMziF,EAAS,IAAIuhF,YAAY,GACzBC,EAAU,IAAIC,WAAWzhF,GACzBqlF,EAAa,IAAI3B,aAAa1jF,GAKpC,OAHAwhF,EAAQ,GAAK5qF,KAAKsuF,SAASzC,GAAS,IAAM,gBAC1CjB,EAAQ,GAAK5qF,KAAKsuF,SAASzC,GAAS,IAAM,iBAEnC4C,EAAW,GAIbC,UAAU7C,GACf,MAAMK,EAAOlsF,KAAKsuF,SAASzC,GAAS,IAAM,cAG1C,IAAI8C,EAAQpF,GAFEvpF,KAAKsuF,SAASzC,GAAS,IAAM,eAEVK,GD3e9B,IAAwBK,ECgf3B,OAJuBvsF,KAAKwqF,UAC1BmE,GD7eyBpC,EC6eFoC,GD5ebC,QAAQ9E,IAAcyC,EAAOsC,MAAMjF,IAAe2C,IC+e1DvsF,KAAKwqF,SACJb,GAAWmF,gBAAgBH,EAAMI,OAE3BJ,EAAM/B,aAKV+B,EAAMvhF,SAAS,IAGjB4hF,UAAUnD,GACf,MAAMhmF,EAAI7F,KAAKsuF,SAASzC,GAAS,IAAM,SACvC,OAAGhmF,IAAMukF,IAECvkF,IAAMqkF,KAIhBlqF,KAAK2pB,QAAU,EACR3pB,KAAKivF,YAAY,SAAUpD,IAG7BqD,YAAYrD,GACjB,IAAI9+E,EAAM/M,KAAK8qF,SAAS9qF,KAAK2pB,UAElB,MAAR5c,IACDA,EAAM/M,KAAK8qF,SAAS9qF,KAAK2pB,UACtB3pB,KAAK8qF,SAAS9qF,KAAK2pB,WAAa,EAChC3pB,KAAK8qF,SAAS9qF,KAAK2pB,WAAa,IAGrC,IAUI2pC,EAVA05B,EAAQ,GACZ,IAAI,IAAInnF,EAAI,EAAGA,EAAIkH,EAAKlH,IACtBmnF,GAASmC,OAAOC,aAAapvF,KAAK8qF,SAAS9qF,KAAK2pB,WAIlD,KAAM3pB,KAAK2pB,OAAS,GAClB3pB,KAAK2pB,SAIP,IACE2pC,EAAI+7B,mBAAmBlT,OAAO6Q,IAC9B,MAAMzqF,GACN+wD,EAAI05B,EAKN,OAFAhtF,KAAKyI,OAASpJ,QAAQc,IAAI,MAAOmzD,GAAIu4B,GAAS,IAAM,WAE7Cv4B,EAGFg8B,WAAWzD,GAChB,IAAI9+E,EAAM/M,KAAK8qF,SAAS9qF,KAAK2pB,UAElB,MAAR5c,IACDA,EAAM/M,KAAK8qF,SAAS9qF,KAAK2pB,UACtB3pB,KAAK8qF,SAAS9qF,KAAK2pB,WAAa,EAChC3pB,KAAK8qF,SAAS9qF,KAAK2pB,WAAa,IAGrC,MAAMxc,EAAQnN,KAAK8qF,SAAoB,MAAE9qF,KAAK2pB,OAAQ3pB,KAAK2pB,OAAS5c,GAIpE,IAHA/M,KAAK2pB,QAAU5c,EAGT/M,KAAK2pB,OAAS,GAClB3pB,KAAK2pB,SAKP,OAFA3pB,KAAKyI,OAASpJ,QAAQc,IAAI,MAAO+M,EAAWC,IAAS0+E,GAAS,IAAM,UAE7D1+E,EAKFoiF,cAAcpC,EAAc9B,GAAiB,EAAMQ,GACxD,GAAGsB,EAAO,GACR,MAAM,IAAI/hF,MAAM,iBAAmB+hF,GAGrC,MAAMpgF,EAAMogF,EAAO,EACnB,GAAG9B,EAAO,CACR,MAAMjpF,EAASpC,KAAK8qF,SAAoB,MAAE9qF,KAAK2pB,OAAQ3pB,KAAK2pB,OAAS5c,GAErE,OADA/M,KAAK2pB,QAAU5c,EACR3K,EAGT,MAAM+K,EAAkB,IAAIrM,MAAMiM,GAClC,IAAI,IAAIlH,EAAI,EAAGA,EAAIkH,EAAKlH,IACtBsH,EAAMtH,GAAK7F,KAAK8qF,SAAS9qF,KAAK2pB,UAKhC,OAFA3pB,KAAKyI,OAASpJ,QAAQc,IAAI,MAAO+M,EAAWC,IAAS0+E,GAAS,IAAM,OAASsB,GAEtEhgF,EAKFqiF,cAAcziF,EAAqBs+E,GAAiB,EAAMQ,GAC/D,IAAW,IAAR9+E,IACDA,EAAM/M,KAAKsuF,SAASzC,GAAS,IAAM,YAC1B7rF,KAAK8qF,SAASpgF,WACrB,MAAM,IAAIU,MAAM,6BAA+B2B,EAAM,iBAAmB/M,KAAK8qF,SAASpgF,YAI1F,GAAG2gF,EAAO,CACR,MAAMl+E,EAAQ,IAAI5D,WAAWwD,GAG7B,OAFAI,EAAM/E,IAAIpI,KAAK8qF,SAAoB,MAAE9qF,KAAK2pB,OAAQ3pB,KAAK2pB,OAAS5c,IAChE/M,KAAK2pB,QAAU5c,EACRI,EAGT,MAAMA,EAAkB,IAAIrM,MAAMiM,GAClC,IAAI,IAAIlH,EAAI,EAAGA,EAAIkH,EAAKlH,IACtBsH,EAAMtH,GAAK7F,KAAK8qF,SAAS9qF,KAAK2pB,UAKhC,OAFA3pB,KAAKyI,OAASpJ,QAAQc,IAAI,MAAO+M,EAAWC,GAAS0+E,GAAS,IAEvD1+E,EAGDsiF,YAAYhwF,EAAcosF,GAChC,MAAM9+E,EAAM/M,KAAKsuF,QAAQzC,EAAQ,WAC3BzpF,EAAgB,IAAItB,MAAMiM,GAChC,GAAGA,EAAM,EAAG,CACV,MAAMkhF,EAAWxuF,EAAKuuF,OAAO,EAAGvuF,EAAKtB,OAAS,GAC9C,IAAI,IAAI0H,EAAI,EAAGA,EAAIkH,IAAOlH,EACxBzD,EAAOyD,GAAK7F,KAAKivF,YAAYhB,EAAUpC,EAAQ,IAAMhmF,EAAI,KAI7D,OAAOzD,EAGF6sF,YAAYxvF,EAAcosF,GAC/B,OAAOpsF,GACL,IAAK,IACL,IAAK,MACH,OAAOO,KAAKuuF,SAAS1C,GACvB,IAAK,OACH,OAAO7rF,KAAK0uF,UAAU7C,GACxB,IAAK,SACH,OAAO7rF,KAAKuvF,cAAc,KAAK,EAAM1D,GACvC,IAAK,SACH,OAAO7rF,KAAKuvF,cAAc,KAAK,EAAM1D,GACvC,IAAK,SACH,OAAO7rF,KAAKuvF,cAAc,KAAK,EAAM1D,GACvC,IAAK,SACH,OAAO7rF,KAAKkvF,YAAYrD,GAC1B,IAAK,QACH,OAAO7rF,KAAKsvF,WAAWzD,GACzB,IAAK,SACH,OAAO7rF,KAAKwuF,YAAY3C,GAC1B,IAAK,OACH,OAAO7rF,KAAKgvF,UAAUnD,GACxB,IAAK,OACH,OAAO,EAKX,GAFAA,EAAQA,GAASpsF,GAAQ,SAEH,MAAnBA,EAAKlC,OAAO,IAAoC,UAAtBkC,EAAKuuF,OAAO,EAAG,GAC1C,OAAOhuF,KAAKyvF,YAAYhwF,EAAMosF,GAGhC,MAAMqC,EAASluF,KAAKwqF,QAAU,WAAiB,OAC/C,IAAI4D,EAAsC,KACtCsB,GAAW,EAEf,GAAsB,MAAnBjwF,EAAKlC,OAAO,GAAY,CACzB,MAAMoyF,EAAYlwF,EAAKuuF,OAAO,GAE9B,GADAI,EAAkBF,EAAOj/D,aAAa1rB,MAAMsT,GAAMA,EAAEpX,OAASkwF,KACzDvB,EACF,MAAM,IAAIhjF,MAAM,mCAAqC3L,OAO/C,CACR,MAAMmwF,EAAiB5vF,KAAKsuF,QAAQzC,EAAQ,QAE5C,GAAG+D,IAAmBtF,GAAY,CAChC,MACMuF,GCnrByB1iF,EDkrBZnN,KAAKsvF,WAAWzD,EAAQ,mBChrBlC,aAAa1+E,OAAmCrC,IDorBzD,OAFwB,IAAIujF,GAAkBwB,GAEvBZ,YAAYxvF,EAAMosF,GAG3C,GAAG+D,IAAmBvF,GACpB,OAAOrqF,KAAKyvF,YAAYhwF,EAAMosF,GAGhC,IAAI1qF,EAAQ+sF,EAAO4B,kBACnB,IAAI3uF,EAAO,CACT+sF,EAAO4B,kBAAoB3uF,EAAQ,GACnC,IAAI,IAAI0E,EAAI,EAAGkH,EAAMmhF,EAAOj/D,aAAa9wB,OAAQ0H,EAAIkH,EAAKlH,IACxD1E,EAAM+sF,EAAOj/D,aAAappB,GAAGvH,IAAMuH,EAIvC,MAAMA,EAAI1E,EAAMyuF,GAKhB,QAJS9kF,IAANjF,IACDuoF,EAAkBF,EAAOj/D,aAAappB,KAGpCuoF,GAAmBpuF,KAAKwqF,QAAS,CACnC,MAAMuF,EAAiB,OACvB,IAAI,IAAIlqF,EAAI,EAAGkH,EAAMgjF,EAAe9gE,aAAa9wB,OAAQ0H,EAAIkH,EAAKlH,IAChE,IAAIkqF,EAAe9gE,aAAappB,GAAGvH,KAAOsxF,EAAgB,CACxDxB,EAAkB2B,EAAe9gE,aAAappB,UAEvC7F,KAAKwqF,QACZkF,GAAW,EACX,OAKN,IAAItB,EAAiB,CAGnB,IAAI4B,EAAcC,EAFlB5wF,QAAQC,MAAM,yBAA0BswF,GAGxC,IACEI,EAAOhwF,KAAKuuF,SAAS1C,GACrBoE,EAAOjwF,KAAKuuF,SAAS1C,GACrB,MAAMpiF,IAIR,MAAM,IAAI2B,MAAM,0BAA4BwkF,EAAiB,IAAMI,EAAO,IAAMC,EAAO,IAAMpE,ICluBtF,IAAwB1+E,EDsuBnC,MAAMg9E,EAAYiE,EAAgBjE,UAE5B/nF,EAAc,CAAC,EAAK+nF,GACpB+F,GAAelwF,KAAKwqF,QAAU,MAAQ,IAAML,EAClD,GAAGnqF,KAAK4wB,SAASs/D,GACflwF,KAAK4wB,SAASs/D,GAAa9tF,EAAQypF,EAAQ,IAAM1B,EAAY,UAE7D,IAAI,IAAItkF,EAAI,EAAGkH,EAAMqhF,EAAgB/5E,OAAOlW,OAAQ0H,EAAIkH,EAAKlH,IAAK,CAChE,MAAM8nF,EAAQS,EAAgB/5E,OAAOxO,GACrC,IAAIpG,EAAOkuF,EAAMluF,KAEL,MAATA,QAAkCqL,IAAlB1I,EAAOxD,SACxBwD,EAAOxD,OAAS,IAGlB,MAAMuxF,GAAiC,IAAvB1wF,EAAKrD,QAAQ,KAC7B,GAAG+zF,EAAQ,CACT,MAAMvC,EAAWnuF,EAAKiI,MAAM,KACtBmmF,EAAWD,EAAS,GAAGlmF,MAAM,KAEnC,KAAKtF,EAAOyrF,EAAS,IAAO,IAAMA,EAAS,IAEzC,SAKFpuF,EAAOmuF,EAAS,GAGlB,MAAMrpF,EAAQvE,KAAKivF,YAAYxvF,EAAMosF,EAAQ,IAAM1B,EAAY,KAAOwD,EAAM1tF,KAAO,KAEhFkwF,GAAmB,SAAT1wF,EACX2C,EAAOxD,OAAO+uF,EAAM1tF,MAAQsE,EAM5BnC,EAAOurF,EAAM1tF,MAAQsE,EAS3B,OAJGmrF,IACD1vF,KAAKwqF,SAAU,GAGL,cAAT/qF,EACMO,KAAKowF,gBAAgBhuF,GAGvBA,EAGDguF,gBAAgBC,GACtB,IAAIA,EAAUhyF,EAAG,OAAOgyF,EACxB,OAAOA,EAAUhyF,GACf,IAAK,WACH,OAAO,KACT,IAAK,aAAc,CACjB,MAAM0b,EAAW,GACXu2E,EAAeD,EAAU9rF,MAC/B,IAAI,IAAIsB,EAAI,EAAG1H,EAASmyF,EAAanyF,OAAQ0H,EAAI1H,IAAU0H,EAAG,CAC5D,MAAM0qF,EAAcD,EAAazqF,GACjCkU,EAAIw2E,EAAYhpF,KAAOvH,KAAKowF,gBAAgBG,EAAYhsF,OAE1D,OAAOwV,EAET,QACE,OAAOs2E,EAAU9rF,OAIhBgnF,YACL,OAAOvrF,KAAK2pB,OAGP6mE,UAAU7mE,GACf3pB,KAAK2pB,OAASA,GAYlB,uBAAmC0kE,GACnC,qBAAiC9D,G,eEt0BlB,SAASkG,GACtBtjF,EACAujF,EAAoB,GACpBC,EACAC,GAAyB,EACzBpjE,GAAU,GAEV,MAAMzgB,EAAOI,EAAsBzC,YAAeyC,EAAqBhP,OACjE0yF,EAAcD,EAAyBF,EAAY3jF,EAAM2jF,EAAa3jF,EAAM2jF,EAClF,GAAGG,EAAc,GAAKA,EAAcH,EAAW,CAE7C,MAAMI,EAAU,IAAIvnF,WAAWsnF,GAC/B,GAAGF,EACD,IAAI,IAAI9qF,EAAI,EAAGA,EAAIgrF,IAAehrF,EAChCirF,EAAQjrF,GAAK,OAGfoF,EAAU6lF,GAGZ,OAAG3jF,aAAiBw9E,aACVn9D,GAAU,EAAAujE,GAAA,GAAcD,EAAS3jF,IAAS,EAAA4jF,GAAA,GAAc5jF,EAAO2jF,IAAU1nF,OACzE+D,aAAiB5D,WACjBikB,GAAU,EAAAujE,GAAA,GAAcD,EAAS3jF,IAAS,EAAA4jF,GAAA,GAAc5jF,EAAO2jF,GAG/DtjE,EAAU,IAAIsjE,GAAS5sF,OAAOiJ,GAASA,EAAMjJ,OAAO,IAAI4sF,IAIpE,OAAO3jF,E,iUCmDT,MACM6jF,GAQF,CACF9/E,OAAQ,CACN+/E,mBAAoB,EACpBC,mBAAoB,GACpBC,aAAc,IACdC,YAAa,EACbC,kBAAmB,KAErB91D,KAAM,CACJ01D,mBAAoB,GACpBC,mBAAoB,GACpBC,aAAc,IACdC,YAAa,EACbC,kBAAmB,OAGjBC,GAAmC,CACvCC,YAAY,EACZC,mBAAmB,GAErB,IAAIC,GACAC,GAAkB,EAEP,MAAMC,GA2EnB7xF,YACUiyC,EACA/vB,EACD1Z,EACCs+E,EACAE,EACRC,EACA3pF,EAA4B,IANpB,KAAA20C,iBAAAA,EACA,KAAA/vB,YAAAA,EACD,KAAA1Z,KAAAA,EACC,KAAAs+E,QAAAA,EACA,KAAAE,UAAAA,EAzEF,KAAA8K,mBAAoC,GAEpC,KAAAC,aAEJ,GAEI,KAAAC,gBAA6C,GAC7C,KAAAC,YAA6B,GAC7B,KAAAC,iBAA6B,GAK7B,KAAAC,QAAkB,EAOlB,KAAAC,sBAAwB,EAExB,KAAAtX,SAAU,EAkBX,KAAA4L,UAAW,EACV,KAAA7/E,OAA2B,WAC3B,KAAAwrF,iBAAmB,EAEnB,KAAA1pF,MAAQ,MAAwB,UAEjC,KAAA2pF,eAAiB,EA2XhB,KAAAC,wBAA0B,K,MAGhC,GAAGryF,KAAKsyF,8BAAgCtyF,KAAKuR,YAAcvR,KAAKuR,UAAU1I,UAAW,OAUrF,MAAM1N,EAAW6E,KAAKsyF,6BAA8B,SAC9CtB,EAAShxF,KAAKgxF,OACdI,EAAcpxF,KAAKgxF,OAAOI,YAC1BmB,EAAehzE,KAAKC,IAAqB,QAAjB,EAAAxf,KAAKuyF,oBAAY,QAAI,EAAGnB,GAChDoB,EAAkBjzE,KAAKkzE,MAAMzB,EAAOC,mBAAqBsB,EAAenB,GAAeJ,EAAOE,mBAAqBF,EAAOC,qBAC1HyB,EAAgC,IAAlBF,EACdxK,EAAYhoF,KAAK2yF,kBAAoBhkF,KAAK5J,MAC1C6tF,EAAS5yF,KAAK6yF,2BAA4B,UAC1Cz1F,EAA4B,CAACo0F,mBAAmB,GACtDxxF,KAAK8yF,YAAY,wBAAyB,CACxCC,QAASH,EACTI,iBAAkBR,GACjBp1F,GAEH,MAAM+C,EAAMH,KAAKG,IAAIyyB,WAAW,2BAChC5yB,KAAKyI,OAAStI,EAAIsI,MAAM,iBAAiBiqF,mBAA6B1yF,KAAKuyF,uBAAuBn1F,EAAQ+Q,qBAAqBykF,KAC/H,MAAMK,EAAgBjkF,EAAA,aAAe7T,EAASyG,OAAQ8wF,GAkCtDv3F,EACC6J,MAjCmBiuB,IAClB/tB,aAAa+tF,GACb,MAAMC,EAAcvkF,KAAK5J,MAAQijF,EAGjC,GAFAhoF,KAAKuyF,aAAeW,EAAc,IAClClzF,KAAKyI,OAAStI,EAAIsI,MAAM,iBAAiBwqB,YAAiBs/D,YAAuBn1F,EAAQ+Q,aACtF+kF,EAAcR,EACf,WAAM5nF,EAEN,OAAO,EAAAZ,EAAA,GAAMqV,KAAK8D,IAAI,EAAGrjB,KAAKgxF,OAAOG,aAAe+B,OA0BvD7kF,OAtBiB,KAChBnJ,aAAa+tF,GACb,MAAM1hF,EAAYvR,KAAKuR,UACpBvR,KAAKsyF,8BAAgCn3F,IAAaoW,MAAAA,OAAS,EAATA,EAAW3D,cAIhEzN,EAAIb,MAAM,4BAA6BU,KAAKuyF,aAAcn1F,EAAQ+Q,WAClEoD,EAAU3D,WAAWjL,YAetB+gC,SAZiB,KACb1jC,KAAKsyF,8BAAgCn3F,IAIxC6E,KAAKsyF,iCAA8BxnF,EACnC9K,KAAKqyF,+BAUD,KAAAc,cAAgB,KACtB,MAAMC,EAAUpzF,KAAK8N,cAErB,GAAI9N,KAAKqzF,iBAAmB1kF,KAAK5J,MAAQ/E,KAAKqzF,iBAC5CrzF,KAAK46E,SACL56E,KAAKkoF,aACLloF,KAAK2nF,gBAEL,OAAO,EAGTvC,GAAA,MAAmB,MAAMpgF,MAAMo/E,IAC1BgP,IACDhP,IAAapkF,KAAKsI,MACftI,KAAKszF,YAAc3kF,KAAK5J,MAAQ/E,KAAKszF,aAM1CtzF,KAAKuzF,mBA8BD,KAAAC,gBAAmBrxF,IAIzB,GAHAnC,KAAKyI,OAASzI,KAAKG,IAAI,mBAAoBgC,GAC3CnC,KAAKyzF,+BAEDzzF,KAAKuR,UAEP,YADAvR,KAAKG,IAAI2C,KAAK,oCAIhB,MAAM4wF,EAAa,IAAInJ,GAAgB,CAACC,SAAS,IAC3CoI,GAAS,UAEfc,EAAWrG,YAAY,OAAQ,CAC7B0F,QAASH,IAGX,MAAMe,EAAc,CAClBj6C,OAAQ15C,KAAKgiB,YAAY4xE,aACzBC,OAAQ7zF,KAAK8zF,eAAc,GAC3B/qF,KAAM2qF,EAAWtI,UAAS,IAGzBprF,KAAK46E,SACN56E,KAAK6N,oBAAoB,gBAG3B7N,KAAK+zF,qBAAqBJ,GAAa3uF,MAAK,KAC1ChF,KAAKg0F,eAAc,MAClB,KACDh0F,KAAKyI,OAASzI,KAAKG,IAAI,QAAsC,IAA7BH,KAAKkyF,uBACrClyF,KAAKi0F,uBAAyBjlF,EAAA,cAAe,IAAMhP,KAAKwzF,gBAAgB,wCAAqE,IAA7BxzF,KAAKkyF,sBAA+B,GACpJlyF,KAAKkyF,sBAAwB3yE,KAAKC,IAAI,GAAiC,IAA7Bxf,KAAKkyF,2BAnfjDlyF,KAAKk0F,cAAe,EAAAC,GAAA,GAAoBn0F,KAAK4mF,SAC7C5mF,KAAK+mF,YAAa,EAAAoN,GAAA,GAAoBpN,GAEtC/mF,KAAKo0F,eAAiBh3F,EAAQ0lF,WAC9B9iF,KAAKq0F,iBAAmBj3F,EAAQ+hF,aAChCn/E,KAAK2nF,gBAAkB3nF,KAAKo0F,cAAgBp0F,KAAKq0F,eACjDr0F,KAAKgxF,OAAShxF,KAAK2nF,gBAAkBqJ,GAAOz1D,KAAOy1D,GAAO9/E,OAE1D,MAAMjB,EAASjQ,KAAKo0F,aAAe,KAAOp0F,KAAKq0F,eAAiB,KAAO,GACvEr0F,KAAKC,KAAO,OAASqI,EAAO2H,EAE5BjQ,KAAKG,KAAM,EAAAyI,EAAA,IAAO5I,KAAKC,MAAQgQ,EAAS,GAAK,MAAQ,IAAMyhF,KAAmB,KAAA/oF,IAAsC,WAAiB,WACrI3I,KAAKG,IAAI,eAQTH,KAAKs0F,gBASCA,gBACNt0F,KAAKu0F,MAAQ,EACbv0F,KAAKw0F,cAAgBx0F,KAAKoO,UAC1BpO,KAAKoO,UAAYnD,EAAU,IAAI1B,WAAW,IAYpCkrF,kBAAkBC,GACxB,MAAMC,EAAc30F,KAAK6xF,aAAa6C,GACtC,QAAIC,IAIDA,EAAYC,YACb,EAAA5uE,GAAA,GAAe2uE,EAAY54C,OAAO,CAAC84C,EAAoBrwF,KACrD,MAAMswF,EAAmB90F,KAAKy0F,kBAAkBI,GAC5CC,EAGFH,EAAY54C,MAAMv3C,GAAOswF,EAAiBp7C,OAF1Ci7C,EAAY54C,MAAM9xC,OAAOzF,EAAK,MAOpCmwF,EAAYj7C,OAAS15C,KAAKgiB,YAAY4xE,aACtCe,EAAYd,OAAS7zF,KAAK8zF,cAAca,EAAYnD,mBAAqBmD,EAAYC,WAElF50F,KAAKyI,OACNzI,KAAKG,IAAI,0BAA0Bu0F,UAAsBC,EAAYj7C,UAGvE15C,KAAK6xF,aAAa8C,EAAYj7C,QAAUi7C,SACjC30F,KAAK6xF,aAAa6C,GAElBC,GAGDb,cAActC,GACpB,IAAI+C,EAAqB,EAAbv0F,KAAKu0F,MAOjB,OALI/C,IACF+C,IACAv0F,KAAKu0F,SAGAA,EAGFzB,YAAY7pF,EAAgBoL,EAAajX,GAC9C,MAAMs2F,EAAa,IAAInJ,GAAgB,CAACC,SAAS,IAEjDkJ,EAAWrG,YAAYpkF,EAAQoL,GAE/B,MAAMlG,EAAYnO,KAAKgiB,YAAY4xE,aAC7BW,EAAQv0F,KAAK8zF,gBACbjyF,EAAU,CACd63C,OAAQvrC,EACR0lF,OAAQU,EACRxrF,KAAM2qF,EAAWtI,UAAS,IAO5B,OAJG,WACDprF,KAAKG,IAAI,UAAW8I,EAAQoL,EAAQlG,EAAWomF,GAG1Cv0F,KAAK+0F,YAAYlzF,EAASzE,GAG5B43F,eAAextF,EAAapK,GACjC,MAAMs2F,EAAa,IAAInJ,GAAgB,CAACC,SAAS,IACjDkJ,EAAW5F,YAAYtmF,EAAQ,UAE/B,MAAM2G,EAAYnO,KAAKgiB,YAAY4xE,aAC7BW,EAAQv0F,KAAK8zF,cAAc12F,EAAQo0F,mBACnC3vF,EAAU,CACd63C,OAAQvrC,EACR0lF,OAAQU,EACRxrF,KAAM2qF,EAAWtI,UAAS,IAO5B,OAJG,WACDprF,KAAKG,IAAI,aAAcqH,EAAQ2G,EAAWomF,GAGrCv0F,KAAK+0F,YAAYlzF,EAASzE,GAG5BirF,YAAYp/E,EAAgBoL,EAAc,GAAIjX,EAA4B,IAC/E,MAAMs2F,EAAa,IAAInJ,GAAgBntF,GAEvC,IAAI4C,KAAKi1F,iBAAkB,CAGzB,MAAMC,EAAkB,qBAAyBzH,GAAmB,oBAAbA,EAAExkF,SACzD,IAAIisF,EAAiB,MAAM,IAAI9pF,MAAM,uBACrCsoF,EAAW5H,UAAUoJ,EAAgB52F,GAAI,mBAGzCo1F,EAAW5H,SAAS,SAAc,SAElC,MAAMqJ,EAAiB,qBAAyB1H,GAAmB,mBAAbA,EAAExkF,SACxD,IAAIksF,EAAgB,MAAM,IAAI/pF,MAAM,sBAEpCsoF,EAAW5H,UAAUqJ,EAAe72F,GAAI,kBACxCo1F,EAAW5H,SAAS,EAAK,SACzB4H,EAAW5H,SAAS,OAAQ,UAC5B4H,EAAW3G,YAAY/mF,IAAiBlK,YAAc,oBAAqB,gBAC3E43F,EAAW3G,YAAYhxF,UAAUQ,UAAY,mBAAoB,kBACjEm3F,EAAW3G,YAAY,aAAe,iBAAmB,IAAM,WAAa,IAAK,eACjF2G,EAAW3G,YAAYhxF,UAAU04B,UAAY,KAAM,oBACnDi/D,EAAW3G,YAAY,aAAc,aACrC2G,EAAW3G,YAAY/sF,KAAK+xC,iBAAiBtd,SAAU,aAczD,GAAGr3B,EAAQqtD,eAAgB,CACzB,QAAiC3/C,IAA9B2mF,GAAyC,CAC1C,MAAMhE,EAAI,qBAAyBA,GAAmB,mBAAbA,EAAExkF,SAC3CwoF,GAA4BhE,GAAKA,EAAEnvF,GAAK,EAGvCmzF,IAKDiC,EAAW5H,SAAS2F,GAA2B,kBAC/CiC,EAAWvH,UAAU/uF,EAAQqtD,eAAgB,WAE7CzqD,KAAKG,IAAIb,MAAM,sBAInBlC,EAAQg4F,WAAa1B,EAAWrG,YAAYpkF,EAAQoL,GAMpD,MAEMxS,EAAU,CACd63C,OAHgB15C,KAAKgiB,YAAY4xE,aAIjCC,OAHY7zF,KAAK8zF,gBAIjB/qF,KAAM2qF,EAAWtI,UAAS,GAC1BiK,OAAO,GAST,OANG,UACDr1F,KAAKG,IAAI,WAAY8I,EAAQpH,EAASwS,EAAQjX,GACtC4C,KAAKyI,OACbzI,KAAKG,IAAI,WAAY8I,EAAQoL,EAAQjX,GAGhC4C,KAAK+0F,YAAYlzF,EAASzE,GAG5BmqF,gBAAgBh2E,GACrB,MAAM+1E,EAAetnF,KAAKuR,UACvB+1E,IACDA,EAAa39E,UAEV3J,KAAKs1F,iBACNpwF,aAAalF,KAAKs1F,gBAClBt1F,KAAKs1F,eAAiB,EACtBt1F,KAAKiyF,QAAU,GAGjBjyF,KAAKi1F,kBAAmB,OAGKnqF,IAA1B9K,KAAKu1F,mBACNpN,cAAcnoF,KAAKu1F,kBACnBv1F,KAAKu1F,sBAAmBzqF,GAG1B9K,KAAKyzF,+BAIPzzF,KAAKG,IAAI,mBAAoBoR,EAAW+1E,GAGxCtnF,KAAKw1F,2BAULx1F,KAAKuR,UAAYA,EACbA,IAIJA,EAAU1H,UAAY7J,KAInBuR,aAAqBlJ,IAEtBrI,KAAKu1F,iBAAmBvmF,EAAA,cAAgBhP,KAAKmzF,cAAe,KAC5DnzF,KAAKmzF,gBACLnzF,KAAKwzF,gBAAgB,sBAQnBjiF,EAA4B3D,YAG3B2D,EAAU1I,WACX7I,KAAK6N,oBAAoB,eAQ7B7N,KAAK+N,UAGApE,UACL3J,KAAKG,IAAI,WAGJs1F,wBACDz1F,KAAKuR,UAA4BtC,UAClCjP,KAAKuR,UAA4BtC,YAElCjP,KAAK+N,SAIFoB,iBACDnP,KAAKuR,UAA4BpC,eAClCnP,KAAKuR,UAA4BpC,iBAElCnP,KAAKwzF,gBAAgB,mBA8CjBgC,2BACN,MAAMr6F,EAAW6E,KAAKsyF,4BACtBtyF,KAAKsyF,iCAA8BxnF,EACnC9K,KAAK6yF,+BAA4B/nF,EAE9B3P,GACDA,EAASyG,SAkGL2xF,eACHvzF,KAAK01F,kBACR11F,KAAK01F,iBAAkB,EAGvB11F,KAAKqzF,gBAAkB1kF,KAAK5J,MAFZ,KAGhB/E,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,eAAgBzI,KAAKqzF,iBAElDrzF,KAAK8yF,YAAY,YAAa,CAC5B6C,UAAW,IACXC,WAAY,IACZC,SARc,MASb,CACDC,YAAY,EAEZC,UAAU,IACT/wF,MAAK,KACNhF,KAAKqzF,qBAAkBvoF,EACvB/I,WAAW/B,KAAKmzF,cAAe,MAC7B7zF,IACFU,KAAKG,IAAI,mBAAoBb,MAC5BokC,SAAQ,KACT1jC,KAAK01F,qBAAkB5qF,MAuCnB2oF,mCAC6B3oF,IAAhC9K,KAAKi0F,yBACN/uF,aAAalF,KAAKi0F,wBAClBj0F,KAAKi0F,4BAAyBnpF,GAI1BkpF,cAAcpZ,GACpB,GAAG56E,KAAK46E,UAAYA,EAIlB,GAHA56E,KAAK46E,QAAUA,EAEf56E,KAAKyzF,8BACF7Y,EAAS,CACV11E,aAAalF,KAAKs1F,gBAClBt1F,KAAKs1F,eAAiB,EACtBt1F,KAAKiyF,QAAU,EAEZjyF,KAAKkyF,sBAAwB,MAC9BlyF,KAAKkyF,sBAAwB,GAG/B,MAAM8D,EAAqC,IAA7Bh2F,KAAKkyF,sBAA+B,EAClDlyF,KAAKi2F,uBAAyBtnF,KAAK5J,MAAQixF,EAC3Ch2F,KAAK6N,oBAAoB,WAAyB7N,KAAKi2F,wBACvDj2F,KAAKi0F,uBAAyBjlF,EAAA,cAAe,IAAMhP,KAAKwzF,gBAAgB,sBAAsBwC,GAC9Fh2F,KAAKkyF,sBAAwB3yE,KAAKC,IAAI,GAAuC,KAAlC,EAAIxf,KAAKkyF,6BAOpDlyF,KAAK6N,oBAAoB,eACzB7N,KAAKmzF,gBAELnzF,KAAKk2F,kBASTl2F,KAAK6N,oBAAoB+sE,EAAU,WAA0B,cAA4BA,EAAU56E,KAAKi2F,4BAAyBnrF,GAG3HqrF,+BAA+BrsF,EAA2DjI,EAAoBu0F,GAKpHtsF,EAAQ9E,MAAM5C,IACZpC,KAAKg0F,eAAc,GAEZh0F,KAAKiO,cAAc7L,GAAQ4C,MAAMkE,IACtClJ,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,kBAAmBS,GAEhDlJ,KAAKkO,eAAehF,EAASA,SAAUA,EAASiF,UAAWjF,EAASkF,WAEpEpO,KAAKmzF,gBACLnzF,KAAKkyF,sBAAwB3yE,KAAK8D,IAAI,IAAK9D,KAAK82E,KAAKr2F,KAAKkyF,yBAEnD,QAEP5yF,IACFU,KAAKG,IAAIb,MAAM,2BAA4BA,EAAOuC,GAElD7B,KAAKs2F,WAAWz0F,EAAQ63C,QACxB15C,KAAKg0F,eAAc,IAEZ,KACNhvF,MAAMuxF,IAEP,MAAM1E,EAAe7xF,KAAK6xF,aAC1BuE,EAAelzF,SAASmzD,IACtB,MAAMs+B,EAAc9C,EAAax7B,GACjC,GAAGs+B,EAAa,CACd,MAAMx5F,EAAWw5F,EAAYx5F,gBACtB02F,EAAax7B,UACbr2D,KAAK8xF,gBAAgBz7B,GAC5BkgC,EAAgBp7F,EAAS8G,UAAY9G,EAASyG,gBAQ9CmzF,YAAYlzF,EAKjBzE,GACD,IAAI0M,EAuBJ,OAtBI1M,EAAQo0F,oBAAqBp0F,EAAQ04F,aACvChsF,GAAU,UAGZ9J,KAAK6xF,aAAahwF,EAAQ63C,QAAU99C,OAAOC,OACzCgG,EACAzE,EACA0M,EAAU,CAAC3O,SAAU2O,QAAWgB,GAKlC9K,KAAK8xF,gBAAgBjwF,EAAQ63C,QAAU,EAEnCt8C,EAAQm0F,YACVvxF,KAAKk2F,mBAGJ,EAAAt0E,GAAA,GAASxkB,KACVA,EAAQ+Q,UAAYtM,EAAQ63C,QAGvB5vC,EAGFg/E,cAAch/E,EAAuBjI,GAC1C,MACMsD,EAAUpD,YAAW,KACtB/B,KAAKmyF,kBAAqBxjF,KAAK5J,MAAQ/E,KAAKmyF,iBAAoBnyF,KAAKgxF,OAAOK,oBAI/ErxF,KAAKG,IAAIb,MAAM,UAAWuC,GACvB7B,KAAKwmF,UACNxmF,KAAK6N,oBAAoB,iBAM1B7N,KAAKgxF,OAAOK,mBAEfvnF,EAAQuE,MAAM+8C,GAAA,GAAM1nB,SAAQ,KAC1Bx+B,aAAaC,GACbnF,KAAK6N,oBAAoB,iBAGrB7N,KAAKoyF,eACPpyF,KAAK6nF,uBAKL7nF,KAAKoyF,oBACoBtnF,IAAxB9K,KAAKw2F,iBACNtxF,aAAalF,KAAKw2F,gBAClBx2F,KAAKw2F,oBAAiB1rF,GAKrB+8E,mBACD7nF,KAAKoyF,gBAAkBpyF,KAAKynF,cAAmC38E,IAAxB9K,KAAKw2F,iBAC9Cx2F,KAAKw2F,eAAiBxnF,EAAA,cAAe,KACnChP,KAAKw2F,oBAAiB1rF,EACtB9K,KAAKG,IAAI,SACTH,KAAKynF,YA7wBS,MAkxBb55E,oBAAoBlH,EAA0B8H,G,MACnD,MAAM+3E,EAAW7/E,IAAW,cACtB8vF,EAAaz2F,KAAK2G,SAAWA,EACnC3G,KAAKwmF,SAAWA,EAChBxmF,KAAK2G,OAASA,EAEX8vF,IACEz2F,KAAK+xC,iBAAiB2kD,0BACvB12F,KAAK+xC,iBAAiB2kD,yBAAyB,CAC7Cr4F,EAAG,kBACHsI,OAAAA,EACA2B,KAAMtI,KAAKsI,KACXrI,KAAMD,KAAKC,KACX0nF,gBAAiB3nF,KAAK2nF,gBACtB0M,eAAgBr0F,KAAKq0F,eACrBD,aAAcp0F,KAAKo0F,aACnB3lF,QAAAA,IAIDzO,KAAKwmF,UACNxmF,KAAKk2F,mBAG6B,QAAhC,EAAAl2F,KAAKuR,iBAA2B,eAAE3D,cACpC5N,KAAKw1F,2BACLx1F,KAAKqyF,4BAUHiE,WAAWnoF,EAAmB6nF,EAAQ,KAC5C,MAAMzxF,EAAQyxF,EAAQrnF,KAAK5J,MAAQixF,EAAQ,EACrCrB,EAAc30F,KAAK6xF,aAAa1jF,GACtC,GAAGwmF,EAAYC,UACb,IAAI,MAAM+B,KAAchC,EAAY54C,MAClC/7C,KAAK8xF,gBAAgB6E,GAAcpyF,OAGrCvE,KAAK8xF,gBAAgB3jF,GAAa5J,EAGjCowF,EAAYiC,OACb52F,KAAKG,IAAIb,MAAM,6BAA8Bq1F,GAG5C30F,KAAKyI,OACNzI,KAAKG,IAAIsI,MAAM,cAAe0F,EAAWwmF,EAAa30F,KAAK8xF,gBAAiBkE,GAG9Eh2F,KAAKk2F,gBAAgBF,GAITa,UAAUC,EAA6B/uE,G,0CACnD,MAAMgvE,EAAIhvE,EAAQ,EAAI,EAChBivE,GAAmB,EAAAjG,GAAA,GAAc/wF,KAAKk0F,aAAahJ,SAAS,GAAK6L,EAAG,GAAKA,EAAI,IAAKD,GAElFG,QAAoB,iBAA0B,SAAUD,GAE9D,OADe,IAAIztF,WAAW0tF,GAAa/L,SAAS,EAAG,OAKjDgM,YAAYC,EAAoBpvE,GACtC,MAAMgvE,EAAIhvE,EAAQ,EAAI,EAChBqvE,EAAY,IAAI7tF,WAAW,IAC3B8tF,EAAY,IAAI9tF,WAAW,IAC3Byf,EAAuC,GAU7C,OARAouE,EAAUhvF,IAAI+uF,EAAQ,GACtBC,EAAUhvF,IAAIpI,KAAKk0F,aAAahJ,SAAS6L,EAAGA,EAAI,IAAK,IACrD/tE,EAAS1oB,KAAK,iBAA0B,SAAU82F,IAElDC,EAAUjvF,IAAIpI,KAAKk0F,aAAahJ,SAAS,GAAK6L,EAAG,GAAKA,EAAI,IAAK,GAC/DM,EAAUjvF,IAAI+uF,EAAQ,IACtBnuE,EAAS1oB,KAAK,iBAA0B,SAAU+2F,IAE3C11F,QAAQ8Q,IAAIuW,GAAUhkB,MAAMK,IACjC,MAAMiyF,EAAS,IAAI/tF,WAAW,IACxBguF,EAAQ,IAAIhuF,WAAW,IACvBiuF,EAAQ,IAAIjuF,WAAWlE,EAAQ,IAC/BoyF,EAAQ,IAAIluF,WAAWlE,EAAQ,IAUrC,OARAiyF,EAAOlvF,IAAIovF,EAAMtM,SAAS,EAAG,IAC7BoM,EAAOlvF,IAAIqvF,EAAMvM,SAAS,EAAG,IAAK,GAClCoM,EAAOlvF,IAAIovF,EAAMtM,SAAS,GAAI,IAAK,IAEnCqM,EAAMnvF,IAAIqvF,EAAMvM,SAAS,EAAG,IAC5BqM,EAAMnvF,IAAIovF,EAAMtM,SAAS,EAAG,IAAK,GACjCqM,EAAMnvF,IAAIqvF,EAAMvM,SAAS,GAAI,IAAK,IAE3B,CAACoM,EAAQC,MAIbrP,YACL,OAAOloF,KAAK+xC,iBAAiB2lD,YAAc13F,KAAK2nF,gBAG1CgQ,0BACN,GAAG33F,KAAKkoF,YACN,OAAO,EAGT,GAAGloF,KAAK+xF,YAAY5zF,OAAQ,CAC1B,MAAMy5F,EAAY53F,KAAK+xF,YAAYnqF,QAGnC5H,KAAKg1F,eAAe,CAClB32F,EAAG,WACHw5F,QAASD,GACR,CACDpG,mBAAmB,EACnBD,YAAY,IAIhB,MAAMuG,EAAyB93F,KAAKgyF,iBAAiB7zF,OACrD,GAAG25F,EAAwB,CACzB,MAAM16F,EAAO,iBAAyBk0F,IAChCl1B,EAASp8D,KAAKgyF,iBAAiB/nF,OAAO,EAAG6tF,GAC/C93F,KAAKg1F,eAAe,CAClB32F,EAAG,iBACHw5F,QAASz7B,GACRh/D,GAEH4C,KAAKG,IAAI,6BAA8B/C,EAAQ+Q,UAAWiuD,GA0B5D,IAAI27B,EACJ,MAAM3xE,EAAgC,GAGtC,IAAI4xE,EAAkB,EAGlBC,GAAa,EACbC,GAAc,EAGdC,GAAiB,EAGrB,MAAM9kF,EAAsBzX,OAAOyX,KAAKrT,KAAK8xF,iBC/gCpC1tF,KAAKwzC,GACP,KAAOA,KACbn4B,MAAK,CAACC,EAAGC,IACHD,EAAE04E,QAAQz4E,KAChBvb,KAAKmoF,GACCA,EAAOn/E,SAAS,MD2gCvB,IAAI,MAAMe,KAAakF,EAAM,CAI3B,MAAMxR,EAAU7B,KAAK6xF,aAAa1jF,GAClC,GAAGtM,GAAWA,EAAQkH,KAAM,CAK1B,MAAMsvF,EAAoBx2F,EAAQkH,KAAK5K,OAAS,GAEhD,GAAI65F,EAAkBK,EAAqB,SACzCr4F,KAAKG,IAAI2C,KAAK,iBAAkBjB,EAASukB,GACzC+xE,GAAiB,EAEdJ,GACD,MAIJ3xE,EAAS9lB,KAAKuB,GACdm2F,GAAmBK,EAGhBx2F,EAAQwzF,MACT4C,GAAa,EACLp2F,EAAQk0F,WAChBmC,GAAc,GAIhBH,EAAal2F,SAKR7B,KAAK8xF,gBAAgB3jF,GAM9B,GAAGnO,KAAKuR,qBAAqBlJ,GAExB4vF,IAAeC,EAAa,CAC7B,MAAMxE,EAAa,IAAInJ,GAAgB,CAACC,SAAS,IACjDkJ,EAAWrG,YAAY,YAAa,CAClCsI,UAAW,IACXC,WAAY,IACZC,SAAU,MAGZzvE,EAAS9lB,KAAK,CACZo5C,OAAQ15C,KAAKgiB,YAAY4xE,aACzBC,OAAQ7zF,KAAK8zF,gBACb/qF,KAAM2qF,EAAWtI,UAAS,KAKhC,IAAIhlE,EAASjoB,OAEX,OAIF,MAAMi4F,EAAgChwE,EAAS5nB,QAAQqD,GAAYA,EAAQi0F,aAAY1xF,KAAKvC,GAAYA,EAAQ63C,SAGhH,GAAGtzB,EAASjoB,OAAS,EAAG,CACtB,MAAMy2F,EAAY50F,KAAKs4F,yBAAyBN,EAAiB5xE,GACjE2xE,EAAanD,EAAU2D,gBAEvBv4F,KAAK6xF,aAAakG,EAAWr+C,QAAUk7C,EAAU/yF,aAEjD7B,KAAK6xF,aAAakG,EAAWr+C,QAAUq+C,EAGzC/3F,KAAK+xF,YAAc,GAEnB,MAAMjoF,EAAU9J,KAAK+zF,qBAAqBgE,GAIvC/3F,KAAKuR,qBAAqBlJ,GAE3BrI,KAAKm2F,+BAA+BrsF,EAASiuF,EAAY3B,GAKtDp2F,KAAKuR,qBAAqBlJ,GAE7BrI,KAAK8N,cAGJqqF,GACDn4F,KAAKk2F,kBAIDoC,yBAAyBN,EAAyB5xE,GACxD,MAAMwuE,EAAY,IAAIrK,GAAgB,CACpCC,SAAS,EACTC,eAAgBuN,EAAkB,KAGpCpD,EAAU9I,SAAS,WAAY,iBAC/B8I,EAAU9I,SAAS1lE,EAASjoB,OAAQ,oBAEpC,MAAMq6F,EAA0B,GAChCpyE,EAASljB,SAAQ,CAACrB,EAASgE,KACzB2yF,EAAcl4F,KAAKuB,EAAQ63C,QAE3Bk7C,EAAUzI,UAAUtqF,EAAQ63C,OAAQ,aAAe7zC,EAAI,aACvD+uF,EAAU9I,SAASjqF,EAAQgyF,OAAQ,aAAehuF,EAAI,aACtD+uF,EAAU9I,SAASjqF,EAAQkH,KAAK5K,OAAQ,aAAe0H,EAAI,YAC3D+uF,EAAUxH,cAAcvrF,EAAQkH,KAAM,aAAelD,EAAI,cAG3D,MAAMhE,EAAqB,CACzB63C,OAAQ15C,KAAKgiB,YAAY4xE,aACzBC,OAAQ7zF,KAAK8zF,eAAc,GAC3Bc,WAAW,EACX74C,MAAOy8C,GAOT,OAJG,WACDx4F,KAAKG,IAAI2C,KAAK,YAAa01F,EAAe32F,EAAQ63C,OAAQ73C,EAAQgyF,QAG7D,CACLhyF,QAAAA,EACA02F,gBAAiB38F,OAAOC,OAAO,CAACkN,KAAM6rF,EAAUxJ,UAAS,IAAQvpF,IAIvD42F,oBAAoB3B,G,0CAChC,MAAMK,QAAen3F,KAAK62F,UAAUC,GAAiB,GAC/C4B,QAAc14F,KAAKk3F,YAAYC,GAAQ,GAM7C,MAAO,CACLhqF,YAJ2B,iBAA0B,cAAe2pF,EAAiB4B,EAAM,GAAIA,EAAM,IAKrGvB,OAAAA,MAIIwB,oBAAoBxB,EAAoByB,GAE9C,OAAO54F,KAAKk3F,YAAYC,GAAQ,GAAOnyF,MAAM0zF,GAEpC,iBAA0B,cAAeE,EAAeF,EAAM,GAAIA,EAAM,MAI3EG,mBAAmBh3F,GASzB,MAAM4I,EAAO,IAAI8/E,GAAgB,CAC/BE,eAAgB5oF,EAAQkH,KAAK5K,OAAS,OAGxCsM,EAAK4hF,cAAcrsF,KAAK+mF,WAAY,GAAI,QACxCt8E,EAAK4hF,cAAcrsF,KAAKoO,UAAW,GAAI,cAEvC3D,EAAK0hF,UAAUtqF,EAAQ63C,OAAQ,cAC/BjvC,EAAKqhF,SAASjqF,EAAQgyF,OAAQ,UAE9BppF,EAAKqhF,SAASjqF,EAAQkH,KAAK5K,OAAQ,uBACnCsM,EAAK2iF,cAAcvrF,EAAQkH,KAAM,gBAmBjC,MAAM+vF,EAAaruF,EAAK0gF,YAMlB4N,EAAiB,GAAMtuF,EAAK8gF,YAAc,GAAO,IAAM,GAAI,QAAe,GAAK,GAC/EuF,EAA4C7lF,EAAU,IAAI1B,WAAWwvF,IASrEjC,GAAkB,EAAA/F,GAAA,GAAc+H,EAAYhI,GAalD,OAAO9wF,KAAKy4F,oBAAoB3B,GAAiB9xF,MAAMg0F,IAKrD,MAAMx3F,EAAU,IAAI+oF,GAAgB,CAClCE,eAAgBuO,EAAgB7rF,MAAMhP,OAAS,MAejD,OAbAqD,EAAQ6qF,cAAcrsF,KAAK8mF,UAAW,GAAI,eAC1CtlF,EAAQ6qF,cAAc2M,EAAgB7B,OAAQ,IAAK,WACnD31F,EAAQ4rF,cAAc4L,EAAgB7rF,MAAO,kBAEzB3L,EAAQ4pF,UAAS,MAa3B2I,qBAAqBlyF,G,0CACjC,MAAMo3F,QAAoBj5F,KAAK64F,mBAAmBh3F,GAE9C7B,KAAKuR,WACPvR,KAAKG,IAAIb,MAAM,wCAAyCU,KAAKuR,UAAWvR,MAG1EA,KAAKyI,OAASzI,KAAKG,IAAIsI,MAAM,WAAY5G,EAAS,CAACA,EAAQ63C,QAAQx1C,OAAOrC,EAAQk6C,OAAS,IAAKk9C,EAAY96F,QAC5G,MAAM2L,EAA+B9J,KAAKuR,UAAYvR,KAAKuR,UAAU3H,KAAKqvF,GAAsBt3F,QAAQC,OAAO,IAQ/G,KAAK5B,KAAKuR,qBAAqBlJ,GAAO,OAAOyB,EAG7C,MAAMovF,EAAsB,CAC1BxjF,KAAM,IACNjW,KAAM,uBAEN8R,UAAWvR,KAAKuR,WAGlB,OAAOzH,EAAQ9E,MAAM5C,IACnB,KAAIA,MAAAA,OAAM,EAANA,EAAQsI,YACV,MAAMwuF,EAIR,OAAO92F,KACL9C,IAQF,MAPIA,EAAMuC,SAAYvC,EAAMG,OAC1BH,EAAQ1D,OAAOC,OAAOq9F,EAAW,CAC/Bz5F,KAAM,sBACNspF,cAAezpF,KAIbA,QAKH2O,cAAckrF,GAMnBn5F,KAAKmyF,iBAAmBxjF,KAAK5J,MAE7B,MAAMq0F,EAAe,IAAI/K,GAAkB8K,GAErCrS,EAAYsS,EAAa7J,cAAc,IAAI,EAAM,eACvD,KAAI,EAAA8J,GAAA,GAASvS,EAAW9mF,KAAK8mF,WAC3B,MAAM,IAAI17E,MAAM,oCAAsC8B,EAAW45E,IAGnE,MAAMqQ,EAASiC,EAAa7J,cAAc,KAAK,EAAM,WAC/CqJ,EAAgBQ,EAAa5J,cAAc2J,EAAezuF,WAAa0uF,EAAa7N,aAAa,EAAM,kBAE7G,OAAOvrF,KAAK24F,oBAAoBxB,EAAQyB,GAAe5zF,MAAM8xF,GAEpD92F,KAAK62F,UAAUC,GAAiB,GAAO9xF,MAAMs0F,IAClD,KAAI,EAAAD,GAAA,GAASlC,EAAQmC,GAGnB,MAFAt5F,KAAKG,IAAI2C,KAAK,gBAAiBq0F,EAAQmC,GACvCt5F,KAAKs0F,gBACC,IAAIlpF,MAAM,iDAIlB,IAAIguF,EAAe,IAAI/K,GAA0ByI,EAAiB,CAACtM,SAAS,IAEzD4O,EAAa7J,cAAc,IAAI,EAAM,QACxD,MAAMnhF,EAAYgrF,EAAa7J,cAAc,IAAI,EAAM,cACjDphF,EAAYirF,EAAa1K,UAAU,cAEzC,MAAI,EAAA2K,GAAA,GAASjrF,EAAWpO,KAAKoO,YACzBpO,KAAKw0F,gBAAkB,EAAA6E,GAAA,GAASjrF,EAAWpO,KAAKw0F,gBAIlD,MAHAx0F,KAAKG,IAAI2C,KAAK,WAAYsL,EAAWpO,KAAKoO,UAAWpO,KAAKw0F,cAAesC,GAGnE,IAAI1rF,MAAM,mCAAqC8B,EAAWkB,IAGlE,MAAMmmF,EAAQ6E,EAAa7K,SAAS,UAE9BgL,EAAczC,EAAgBpsF,WAE9B8uF,EAAoBJ,EAAa7K,SAAS,wBAChD,IAAI5kE,EAASyvE,EAAa7N,YAE1B,GAAIiO,EAAoB,GACtBA,EAAoBD,EAAc5vE,EAClC,MAAM,IAAIve,MAAM,6BAA+BouF,GAEjD,MAAMC,EAAcL,EAAa5J,cAAcgK,GAAmB,EAAM,gBAExE7vE,EAASyvE,EAAa7N,YACtB,MAAMwN,EAAgBQ,EAAc5vE,EACpC,GAAGovE,EAAgB,IAAMA,EAAgB,KACvC,MAAM,IAAI3tF,MAAM,gCAAkC2tF,GAsDpD,OAlDAK,EAAe,IAAI/K,GAAsCoL,EAAa,CACpEjP,SAAS,EACT55D,SAAU,CACR8oE,WAAY,CAACt3F,EAAaypF,KACxBzpF,EAAOs3C,OAAS0/C,EAAa1K,UAAU7C,EAAQ,YAC/CzpF,EAAOu3F,MAAQP,EAAa7K,SAAS1C,EAAQ,WAC7CzpF,EAAO+K,MAAQisF,EAAa7K,SAAS1C,EAAQ,WAE7C,MAAMliE,EAASyvE,EAAa7N,YAI5B,IACEnpF,EAAO2G,KAAOqwF,EAAanK,YAAY,SAAUpD,EAAQ,UACzD,MAAMtpF,GACNvC,KAAKG,IAAIb,MAAM,cAAgBiD,EAAYV,QAAUU,EAAY6kF,OACjEhlF,EAAO2G,KAAO,CACZ1K,EAAG,cACHiB,MAAOiD,GAIR62F,EAAa7N,cAAgB5hE,EAASvnB,EAAO+K,OAG9CisF,EAAa5I,UAAU7mE,EAASvnB,EAAO+K,QAI3CysF,cAAe,CAACx3F,EAAaypF,KAC3BzpF,EAAOy3F,WAAaT,EAAa1K,UAAU7C,EAAQ,gBAEnD,MAAM8I,EAAc30F,KAAK6xF,aAAazvF,EAAOy3F,YACvCp6F,EAAOk1F,GAAeA,EAAYS,YAAc,SAEnDhzF,EAAOy3F,aAAelF,IAMzBvyF,EAAOA,OAASg3F,EAAanK,YAAYxvF,EAAMosF,EAAQ,iBAStD,CACL3iF,SAHekwF,EAAanK,YAAY,GAAI,SAI5C9gF,UAAAA,EACAC,UAAAA,EACAmmF,MAAAA,QAMAuF,gBAAgBC,GACtB,MAAMhT,GEr7C0BqF,EFq7CD2N,EEn7CnBtJ,INCclE,EMFM,KAAOH,GNGlC,IAAI7iF,WAAWgjF,EAAOyN,QAAQ,KAAKz1F,QMHO4H,UACX,GAAG,GAAM,GAAO,IAFzC,IAAqBigF,ENGNG,EIo7C1BnH,GAAA,MAAmB,CACjB,CAAC,KAAOplF,KAAKsI,KAAO,gBAAiB4E,EAAW65E,KAGlD/mF,KAAK+mF,WAAa,IAAIx9E,WAAWw9E,GAI5BmP,gBAAgBF,GAOlBh2F,KAAKuR,qBAAqBlJ,IAExBrI,KAAK46E,SACN56E,KAAKwzF,gBAAgB,mBAGvBwC,IAAAA,EAAU,IAMZ,MAAM/D,EAAUtjF,KAAK5J,OAASixF,GAAS,GACvC,GAAGh2F,KAAKiyF,eAAsBnnF,IAAVkrF,GAAuBh2F,KAAKiyF,SAAWA,GAEzD,OAUCjyF,KAAKs1F,gBACNpwF,aAAalF,KAAKs1F,gBAGpB,MAAM33C,EAAK,KAGT39C,KAAKs1F,eAAiB,EACtBt1F,KAAKiyF,QAAU,EAIZjyF,KAAKuR,qBAAqBlJ,GAExBrI,KAAK46E,SAMV56E,KAAK23F,2BAGP33F,KAAKiyF,QAAUA,OAEFnnF,IAAVkrF,EACDh2F,KAAKs1F,eAAiBtmF,EAAA,aAAe2uC,EAAIq4C,GAEzCr4C,IAIIs8C,WAAW5jC,GAIjB,IAAI2/B,EAFJh2F,KAAK+xF,YAAYzxF,KAAK+1D,GAMnBr2D,KAAKuR,qBAAqBlJ,IAE3B2tF,EAAQ,KAGVh2F,KAAKk2F,gBAAgBF,GAGfkE,UAAU7jC,GACbr2D,KAAKyI,OACNzI,KAAKG,IAAIsI,MAAM,aAAc4tD,GAI/Br2D,KAAKgyF,iBAAiB1xF,KAAK+1D,GAC3Br2D,KAAKk2F,gBAAgB,KAGhBpoF,cACL,IAAIqsF,GAAW,EACf,MAAMtI,EAAe7xF,KAAK6xF,aAwB1B,OAtBAj2F,OAAOyX,KAAKw+E,GAAc3uF,SAASmzD,IACjC,MAAMx0D,EAAUgwF,EAAax7B,GAG7B,GAAGx0D,EAAQ2vF,wBAAqD1mF,IAAhC9K,KAAK8xF,gBAAgBz7B,UAE5Cw7B,EAAax7B,QACf,GAAGx0D,EAAQ+yF,UAAW,CAC3B,IAAI,MAAM+B,KAAc90F,EAAQk6C,MAC9B,QAAgCjxC,IAA7B+mF,EAAa8E,GAGd,YADAwD,GAAW,UAKRtI,EAAax7B,QAEpB8jC,GAAW,MAIPA,EAGFC,kBAAkBjsF,GACxB,MAAMwmF,EAAc30F,KAAK6xF,aAAa1jF,GACnCwmF,IAAgBA,EAAYiC,QAE7BjC,EAAYiC,OAAQ,GAIhB9rB,aAAa6d,GACnB,MAAM//C,GAAW+/C,EAAS0R,eAAiB,IAAI59F,MAAM,6BAA+B,GAGpF,OAFAksF,EAAS2R,WAAa3R,EAAS2R,WAExB,CACL5kF,MAAOizE,EAAS2R,YAAc3R,EAAS2R,YAAc,EAAI,IAAM3R,EAAS2R,WACxE76F,KAAMmpC,EAAQ,IAAa,UAC3BsS,YAAatS,EAAQ,IAAO,QAAU+/C,EAAS2R,WAAa,IAAM3R,EAAS0R,cAC3EtR,cAAeJ,GAQZ56E,SACL,MAAM8jF,EAAe7xF,KAAK6xF,aAC1B,IAAI,MAAMvzF,KAAMuzF,EAAc,CAC5B,MAAM0I,EAAM1I,EAAavzF,IACtBi8F,EAAIxxF,MAAQwxF,EAAI3F,YACjB50F,KAAKs2F,WAAWh4F,GAIhB0B,KAAKuR,UAA4B3D,aACnC5N,KAAKw1F,2BACLx1F,KAAKqyF,2BAuBDmI,gBAAgBrsF,GACtB,MAAMssF,EAAa,KAAOtsF,GAAWusF,WAAW,IAAI9N,aAEpD,OADA5sF,KAAKG,IAAI,uBAAwBs6F,GAC1Bz6F,KAAKgiB,YAAYw4E,gBAAgBC,GAInCvsF,eAAerM,EAAcsM,EAAmBC,GACrD,GAAiB,iBAAdvM,EAAQxD,EAQX,GADiB6qC,SAAS/6B,EAAU6/E,OAAO,GAAI,IAAK,IACtC,EACZhuF,KAAKG,IAAI2C,KAAK,2BAA4BqL,EAAWtM,QAkBvD,OAdG7B,KAAKyI,OACNzI,KAAKG,IAAIsI,MAAM,kBAAmB5G,EAASsM,GAG1CnO,KAAKsyF,6BACNtyF,KAAKsyF,4BAA4BrwF,QAAQ,eASpCJ,EAAQxD,GACb,IAAK,gBACH,IAAI,MAAMs8F,KAAgB94F,EAAQukB,SAChCpmB,KAAKkO,eAAeysF,EAAcA,EAAajhD,OAAQtrC,GAGzD,MAGF,IAAK,kBACHpO,KAAKG,IAAI,kBAAmB0B,GAE5B7B,KAAK85F,gBAAgBj4F,EAAQ+4F,iBAE1B56F,KAAK6xF,aAAahwF,EAAQg5F,aAC3B76F,KAAKs2F,WAAWz0F,EAAQg5F,YAG1B76F,KAAKi6F,WAAW9rF,GAWhB,MAGF,IAAK,uBAGH,OAFAnO,KAAKG,IAAIb,MAAM,uBAAwBuC,GAEhCA,EAAQy4F,YACb,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAAI,CAKP,MAAMQ,EAAoB96F,KAAKw6F,gBAAgBrsF,IACrB,KAAvBtM,EAAQy4F,YAAqBQ,KAC9B96F,KAAKG,IAAI,kBACTH,KAAKs0F,iBAGP,MAAMyG,EAAa/6F,KAAKy0F,kBAAkB5yF,EAAQg5F,YAC/CE,GAAY/6F,KAAKs2F,WAAWyE,EAAWrhD,SAkB9C,MAGF,IAAK,UACH,IAAmD,IAAhD15C,KAAK4xF,mBAAmBx1F,QAAQ+R,GAGjC,YADAnO,KAAKi6F,WAAW9rF,GAIlBnO,KAAK4xF,mBAAmBtxF,KAAK6N,GAC1BnO,KAAK4xF,mBAAmBzzF,OAAS,KAClC6B,KAAK4xF,mBAAmBtjF,QAG1BtO,KAAKkO,eAAerM,EAAQkH,KAAMlH,EAAQ63C,OAAQtrC,GAClD,MAGF,IAAK,sBACHpO,KAAKi6F,WAAW9rF,GAEbnO,KAAKyI,OACNzI,KAAKG,IAAIsI,MAAM,sBAAuB5G,GAIxC7B,KAAKo6F,kBAAkBv4F,EAAQm5F,cAC/Bh7F,KAAK85F,gBAAgBj4F,EAAQo5F,aAE7B7V,GAAA,MAAmB,MAAMpgF,MAAMo/E,IAC1BA,IAAapkF,KAAKsI,OAAStI,KAAK2nF,iBAAmB3nF,KAAK+xC,iBAAiB+1C,kBAC1E9nF,KAAK+xC,iBAAiB+1C,iBAAiBjmF,MAG3C,MAGF,IAAK,WACH7B,KAAKyI,OAASzI,KAAKG,IAAI,WAAY0B,EAAQg2F,SAC3C,IAAI,MAAMxhC,KAASx0D,EAAQg2F,QACzB73F,KAAKo6F,kBAAkB/jC,GAGzB,MAGF,IAAK,oBAEH,IADoBr2D,KAAK6xF,aAAahwF,EAAQ63C,QAC7B,CACf15C,KAAKi6F,WAAWp4F,EAAQq5F,eACxB,MAQJ,IAAK,wBACH,IAAwD,IAArDl7F,KAAK+xF,YAAY31F,QAAQyF,EAAQq5F,eAClC,MAGFl7F,KAAKk6F,UAAUr4F,EAAQq5F,eACvB,MAGF,IAAK,kBAAmB,CACtBl7F,KAAKi6F,WAAWp4F,EAAQq5F,eACxB,MAAMhwF,EAAM,CACV,CAAClL,KAAKm7F,cAAen7F,KAAKgyF,mBAI5B,IAAI,MAAOoJ,EAAYC,KAAkBnwF,EACvC,IAAGkwF,MAAAA,OAAU,EAAVA,EAAYE,YAAaz5F,EAAQg4F,YAAcwB,EAAcl9F,OAC9D,IAAI,MAAMo9F,KAAYH,EAAWh/B,OAAQ,CACvC,MAAMo/B,EAAMH,EAAcj/F,QAAQm/F,IACtB,IAATC,GACDH,EAAcpxF,OAAOuxF,EAAK,GAMlC,MAGF,IAAK,aAAc,CACjBx7F,KAAKi6F,WAAW9rF,GAEhB,MAAMumF,EAAgB7yF,EAAQg4F,WACxBlF,EAAc30F,KAAK6xF,aAAa6C,GAOtC,GALG10F,KAAKyI,OACNzI,KAAKG,IAAI,eAAgB0B,EAAQO,OAAQuyF,GAG3C30F,KAAKo6F,kBAAkB1F,GACpBC,EAAa,CACd,MAAMx5F,EAAWw5F,EAAYx5F,SAC7B,GAAwB,cAArB0G,EAAQO,OAAO/D,EAAmB,CACnC,MAAMiB,EAAQU,KAAK8qE,aAAajpE,EAAQO,QACxCpC,KAAKG,IAAI,YAAab,GACnBnE,GACDA,EAASyG,OAAOtC,QAGfnE,GACDA,EAAS8G,QAAQJ,EAAQO,QAGxBuyF,EAAYU,QAAUr1F,KAAKi1F,mBAC5Bj1F,KAAKi1F,kBAAmB,UAIrBj1F,KAAK6xF,aAAa6C,QAEtB10F,KAAKyI,OACNzI,KAAKG,IAAI,kCAAmCu0F,EAAe7yF,GAI/D,MAGF,IAAK,OAAQ,CAQX,MAAM+wF,EAAS/wF,EAAQkxF,QACvB,GAAG/yF,KAAK6yF,4BAA8BD,EAAQ,CAC5C,MAAMz3F,EAAW6E,KAAKsyF,4BACnBn3F,EACDA,EAAS8G,QAAQ,QAEjBjC,KAAKG,IAAI,wBAAyByyF,GAItC,MAGF,QACE5yF,KAAKi6F,WAAW9rF,GAM8B,OAA3CnO,KAAK+xC,iBAAiB+1C,kBACvB9nF,KAAK+xC,iBAAiB+1C,iBAAiBjmF,QA7P3C7B,KAAKG,IAAI2C,KAAK,+BAAgCjB,EAASsM,IG3mDtD,MAAMstF,WAAyB3oF,EAAtC,c,oBACU,KAAAuzE,WAA6B,GAC9B,KAAA5xD,SAAW14B,UAAU04B,UAAY,iBACjC,KAAAqzD,iBAAuC,KAEvC,KAAA4P,WAAY,EAEZhB,yBAAyB/vF,GAC9B3G,KAAK4c,UAAUhW,cAAc,2BAA4BD,GAIpD+gF,gBAAgB79E,IACrB,EAAA4H,EAAA,GAAiBzR,KAAKqmF,WAAYx8E,GAG7B+pB,oBAAoBhvB,GACzB5E,KAAK8nF,iBAAmBljF,EAGnB8gF,aAAap9E,EAAcs+E,EAAqBE,EAAuBC,EAAwB3pF,GAEpG,MAAMyM,EAAY,IAAI8nF,GAAa3xF,KAAMA,KAAKgiB,YAAa1Z,EAAMs+E,EAASE,EAAWC,EAAY3pF,GAEjG,OADA4C,KAAKqmF,WAAW/lF,KAAKuJ,GACdA,EAGF6xF,WACL,GAAG17F,KAAK03F,UAAW,CACjB,MAAMiE,EAAoB37F,KAAKqmF,WAAW7nF,QAAQqL,GAAcA,EAAUq+E,cAE1EloF,KAAK03F,WAAY,EACjB13F,KAAK8nF,kBAAoB9nF,KAAK8nF,iBAAiB,CAACzpF,EAAG,wBAEnD,IAAI,MAAMwL,KAAa8xF,EACrB9xF,EAAUqsF,mBAKT0F,UACL57F,KAAK03F,WAAY,EAGZmE,YAAYpoE,GACjBzzB,KAAKy0B,SAAWhB,EAChB,IAAI,MAAM5pB,KAAa7J,KAAKqmF,WACtBx8E,EAAU89E,kBACZ99E,EAAUorF,kBAAmB,GAK5BvM,wBACL,IAAI,MAAM7+E,KAAa7J,KAAKqmF,WAC1Bx8E,EAAUorF,kBAAmB,EAI1BQ,wBACL,IAAI,MAAM5rF,KAAa7J,KAAKqmF,WAC1Bx8E,EAAU4rF,wBAIPtmF,iBACL,IAAI,MAAMtF,KAAa7J,KAAKqmF,WAC1B,IAAIx8E,EAAU89E,gBAAiB,CAC7B99E,EAAUsF,iBACV,QCuDR,aAvHO,MA8DLrP,cAjBQ,KAAAg8F,kBAAuC,CAAC,CAC9CC,QAAS,mgBACTC,SAAU,WAGJ,KAAAC,cAAmC,CAAC,CAE1CF,QAAS,mgBACTC,SAAU,WAGJ,KAAAE,iBAEJ,GACI,KAAAxb,UAAW,EACX,KAAAyb,eAAgC,KAGnC,WACDn8F,KAAKi8F,cAAgBj8F,KAAK87F,mBAIvBM,UACL,OAAGp8F,KAAKm8F,eAAuBn8F,KAAKm8F,eAC5Bn8F,KAAK0gF,SACJ/+E,QAAQM,UAGVjC,KAAKm8F,eAAiBx6F,QAAQ8Q,IAAIzS,KAAKi8F,cAAc73F,KAAKi4F,IAC/D,MAAMC,EAAe,IAAI/R,GACzB+R,EAAapP,YAAW,EAAArG,GAAA,GAAawV,EAAUN,SAAU,KACzDO,EAAapP,YAAW,EAAArG,GAAA,GAAawV,EAAUL,UAAW,KAE1D,MAAM5yF,EAASkzF,EAAanR,YAE5B,OAAO,iBAA0B,OAAQ/hF,GAAQpE,MAAMmI,IACrD,MAAMovF,EAAmBpvF,EAAMvF,OAAO,GACtC20F,EAAiBpwF,UAEjBnM,KAAKk8F,iBAAiBhvF,EAAWqvF,GAAkBpgG,eAAiB,CAClE4/F,QAASM,EAAUN,QACnBC,SAAUK,EAAUL,iBAGtBh3F,MAAK,KACPhF,KAAK0gF,UAAW,EAGhB1gF,KAAKm8F,eAAiB,QAIb74D,OAAOk5D,G,2CACZx8F,KAAKo8F,UAEX,IAAI,IAAIv2F,EAAI,EAAGA,EAAI22F,EAAar+F,SAAU0H,EAAG,CAC3C,IAAI42F,EAAiB,KAAOD,EAAa32F,IAAIuH,SAAS,IAAIjR,cAEvDsgG,EAAet+F,OAAS,KACzBs+F,EAAiB,IAAI37F,MAAM,GAAK27F,EAAet+F,QAAQu+F,KAAK,KAAKh+F,KAAK,IAAM+9F,GAI9E,MAAME,EAAW38F,KAAKk8F,iBAAiBO,GACvC,GAAGE,EACD,OAAO/gG,OAAOC,OAAO,CACnB+gG,YAAaJ,EAAa32F,IACzB82F,K,iSCxII,SAASE,GAASC,EAAoBC,GACnD,MAAMhwF,EAAM+vF,EAAO3+F,OACbgP,EAAQ,IAAI5D,WAAWwD,GAE7B,IAAI,IAAIlH,EAAI,EAAGA,EAAIkH,IAAOlH,EACxBsH,EAAMtH,GAAKi3F,EAAOj3F,GAAKk3F,EAAOl3F,GAGhC,OAAOsH,E,2SCmGF,MAAM6vF,WAAmBlqF,EAapB6J,QACR3c,KAAKmpB,OAAS,GACdnpB,KAAKG,KAAM,EAAAyI,EAAA,IAAO,aAAc,WAAiB,KAAAD,KAG3Cs0F,iBAAiB30F,EAAY40F,GACnC,MAAMC,EAAgBD,EAAaxyF,WAE7BsC,EAAS,IAAIu9E,GACnBv9E,EAAOg/E,WAAW,EAAG,EAAG,eACxBh/E,EAAOm/E,UAAUnsF,KAAKgiB,YAAY4xE,aAAc,UAChD5mF,EAAO8+E,SAASqR,EAAe,kBAE/B,MAAMC,EAAcpwF,EAAOo+E,UAAS,GAC9BE,EAAc,IAAI/hF,WAAW6zF,EAAY1yF,WAAayyF,GAC5D7R,EAAYljF,IAAIg1F,GAChB9R,EAAYljF,IAAI80F,EAAcE,EAAYj/F,QAE1C,MAAMoT,EAAYvR,KAAK+R,eAAejB,aAAaxI,EAAM,SAAUtI,KAAK+Q,eAClEmoF,EAAY,CAChBxjF,KAAM,IACNjW,KAAM,wBAQR,OALG,MACDO,KAAKG,IAAI,gDAGKoR,EAAU3H,KAAK0hF,GAChBtmF,MAAM5C,IAKnB,GAJG,MACDpC,KAAKG,IAAI,sCAAuCiC,IAG9CA,IAAWA,EAAOsI,WACpB,MAAMwuF,EAGR,IAIE,MAAME,EAAe,IAAI/K,GAA0BjsF,EAAQ,CAACooF,SAAS,IAErE,GAAqB,IAAlBpoF,EAAOjE,OAAc,CACtB,MAAMk/F,EAAYjE,EAAa7K,WAE/B,MADAvuF,KAAKG,IAAIb,MAAM,mDAAoD+9F,GAC7DA,EAGR,MAAMC,EAAclE,EAAa1K,UAAU,eACxB,MAAhB4O,GAAqBt9F,KAAKG,IAAIb,MAAM,oBAAqBg+F,GAE5D,MAAM5jD,EAAS0/C,EAAa1K,UAAU,UACxB,MAAXh1C,GAAgB15C,KAAKG,IAAIb,MAAM,eAAgBo6C,GAElD,MAAM6jD,EAAUnE,EAAa7K,SAAS,WAGtC,OAFIgP,GAASv9F,KAAKG,IAAIb,MAAM,aAAci+F,GAEnCnE,EACP,MAAM72F,GAGN,MAFAvC,KAAKG,IAAIb,MAAM,gDAAiDiD,GAClD3G,OAAOC,OAAOq9F,EAAW,CAACnQ,cAAexmF,QAGvDjD,IAOF,MANIA,EAAMuC,SAAYvC,EAAMG,OAC1BH,EAAQ1D,OAAOC,OAAOq9F,EAAW,CAC/BnQ,cAAezpF,KAIbA,KAIIk+F,UAAUloF,G,0CACtB,MAAM9T,EAAU,IAAI+oF,GAAgB,CAACC,SAAS,IAQ9C,IAAI4O,EANJ53F,EAAQ6rF,YAAY,eAAgB,CAACoQ,MAAOnoF,EAAKmoF,QAE9C,MACDz9F,KAAKG,IAAI,cAAe+M,EAAWoI,EAAKmoF,QAI1C,IACE,MAAM3zF,EAAU9J,KAAKi9F,iBAAiB3nF,EAAKhN,KAAM9G,EAAQ4pF,UAAS,IAClEsS,GAAetB,UACfhD,QAAqBtvF,EACrB,MAAMxK,GAEN,MADAU,KAAKG,IAAIb,MAAM,eAAiBA,EAAgBuC,SAC1CvC,EAGR,MAAM4J,EAAkBkwF,EAAanK,YAAY,SAEjD,GAAkB,UAAf/lF,EAAS7K,EACV,MAAM,IAAI+M,MAAM,gCAAkClC,EAAS7K,GAG7D,KAAI,EAAAg7F,GAAA,GAAS/jF,EAAKmoF,MAAOv0F,EAASu0F,OAEhC,MADAz9F,KAAKG,IAAIb,MAAMgW,EAAKmoF,MAAOv0F,EAASu0F,OAC9B,IAAIryF,MAAM,6BAGlBkK,EAAKqoF,YAAcz0F,EAAS00F,aAC5BtoF,EAAKuoF,GAAK30F,EAAS20F,GACnBvoF,EAAKknF,aAAetzF,EAAS40F,+BAE1B,MACD99F,KAAKG,IAAI,YAAa+M,EAAWoI,EAAKqoF,aAAczwF,EAAWoI,EAAKuoF,IAAKvoF,EAAKknF,cAGhF,MAAMuB,QAAkBL,GAAep6D,OAAOhuB,EAAKknF,cACnD,IAAIuB,EACF,MAAM,IAAI3yF,MAAM,4BAGlBkK,EAAKyoF,UAAYA,EAEd,MACD/9F,KAAKG,IAAI,yBAA0BmV,EAAKuoF,IAI1C,IACE,IAAIG,QAAc,iBAA0B,YAAa1oF,EAAKuoF,IAC9D,MAAMv+F,GAEN,MADAU,KAAKG,IAAIb,MAAM,yBAA0BA,GACnCA,EAUR,OAPAgW,EAAK8gB,EAAI4nE,EAAM,GACf1oF,EAAK8yB,EAAI41D,EAAM,GAEZ,MACDh+F,KAAKG,IAAI,wBAAyB69F,GAG7Bh+F,KAAKi+F,gBAAgB3oF,MAGhB2oF,gBAAgB3oF,G,0CAC5BA,EAAK4oF,SAAWjzF,EAAU,IAAI1B,WAAW,KAEzC,MAAM40F,EAAoC,CACxC9/F,EAAG,oBACHw/F,GAAIvoF,EAAKuoF,GACTznE,EAAG9gB,EAAK8gB,EACRgS,EAAG9yB,EAAK8yB,EACRq1D,MAAOnoF,EAAKmoF,MACZG,aAActoF,EAAKqoF,YACnBS,UAAW9oF,EAAK4oF,SAChBtY,GAAI,GAGAyY,EAA2B,IAAI9T,GAAgB,CAACC,SAAS,IAC/D6T,EAAyBvQ,YAAYqQ,EAAmB,iBAAkB,kBAE1E,MAAM1zF,EAAO4zF,EAAyBjT,UAAS,GAC/C,GAAG3gF,EAAKtM,OAAS,IACf,KAAM,0CAGR,MAAM24F,EAAkBrG,GAAWhmF,EAAM,KAAK,GAAO,GAAM,GACrD6zF,EAAkBxH,EAAgBlvF,QAAQuE,UAuB1CoyF,OArBqB,KAAW,mCACpC,OAAQ,CACN,MAAMC,EAAUvzF,EAAU,IAAI1B,WAAW,KACnCk1F,EAAeH,EAAgBp6F,aAAa,iBAA0B,SAAUs6F,EAAQt6F,OAAO4yF,KACrG,GAA2B,MAAxB2H,EAAatgG,OACd,KAAM,yCAGR,MAAMugG,QAAqB,iBAA0B,cAAeD,EAAcD,EAAS,IAAIj1F,WAAW,CAAC,KAErGg1F,EADa1B,GAAS2B,QAAe,iBAA0B,SAAUE,IAC5Cx6F,OAAOw6F,GAEpCC,EAAwB3U,GAAgBuU,GACxCK,EAAyB,KAAOtpF,EAAKyoF,UAAUhC,QAAS,IAE9D,IAA8D,IAA3D4C,EAAsBvG,QAAQwG,GAC/B,OAAOL,MAKiBM,GACxBjG,EAAgBnI,SAAiB,iBAA0B,cAAe8N,EAAiBjpF,EAAKyoF,WAAY,KAAK,GAAM,GAAM,GAE7He,EAA+B,CACnCrB,MAAOnoF,EAAKmoF,MACZG,aAActoF,EAAKqoF,YACnBvnE,EAAG9gB,EAAK8gB,EACRgS,EAAG9yB,EAAK8yB,EACR22D,uBAAwBzpF,EAAKyoF,UAAUnB,YACvCoC,eAAgBpG,GAGZp3F,EAAU,IAAI+oF,GAAgB,CAACC,SAAS,IAC9ChpF,EAAQ6rF,YAAY,gBAAiByR,GAErC,MAAMG,EAAez9F,EAAQ4pF,UAAS,GAMtC,IAAIgO,EAJD,MACDp5F,KAAKG,IAAI,qBAAsB2+F,GAIjC,IACE1F,QAAqBp5F,KAAKi9F,iBAAiB3nF,EAAKhN,KAAM22F,GACtD,MAAM3/F,GAEN,MADAU,KAAKG,IAAIb,MAAM,2BAA4BA,GACrCA,EAGR,MAAM4J,EAAWkwF,EAAanK,YAAY,mBAAoB,YAM9D,GAJG,MACDjvF,KAAKG,IAAI,gCAAiC+I,GAG1B,0BAAfA,EAAS7K,GAAgD,wBAAf6K,EAAS7K,EACpD,MAAM,IAAI+M,MAAM,2CAA6ClC,EAAS7K,GAGxE,KAAI,EAAAg7F,GAAA,GAAS/jF,EAAKmoF,MAAOv0F,EAASu0F,OAChC,MAAM,IAAIryF,MAAM,wCAGlB,KAAI,EAAAiuF,GAAA,GAAS/jF,EAAKqoF,YAAaz0F,EAAS00F,cACtC,MAAM,IAAIxyF,MAAM,+CAGlB,GAAkB,0BAAflC,EAAS7K,EAA+B,CACzC,MAAM6gG,SAAsB,iBAA0B,OAAQ5pF,EAAK4oF,WAAWt2F,OAAO,IACrF,KAAI,EAAAyxF,GAAA,GAAS6F,EAAch2F,EAASi2F,gBAClC,MAAM,IAAI/zF,MAAM,sDAGlB,MAAM,IAAIA,MAAM,8BAIlB,UACQpL,KAAKo/F,0BAA0B9pF,EAAMpM,EAASm2F,kBACpD,MAAM98F,GAEN,MADAvC,KAAKG,IAAIb,MAAM,uCAAwCiD,GACjDA,EAKR,OAAOvC,KAAKs/F,sBAAsBhqF,MAGtB8pF,0BAA0B9pF,EAAmBiqF,G,0CACzDjqF,EAAKkqF,UAAY7wF,KAAK5J,MAGtBuQ,EAAKmqF,iBAAmB,iBAA0B,OAAQnqF,EAAK4oF,SAASh6F,OAAOoR,EAAKqoF,eACnFz5F,cAAc,iBAA0B,OAAQoR,EAAKqoF,YAAYz5F,OAAOoR,EAAK4oF,YAAYt2F,MAAM,EAAG,KAEnG0N,EAAKoqF,gBAAkB,iBAA0B,OAAQpqF,EAAKqoF,YAAYz5F,OAAOoR,EAAK4oF,YAAYt2F,MAAM,IACvG1D,aAAa,iBAA0B,OAAQoR,EAAK4oF,SAASh6F,OAAOoR,EAAK4oF,WAAY5oF,EAAK4oF,SAASt2F,MAAM,EAAG,IAE7G,MAAM+3F,EAAiB,IAAIp2F,iBAAiB,iBAA0B,cAAeg2F,EAAiBjqF,EAAKmqF,UAAWnqF,EAAKoqF,WAErHhiE,EAAOiiE,EAAe/3F,MAAM,EAAG,IAC/Bg4F,EAAoBD,EAAe/3F,MAAM,IAEzCwxF,EAAe,IAAI/K,GAA0BuR,EAAmB,CAACpV,SAAS,IAC1EthF,EAAWkwF,EAAanK,YAAY,wBAE1C,GAAkB,yBAAf/lF,EAAS7K,EACV,MAAM,IAAI+M,MAAM,+CAAiDlC,GAGnE,KAAI,EAAAmwF,GAAA,GAAS/jF,EAAKmoF,MAAOv0F,EAASu0F,OAChC,MAAM,IAAIryF,MAAM,4CAGlB,KAAI,EAAAiuF,GAAA,GAAS/jF,EAAKqoF,YAAaz0F,EAAS00F,cACtC,MAAM,IAAIxyF,MAAM,kDAGf,MACDpL,KAAKG,IAAI,0BAEXmV,EAAKuqF,EAAI32F,EAAS22F,EAClBvqF,EAAKwqF,QAAU52F,EAAS62F,SACxBzqF,EAAK0qF,GAAK92F,EAAS+2F,IACnB3qF,EAAKmlF,WAAavxF,EAASg3F,YAC3B5qF,EAAK6qF,MAAQ,EAEbngG,KAAKogG,eAAe9qF,EAAKuqF,EAAGvqF,EAAKwqF,QAASxqF,EAAK0qF,IAE/C,MAAMr2E,EAASyvE,EAAa7N,YAE5B,KAAI,EAAA8N,GAAA,GAAS37D,QAAY,iBAA0B,OAAQkiE,EAAkBh4F,MAAM,EAAG+hB,KACpF,MAAM,IAAIve,MAAM,2CAGlBpL,KAAKgiB,YAAYw4E,gBAAgBllF,EAAKmlF,WAAYnlF,EAAKkqF,cAGjDY,eAAeP,EAAWC,EAAqBE,GAClD,MACDhgG,KAAKG,IAAI,sBAAuB0/F,EAAGC,EAASE,GAG9C,MAAMK,EAAanzF,EAAW4yF,GAC9B,GAAS,IAAND,GAA0B,qgBAAfQ,EAEZ,MAAM,IAAIj1F,MAAM,oDAGf,MACDpL,KAAKG,IAAI,kBAGX,MAAMmgG,EAAWtW,GAAgBgW,GAC3BO,EAAgB,KAAOF,EAAY,IAEzC,GAAGC,EAASlI,QAAQ,WAAe,EACjC,MAAM,IAAIhtF,MAAM,4CAGlB,GAAGk1F,EAASlI,QAAQmI,EAAcC,SAAS,YAAgB,EACzD,MAAM,IAAIp1F,MAAM,sDAGf,MACDpL,KAAKG,IAAI,yBAGX,MAAMsgG,EAAS,KAAO,GAAG5W,IAAI,MAE7B,GAAGyW,EAASlI,QAAQqI,GAAU,EAC5B,MAAM,IAAIr1F,MAAM,qDAElB,GAAGk1F,EAASlI,QAAQmI,EAAcC,SAASC,KAAY,EACrD,MAAM,IAAIr1F,MAAM,+DAOlB,OAJG,MACDpL,KAAKG,IAAI,8CAGJ,EAGKm/F,sBAAsBhqF,G,0CAClC,MAAMorF,GAAS,EAAA7Z,GAAA,GAAavxE,EAAKuqF,EAAEzyF,SAAS,KAE5CkI,EAAKqK,EAAI1U,EAAU,IAAI1B,WAAW,MAIlC,IACE,IAAIo3F,QAAW,iBAA0B,UAAWD,EAAQprF,EAAKqK,EAAGrK,EAAKwqF,SACzE,MAAMxgG,GACN,MAAMA,EAGR,MAAMmL,EAAO,IAAI8/E,GAAgB,CAACC,SAAS,IAC3C//E,EAAKqjF,YAAY,CACfzvF,EAAG,uBACHo/F,MAAOnoF,EAAKmoF,MACZG,aAActoF,EAAKqoF,YACnBiD,SAAU,CAAC,EAAGtrF,EAAK6qF,SACnBhqE,IAAKwqE,GACJ,wBAEH,MAAMlC,SAAsB,iBAA0B,OAAQh0F,EAAK0gF,cAAcjnF,OAAOuG,EAAK2gF,UAAS,IAChGwN,QAAsB,iBAA0B,cAAe6F,EAAcnpF,EAAKmqF,UAAWnqF,EAAKoqF,UAElGl+F,EAAU,IAAI+oF,GAAgB,CAACC,SAAS,IAW9C,IAAI4O,EAVJ53F,EAAQ6rF,YAAY,uBAAwB,CAC1CoQ,MAAOnoF,EAAKmoF,MACZG,aAActoF,EAAKqoF,YACnBqB,eAAgBpG,IAGf,MACD54F,KAAKG,IAAI,6BAIX,IACEi5F,QAAqBp5F,KAAKi9F,iBAAiB3nF,EAAKhN,KAAM9G,EAAQ4pF,UAAS,IACvE,MAAM3hF,GACN,MAAMA,EAGR,MAAMP,EAAWkwF,EAAanK,YAAY,+BAE1C,GAAkB,cAAf/lF,EAAS7K,GAAoC,iBAAf6K,EAAS7K,GAAuC,gBAAf6K,EAAS7K,EACzE,MAAM,IAAI+M,MAAM,sDAAwDlC,EAAS7K,GAGnF,KAAI,EAAAg7F,GAAA,GAAS/jF,EAAKmoF,MAAOv0F,EAASu0F,OAChC,MAAM,IAAIryF,MAAM,mDAGlB,KAAI,EAAAiuF,GAAA,GAAS/jF,EAAKqoF,YAAaz0F,EAAS00F,cACtC,MAAM,IAAIxyF,MAAM,0DAIlB,IACE,IAAIw7E,QAAgB,iBAA0B,UAAWtxE,EAAK0qF,GAAI1qF,EAAKqK,EAAGrK,EAAKwqF,SAC/E,MAAMr2F,GACN,MAAMm9E,EAGR,MAAMia,QAAoB,iBAA0B,OAAQja,GAC1Dka,EAAaD,EAAYj5F,MAAM,EAAG,GAClCk/E,EAAY+Z,EAAYj5F,OAAO,GAKjC,OAHG,MACD5H,KAAKG,IAAI,kCAAmC+I,EAAS7K,EAAGuoF,GAEnD19E,EAAS7K,GACd,IAAK,YAAa,CAChB,MAAM0iG,SAAuB,iBAA0B,OAAQzrF,EAAK4oF,SAASh6F,OAAO,CAAC,GAAI48F,KAAcl5F,OAAO,IAE9G,KAAI,EAAAyxF,GAAA,GAAS0H,EAAe73F,EAAS83F,iBAEnC,MADAhhG,KAAKG,IAAIb,MAAM,uDAAwDyhG,EAAe73F,GAChF,IAAIkC,MAAM,4BAGlB,MAAM27E,EAAa8V,GAASvnF,EAAK4oF,SAASt2F,MAAM,EAAG,GAAI0N,EAAKqoF,YAAY/1F,MAAM,EAAG,IASjF,OARG,MACD5H,KAAKG,IAAI,oBAAqB2mF,EAAWF,EAASG,GAGpDzxE,EAAKwxE,UAAYA,EACjBxxE,EAAKsxE,QAAUA,EACftxE,EAAKyxE,WAAaA,EAEXzxE,EAGT,IAAK,eAAgB,CACnB,MAAM2rF,SAAuB,iBAA0B,OAAQ3rF,EAAK4oF,SAASh6F,OAAO,CAAC,GAAI48F,KAAcl5F,OAAO,IAC9G,KAAI,EAAAyxF,GAAA,GAAS4H,EAAe/3F,EAASg4F,iBACnC,MAAM,IAAI91F,MAAM,6DAGlB,OAAOpL,KAAKs/F,sBAAsBhqF,GAGpC,IAAK,cAAe,CAClB,MAAM6rF,SAAuB,iBAA0B,OAAQ7rF,EAAK4oF,SAASh6F,OAAO,CAAC,GAAI48F,KAAcl5F,OAAO,IAC9G,KAAI,EAAAyxF,GAAA,GAAS8H,EAAej4F,EAASk4F,iBACnC,MAAM,IAAIh2F,MAAM,6DAGlB,MAAM,IAAIA,MAAM,8CAMdq5E,mBACN,OAAGzkF,KAAKqhG,wBAAgCrhG,KAAKqhG,wBACtCrhG,KAAKqhG,wBAA0B,mBAAqCr8F,MAAK,EAAEiN,UAAAA,MAChFjS,KAAK+Q,cAAgBkB,EAAY,YAAc,QAC/CjS,KAAKG,IAAI,sBAAuBH,KAAK+Q,kBAKlCuE,KAAKhN,GACV,IAAIwB,EAAU9J,KAAKmpB,OAAO7gB,GAC1B,OAAGwB,IAIHA,EAAU,IAAInI,SAAQ,CAAMM,EAASL,IAAW,mCAK9C,IAAItC,QAHEU,KAAKykF,mBAIX,IAAI6c,EAAO,EACX,KAAMA,KAAU,GACd,IACE,MAAMhsF,EAAoB,CACxBhN,KAAAA,EACAm1F,MAAOxyF,EAAU,IAAI1B,WAAW,MAG5BO,EAAU9J,KAAKw9F,UAAUloF,GAE/B,YADArT,QAAc6H,GAEd,MAAML,GACNnK,EAAQmK,EAIZ7H,EAAOtC,QAGFU,KAAKmpB,OAAO7gB,GAAQwB,ICtlBxB,MAAMy3F,WAAoBzuF,EAcrB6J,QACR3c,KAAKwhG,cAAgB,CAAC,EAAG,GACzBxhG,KAAKyhG,WAAa,EAElBrc,GAAA,MAAmB,sBAAsBpgF,MAAMypB,IAC1CA,IACDzuB,KAAKyhG,WAAahzE,MAmBjBxM,sBACL,OAAOjiB,KAAKyhG,WAGP7N,aACL,MAAM8N,EAAY/yF,KAAK5J,MAKvB,IAAIoJ,EAA0C,CAJlCoR,KAAKguC,MAAMm0C,EAAY,KAAQ1hG,KAAKyhG,WACnCC,EAAY,KAG4C,IAF1D,QAAe,KAE4D,EAAK,GAiB3F,OAhBG1hG,KAAKwhG,cAAc,GAAKrzF,EAAU,IACnCnO,KAAKwhG,cAAc,KAAOrzF,EAAU,IAAMnO,KAAKwhG,cAAc,IAAMrzF,EAAU,MAC7EA,EAAY,CAACnO,KAAKwhG,cAAc,GAAIxhG,KAAKwhG,cAAc,GAAK,IAG9DxhG,KAAKwhG,cAAgBrzF,EAETo7E,GAAcp7E,EAAU,GAAIA,EAAU,IAAIf,SAAS,IAY1DotF,gBAAgBC,EAAoB+E,GAEzC,MAAMmC,EAAgBlH,GADtB+E,GAAaA,GAAa7wF,KAAK5J,OAAS,IAAO,GAEzC68F,EAAUriF,KAAKwvE,IAAI/uF,KAAKyhG,WAAaE,GAAiB,GAa5D,OAZA3hG,KAAKwhG,cAAgB,CAAC,EAAG,GAEtBxhG,KAAKyhG,aAAeE,IACrBvc,GAAA,MAAmB,CACjByc,mBAAoBF,IAGtB3hG,KAAKyhG,WAAaE,GAKbC,GC1GI,MAAME,GACZ9qC,gBAAgB+qC,GACrB,IAAIA,EACF,OAGF,MAAM12D,EAA0D02D,EAAY32D,WAAW7nC,MAAM8nC,GAA8B,+BAAhBA,EAAUhtC,IAMrH,OALGgtC,IACD02D,EAAYr2D,EAAIL,EAAUK,EAC1Bq2D,EAAYp2D,EAAIN,EAAUM,GAGrBo2D,GCVI,MAAMC,WAA2BlvF,EACvCmvF,sBAAsBzzD,GAC3B,MAAO,CACLnwC,EAAG,mBACHmwC,KAAAA,GAIG0zD,wBAAwBlrF,EAAgB0N,GAC7C,MAAO,CACLrmB,EAAG,sBACHod,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C0iC,QAAQ,EAAA/6B,GAAA,GAAmB+F,IAIxBy9E,eAAeC,GACpB,OAAOpiG,KAAKgU,WAAWC,UAAU,0BAA2B,CAC1DmuF,QAAAA,IACCp9F,MAAMq9F,IACPriG,KAAK6c,gBAAgBoJ,aAAao8E,EAAYnpF,OAEvCmpF,KAIJC,kBAAkBtrF,EAAgB0N,GACvC,OAAO1kB,KAAKgU,WAAWC,UAAU,6BAA8B,CAC7DwH,KAAMzb,KAAK0b,gBAAgB4R,iBAAiBtW,GAC5C0iC,QAAQ,EAAA/6B,GAAA,GAAmB+F,KAC1B1f,MAAMq9F,IACPriG,KAAK6c,gBAAgBoJ,aAAao8E,EAAYnpF,OAEvCmpF,KAIJE,sBAAsBH,EAAuBnd,EAA4B3gF,GAC9E,OAAOtE,KAAKgU,WAAWC,UAAU,iCAAkC,CACjE3P,KAAAA,EACA89F,QAAAA,EACAnd,KAAAA,IAIGud,gBACLJ,EACAK,EACAC,EACAC,EACAC,EACAC,GAEA,OAAO7iG,KAAKgU,WAAWC,UAAU,2BAA4B,CAC3D6uF,QAASL,EACTL,QAAAA,EACAW,kBAAmBL,EACnBM,mBAAoBL,EACpBC,YAAAA,EACAK,WAAYJ,QAAa/3F,IACxB9F,MAAM5C,IACS,2BAAbA,EAAO/D,GACR2B,KAAK6d,kBAAkBkS,qBAAqB3tB,EAAOukB,SAG9CvkB,KAIJ8gG,eAAeje,EAAgB2d,GACpC,OAAO5iG,KAAKgU,WAAWC,UAAU,0BAA2B,CAC1DgxE,KAAAA,EACA2d,YAAAA,KCUN,MAAMO,GAAqB,IA1EpB,MAMLrjG,cACEE,KAAKojG,kBAAoB,GACzBpjG,KAAKqjG,oBAAsB,EAC3BrjG,KAAKsjG,mBAAoB,SACzBtjG,KAAKsjG,kBAAkBt+F,MAAK,KAC1BhF,KAAKsjG,uBAAoBx4F,KAItBsyC,QACL,MAAM7sC,EAAO,kBAEbA,EAAK/J,iBAAiB,WAAW,EAAEvG,KAAAA,EAAMgJ,OAAAA,EAAQpC,KAAAA,MACxC,EAAAqmE,EAAA,GAAYltE,KAAKujG,eAAgBvwF,IAEtC,MAAMwwF,EAAUxwF,EAAS/S,GACzB,OAAOujG,EAAQv6F,GAAQw6F,MAAMD,EAAS38F,QAI1C0J,EAAK/J,iBAAiB,cAAc,CAACoG,EAASgqC,EAAQz0C,K,MACpD,MAAMoO,EAAOpO,EAAMuhG,MAAM,GACtB1jG,KAAKqjG,qBAAuBrjG,KAAKojG,kBAAkBjlG,OACpDoS,EAAK5N,WAIL3C,KAAKqjG,oBACP53F,EAAA,aAA6B8E,GACP,QAAtB,EAAAvQ,KAAKsjG,yBAAiB,SAAErhG,cAG1BsO,EAAK/J,iBAAiB,yBAAyB,EAAEm9F,YAAAA,EAAaruE,KAAAA,MAC5D,IAAIn3B,EAAS6B,KAAKojG,kBAAkBjlG,OAChCA,IACF6B,KAAKojG,kBAAkB9iG,KAAKqjG,KAC1BxlG,GAGJ,MAAMu+C,EAAY,kBAClB,GAAGv+C,IAAWu+C,EACZ,OAAO18C,KAAKojG,kBAGd,MAAMQ,EAAU,IAAI9iG,MAAM47C,EAAYv+C,GAAQu+F,UAAK5xF,GAAW1G,KAAI,IAAMmxB,IAAIC,gBAAgBF,KAE5F,OADAt1B,KAAKojG,kBAAkB9iG,QAAQsjG,GACxB5jG,KAAKojG,qBAIHS,iB,qCACX,MAAM1lF,EAAqB,IAAIxK,QAEzBhS,QAAQ8Q,IAAI,CAEhB0L,EAAmBlL,eACnBjT,KAAKsjG,oBAGP,MAAMtwF,QCnCK,SAAwBmL,EAAwC7G,GAC7E,MAAMtE,EAAW,CACf0I,gBAAiB,IAAI0oD,GACrB1mD,gBAAiB,IAAIoa,GACrBkb,eAAgB,IAAI1I,GACpBgO,iBAAkB,IAAI0sB,GACtB/b,gBAAiB,IAAIwc,GACrB5oD,gBAAiB,IAAI24D,GACrB3sB,mBAAoB,IAAIsyB,GACxB38D,iBAAkB,IAAIywB,GACtB73B,kBAAmB,IAAIywD,GACvBjnD,wBAAyB,IAAI6hD,GAC7B5kD,kBAAmB,IAAI0R,GACvBu0E,kBAAmB,IAAIpvE,GACvB4iC,qBAAsB,IAAI7jB,GAC1BswD,gBAAiB,IAAItuE,GACrB8oC,oBAAqB,IAAI+N,GACzBx1D,mBAAoB,IAAI+mC,GACxBoY,sBAAuB,IAAIza,GAC3BwoD,kBAAmB,IAAIh9B,GACvBi9B,qBAAsB,IAAI3sD,GAC1BpgC,mBAAoB,IAAIo4D,GACxBnkC,kBAAmB,IAAIt1B,GACvB0B,gBAAiB,IAAIw5B,GACrBvwB,eAAgB,IAAIkK,GACpB9B,eAAgB,IAAIvO,GACpBrG,WAAY,IAAIgwE,GAChBrvE,aAAclJ,EAAA,EACdy4F,gBAAiB,IAAInwF,EACrBshB,eAAgB,IAAI6nD,GACpBr4D,aAAc,IAAI,GAClB8lB,cAAe,IAAIy+C,GACnBr3C,iBAAkB,IAAI0pD,GACtB7+E,UAAW,IAAIzW,EACf6gF,WAAY,IAAIgW,GAChBjrF,eAAgB,IAAI5B,EACpB6R,YAAa,IAAIu/E,GACjBpjF,mBAAoBA,EACpBD,gBAAiB,EACjB64C,kBAAmB,IAAI+qC,GACvBqC,mBAAoB,IAAInC,IAK1B,IAAI,MAAM/hG,KAAQ+S,EAAU,CAC1B,MAAMwwF,EAAUxwF,EAAS/S,GACrBujG,IAIAA,EAA+BzwF,cAChCywF,EAA+BzwF,YAAYC,UACpCwwF,EAA+BzwF,aAIzC/D,EAAA,EAAI/O,GAAQujG,GAGd,MAAMx6E,EAAyD,GAC/D,IAAIpV,EAAQhY,OAAOyX,KAAKL,GACxBY,EAAMqQ,QAAQ,kBAAmB,kBAAmB,0BAA2B,qBAAsB,kBACrGrQ,GAAQ,EAAA4gB,GAAA,GAAa5gB,GACrB,IAAI,MAAM3T,KAAQ2T,EAAO,CACvB,MAAM4vF,EAAUxwF,EAAS/S,GACzB,GAAIujG,MAAAA,OAAO,EAAPA,EAAiB7mF,MAAO,CAE1B,MAAMva,EAAUohG,EAAgB7mF,QAChCqM,EAAS1oB,KAAK8B,IAclB,OAJGkV,GACDtE,EAASgB,WAAWqvE,YAAY/rE,GAG3B3V,QAAQ8Q,IAAIuW,GAAUhkB,MAAK,IAAMgO,IDhDf6wF,CAAe1lF,EAAoB,UAC1D,OAAOne,KAAKgT,SAAWA,G,+RAGlBuwF,c,MACL,OAAoB,QAApB,EAAOvjG,KAAKgT,gBAAQ,QAAbhT,KAAKgT,SAAahT,KAAK6jG,mBAKlC,OAAmB,wBAAoCV,IACvD,Y,eErEA,IAKI,GAA8CiB,GAL9CC,IAAyB,EACtB,SAASx3D,KACd,OAAOw3D,GAIF,SAAS/nB,KACd,OAAO+nB,GAAyB,QAAqBv5F,EAGvD,MAAM3K,IAAM,EAAAyI,EAAA,IAAO,WAGb2H,GAAO,IAAI,IACjBA,GAAKuN,2BAA2B,CAC9B/X,YAAcA,IACZE,EAAeF,GAEf,sBAGFoF,OAAQ,EAAElC,OAAAA,EAAQpC,KAAAA,KACT,iBAA0BoC,KAAkBpC,GAGrDM,MAAO,EAAEA,MAAAA,EAAOqM,cAAAA,EAAe8wF,WAAAA,EAAYthG,WAAAA,EAAYD,WAAAA,EAAYuU,OAAAA,MAKjEnX,GAAI,YAAagH,EAAOm9F,GAExB,SAAyBhtF,EACzB,aAA6BtU,EAC7B,aAA6BD,EAE5BnH,OAAOyX,KAAKlM,GAAkCjE,SAASqE,IACtD,cAA4BA,EAAKJ,EAAMI,IAAM,GAAO+8F,EAAW74E,SAASlkB,OAG1E,UAA+BiM,IAIjC2yE,eAAgB,EAAEzpD,QAAAA,EAAS6nE,WAAAA,MAClB,EAAApe,GAAA,GAAezpD,EAAS6nE,GAGjCpiG,MAAO,CAACyK,EAASgqC,KACfz2C,GAAI,sBAAuByM,EAASgqC,GACpCrmC,GAAKi0F,mBAAmB,QAAS53F,EAASgqC,IAG5C6tD,oBAAsB15D,IACpBs5D,GAAyBt5D,GAG3B25D,kBAAmB,CAAC93F,EAASgqC,EAAQz0C,KAChC,IACD,GAAmBwiG,WAAWP,IAC9BA,QAAsBt5F,IAEtB,GAAqB,IAAI,KACzB,GAAmBgT,2BAA2B,CAC5CixB,gBAAkBniC,IACT,EAAAsgE,EAAA,GAAY,kBAAmCl6D,IACpD,MAAM,MAACyE,EAAK,KAAEnP,EAAI,OAAEqhB,EAAM,MAAEZ,GAASnc,EACrC,OAAOoG,EAASggC,eAAelE,eAAer3B,EAAOnP,EAAMqhB,EAAQZ,UAOxEq7E,GAAsBjiG,EAAMuhG,MAAM,KACnC,GAAmBkB,WAAWR,KAIlC5uE,gBAAkBF,GACTC,IAAIC,gBAAgBF,KAmB/Bn1B,GAAI,iBAEJ,WACA,iBACA,WCvHe,SACb0kG,EACAC,EACAC,GAEA,MAAMH,EAAa,CAACI,EAAiBC,KACnCJ,EAAYK,iBAAiBF,GAC7BC,GAAYJ,EAAYM,eAAeF,GACvCH,MAAAA,GAAAA,EAAYE,IAGdH,EAAYO,qBDuHVxuD,IACF,aAAyBA,MCtHc,oBAA9B,wBACN5nC,EAAA,mBAAwD,WAAYzM,GAAMqiG,EAAWriG,EAAEq0C,OAAQr0C,EAAEq0C,UACrD,oBAA/B,yBACdguD,EAAW51F,EAAA,EAAK,MAEhB41F,EAAW51F,EAAA,EAAKA,EAAA,GDwGpBq2F,CAAkB90F,IAAOqmC,IACvB,UAAsBA,O,2HEtHjB,MAAM0uD,EAAuB,EACvBC,EAA0B,WAC1BC,EAAoC,IACpCC,EAA0B,MAC1BC,EAAa,WAEbC,EAAqB,SACrBC,EAAkB,GAElBC,EAAgC,EAChCC,EAAoC,EACpCC,EAA4B,IAAI3vF,IAAI,CAACyvF,EAAeC,IACpDE,EAAiBzmF,KAAK8D,OAAOviB,MAAMC,KAAKglG,IAAiB,G,6GCZtE,MAMaE,EAAsB,w3BA4BtBC,EAAgC,IAAMD,EAAsB,OAC5DE,EAA4B,+BAC5BC,EAAcD,EAEzB,MAAQD,EAAgC,aAAeA,EAF9BC,oIAQzBD,EAAgC,IAAMD,EARbE,qBAUdD,EAAgC,IAAMD,EAVxBE,iDAYOF,EAZPE,uEAmBdE,GADuB,IAAIt/D,OAAO,IAAMo/D,EAA0Bv+F,MAAM,GAAI,GAAI,KACrD,+BAG3B0+F,EAAe,IAAIv/D,OAAO,iCAAyCq/D,EAAc,YAAc,IAArE,w9BAA8K,KACxMG,EAAgB,4JAEhBC,EAAmB,+JAenBC,EAA8D,CACzE,IAAK,oBACL,KAAM,mBACN,KAAM,oBACN,GAAM,sBACN,KAAM,sBACN,MAAO,yBACP,KAAM,wBAGKC,EAAqD,IAAItwF,IAAI,CACxE,qBACA,yBACA,uBAEF,IAAI,MAAMvQ,KAAK4gG,EACbC,EAA0BnwF,IAAIkwF,EAAkB5gG,IAG3C,MAAM8gG,EAAuB,W,cC3G7B,SAASC,EAAYC,GAE1B,OASK,SAAsBC,GAC3B,MAAMC,EAAS,GACf,IAAIC,EAAO,EACPv7B,EAAW,EACX5lE,EAAI,EACR,KAAMA,EAAIihG,EAAkB3oG,QAC1B6oG,EAAOF,EAAkBh1B,WAAWjsE,KACjC4lE,GACDs7B,EAAOzmG,MAAM,OAAYmrE,EAAW,OAAW,KAAOu7B,EAAO,QAAS55F,SAAS,KAC/Eq+D,EAAW,GACHu7B,EAAO,OAAUA,GAAQ,MACjCv7B,EAAWu7B,EAEXD,EAAOzmG,KAAK0mG,EAAK55F,SAAS,KAQ9B,OAJG25F,EAAO5oG,QAA+B,IAArB4oG,EAAO,GAAG5oG,SAC5B4oG,EAAO,GAAK,KAAOA,EAAO,IAGrBA,EA/BYE,CAAaC,EAAYL,IAAYnoG,KAAK,K,kBAI/D,MAAMyoG,EAAa,UAEbC,EAAkBjY,OAAOC,aAAa,MAEtC8X,EAAeG,GAAsBA,EAASjrG,QAAQgrG,GAAmB,EAAIC,EAAS5pG,QAAQ0pG,EAAY,IAAME,ICVlHC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB18F,IAAjB28F,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CACjDlpG,GAAIkpG,EACJtoF,QAAQ,EACRwoF,QAAS,IAUV,OANAE,EAAoBJ,GAAUnxE,KAAKsxE,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG3EI,EAAOzoF,QAAS,EAGTyoF,EAAOD,QAIfH,EAAoB9Z,EAAIma,EAGxBL,EAAoBxQ,EAAI,KAGvB,IAAI8Q,EAAsBN,EAAoBO,OAAEh9F,EAAW,CAAC,IAAI,IAAI,GAAG,IAAI,MAAM,IAAOy8F,EAAoB,QAE5G,OADsBA,EAAoBO,EAAED,I9GnCzC1sG,EAAW,GACfosG,EAAoBO,EAAI,CAAC1lG,EAAQ2lG,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAe/iC,EAAAA,EACnB,IAASt/D,EAAI,EAAGA,EAAI1K,EAASgD,OAAQ0H,IAAK,CAGzC,IAFA,IAAKkiG,EAAUC,EAAIC,GAAY9sG,EAAS0K,GACpCu6D,GAAY,EACPuZ,EAAI,EAAGA,EAAIouB,EAAS5pG,OAAQw7E,MACpB,EAAXsuB,GAAsBC,GAAgBD,IAAarsG,OAAOyX,KAAKk0F,EAAoBO,GAAG3oF,OAAO5X,GAASggG,EAAoBO,EAAEvgG,GAAKwgG,EAASpuB,MAC9IouB,EAAS99F,OAAO0vE,IAAK,IAErBvZ,GAAY,EACT6nC,EAAWC,IAAcA,EAAeD,IAG7C,GAAG7nC,EAAW,CACbjlE,EAAS8O,OAAOpE,IAAK,GACrB,IAAIN,EAAIyiG,SACEl9F,IAANvF,IAAiBnD,EAASmD,IAGhC,OAAOnD,EAvBN6lG,EAAWA,GAAY,EACvB,IAAI,IAAIpiG,EAAI1K,EAASgD,OAAQ0H,EAAI,GAAK1K,EAAS0K,EAAI,GAAG,GAAKoiG,EAAUpiG,IAAK1K,EAAS0K,GAAK1K,EAAS0K,EAAI,GACrG1K,EAAS0K,GAAK,CAACkiG,EAAUC,EAAIC,I+GJ/BV,EAAoBrjC,EAAKyjC,IACxB,IAAIQ,EAASR,GAAUA,EAAOS,WAC7B,IAAOT,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoB7qF,EAAEyrF,EAAQ,CAAEzoF,EAAGyoF,IAC5BA,GCLRZ,EAAoB7qF,EAAI,CAACgrF,EAASW,KACjC,IAAI,IAAI9gG,KAAO8gG,EACXd,EAAoBp5C,EAAEk6C,EAAY9gG,KAASggG,EAAoBp5C,EAAEu5C,EAASngG,IAC5E3L,OAAO0zB,eAAeo4E,EAASngG,EAAK,CAAE+gG,YAAY,EAAM5jG,IAAK2jG,EAAW9gG,MCJ3EggG,EAAoB35E,EAAI,GAGxB25E,EAAoBhlG,EAAKgmG,GACjB5mG,QAAQ8Q,IAAI7W,OAAOyX,KAAKk0F,EAAoB35E,GAAGykB,QAAO,CAACrpB,EAAUzhB,KACvEggG,EAAoB35E,EAAErmB,GAAKghG,EAASv/E,GAC7BA,IACL,KCNJu+E,EAAoBltE,EAAKkuE,GAER,MAAZA,EAAwB,qCACZ,MAAZA,EAAwB,sCAEf,CAAC,IAAM,kBAAkB,IAAM,YAAYA,IAAYA,GAAW,IAAM,CAAC,EAAI,uBAAuB,GAAK,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,wBAAwBA,GAAW,YCL9QhB,EAAoBiB,SAAYD,MCDhChB,EAAoB1H,EAAI,WACvB,GAA0B,iBAAf4I,WAAyB,OAAOA,WAC3C,IACC,OAAOzoG,MAAQ,IAAI0oG,SAAS,cAAb,GACd,MAAOnmG,GACR,GAAsB,iBAAX+hC,OAAqB,OAAOA,QALjB,GCAxBijE,EAAoBp5C,EAAI,CAAC38C,EAAKm3F,IAAU/sG,OAAOwzB,UAAUne,eAAeolB,KAAK7kB,EAAKm3F,GCClFpB,EAAoBhiG,EAAKmiG,IACH,oBAAXkB,QAA0BA,OAAOC,aAC1CjtG,OAAO0zB,eAAeo4E,EAASkB,OAAOC,YAAa,CAAEtkG,MAAO,WAE7D3I,OAAO0zB,eAAeo4E,EAAS,aAAc,CAAEnjG,OAAO,KCLvDgjG,EAAoBuB,IAAOnB,IAC1BA,EAAOoB,MAAQ,GACVpB,EAAOqB,WAAUrB,EAAOqB,SAAW,IACjCrB,G,MCHR,IAAIsB,EACA1B,EAAoB1H,EAAEqJ,gBAAeD,EAAY1B,EAAoB1H,EAAE5hG,SAAW,IACtF,IAAIujC,EAAW+lE,EAAoB1H,EAAEr+D,SACrC,IAAKynE,GAAaznE,IACbA,EAAS2nE,gBACZF,EAAYznE,EAAS2nE,cAAcC,MAC/BH,GAAW,CACf,IAAII,EAAU7nE,EAAS8nE,qBAAqB,UACzCD,EAAQlrG,SAAQ8qG,EAAYI,EAAQA,EAAQlrG,OAAS,GAAGirG,KAK7D,IAAKH,EAAW,MAAM,IAAI79F,MAAM,yDAChC69F,EAAYA,EAAUxrG,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpF8pG,EAAoBnxE,EAAI6yE,G,GvHbhB7tG,EAAemsG,EAAoBltE,EACnCh/B,EAAgBksG,EAAoBhlG,EACpCjH,EAAW,IAAIsW,IACfrW,EAAW,IAAIqW,IACnB21F,EAAoBltE,EAAI,SAAUkuE,GAEhC,OADantG,EAAamtG,IAEdjtG,EAASkuB,IAAI++E,GAAW,IAAMjtG,EAASoJ,IAAI6jG,GAAW,KAGpEhB,EAAoBhlG,EAAI,SAAUgmG,GAEhC,OADaltG,EAAcktG,GACbl6F,OAAM,SAAU/O,GAC5B,IAAIiqG,EAAUhuG,EAASiuB,IAAI++E,GAAWhtG,EAASmJ,IAAI6jG,GAAW,OAC9D,GAAIgB,EAAU,EAAG,CACf,IAAIC,EAAUpuG,EAAamtG,GAQ3B,MAPAjpG,EAAMuC,QACJ,iBACA0mG,EACA,mCACAiB,EACA,IACFlqG,EAAMkC,QAAUgoG,EACVlqG,EAER,OAAO,IAAIqC,SAAQ,SAAUM,GAC3BF,YAAW,WACT,IAEI0nG,EACK96F,KAAK5J,MAGdzJ,EAAS8M,IAAImgG,EAASkB,GACtBluG,EAAS6M,IAAImgG,EAASgB,EAAU,GAChCtnG,EAAQslG,EAAoBhlG,EAAEgmG,MAC7B,Y,MwHlCb,IAAImB,EAAkB,CACrB,IAAK,GAgBNnC,EAAoB35E,EAAE/nB,EAAI,CAAC0iG,EAASv/E,KAE/B0gF,EAAgBnB,IAElBW,cAAc3B,EAAoBnxE,EAAImxE,EAAoBltE,EAAEkuE,KAK/D,IAAIoB,EAAqB3pG,KAAuB,iBAAIA,KAAuB,kBAAK,GAC5E4pG,EAA6BD,EAAmBrpG,KAAKie,KAAKorF,GAC9DA,EAAmBrpG,KAvBCmK,IACnB,IAAKs9F,EAAU8B,EAAaC,GAAWr/F,EACvC,IAAI,IAAI+8F,KAAYqC,EAChBtC,EAAoBp5C,EAAE07C,EAAarC,KACrCD,EAAoB9Z,EAAE+Z,GAAYqC,EAAYrC,IAIhD,IADGsC,GAASA,EAAQvC,GACdQ,EAAS5pG,QACdurG,EAAgB3B,EAASlgG,OAAS,EACnC+hG,EAA2Bn/F,K,GvHnBxBjP,EAAO+rG,EAAoBxQ,EAC/BwQ,EAAoBxQ,EAAI,IAChBp1F,QAAQ8Q,IAAI,CAAC,IAAI,IAAI,GAAG,IAAI,KAAKrO,IAAImjG,EAAoBhlG,EAAGglG,IAAsBviG,KAAKxJ,GwHDrE+rG,EAAoBxQ,K","sources":["webpack://tweb/webpack/runtime/chunk loaded","webpack://tweb/webpack/runtime/compat","webpack://tweb/webpack/runtime/startup chunk dependencies","webpack://tweb/./src/config/emoji.ts","webpack://tweb/./src/environment/userAgent.ts","webpack://tweb/./src/helpers/cleanSearchText.ts","webpack://tweb/./src/helpers/fileName.ts","webpack://tweb/./src/lib/files/idb.ts","webpack://tweb/./src/environment/utils.ts","webpack://tweb/./src/lib/rootScope.ts","webpack://tweb/./src/lib/appManagers/appStateManager.ts","webpack://tweb/./src/helpers/object/setDeepProperty.ts","webpack://tweb/./src/lib/mtproto/transports/http.ts","webpack://tweb/./src/lib/mtproto/transports/websocket.ts","webpack://tweb/./src/helpers/array/randomize.ts","webpack://tweb/./src/lib/mtproto/transports/obfuscation.ts","webpack://tweb/./src/lib/mtproto/transports/abridged.ts","webpack://tweb/./src/helpers/bytes/bytesToHex.ts","webpack://tweb/./src/lib/mtproto/transports/tcpObfuscated.ts","webpack://tweb/./src/lib/mtproto/dcConfigurator.ts","webpack://tweb/./src/lib/mtproto/transports/controller.ts","webpack://tweb/./src/lib/appManagers/utils/storages/resetStoragesPromise.ts","webpack://tweb/./src/lib/appManagers/manager.ts","webpack://tweb/./src/lib/appManagers/utils/storages/loadStorages.ts","webpack://tweb/./src/lib/appManagers/appStoragesManager.ts","webpack://tweb/./src/lib/appManagers/utils/storages/createStorages.ts","webpack://tweb/./src/lib/mtproto/passwordManager.ts","webpack://tweb/./src/lib/mtproto/referenceDatabase.ts","webpack://tweb/./src/helpers/object/safeReplaceObject.ts","webpack://tweb/./src/lib/appManagers/utils/messages/getPeerIdsFromMessage.ts","webpack://tweb/./src/helpers/object/defineNotNumerableProperties.ts","webpack://tweb/./src/lib/appManagers/utils/dialogs/setDialogIndex.ts","webpack://tweb/./src/lib/storages/dialogs.ts","webpack://tweb/./src/lib/storages/filters.ts","webpack://tweb/./src/helpers/applyMixins.ts","webpack://tweb/./src/lib/appManagers/apiUpdatesManager.ts","webpack://tweb/./src/lib/appManagers/appAvatarsManager.ts","webpack://tweb/./src/lib/appManagers/appCallsManager.ts","webpack://tweb/./src/helpers/restrictions.ts","webpack://tweb/./src/lib/appManagers/appChatsManager.ts","webpack://tweb/./src/lib/langPack.ts","webpack://tweb/./src/helpers/date.ts","webpack://tweb/./src/helpers/object/safeReplaceArrayInObject.ts","webpack://tweb/./src/environment/mimeTypeMap.ts","webpack://tweb/./src/lib/appManagers/appDocsManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentURL.ts","webpack://tweb/./src/lib/appManagers/appDraftsManager.ts","webpack://tweb/./src/lib/appManagers/appEmojiManager.ts","webpack://tweb/./src/lib/appManagers/appGroupCallsManager.ts","webpack://tweb/./src/lib/appManagers/utils/photos/getPhotoInput.ts","webpack://tweb/./src/lib/appManagers/utils/photos/getPhotoMediaInput.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentMediaInput.ts","webpack://tweb/./src/lib/appManagers/appInlineBotsManager.ts","webpack://tweb/./src/lib/appManagers/appMessagesIdsManager.ts","webpack://tweb/./src/helpers/middleware.ts","webpack://tweb/./src/helpers/string/splitStringByLength.ts","webpack://tweb/./src/lib/appManagers/appTabsManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentInput.ts","webpack://tweb/./src/lib/appManagers/appMessagesManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentInputFileName.ts","webpack://tweb/./src/helpers/string/convertInputKeyToKey.ts","webpack://tweb/./src/lib/appManagers/appNotificationsManager.ts","webpack://tweb/./src/lib/appManagers/appPeersManager.ts","webpack://tweb/./src/lib/appManagers/appPhotosManager.ts","webpack://tweb/./src/lib/appManagers/appPollsManager.ts","webpack://tweb/./src/lib/appManagers/appPrivacyManager.ts","webpack://tweb/./src/lib/appManagers/appProfileManager.ts","webpack://tweb/./src/helpers/callbackifyAll.ts","webpack://tweb/./src/lib/appManagers/appReactionsManager.ts","webpack://tweb/./src/lib/appManagers/appStickersManager.ts","webpack://tweb/./src/helpers/fixBase64String.ts","webpack://tweb/./src/helpers/cleanUsername.ts","webpack://tweb/./src/lib/appManagers/appUsersManager.ts","webpack://tweb/./src/lib/appManagers/appWebPagesManager.ts","webpack://tweb/./src/helpers/blob/readBlobAsArrayBuffer.ts","webpack://tweb/./src/helpers/string/fileNameRFC.ts","webpack://tweb/./src/lib/files/downloadWriter.ts","webpack://tweb/./src/lib/files/downloadStorage.ts","webpack://tweb/./src/lib/mtproto/apiFileManager.ts","webpack://tweb/./src/helpers/fixFirefoxSvg.ts","webpack://tweb/./src/helpers/blob/readBlobAsUint8Array.ts","webpack://tweb/./src/lib/mtproto/api_methods.ts","webpack://tweb/./src/lib/mtproto/apiManager.ts","webpack://tweb/./src/lib/storages/peers.ts","webpack://tweb/./src/lib/storages/thumbs.ts","webpack://tweb/./src/lib/mtproto/schema.ts","webpack://tweb/./src/helpers/number/intToUint.ts","webpack://tweb/./src/helpers/long/ulongFromInts.ts","webpack://tweb/./src/helpers/bigInt/bigIntConstants.ts","webpack://tweb/./src/helpers/bigInt/bigIntConversion.ts","webpack://tweb/./src/lib/mtproto/tl_utils.ts","webpack://tweb/./src/helpers/gzipUncompress.ts","webpack://tweb/./src/helpers/bytes/addPadding.ts","webpack://tweb/./src/lib/mtproto/networker.ts","webpack://tweb/./src/helpers/long/sortLongsArray.ts","webpack://tweb/./src/helpers/long/longToBytes.ts","webpack://tweb/./src/lib/mtproto/networkerFactory.ts","webpack://tweb/./src/lib/mtproto/rsaKeysManager.ts","webpack://tweb/./src/helpers/bytes/bytesXor.ts","webpack://tweb/./src/lib/mtproto/authorizer.ts","webpack://tweb/./src/lib/mtproto/timeManager.ts","webpack://tweb/./src/lib/appManagers/appWebDocsManager.ts","webpack://tweb/./src/lib/appManagers/appPaymentsManager.ts","webpack://tweb/./src/lib/appManagers/appManagersManager.ts","webpack://tweb/./src/lib/appManagers/createManagers.ts","webpack://tweb/./src/lib/mtproto/mtproto.worker.ts","webpack://tweb/./src/helpers/listenMessagePort.ts","webpack://tweb/./src/lib/mtproto/mtproto_config.ts","webpack://tweb/./src/lib/richTextProcessor/index.ts","webpack://tweb/./src/vendor/emoji/index.ts","webpack://tweb/webpack/bootstrap","webpack://tweb/webpack/runtime/compat get default export","webpack://tweb/webpack/runtime/define property getters","webpack://tweb/webpack/runtime/ensure chunk","webpack://tweb/webpack/runtime/get javascript chunk filename","webpack://tweb/webpack/runtime/get mini-css chunk filename","webpack://tweb/webpack/runtime/global","webpack://tweb/webpack/runtime/hasOwnProperty shorthand","webpack://tweb/webpack/runtime/make namespace object","webpack://tweb/webpack/runtime/node module decorator","webpack://tweb/webpack/runtime/publicPath","webpack://tweb/webpack/runtime/importScripts chunk loading","webpack://tweb/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","(() => {\n  if (typeof __webpack_require__ !== 'undefined') {\n    var oldGetScript = __webpack_require__.u;\n    var oldLoadScript = __webpack_require__.e;\n    var queryMap = new Map();\n    var countMap = new Map();\n    __webpack_require__.u = function (chunkId) {\n      var result = oldGetScript(chunkId);\n      return (\n        result + (queryMap.has(chunkId) ? '?' + queryMap.get(chunkId) : '')\n      );\n    };\n    __webpack_require__.e = function (chunkId) {\n      var result = oldLoadScript(chunkId);\n      return result.catch(function (error) {\n        var retries = countMap.has(chunkId) ? countMap.get(chunkId) : 999999;\n        if (retries < 1) {\n          var realSrc = oldGetScript(chunkId);\n          error.message =\n            'Loading chunk ' +\n            chunkId +\n            ' failed after 999999 retries.\\n(' +\n            realSrc +\n            ')';\n          error.request = realSrc;\n          throw error;\n        }\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            var retryAttempt = 999999 - retries + 1;\n            var retryAttemptString = '&retry-attempt=' + retryAttempt;\n            var cacheBust = (function () {\n              return Date.now();\n            })();\n            +retryAttemptString;\n            queryMap.set(chunkId, cacheBust);\n            countMap.set(chunkId, retries - 1);\n            resolve(__webpack_require__.e(chunkId));\n          }, 3000);\n        });\n      });\n    };\n  }\n})();\n","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([699,211,51,437,567].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {EMOJI_VERSION} from '../environment/emojiVersionsSupport';\n\nexport const EmojiVersions: {[version in EMOJI_VERSION]: {[emoji: string]: number}} = {'14':{'1f6dd':4867, '1f6de':4916, '1f6df':4923, '1f7f0':62832, '1f979':183, '1f9cc':1557, '1fa7b':61332, '1fa7c':61330, '1faa9':51093, '1faaa':61364, '1faab':61189, '1faac':51085, '1fab7':2651, '1fab8':2631, '1fab9':2672, '1faba':2673, '1fac3':1520, '1fac4':1521, '1fac5':1505, '1fad7':3793, '1fad8':3707, '1fad9':3804, '1fae0':111, '1fae1':136, '1fae2':132, '1fae3':133, '1fae4':174, '1fae5':142, '1fae6':1385, '1fae7':61353, '1faf0':1341, '1faf1':1332, '1faf2':1333, '1faf3':1334, '1faf4':1335, '1faf5':1351, '1faf6':1360, '1faf1-1f3fb-200d-1faf2-1f3fc':0, '1faf1-1f3fb-200d-1faf2-1f3fd':0, '1faf1-1f3fb-200d-1faf2-1f3fe':0, '1faf1-1f3fb-200d-1faf2-1f3ff':0, '1faf1-1f3fc-200d-1faf2-1f3fb':0, '1faf1-1f3fc-200d-1faf2-1f3fd':0, '1faf1-1f3fc-200d-1faf2-1f3fe':0, '1faf1-1f3fc-200d-1faf2-1f3ff':0, '1faf1-1f3fd-200d-1faf2-1f3fb':0, '1faf1-1f3fd-200d-1faf2-1f3fc':0, '1faf1-1f3fd-200d-1faf2-1f3fe':0, '1faf1-1f3fd-200d-1faf2-1f3ff':0, '1faf1-1f3fe-200d-1faf2-1f3fb':0, '1faf1-1f3fe-200d-1faf2-1f3fc':0, '1faf1-1f3fe-200d-1faf2-1f3fd':0, '1faf1-1f3fe-200d-1faf2-1f3ff':0, '1faf1-1f3ff-200d-1faf2-1f3fb':0, '1faf1-1f3ff-200d-1faf2-1f3fc':0, '1faf1-1f3ff-200d-1faf2-1f3fd':0, '1faf1-1f3ff-200d-1faf2-1f3fe':0, '1fac3-1f3fb':0, '1fac3-1f3fc':0, '1fac3-1f3fd':0, '1fac3-1f3fe':0, '1fac3-1f3ff':0, '1fac4-1f3fb':0, '1fac4-1f3fc':0, '1fac4-1f3fd':0, '1fac4-1f3fe':0, '1fac4-1f3ff':0, '1fac5-1f3fb':0, '1fac5-1f3fc':0, '1fac5-1f3fd':0, '1fac5-1f3fe':0, '1fac5-1f3ff':0, '1faf0-1f3fb':0, '1faf0-1f3fc':0, '1faf0-1f3fd':0, '1faf0-1f3fe':0, '1faf0-1f3ff':0, '1faf1-1f3fb':0, '1faf1-1f3fc':0, '1faf1-1f3fd':0, '1faf1-1f3fe':0, '1faf1-1f3ff':0, '1faf2-1f3fb':0, '1faf2-1f3fc':0, '1faf2-1f3fd':0, '1faf2-1f3fe':0, '1faf2-1f3ff':0, '1faf3-1f3fb':0, '1faf3-1f3fc':0, '1faf3-1f3fd':0, '1faf3-1f3fe':0, '1faf3-1f3ff':0, '1faf4-1f3fb':0, '1faf4-1f3fc':0, '1faf4-1f3fd':0, '1faf4-1f3fe':0, '1faf4-1f3ff':0, '1faf5-1f3fb':0, '1faf5-1f3fc':0, '1faf5-1f3fd':0, '1faf5-1f3fe':0, '1faf5-1f3ff':0, '1faf6-1f3fb':0, '1faf6-1f3fc':0, '1faf6-1f3fd':0, '1faf6-1f3fe':0, '1faf6-1f3ff':0}, '':{'2049':62835, '2122':62863, '2139':62888, '2194':62764, '2195':62763, '2196':62762, '2197':62756, '2198':62758, '2199':62760, '2328':61194, '2600':4990, '2601':4998, '2602':41013, '2603':41018, '2604':41020, '2611':62851, '2614':41014, '2615':3781, '2618':2667, '2620':1106, '2622':62753, '2623':62754, '2626':62783, '2638':62780, '2639':177, '2648':62788, '2649':62789, '2650':62796, '2651':62797, '2652':62798, '2653':62799, '2660':51095, '2663':51098, '2665':51096, '2666':51097, '2668':4865, '2692':61297, '2693':4922, '2694':61300, '2696':61311, '2697':61319, '2699':61309, '2702':61284, '2705':62850, '2708':4931, '2709':61245, '2712':61259, '2714':62852, '2716':62828, '2721':62779, '2728':51029, '2733':62858, '2734':62859, '2744':41017, '2747':62860, '2753':62836, '2754':62837, '2755':62838, '2757':62839, '2763':1137, '2764':1141, '2795':62829, '2796':62830, '2797':62831, '2934':62767, '2935':62768, '3030':62840, '3297':62912, '3299':62913, '0023-20e3':62864, '002a-20e3':62865, '0030-20e3':62866, '0031-20e3':62867, '0032-20e3':62868, '0033-20e3':62869, '0034-20e3':62870, '0035-20e3':62871, '0036-20e3':62872, '0037-20e3':62873, '0038-20e3':62874, '0039-20e3':62875, '00a9':62861, '00ae':62862, '1f004':51101, '1f0cf':51100, '1f170':62882, '1f171':62884, '1f17e':62893, '1f17f':62895, '1f18e':62883, '1f191':62885, '1f192':62886, '1f193':62887, '1f194':62889, '1f195':62891, '1f196':62892, '1f197':62894, '1f198':62896, '1f199':62897, '1f19a':62898, '1f1e6-1f1e8':71594, '1f1e6-1f1e9':71595, '1f1e6-1f1ea':71596, '1f1e6-1f1eb':71597, '1f1e6-1f1ec':71598, '1f1e6-1f1ee':71599, '1f1e6-1f1f1':71600, '1f1e6-1f1f2':71601, '1f1e6-1f1f4':71602, '1f1e6-1f1f6':71603, '1f1e6-1f1f7':71604, '1f1e6-1f1f8':71605, '1f1e6-1f1f9':71606, '1f1e6-1f1fa':71607, '1f1e6-1f1fc':71608, '1f1e6-1f1fd':71609, '1f1e6-1f1ff':71610, '1f1e7-1f1e6':71611, '1f1e7-1f1e7':71612, '1f1e7-1f1e9':71613, '1f1e7-1f1ea':71614, '1f1e7-1f1eb':71615, '1f1e7-1f1ec':71616, '1f1e7-1f1ed':71617, '1f1e7-1f1ee':71618, '1f1e7-1f1ef':71619, '1f1e7-1f1f1':71620, '1f1e7-1f1f2':71621, '1f1e7-1f1f3':71622, '1f1e7-1f1f4':71623, '1f1e7-1f1f6':71624, '1f1e7-1f1f7':71625, '1f1e7-1f1f8':71626, '1f1e7-1f1f9':71627, '1f1e7-1f1fb':71628, '1f1e7-1f1fc':71629, '1f1e7-1f1fe':71630, '1f1e7-1f1ff':71631, '1f1e8-1f1e6':71632, '1f1e8-1f1e8':71633, '1f1e8-1f1e9':71634, '1f1e8-1f1eb':71635, '1f1e8-1f1ec':71636, '1f1e8-1f1ed':71637, '1f1e8-1f1ee':71638, '1f1e8-1f1f0':71639, '1f1e8-1f1f1':71640, '1f1e8-1f1f2':71641, '1f1e8-1f1f3':71642, '1f1e8-1f1f4':71643, '1f1e8-1f1f5':71644, '1f1e8-1f1f7':71645, '1f1e8-1f1fa':71646, '1f1e8-1f1fb':71647, '1f1e8-1f1fc':71648, '1f1e8-1f1fd':71649, '1f1e8-1f1fe':71650, '1f1e8-1f1ff':71651, '1f1e9-1f1ea':71652, '1f1e9-1f1ec':71653, '1f1e9-1f1ef':71654, '1f1e9-1f1f0':71655, '1f1e9-1f1f2':71656, '1f1e9-1f1f4':71657, '1f1e9-1f1ff':71658, '1f1ea-1f1e6':71659, '1f1ea-1f1e8':71660, '1f1ea-1f1ea':71661, '1f1ea-1f1ec':71662, '1f1ea-1f1ed':71663, '1f1ea-1f1f7':71664, '1f1ea-1f1f8':71665, '1f1ea-1f1f9':71666, '1f1ea-1f1fa':71667, '1f1eb-1f1ee':71668, '1f1eb-1f1ef':71669, '1f1eb-1f1f0':71670, '1f1eb-1f1f2':71671, '1f1eb-1f1f4':71672, '1f1eb-1f1f7':71673, '1f1ec-1f1e6':71674, '1f1ec-1f1e7':71675, '1f1ec-1f1e9':71676, '1f1ec-1f1ea':71677, '1f1ec-1f1eb':71678, '1f1ec-1f1ec':71679, '1f1ec-1f1ed':71680, '1f1ec-1f1ee':71681, '1f1ec-1f1f1':71682, '1f1ec-1f1f2':71683, '1f1ec-1f1f3':71684, '1f1ec-1f1f5':71685, '1f1ec-1f1f6':71686, '1f1ec-1f1f7':71687, '1f1ec-1f1f8':71688, '1f1ec-1f1f9':71689, '1f1ec-1f1fa':71690, '1f1ec-1f1fc':71691, '1f1ec-1f1fe':71692, '1f1ed-1f1f0':71693, '1f1ed-1f1f2':71694, '1f1ed-1f1f3':71695, '1f1ed-1f1f7':71696, '1f1ed-1f1f9':71697, '1f1ed-1f1fa':71698, '1f1ee-1f1e8':71699, '1f1ee-1f1e9':71700, '1f1ee-1f1ea':71701, '1f1ee-1f1f1':71702, '1f1ee-1f1f2':71703, '1f1ee-1f1f3':71704, '1f1ee-1f1f4':71705, '1f1ee-1f1f6':71706, '1f1ee-1f1f7':71707, '1f1ee-1f1f8':71708, '1f1ee-1f1f9':71709, '1f1ef-1f1ea':71710, '1f1ef-1f1f2':71711, '1f1ef-1f1f4':71712, '1f1ef-1f1f5':71713, '1f1f0-1f1ea':71714, '1f1f0-1f1ec':71715, '1f1f0-1f1ed':71716, '1f1f0-1f1ee':71717, '1f1f0-1f1f2':71718, '1f1f0-1f1f3':71719, '1f1f0-1f1f5':71720, '1f1f0-1f1f7':71721, '1f1f0-1f1fc':71722, '1f1f0-1f1fe':71723, '1f1f0-1f1ff':71724, '1f1f1-1f1e6':71725, '1f1f1-1f1e7':71726, '1f1f1-1f1e8':71727, '1f1f1-1f1ee':71728, '1f1f1-1f1f0':71729, '1f1f1-1f1f7':71730, '1f1f1-1f1f8':71731, '1f1f1-1f1f9':71732, '1f1f1-1f1fa':71733, '1f1f1-1f1fb':71734, '1f1f1-1f1fe':71735, '1f1f2-1f1e6':71736, '1f1f2-1f1e8':71737, '1f1f2-1f1e9':71738, '1f1f2-1f1ea':71739, '1f1f2-1f1eb':71740, '1f1f2-1f1ec':71741, '1f1f2-1f1ed':71742, '1f1f2-1f1f0':71743, '1f1f2-1f1f1':71744, '1f1f2-1f1f2':71745, '1f1f2-1f1f3':71746, '1f1f2-1f1f4':71747, '1f1f2-1f1f5':71748, '1f1f2-1f1f6':71749, '1f1f2-1f1f7':71750, '1f1f2-1f1f8':71751, '1f1f2-1f1f9':71752, '1f1f2-1f1fa':71753, '1f1f2-1f1fb':71754, '1f1f2-1f1fc':71755, '1f1f2-1f1fd':71756, '1f1f2-1f1fe':71757, '1f1f2-1f1ff':71758, '1f1f3-1f1e6':71759, '1f1f3-1f1e8':71760, '1f1f3-1f1ea':71761, '1f1f3-1f1eb':71762, '1f1f3-1f1ec':71763, '1f1f3-1f1ee':71764, '1f1f3-1f1f1':71765, '1f1f3-1f1f4':71766, '1f1f3-1f1f5':71767, '1f1f3-1f1f7':71768, '1f1f3-1f1fa':71769, '1f1f3-1f1ff':71770, '1f1f4-1f1f2':71771, '1f1f5-1f1e6':71772, '1f1f5-1f1ea':71773, '1f1f5-1f1eb':71774, '1f1f5-1f1ec':71775, '1f1f5-1f1ed':71776, '1f1f5-1f1f0':71777, '1f1f5-1f1f1':71778, '1f1f5-1f1f2':71779, '1f1f5-1f1f3':71780, '1f1f5-1f1f7':71781, '1f1f5-1f1f8':71782, '1f1f5-1f1f9':71783, '1f1f5-1f1fc':71784, '1f1f5-1f1fe':71785, '1f1f6-1f1e6':71786, '1f1f7-1f1ea':71787, '1f1f7-1f1f4':71788, '1f1f7-1f1f8':71789, '1f1f7-1f1fa':71790, '1f1f7-1f1fc':71791, '1f1f8-1f1e6':71792, '1f1f8-1f1e7':71793, '1f1f8-1f1e8':71794, '1f1f8-1f1e9':71795, '1f1f8-1f1ea':71796, '1f1f8-1f1ec':71797, '1f1f8-1f1ed':71798, '1f1f8-1f1ee':71799, '1f1f8-1f1ef':71800, '1f1f8-1f1f0':71801, '1f1f8-1f1f1':71802, '1f1f8-1f1f2':71803, '1f1f8-1f1f3':71804, '1f1f8-1f1f4':71805, '1f1f8-1f1f7':71806, '1f1f8-1f1f8':71807, '1f1f8-1f1f9':71808, '1f1f8-1f1fb':71809, '1f1f8-1f1fd':71810, '1f1f8-1f1fe':71811, '1f1f8-1f1ff':71812, '1f1f9-1f1e6':71813, '1f1f9-1f1e8':71814, '1f1f9-1f1e9':71815, '1f1f9-1f1eb':71816, '1f1f9-1f1ec':71817, '1f1f9-1f1ed':71818, '1f1f9-1f1ef':71819, '1f1f9-1f1f0':71820, '1f1f9-1f1f1':71821, '1f1f9-1f1f2':71822, '1f1f9-1f1f3':71823, '1f1f9-1f1f4':71824, '1f1f9-1f1f7':71825, '1f1f9-1f1f9':71826, '1f1f9-1f1fb':71827, '1f1f9-1f1fc':71828, '1f1f9-1f1ff':71829, '1f1fa-1f1e6':71830, '1f1fa-1f1ec':71831, '1f1fa-1f1f2':71832, '1f1fa-1f1f3':71833, '1f1fa-1f1f8':71834, '1f1fa-1f1fe':71835, '1f1fa-1f1ff':71836, '1f1fb-1f1e6':71837, '1f1fb-1f1e8':71838, '1f1fb-1f1ea':71839, '1f1fb-1f1ec':71840, '1f1fb-1f1ee':71841, '1f1fb-1f1f3':71842, '1f1fb-1f1fa':71843, '1f1fc-1f1eb':71844, '1f1fc-1f1f8':71845, '1f1fd-1f1f0':71846, '1f1fe-1f1ea':71847, '1f1fe-1f1f9':71848, '1f1ff-1f1e6':71849, '1f1ff-1f1f2':71850, '1f1ff-1f1fc':71851, '1f201':62899, '1f202':62900, '1f21a':62906, '1f22f':62903, '1f232':62907, '1f233':62911, '1f234':62910, '1f235':62915, '1f236':62902, '1f237':62901, '1f238':62909, '1f239':62905, '1f23a':62914, '1f250':62904, '1f251':62908, '1f300':41010, '1f301':4857, '1f302':41012, '1f303':4858, '1f304':4860, '1f305':4861, '1f306':4862, '1f307':4863, '1f308':41011, '1f309':4864, '1f30a':41023, '1f30b':4815, '1f30c':4997, '1f30d':4806, '1f30e':4807, '1f30f':4808, '1f310':4809, '1f311':4977, '1f312':4978, '1f313':4979, '1f314':4980, '1f315':4981, '1f316':4982, '1f317':4983, '1f318':4984, '1f319':4985, '1f31a':4986, '1f31b':4987, '1f31c':4988, '1f31d':4991, '1f31e':4992, '1f31f':4995, '1f320':4996, '1f321':4989, '1f324':41001, '1f325':41002, '1f326':41003, '1f327':41004, '1f328':41005, '1f329':41006, '1f32a':41007, '1f32b':41008, '1f32c':41009, '1f32d':3725, '1f32e':3727, '1f32f':3728, '1f330':3708, '1f331':2659, '1f332':2661, '1f333':2662, '1f334':2663, '1f335':2664, '1f336':3698, '1f337':2658, '1f338':2649, '1f339':2653, '1f33a':2655, '1f33b':2656, '1f33c':2657, '1f33d':3697, '1f33e':2665, '1f33f':2666, '1f340':2668, '1f341':2669, '1f342':2670, '1f343':2671, '1f344':3705, '1f345':3690, '1f346':3694, '1f347':3674, '1f348':3675, '1f349':3676, '1f34a':3677, '1f34b':3678, '1f34c':3679, '1f34d':3680, '1f34e':3682, '1f34f':3683, '1f350':3684, '1f351':3685, '1f352':3686, '1f353':3687, '1f354':3722, '1f355':3724, '1f356':3718, '1f357':3719, '1f358':3744, '1f359':3745, '1f35a':3746, '1f35b':3747, '1f35c':3748, '1f35d':3749, '1f35e':3709, '1f35f':3723, '1f360':3750, '1f361':3756, '1f362':3751, '1f363':3752, '1f364':3753, '1f365':3754, '1f366':3765, '1f367':3766, '1f368':3767, '1f369':3768, '1f36a':3769, '1f36b':3774, '1f36c':3775, '1f36d':3776, '1f36e':3777, '1f36f':3778, '1f370':3771, '1f371':3743, '1f372':3735, '1f373':3733, '1f374':3801, '1f375':3783, '1f376':3784, '1f377':3786, '1f378':3787, '1f379':3788, '1f37a':3789, '1f37b':3790, '1f37c':3779, '1f37d':3800, '1f37e':3785, '1f37f':3739, '1f380':51040, '1f381':51041, '1f382':3770, '1f383':51024, '1f384':51025, '1f385':1527, '1f386':51026, '1f387':51027, '1f388':51030, '1f389':51031, '1f38a':51032, '1f38b':51033, '1f38c':71588, '1f38d':51034, '1f38e':51035, '1f38f':51036, '1f390':51037, '1f391':51038, '1f392':61134, '1f393':61147, '1f396':51045, '1f397':51042, '1f399':61167, '1f39a':61168, '1f39b':61169, '1f39e':61203, '1f39f':51043, '1f3a0':4866, '1f3a1':4868, '1f3a2':4869, '1f3a3':51072, '1f3a4':61170, '1f3a5':61202, '1f3a6':62819, '1f3a7':61171, '1f3a8':51105, '1f3a9':61146, '1f3aa':4871, '1f3ab':51044, '1f3ac':61205, '1f3ad':51103, '1f3ae':51086, '1f3af':51078, '1f3b0':51088, '1f3b1':51081, '1f3b2':51089, '1f3b3':51060, '1f3b4':51102, '1f3b5':61165, '1f3b6':61166, '1f3b7':61173, '1f3b8':61175, '1f3b9':61176, '1f3ba':61177, '1f3bb':61178, '1f3bc':61164, '1f3bd':51074, '1f3be':51058, '1f3bf':51075, '1f3c0':51054, '1f3c1':71586, '1f3c2':1600, '1f3c3-200d-2640':1584, '1f3c3-200d-2642':1583, '1f3c3':1582, '1f3c4-200d-2640':1606, '1f3c4-200d-2642':1605, '1f3c4':1604, '1f3c5':51047, '1f3c6':51046, '1f3c7':1598, '1f3c8':51056, '1f3c9':51057, '1f3ca-200d-2640':1612, '1f3ca-200d-2642':1611, '1f3ca':1610, '1f3cb-200d-2640':1618, '1f3cb-200d-2642':1617, '1f3cb':1616, '1f3cc-200d-2640':1603, '1f3cc-200d-2642':1602, '1f3cc':1601, '1f3cd':4902, '1f3ce':4901, '1f3cf':51061, '1f3d0':51055, '1f3d1':51062, '1f3d2':51063, '1f3d3':51065, '1f3d4':4813, '1f3d5':4817, '1f3d6':4818, '1f3d7':4824, '1f3d8':4829, '1f3d9':4859, '1f3da':4830, '1f3db':4823, '1f3dc':4819, '1f3dd':4820, '1f3de':4821, '1f3df':4822, '1f3e0':4831, '1f3e1':4832, '1f3e2':4833, '1f3e3':4834, '1f3e4':4835, '1f3e5':4836, '1f3e6':4837, '1f3e7':62729, '1f3e8':4838, '1f3e9':4839, '1f3ea':4840, '1f3eb':4841, '1f3ec':4842, '1f3ed':4843, '1f3ee':61216, '1f3ef':4844, '1f3f0':4845, '1f3f3-200d-1f308':71591, '1f3f3-200d-26a7':71592, '1f3f3':71590, '1f3f4-200d-2620':71593, '1f3f4-e0067-e0062-e0065-e006e-e0067-e007f':71852, '1f3f4-e0067-e0062-e0073-e0063-e0074-e007f':71853, '1f3f4-e0067-e0062-e0077-e006c-e0073-e007f':71854, '1f3f4':71589, '1f3f5':2652, '1f3f7':61234, '1f3f8':51066, '1f3f9':61303, '1f3fa':3805, '1f3fb':9525, '1f3fc':9526, '1f3fd':9527, '1f3fe':9528, '1f3ff':9529, '1f400':2576, '1f401':2575, '1f402':2556, '1f403':2557, '1f404':2558, '1f405':2547, '1f406':2548, '1f407':2579, '1f408-200d-2b1b':2544, '1f408':2543, '1f409':2618, '1f40a':2613, '1f40b':2622, '1f40c':2632, '1f40d':2616, '1f40e':2550, '1f40f':2563, '1f410':2565, '1f411':2564, '1f412':2531, '1f413':2596, '1f414':2595, '1f415-200d-1f9ba':2537, '1f415':2535, '1f416':2560, '1f417':2561, '1f418':2570, '1f419':2629, '1f41a':2630, '1f41b':2634, '1f41c':2635, '1f41d':2636, '1f41e':2638, '1f41f':2625, '1f420':2626, '1f421':2627, '1f422':2614, '1f423':2597, '1f424':2598, '1f425':2599, '1f426':2600, '1f427':2601, '1f428':2586, '1f429':2538, '1f42a':2566, '1f42b':2567, '1f42c':2623, '1f42d':2574, '1f42e':2555, '1f42f':2546, '1f430':2578, '1f431':2542, '1f432':2617, '1f433':2621, '1f434':2549, '1f435':2530, '1f436':2534, '1f437':2559, '1f438':2612, '1f439':2577, '1f43a':2539, '1f43b-200d-2744':2585, '1f43b':2584, '1f43c':2587, '1f43d':2562, '1f43e':2593, '1f43f':2580, '1f440':1381, '1f441-200d-1f5e8':1159, '1f441':1382, '1f442':1373, '1f443':1375, '1f444':1384, '1f445':1383, '1f446':1347, '1f447':1349, '1f448':1345, '1f449':1346, '1f44a':1355, '1f44b':1327, '1f44c':1336, '1f44d':1352, '1f44e':1353, '1f44f':1358, '1f450':1361, '1f451':61144, '1f452':61145, '1f453':61110, '1f454':61115, '1f455':61116, '1f456':61117, '1f457':61122, '1f458':61123, '1f459':61128, '1f45a':61129, '1f45b':61130, '1f45c':61131, '1f45d':61132, '1f45e':61136, '1f45f':61137, '1f460':61140, '1f461':61141, '1f462':61143, '1f463':1687, '1f464':1684, '1f465':1685, '1f466':1388, '1f467':1389, '1f468-200d-1f33e':1457, '1f468-200d-1f373':1460, '1f468-200d-1f37c':1524, '1f468-200d-1f393':1448, '1f468-200d-1f3a4':1478, '1f468-200d-1f3a8':1481, '1f468-200d-1f3eb':1451, '1f468-200d-1f3ed':1466, '1f468-200d-1f466-200d-1f466':1674, '1f468-200d-1f466':1673, '1f468-200d-1f467-200d-1f466':1676, '1f468-200d-1f467-200d-1f467':1677, '1f468-200d-1f467':1675, '1f468-200d-1f468-200d-1f466':1663, '1f468-200d-1f468-200d-1f466-200d-1f466':1666, '1f468-200d-1f468-200d-1f467':1664, '1f468-200d-1f468-200d-1f467-200d-1f466':1665, '1f468-200d-1f468-200d-1f467-200d-1f467':1667, '1f468-200d-1f469-200d-1f466':1658, '1f468-200d-1f469-200d-1f466-200d-1f466':1661, '1f468-200d-1f469-200d-1f467':1659, '1f468-200d-1f469-200d-1f467-200d-1f466':1660, '1f468-200d-1f469-200d-1f467-200d-1f467':1662, '1f468-200d-1f4bb':1475, '1f468-200d-1f4bc':1469, '1f468-200d-1f527':1463, '1f468-200d-1f52c':1472, '1f468-200d-1f680':1487, '1f468-200d-1f692':1490, '1f468-200d-1f9af':1574, '1f468-200d-1f9b0':1396, '1f468-200d-1f9b1':1397, '1f468-200d-1f9b2':1399, '1f468-200d-1f9b3':1398, '1f468-200d-1f9bc':1577, '1f468-200d-1f9bd':1580, '1f468-200d-2695':1445, '1f468-200d-2696':1454, '1f468-200d-2708':1484, '1f468-200d-2764-200d-1f468':1655, '1f468-200d-2764-200d-1f48b-200d-1f468':1651, '1f468':1392, '1f469-200d-1f33e':1458, '1f469-200d-1f373':1461, '1f469-200d-1f37c':1523, '1f469-200d-1f393':1449, '1f469-200d-1f3a4':1479, '1f469-200d-1f3a8':1482, '1f469-200d-1f3eb':1452, '1f469-200d-1f3ed':1467, '1f469-200d-1f466-200d-1f466':1679, '1f469-200d-1f466':1678, '1f469-200d-1f467-200d-1f466':1681, '1f469-200d-1f467-200d-1f467':1682, '1f469-200d-1f467':1680, '1f469-200d-1f469-200d-1f466':1668, '1f469-200d-1f469-200d-1f466-200d-1f466':1671, '1f469-200d-1f469-200d-1f467':1669, '1f469-200d-1f469-200d-1f467-200d-1f466':1670, '1f469-200d-1f469-200d-1f467-200d-1f467':1672, '1f469-200d-1f4bb':1476, '1f469-200d-1f4bc':1470, '1f469-200d-1f527':1464, '1f469-200d-1f52c':1473, '1f469-200d-1f680':1488, '1f469-200d-1f692':1491, '1f469-200d-1f9af':1575, '1f469-200d-1f9b0':1401, '1f469-200d-1f9b1':1403, '1f469-200d-1f9b2':1407, '1f469-200d-1f9b3':1405, '1f469-200d-1f9bc':1578, '1f469-200d-1f9bd':1581, '1f469-200d-2695':1446, '1f469-200d-2696':1455, '1f469-200d-2708':1485, '1f469-200d-2764-200d-1f468':1654, '1f469-200d-2764-200d-1f469':1656, '1f469-200d-2764-200d-1f48b-200d-1f468':1650, '1f469-200d-2764-200d-1f48b-200d-1f469':1652, '1f469':1400, '1f46a':1657, '1f46b':1647, '1f46c':1648, '1f46d':1646, '1f46e-200d-2640':1494, '1f46e-200d-2642':1493, '1f46e':1492, '1f46f-200d-2640':1590, '1f46f-200d-2642':1589, '1f46f':1588, '1f470-200d-2640':1518, '1f470-200d-2642':1517, '1f470':1516, '1f471-200d-2640':1409, '1f471-200d-2642':1410, '1f471':1391, '1f472':1511, '1f473-200d-2640':1510, '1f473-200d-2642':1509, '1f473':1508, '1f474':1412, '1f475':1413, '1f476':1386, '1f477-200d-2640':1504, '1f477-200d-2642':1503, '1f477':1502, '1f478':1507, '1f479':1109, '1f47a':1110, '1f47b':1111, '1f47c':1526, '1f47d':1112, '1f47e':1113, '1f47f':1104, '1f480':1105, '1f481-200d-2640':1428, '1f481-200d-2642':1427, '1f481':1426, '1f482-200d-2640':1500, '1f482-200d-2642':1499, '1f482':1498, '1f483':1585, '1f484':61152, '1f485':1366, '1f486-200d-2640':1560, '1f486-200d-2642':1559, '1f486':1558, '1f487-200d-2640':1563, '1f487-200d-2642':1562, '1f487':1561, '1f488':4870, '1f489':61326, '1f48a':61328, '1f48b':1127, '1f48c':1128, '1f48d':61153, '1f48e':61154, '1f48f':1649, '1f490':2648, '1f491':1653, '1f492':4846, '1f493':1133, '1f494':1138, '1f495':1135, '1f496':1131, '1f497':1132, '1f498':1129, '1f499':1145, '1f49a':1144, '1f49b':1143, '1f49c':1146, '1f49d':1130, '1f49e':1134, '1f49f':1136, '1f4a0':62946, '1f4a1':61214, '1f4a2':1151, '1f4a3':1157, '1f4a4':1163, '1f4a5':1152, '1f4a6':1154, '1f4a7':41022, '1f4a8':1155, '1f4a9':1107, '1f4aa':1368, '1f4ab':1153, '1f4ac':1158, '1f4ad':1162, '1f4ae':2650, '1f4af':1150, '1f4b0':61235, '1f4b1':62841, '1f4b2':62842, '1f4b3':61242, '1f4b4':61237, '1f4b5':61238, '1f4b6':61239, '1f4b7':61240, '1f4b8':61241, '1f4b9':61244, '1f4ba':4936, '1f4bb':61191, '1f4bc':61265, '1f4bd':61197, '1f4be':61198, '1f4bf':61199, '1f4c0':61200, '1f4c1':61266, '1f4c2':61267, '1f4c3':61227, '1f4c4':61229, '1f4c5':61269, '1f4c6':61270, '1f4c7':61273, '1f4c8':61274, '1f4c9':61275, '1f4ca':61276, '1f4cb':61277, '1f4cc':61278, '1f4cd':61279, '1f4ce':61280, '1f4cf':61282, '1f4d0':61283, '1f4d1':61232, '1f4d2':61226, '1f4d3':61225, '1f4d4':61218, '1f4d5':61219, '1f4d6':61220, '1f4d7':61221, '1f4d8':61222, '1f4d9':61223, '1f4da':61224, '1f4db':62847, '1f4dc':61228, '1f4dd':61264, '1f4de':61185, '1f4df':61186, '1f4e0':61187, '1f4e1':61325, '1f4e2':61159, '1f4e3':61160, '1f4e4':61249, '1f4e5':61250, '1f4e6':61251, '1f4e7':61246, '1f4e8':61247, '1f4e9':61248, '1f4ea':61253, '1f4eb':61252, '1f4ec':61254, '1f4ed':61255, '1f4ee':61256, '1f4ef':61161, '1f4f0':61230, '1f4f1':61182, '1f4f2':61183, '1f4f3':62823, '1f4f4':62824, '1f4f5':62751, '1f4f6':62822, '1f4f7':61207, '1f4f8':61208, '1f4f9':61209, '1f4fa':61206, '1f4fb':61172, '1f4fc':61210, '1f4fd':61204, '1f4ff':61151, '1f500':62801, '1f501':62802, '1f502':62803, '1f503':62769, '1f504':62770, '1f505':62820, '1f506':62821, '1f507':61155, '1f508':61156, '1f509':61157, '1f50a':61158, '1f50b':61188, '1f50c':61190, '1f50d':61211, '1f50e':61212, '1f50f':61290, '1f510':61291, '1f511':61292, '1f512':61288, '1f513':61289, '1f514':61162, '1f515':61163, '1f516':61233, '1f517':61313, '1f518':62947, '1f519':62771, '1f51a':62772, '1f51b':62773, '1f51c':62774, '1f51d':62775, '1f51e':62752, '1f51f':62876, '1f520':62877, '1f521':62878, '1f522':62879, '1f523':62880, '1f524':62881, '1f525':41021, '1f526':61215, '1f527':61306, '1f528':61294, '1f529':61308, '1f52a':3803, '1f52b':61301, '1f52c':61323, '1f52d':61324, '1f52e':51082, '1f52f':62787, '1f530':62848, '1f531':62846, '1f532':62949, '1f533':62948, '1f534':62916, '1f535':62920, '1f536':62940, '1f537':62941, '1f538':62942, '1f539':62943, '1f53a':62944, '1f53b':62945, '1f53c':62811, '1f53d':62813, '1f549':62778, '1f54a':2602, '1f54b':4854, '1f54c':4850, '1f54d':4852, '1f54e':62786, '1f550':4955, '1f551':4957, '1f552':4959, '1f553':4961, '1f554':4963, '1f555':4965, '1f556':4967, '1f557':4969, '1f558':4971, '1f559':4973, '1f55a':4975, '1f55b':4953, '1f55c':4956, '1f55d':4958, '1f55e':4960, '1f55f':4962, '1f560':4964, '1f561':4966, '1f562':4968, '1f563':4970, '1f564':4972, '1f565':4974, '1f566':4976, '1f567':4954, '1f56f':61213, '1f570':4952, '1f573':1156, '1f574':1587, '1f575-200d-2640':1497, '1f575-200d-2642':1496, '1f575':1495, '1f576':61111, '1f577':2641, '1f578':2642, '1f579':51087, '1f57a':1586, '1f587':61281, '1f58a':61261, '1f58b':61260, '1f58c':61262, '1f58d':61263, '1f590':1329, '1f595':1348, '1f596':1331, '1f5a4':1148, '1f5a5':61192, '1f5a8':61193, '1f5b1':61195, '1f5b2':61196, '1f5bc':51104, '1f5c2':61268, '1f5c3':61285, '1f5c4':61286, '1f5d1':61287, '1f5d2':61271, '1f5d3':61272, '1f5dc':61310, '1f5dd':61293, '1f5de':61231, '1f5e1':61299, '1f5e3':1683, '1f5e8':1160, '1f5ef':1161, '1f5f3':61257, '1f5fa':4810, '1f5fb':4816, '1f5fc':4847, '1f5fd':4848, '1f5fe':4811, '1f5ff':61362, '1f600':11, '1f601':14, '1f602':18, '1f603':12, '1f604':13, '1f605':16, '1f606':15, '1f607':114, '1f608':1103, '1f609':112, '1f60a':113, '1f60b':124, '1f60c':150, '1f60d':116, '1f60e':170, '1f60f':144, '1f610':139, '1f611':140, '1f612':145, '1f613':195, '1f614':151, '1f615':173, '1f616':192, '1f617':119, '1f618':118, '1f619':122, '1f61a':121, '1f61b':125, '1f61c':126, '1f61d':128, '1f61e':194, '1f61f':175, '1f620':1101, '1f621':1100, '1f622':189, '1f623':193, '1f624':199, '1f625':188, '1f626':184, '1f627':185, '1f628':186, '1f629':196, '1f62a':152, '1f62b':197, '1f62c':147, '1f62d':190, '1f62e-200d-1f4a8':148, '1f62e':178, '1f62f':179, '1f630':187, '1f631':191, '1f632':180, '1f633':181, '1f634':154, '1f635-200d-1f4ab':165, '1f635':164, '1f636-200d-1f32b':143, '1f636':141, '1f637':155, '1f638':1116, '1f639':1117, '1f63a':1115, '1f63b':1118, '1f63c':1119, '1f63d':1120, '1f63e':1123, '1f63f':1122, '1f640':1121, '1f641':176, '1f642':19, '1f643':110, '1f644':146, '1f645-200d-2640':1422, '1f645-200d-2642':1421, '1f645':1420, '1f646-200d-2640':1425, '1f646-200d-2642':1424, '1f646':1423, '1f647-200d-2640':1437, '1f647-200d-2642':1436, '1f647':1435, '1f648':1124, '1f649':1125, '1f64a':1126, '1f64b-200d-2640':1431, '1f64b-200d-2642':1430, '1f64b':1429, '1f64c':1359, '1f64d-200d-2640':1416, '1f64d-200d-2642':1415, '1f64d':1414, '1f64e-200d-2640':1419, '1f64e-200d-2642':1418, '1f64e':1417, '1f64f':1364, '1f680':4942, '1f681':4937, '1f682':4872, '1f683':4873, '1f684':4874, '1f685':4875, '1f686':4876, '1f687':4877, '1f688':4878, '1f689':4879, '1f68a':4880, '1f68b':4883, '1f68c':4884, '1f68d':4885, '1f68e':4886, '1f68f':4911, '1f690':4887, '1f691':4888, '1f692':4889, '1f693':4890, '1f694':4891, '1f695':4892, '1f696':4893, '1f697':4894, '1f698':4895, '1f699':4896, '1f69a':4898, '1f69b':4899, '1f69c':4900, '1f69d':4881, '1f69e':4882, '1f69f':4938, '1f6a0':4939, '1f6a1':4940, '1f6a2':4930, '1f6a3-200d-2640':1609, '1f6a3-200d-2642':1608, '1f6a3':1607, '1f6a4':4926, '1f6a5':4918, '1f6a6':4919, '1f6a7':4921, '1f6a8':4917, '1f6a9':71587, '1f6aa':61333, '1f6ab':62745, '1f6ac':61358, '1f6ad':62747, '1f6ae':62730, '1f6af':62748, '1f6b0':62731, '1f6b1':62749, '1f6b2':4907, '1f6b3':62746, '1f6b4-200d-2640':1621, '1f6b4-200d-2642':1620, '1f6b4':1619, '1f6b5-200d-2640':1624, '1f6b5-200d-2642':1623, '1f6b5':1622, '1f6b6-200d-2640':1566, '1f6b6-200d-2642':1565, '1f6b6':1564, '1f6b7':62750, '1f6b8':62743, '1f6b9':62733, '1f6ba':62734, '1f6bb':62735, '1f6bc':62736, '1f6bd':61340, '1f6be':62737, '1f6bf':61342, '1f6c0':1643, '1f6c1':61343, '1f6c2':62738, '1f6c3':62739, '1f6c4':62740, '1f6c5':62741, '1f6cb':61338, '1f6cc':1644, '1f6cd':61133, '1f6ce':4944, '1f6cf':61337, '1f6d0':62776, '1f6d1':4920, '1f6d2':61357, '1f6d5':4851, '1f6d6':4828, '1f6d7':61334, '1f6e0':61298, '1f6e1':61304, '1f6e2':4914, '1f6e3':4912, '1f6e4':4913, '1f6e5':4929, '1f6e9':4932, '1f6eb':4933, '1f6ec':4934, '1f6f0':4941, '1f6f3':4927, '1f6f4':4908, '1f6f5':4903, '1f6f6':4925, '1f6f7':51076, '1f6f8':4943, '1f6f9':4909, '1f6fa':4906, '1f6fb':4897, '1f6fc':4910, '1f7e0':62917, '1f7e1':62918, '1f7e2':62919, '1f7e3':62921, '1f7e4':62922, '1f7e5':62925, '1f7e6':62929, '1f7e7':62926, '1f7e8':62927, '1f7e9':62928, '1f7ea':62930, '1f7eb':62931, '1f90c':1337, '1f90d':1149, '1f90e':1147, '1f90f':1338, '1f910':137, '1f911':129, '1f912':156, '1f913':171, '1f914':135, '1f915':157, '1f916':1114, '1f917':130, '1f918':1343, '1f919':1344, '1f91a':1328, '1f91b':1356, '1f91c':1357, '1f91d':1363, '1f91e':1340, '1f91f':1342, '1f920':167, '1f921':1108, '1f922':158, '1f923':17, '1f924':153, '1f925':149, '1f926-200d-2640':1440, '1f926-200d-2642':1439, '1f926':1438, '1f927':160, '1f928':138, '1f929':117, '1f92a':127, '1f92b':134, '1f92c':1102, '1f92d':131, '1f92e':159, '1f92f':166, '1f930':1519, '1f931':1522, '1f932':1362, '1f933':1367, '1f934':1506, '1f935-200d-2640':1515, '1f935-200d-2642':1514, '1f935':1513, '1f936':1528, '1f937-200d-2640':1443, '1f937-200d-2642':1442, '1f937':1441, '1f938-200d-2640':1627, '1f938-200d-2642':1626, '1f938':1625, '1f939-200d-2640':1639, '1f939-200d-2642':1638, '1f939':1637, '1f93a':1597, '1f93c-200d-2640':1630, '1f93c-200d-2642':1629, '1f93c':1628, '1f93d-200d-2640':1633, '1f93d-200d-2642':1632, '1f93d':1631, '1f93e-200d-2640':1636, '1f93e-200d-2642':1635, '1f93e':1634, '1f93f':51073, '1f940':2654, '1f941':61180, '1f942':3791, '1f943':3792, '1f944':3802, '1f945':51069, '1f947':51048, '1f948':51049, '1f949':51050, '1f94a':51067, '1f94b':51068, '1f94c':51077, '1f94d':51064, '1f94e':51053, '1f94f':51059, '1f950':3710, '1f951':3693, '1f952':3700, '1f953':3721, '1f954':3695, '1f955':3696, '1f956':3711, '1f957':3738, '1f958':3734, '1f959':3730, '1f95a':3732, '1f95b':3780, '1f95c':3706, '1f95d':3689, '1f95e':3715, '1f95f':3757, '1f960':3758, '1f961':3759, '1f962':3799, '1f963':3737, '1f964':3794, '1f965':3692, '1f966':3702, '1f967':3773, '1f968':3713, '1f969':3720, '1f96a':3726, '1f96b':3742, '1f96c':3701, '1f96d':3681, '1f96e':3755, '1f96f':3714, '1f970':115, '1f971':198, '1f972':123, '1f973':168, '1f974':163, '1f975':161, '1f976':162, '1f977':1501, '1f978':169, '1f97a':182, '1f97b':61124, '1f97c':61113, '1f97d':61112, '1f97e':61138, '1f97f':61139, '1f980':3760, '1f981':2545, '1f982':2643, '1f983':2594, '1f984':2551, '1f985':2603, '1f986':2604, '1f987':2583, '1f988':2628, '1f989':2606, '1f98a':2540, '1f98b':2633, '1f98c':2553, '1f98d':2532, '1f98e':2615, '1f98f':2572, '1f990':3762, '1f991':3763, '1f992':2569, '1f993':2552, '1f994':2582, '1f995':2619, '1f996':2620, '1f997':2639, '1f998':2591, '1f999':2568, '1f99a':2610, '1f99b':2573, '1f99c':2611, '1f99d':2541, '1f99e':3761, '1f99f':2644, '1f9a0':2647, '1f9a1':2592, '1f9a2':2605, '1f9a3':2571, '1f9a4':2607, '1f9a5':2588, '1f9a6':2589, '1f9a7':2533, '1f9a8':2590, '1f9a9':2609, '1f9aa':3764, '1f9ab':2581, '1f9ac':2554, '1f9ad':2624, '1f9ae':2536, '1f9af':61312, '1f9b4':1380, '1f9b5':1371, '1f9b6':1372, '1f9b7':1379, '1f9b8-200d-2640':1532, '1f9b8-200d-2642':1531, '1f9b8':1530, '1f9b9-200d-2640':1535, '1f9b9-200d-2642':1534, '1f9b9':1533, '1f9ba':61114, '1f9bb':1374, '1f9bc':4905, '1f9bd':4904, '1f9be':1369, '1f9bf':1370, '1f9c0':3717, '1f9c1':3772, '1f9c2':3741, '1f9c3':3796, '1f9c4':3703, '1f9c5':3704, '1f9c6':3731, '1f9c7':3716, '1f9c8':3740, '1f9c9':3797, '1f9ca':3798, '1f9cb':3795, '1f9cd-200d-2640':1569, '1f9cd-200d-2642':1568, '1f9cd':1567, '1f9ce-200d-2640':1572, '1f9ce-200d-2642':1571, '1f9ce':1570, '1f9cf-200d-2640':1434, '1f9cf-200d-2642':1433, '1f9cf':1432, '1f9d0':172, '1f9d1-200d-1f33e':1456, '1f9d1-200d-1f373':1459, '1f9d1-200d-1f37c':1525, '1f9d1-200d-1f384':1529, '1f9d1-200d-1f393':1447, '1f9d1-200d-1f3a4':1477, '1f9d1-200d-1f3a8':1480, '1f9d1-200d-1f3eb':1450, '1f9d1-200d-1f3ed':1465, '1f9d1-200d-1f4bb':1474, '1f9d1-200d-1f4bc':1468, '1f9d1-200d-1f527':1462, '1f9d1-200d-1f52c':1471, '1f9d1-200d-1f680':1486, '1f9d1-200d-1f692':1489, '1f9d1-200d-1f91d-200d-1f9d1':1645, '1f9d1-200d-1f9af':1573, '1f9d1-200d-1f9b0':1402, '1f9d1-200d-1f9b1':1404, '1f9d1-200d-1f9b2':1408, '1f9d1-200d-1f9b3':1406, '1f9d1-200d-1f9bc':1576, '1f9d1-200d-1f9bd':1579, '1f9d1-200d-2695':1444, '1f9d1-200d-2696':1453, '1f9d1-200d-2708':1483, '1f9d1':1390, '1f9d2':1387, '1f9d3':1411, '1f9d4-200d-2640':1395, '1f9d4-200d-2642':1394, '1f9d4':1393, '1f9d5':1512, '1f9d6-200d-2640':1593, '1f9d6-200d-2642':1592, '1f9d6':1591, '1f9d7-200d-2640':1596, '1f9d7-200d-2642':1595, '1f9d7':1594, '1f9d8-200d-2640':1642, '1f9d8-200d-2642':1641, '1f9d8':1640, '1f9d9-200d-2640':1538, '1f9d9-200d-2642':1537, '1f9d9':1536, '1f9da-200d-2640':1541, '1f9da-200d-2642':1540, '1f9da':1539, '1f9db-200d-2640':1544, '1f9db-200d-2642':1543, '1f9db':1542, '1f9dc-200d-2640':1547, '1f9dc-200d-2642':1546, '1f9dc':1545, '1f9dd-200d-2640':1550, '1f9dd-200d-2642':1549, '1f9dd':1548, '1f9de-200d-2640':1553, '1f9de-200d-2642':1552, '1f9de':1551, '1f9df-200d-2640':1556, '1f9df-200d-2642':1555, '1f9df':1554, '1f9e0':1376, '1f9e1':1142, '1f9e2':61148, '1f9e3':61118, '1f9e4':61119, '1f9e5':61120, '1f9e6':61121, '1f9e7':51039, '1f9e8':51028, '1f9e9':51090, '1f9ea':61320, '1f9eb':61321, '1f9ec':61322, '1f9ed':4812, '1f9ee':61201, '1f9ef':61356, '1f9f0':61316, '1f9f1':4825, '1f9f2':61317, '1f9f3':4945, '1f9f4':61346, '1f9f5':51106, '1f9f6':51108, '1f9f7':61347, '1f9f8':51091, '1f9f9':61348, '1f9fa':61349, '1f9fb':61350, '1f9fc':61352, '1f9fd':61355, '1f9fe':61243, '1f9ff':51084, '1fa70':61142, '1fa71':61125, '1fa72':61126, '1fa73':61127, '1fa74':61135, '1fa78':61327, '1fa79':61329, '1fa7a':61331, '1fa80':51079, '1fa81':51080, '1fa82':4935, '1fa83':61302, '1fa84':51083, '1fa85':51092, '1fa86':51094, '1fa90':4993, '1fa91':61339, '1fa92':61345, '1fa93':61295, '1fa94':61217, '1fa95':61179, '1fa96':61149, '1fa97':61174, '1fa98':61181, '1fa99':61236, '1fa9a':61305, '1fa9b':61307, '1fa9c':61318, '1fa9d':61315, '1fa9e':61335, '1fa9f':61336, '1faa0':61341, '1faa1':51107, '1faa2':51109, '1faa3':61351, '1faa4':61344, '1faa5':61354, '1faa6':61360, '1faa7':61363, '1faa8':4826, '1fab0':2645, '1fab1':2646, '1fab2':2637, '1fab3':2640, '1fab4':2660, '1fab5':4827, '1fab6':2608, '1fac0':1377, '1fac1':1378, '1fac2':1686, '1fad0':3688, '1fad1':3699, '1fad2':3691, '1fad3':3712, '1fad4':3729, '1fad5':3736, '1fad6':3782, '203c':62834, '21a9':62765, '21aa':62766, '231a':4948, '231b':4946, '23cf':62818, '23e9':62805, '23ea':62809, '23eb':62812, '23ec':62814, '23ed':62806, '23ee':62810, '23ef':62807, '23f0':4949, '23f1':4950, '23f2':4951, '23f3':4947, '23f8':62815, '23f9':62816, '23fa':62817, '24c2':62890, '25aa':62938, '25ab':62939, '25b6':62804, '25c0':62808, '25fb':62935, '25fc':62934, '25fd':62937, '25fe':62936, '260e':61184, '261d':1350, '262a':62784, '262e':62785, '262f':62781, '263a':120, '264a':62790, '264b':62791, '264c':62792, '264d':62793, '264e':62794, '264f':62795, '265f':51099, '267b':62844, '267e':62833, '267f':62732, '269b':62777, '269c':62845, '26a0':62742, '26a1':41016, '26a7':62827, '26aa':62924, '26ab':62923, '26b0':61359, '26b1':61361, '26bd':51051, '26be':51052, '26c4':41019, '26c5':4999, '26c8':41000, '26ce':62800, '26cf':61296, '26d1':61150, '26d3':61314, '26d4':62744, '26e9':4853, '26ea':4849, '26f0':4814, '26f1':41015, '26f2':4855, '26f3':51070, '26f4':4928, '26f5':4924, '26f7':1599, '26f8':51071, '26f9-200d-2640':1615, '26f9-200d-2642':1614, '26f9':1613, '26fa':4856, '26fd':4915, '270a':1354, '270b':1330, '270c':1339, '270d':1365, '270f':61258, '271d':62782, '274c':62853, '274e':62854, '2764-200d-1f525':1139, '2764-200d-1fa79':1140, '27a1':62757, '27b0':62855, '27bf':62856, '2b05':62761, '2b06':62755, '2b07':62759, '2b1b':62932, '2b1c':62933, '2b50':4994, '2b55':62849, '303d':62857, '1f385-1f3fb':0, '1f385-1f3fc':0, '1f385-1f3fd':0, '1f385-1f3fe':0, '1f385-1f3ff':0, '1f3c2-1f3fb':0, '1f3c2-1f3fc':0, '1f3c2-1f3fd':0, '1f3c2-1f3fe':0, '1f3c2-1f3ff':0, '1f3c3-1f3fb-200d-2640':0, '1f3c3-1f3fc-200d-2640':0, '1f3c3-1f3fd-200d-2640':0, '1f3c3-1f3fe-200d-2640':0, '1f3c3-1f3ff-200d-2640':0, '1f3c3-1f3fb-200d-2642':0, '1f3c3-1f3fc-200d-2642':0, '1f3c3-1f3fd-200d-2642':0, '1f3c3-1f3fe-200d-2642':0, '1f3c3-1f3ff-200d-2642':0, '1f3c3-1f3fb':0, '1f3c3-1f3fc':0, '1f3c3-1f3fd':0, '1f3c3-1f3fe':0, '1f3c3-1f3ff':0, '1f3c4-1f3fb-200d-2640':0, '1f3c4-1f3fc-200d-2640':0, '1f3c4-1f3fd-200d-2640':0, '1f3c4-1f3fe-200d-2640':0, '1f3c4-1f3ff-200d-2640':0, '1f3c4-1f3fb-200d-2642':0, '1f3c4-1f3fc-200d-2642':0, '1f3c4-1f3fd-200d-2642':0, '1f3c4-1f3fe-200d-2642':0, '1f3c4-1f3ff-200d-2642':0, '1f3c4-1f3fb':0, '1f3c4-1f3fc':0, '1f3c4-1f3fd':0, '1f3c4-1f3fe':0, '1f3c4-1f3ff':0, '1f3c7-1f3fb':0, '1f3c7-1f3fc':0, '1f3c7-1f3fd':0, '1f3c7-1f3fe':0, '1f3c7-1f3ff':0, '1f3ca-1f3fb-200d-2640':0, '1f3ca-1f3fc-200d-2640':0, '1f3ca-1f3fd-200d-2640':0, '1f3ca-1f3fe-200d-2640':0, '1f3ca-1f3ff-200d-2640':0, '1f3ca-1f3fb-200d-2642':0, '1f3ca-1f3fc-200d-2642':0, '1f3ca-1f3fd-200d-2642':0, '1f3ca-1f3fe-200d-2642':0, '1f3ca-1f3ff-200d-2642':0, '1f3ca-1f3fb':0, '1f3ca-1f3fc':0, '1f3ca-1f3fd':0, '1f3ca-1f3fe':0, '1f3ca-1f3ff':0, '1f3cb-1f3fb-200d-2640':0, '1f3cb-1f3fc-200d-2640':0, '1f3cb-1f3fd-200d-2640':0, '1f3cb-1f3fe-200d-2640':0, '1f3cb-1f3ff-200d-2640':0, '1f3cb-1f3fb-200d-2642':0, '1f3cb-1f3fc-200d-2642':0, '1f3cb-1f3fd-200d-2642':0, '1f3cb-1f3fe-200d-2642':0, '1f3cb-1f3ff-200d-2642':0, '1f3cb-1f3fb':0, '1f3cb-1f3fc':0, '1f3cb-1f3fd':0, '1f3cb-1f3fe':0, '1f3cb-1f3ff':0, '1f3cc-1f3fb-200d-2640':0, '1f3cc-1f3fc-200d-2640':0, '1f3cc-1f3fd-200d-2640':0, '1f3cc-1f3fe-200d-2640':0, '1f3cc-1f3ff-200d-2640':0, '1f3cc-1f3fb-200d-2642':0, '1f3cc-1f3fc-200d-2642':0, '1f3cc-1f3fd-200d-2642':0, '1f3cc-1f3fe-200d-2642':0, '1f3cc-1f3ff-200d-2642':0, '1f3cc-1f3fb':0, '1f3cc-1f3fc':0, '1f3cc-1f3fd':0, '1f3cc-1f3fe':0, '1f3cc-1f3ff':0, '1f442-1f3fb':0, '1f442-1f3fc':0, '1f442-1f3fd':0, '1f442-1f3fe':0, '1f442-1f3ff':0, '1f443-1f3fb':0, '1f443-1f3fc':0, '1f443-1f3fd':0, '1f443-1f3fe':0, '1f443-1f3ff':0, '1f446-1f3fb':0, '1f446-1f3fc':0, '1f446-1f3fd':0, '1f446-1f3fe':0, '1f446-1f3ff':0, '1f447-1f3fb':0, '1f447-1f3fc':0, '1f447-1f3fd':0, '1f447-1f3fe':0, '1f447-1f3ff':0, '1f448-1f3fb':0, '1f448-1f3fc':0, '1f448-1f3fd':0, '1f448-1f3fe':0, '1f448-1f3ff':0, '1f449-1f3fb':0, '1f449-1f3fc':0, '1f449-1f3fd':0, '1f449-1f3fe':0, '1f449-1f3ff':0, '1f44a-1f3fb':0, '1f44a-1f3fc':0, '1f44a-1f3fd':0, '1f44a-1f3fe':0, '1f44a-1f3ff':0, '1f44b-1f3fb':0, '1f44b-1f3fc':0, '1f44b-1f3fd':0, '1f44b-1f3fe':0, '1f44b-1f3ff':0, '1f44c-1f3fb':0, '1f44c-1f3fc':0, '1f44c-1f3fd':0, '1f44c-1f3fe':0, '1f44c-1f3ff':0, '1f44d-1f3fb':0, '1f44d-1f3fc':0, '1f44d-1f3fd':0, '1f44d-1f3fe':0, '1f44d-1f3ff':0, '1f44e-1f3fb':0, '1f44e-1f3fc':0, '1f44e-1f3fd':0, '1f44e-1f3fe':0, '1f44e-1f3ff':0, '1f44f-1f3fb':0, '1f44f-1f3fc':0, '1f44f-1f3fd':0, '1f44f-1f3fe':0, '1f44f-1f3ff':0, '1f450-1f3fb':0, '1f450-1f3fc':0, '1f450-1f3fd':0, '1f450-1f3fe':0, '1f450-1f3ff':0, '1f466-1f3fb':0, '1f466-1f3fc':0, '1f466-1f3fd':0, '1f466-1f3fe':0, '1f466-1f3ff':0, '1f467-1f3fb':0, '1f467-1f3fc':0, '1f467-1f3fd':0, '1f467-1f3fe':0, '1f467-1f3ff':0, '1f468-1f3fb-200d-1f33e':0, '1f468-1f3fc-200d-1f33e':0, '1f468-1f3fd-200d-1f33e':0, '1f468-1f3fe-200d-1f33e':0, '1f468-1f3ff-200d-1f33e':0, '1f468-1f3fb-200d-1f373':0, '1f468-1f3fc-200d-1f373':0, '1f468-1f3fd-200d-1f373':0, '1f468-1f3fe-200d-1f373':0, '1f468-1f3ff-200d-1f373':0, '1f468-1f3fb-200d-1f37c':0, '1f468-1f3fc-200d-1f37c':0, '1f468-1f3fd-200d-1f37c':0, '1f468-1f3fe-200d-1f37c':0, '1f468-1f3ff-200d-1f37c':0, '1f468-1f3fb-200d-1f393':0, '1f468-1f3fc-200d-1f393':0, '1f468-1f3fd-200d-1f393':0, '1f468-1f3fe-200d-1f393':0, '1f468-1f3ff-200d-1f393':0, '1f468-1f3fb-200d-1f3a4':0, '1f468-1f3fc-200d-1f3a4':0, '1f468-1f3fd-200d-1f3a4':0, '1f468-1f3fe-200d-1f3a4':0, '1f468-1f3ff-200d-1f3a4':0, '1f468-1f3fb-200d-1f3a8':0, '1f468-1f3fc-200d-1f3a8':0, '1f468-1f3fd-200d-1f3a8':0, '1f468-1f3fe-200d-1f3a8':0, '1f468-1f3ff-200d-1f3a8':0, '1f468-1f3fb-200d-1f3eb':0, '1f468-1f3fc-200d-1f3eb':0, '1f468-1f3fd-200d-1f3eb':0, '1f468-1f3fe-200d-1f3eb':0, '1f468-1f3ff-200d-1f3eb':0, '1f468-1f3fb-200d-1f3ed':0, '1f468-1f3fc-200d-1f3ed':0, '1f468-1f3fd-200d-1f3ed':0, '1f468-1f3fe-200d-1f3ed':0, '1f468-1f3ff-200d-1f3ed':0, '1f468-1f3fb-200d-1f4bb':0, '1f468-1f3fc-200d-1f4bb':0, '1f468-1f3fd-200d-1f4bb':0, '1f468-1f3fe-200d-1f4bb':0, '1f468-1f3ff-200d-1f4bb':0, '1f468-1f3fb-200d-1f4bc':0, '1f468-1f3fc-200d-1f4bc':0, '1f468-1f3fd-200d-1f4bc':0, '1f468-1f3fe-200d-1f4bc':0, '1f468-1f3ff-200d-1f4bc':0, '1f468-1f3fb-200d-1f527':0, '1f468-1f3fc-200d-1f527':0, '1f468-1f3fd-200d-1f527':0, '1f468-1f3fe-200d-1f527':0, '1f468-1f3ff-200d-1f527':0, '1f468-1f3fb-200d-1f52c':0, '1f468-1f3fc-200d-1f52c':0, '1f468-1f3fd-200d-1f52c':0, '1f468-1f3fe-200d-1f52c':0, '1f468-1f3ff-200d-1f52c':0, '1f468-1f3fb-200d-1f680':0, '1f468-1f3fc-200d-1f680':0, '1f468-1f3fd-200d-1f680':0, '1f468-1f3fe-200d-1f680':0, '1f468-1f3ff-200d-1f680':0, '1f468-1f3fb-200d-1f692':0, '1f468-1f3fc-200d-1f692':0, '1f468-1f3fd-200d-1f692':0, '1f468-1f3fe-200d-1f692':0, '1f468-1f3ff-200d-1f692':0, '1f468-1f3fb-200d-1f9af':0, '1f468-1f3fc-200d-1f9af':0, '1f468-1f3fd-200d-1f9af':0, '1f468-1f3fe-200d-1f9af':0, '1f468-1f3ff-200d-1f9af':0, '1f468-1f3fb-200d-1f9b0':0, '1f468-1f3fc-200d-1f9b0':0, '1f468-1f3fd-200d-1f9b0':0, '1f468-1f3fe-200d-1f9b0':0, '1f468-1f3ff-200d-1f9b0':0, '1f468-1f3fb-200d-1f9b1':0, '1f468-1f3fc-200d-1f9b1':0, '1f468-1f3fd-200d-1f9b1':0, '1f468-1f3fe-200d-1f9b1':0, '1f468-1f3ff-200d-1f9b1':0, '1f468-1f3fb-200d-1f9b2':0, '1f468-1f3fc-200d-1f9b2':0, '1f468-1f3fd-200d-1f9b2':0, '1f468-1f3fe-200d-1f9b2':0, '1f468-1f3ff-200d-1f9b2':0, '1f468-1f3fb-200d-1f9b3':0, '1f468-1f3fc-200d-1f9b3':0, '1f468-1f3fd-200d-1f9b3':0, '1f468-1f3fe-200d-1f9b3':0, '1f468-1f3ff-200d-1f9b3':0, '1f468-1f3fb-200d-1f9bc':0, '1f468-1f3fc-200d-1f9bc':0, '1f468-1f3fd-200d-1f9bc':0, '1f468-1f3fe-200d-1f9bc':0, '1f468-1f3ff-200d-1f9bc':0, '1f468-1f3fb-200d-1f9bd':0, '1f468-1f3fc-200d-1f9bd':0, '1f468-1f3fd-200d-1f9bd':0, '1f468-1f3fe-200d-1f9bd':0, '1f468-1f3ff-200d-1f9bd':0, '1f468-1f3fb-200d-2695':0, '1f468-1f3fc-200d-2695':0, '1f468-1f3fd-200d-2695':0, '1f468-1f3fe-200d-2695':0, '1f468-1f3ff-200d-2695':0, '1f468-1f3fb-200d-2696':0, '1f468-1f3fc-200d-2696':0, '1f468-1f3fd-200d-2696':0, '1f468-1f3fe-200d-2696':0, '1f468-1f3ff-200d-2696':0, '1f468-1f3fb-200d-2708':0, '1f468-1f3fc-200d-2708':0, '1f468-1f3fd-200d-2708':0, '1f468-1f3fe-200d-2708':0, '1f468-1f3ff-200d-2708':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fb':0, '1f468-1f3fc':0, '1f468-1f3fd':0, '1f468-1f3fe':0, '1f468-1f3ff':0, '1f469-1f3fb-200d-1f33e':0, '1f469-1f3fc-200d-1f33e':0, '1f469-1f3fd-200d-1f33e':0, '1f469-1f3fe-200d-1f33e':0, '1f469-1f3ff-200d-1f33e':0, '1f469-1f3fb-200d-1f373':0, '1f469-1f3fc-200d-1f373':0, '1f469-1f3fd-200d-1f373':0, '1f469-1f3fe-200d-1f373':0, '1f469-1f3ff-200d-1f373':0, '1f469-1f3fb-200d-1f37c':0, '1f469-1f3fc-200d-1f37c':0, '1f469-1f3fd-200d-1f37c':0, '1f469-1f3fe-200d-1f37c':0, '1f469-1f3ff-200d-1f37c':0, '1f469-1f3fb-200d-1f393':0, '1f469-1f3fc-200d-1f393':0, '1f469-1f3fd-200d-1f393':0, '1f469-1f3fe-200d-1f393':0, '1f469-1f3ff-200d-1f393':0, '1f469-1f3fb-200d-1f3a4':0, '1f469-1f3fc-200d-1f3a4':0, '1f469-1f3fd-200d-1f3a4':0, '1f469-1f3fe-200d-1f3a4':0, '1f469-1f3ff-200d-1f3a4':0, '1f469-1f3fb-200d-1f3a8':0, '1f469-1f3fc-200d-1f3a8':0, '1f469-1f3fd-200d-1f3a8':0, '1f469-1f3fe-200d-1f3a8':0, '1f469-1f3ff-200d-1f3a8':0, '1f469-1f3fb-200d-1f3eb':0, '1f469-1f3fc-200d-1f3eb':0, '1f469-1f3fd-200d-1f3eb':0, '1f469-1f3fe-200d-1f3eb':0, '1f469-1f3ff-200d-1f3eb':0, '1f469-1f3fb-200d-1f3ed':0, '1f469-1f3fc-200d-1f3ed':0, '1f469-1f3fd-200d-1f3ed':0, '1f469-1f3fe-200d-1f3ed':0, '1f469-1f3ff-200d-1f3ed':0, '1f469-1f3fb-200d-1f4bb':0, '1f469-1f3fc-200d-1f4bb':0, '1f469-1f3fd-200d-1f4bb':0, '1f469-1f3fe-200d-1f4bb':0, '1f469-1f3ff-200d-1f4bb':0, '1f469-1f3fb-200d-1f4bc':0, '1f469-1f3fc-200d-1f4bc':0, '1f469-1f3fd-200d-1f4bc':0, '1f469-1f3fe-200d-1f4bc':0, '1f469-1f3ff-200d-1f4bc':0, '1f469-1f3fb-200d-1f527':0, '1f469-1f3fc-200d-1f527':0, '1f469-1f3fd-200d-1f527':0, '1f469-1f3fe-200d-1f527':0, '1f469-1f3ff-200d-1f527':0, '1f469-1f3fb-200d-1f52c':0, '1f469-1f3fc-200d-1f52c':0, '1f469-1f3fd-200d-1f52c':0, '1f469-1f3fe-200d-1f52c':0, '1f469-1f3ff-200d-1f52c':0, '1f469-1f3fb-200d-1f680':0, '1f469-1f3fc-200d-1f680':0, '1f469-1f3fd-200d-1f680':0, '1f469-1f3fe-200d-1f680':0, '1f469-1f3ff-200d-1f680':0, '1f469-1f3fb-200d-1f692':0, '1f469-1f3fc-200d-1f692':0, '1f469-1f3fd-200d-1f692':0, '1f469-1f3fe-200d-1f692':0, '1f469-1f3ff-200d-1f692':0, '1f469-1f3fb-200d-1f9af':0, '1f469-1f3fc-200d-1f9af':0, '1f469-1f3fd-200d-1f9af':0, '1f469-1f3fe-200d-1f9af':0, '1f469-1f3ff-200d-1f9af':0, '1f469-1f3fb-200d-1f9b0':0, '1f469-1f3fc-200d-1f9b0':0, '1f469-1f3fd-200d-1f9b0':0, '1f469-1f3fe-200d-1f9b0':0, '1f469-1f3ff-200d-1f9b0':0, '1f469-1f3fb-200d-1f9b1':0, '1f469-1f3fc-200d-1f9b1':0, '1f469-1f3fd-200d-1f9b1':0, '1f469-1f3fe-200d-1f9b1':0, '1f469-1f3ff-200d-1f9b1':0, '1f469-1f3fb-200d-1f9b2':0, '1f469-1f3fc-200d-1f9b2':0, '1f469-1f3fd-200d-1f9b2':0, '1f469-1f3fe-200d-1f9b2':0, '1f469-1f3ff-200d-1f9b2':0, '1f469-1f3fb-200d-1f9b3':0, '1f469-1f3fc-200d-1f9b3':0, '1f469-1f3fd-200d-1f9b3':0, '1f469-1f3fe-200d-1f9b3':0, '1f469-1f3ff-200d-1f9b3':0, '1f469-1f3fb-200d-1f9bc':0, '1f469-1f3fc-200d-1f9bc':0, '1f469-1f3fd-200d-1f9bc':0, '1f469-1f3fe-200d-1f9bc':0, '1f469-1f3ff-200d-1f9bc':0, '1f469-1f3fb-200d-1f9bd':0, '1f469-1f3fc-200d-1f9bd':0, '1f469-1f3fd-200d-1f9bd':0, '1f469-1f3fe-200d-1f9bd':0, '1f469-1f3ff-200d-1f9bd':0, '1f469-1f3fb-200d-2695':0, '1f469-1f3fc-200d-2695':0, '1f469-1f3fd-200d-2695':0, '1f469-1f3fe-200d-2695':0, '1f469-1f3ff-200d-2695':0, '1f469-1f3fb-200d-2696':0, '1f469-1f3fc-200d-2696':0, '1f469-1f3fd-200d-2696':0, '1f469-1f3fe-200d-2696':0, '1f469-1f3ff-200d-2696':0, '1f469-1f3fb-200d-2708':0, '1f469-1f3fc-200d-2708':0, '1f469-1f3fd-200d-2708':0, '1f469-1f3fe-200d-2708':0, '1f469-1f3ff-200d-2708':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fb':0, '1f469-1f3fc':0, '1f469-1f3fd':0, '1f469-1f3fe':0, '1f469-1f3ff':0, '1f46b-1f3fb':0, '1f46b-1f3fc':0, '1f46b-1f3fd':0, '1f46b-1f3fe':0, '1f46b-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46c-1f3fb':0, '1f46c-1f3fc':0, '1f46c-1f3fd':0, '1f46c-1f3fe':0, '1f46c-1f3ff':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46d-1f3fb':0, '1f46d-1f3fc':0, '1f46d-1f3fd':0, '1f46d-1f3fe':0, '1f46d-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe':0, '1f46e-1f3fb-200d-2640':0, '1f46e-1f3fc-200d-2640':0, '1f46e-1f3fd-200d-2640':0, '1f46e-1f3fe-200d-2640':0, '1f46e-1f3ff-200d-2640':0, '1f46e-1f3fb-200d-2642':0, '1f46e-1f3fc-200d-2642':0, '1f46e-1f3fd-200d-2642':0, '1f46e-1f3fe-200d-2642':0, '1f46e-1f3ff-200d-2642':0, '1f46e-1f3fb':0, '1f46e-1f3fc':0, '1f46e-1f3fd':0, '1f46e-1f3fe':0, '1f46e-1f3ff':0, '1f470-1f3fb-200d-2640':0, '1f470-1f3fc-200d-2640':0, '1f470-1f3fd-200d-2640':0, '1f470-1f3fe-200d-2640':0, '1f470-1f3ff-200d-2640':0, '1f470-1f3fb-200d-2642':0, '1f470-1f3fc-200d-2642':0, '1f470-1f3fd-200d-2642':0, '1f470-1f3fe-200d-2642':0, '1f470-1f3ff-200d-2642':0, '1f470-1f3fb':0, '1f470-1f3fc':0, '1f470-1f3fd':0, '1f470-1f3fe':0, '1f470-1f3ff':0, '1f471-1f3fb-200d-2640':0, '1f471-1f3fc-200d-2640':0, '1f471-1f3fd-200d-2640':0, '1f471-1f3fe-200d-2640':0, '1f471-1f3ff-200d-2640':0, '1f471-1f3fb-200d-2642':0, '1f471-1f3fc-200d-2642':0, '1f471-1f3fd-200d-2642':0, '1f471-1f3fe-200d-2642':0, '1f471-1f3ff-200d-2642':0, '1f471-1f3fb':0, '1f471-1f3fc':0, '1f471-1f3fd':0, '1f471-1f3fe':0, '1f471-1f3ff':0, '1f472-1f3fb':0, '1f472-1f3fc':0, '1f472-1f3fd':0, '1f472-1f3fe':0, '1f472-1f3ff':0, '1f473-1f3fb-200d-2640':0, '1f473-1f3fc-200d-2640':0, '1f473-1f3fd-200d-2640':0, '1f473-1f3fe-200d-2640':0, '1f473-1f3ff-200d-2640':0, '1f473-1f3fb-200d-2642':0, '1f473-1f3fc-200d-2642':0, '1f473-1f3fd-200d-2642':0, '1f473-1f3fe-200d-2642':0, '1f473-1f3ff-200d-2642':0, '1f473-1f3fb':0, '1f473-1f3fc':0, '1f473-1f3fd':0, '1f473-1f3fe':0, '1f473-1f3ff':0, '1f474-1f3fb':0, '1f474-1f3fc':0, '1f474-1f3fd':0, '1f474-1f3fe':0, '1f474-1f3ff':0, '1f475-1f3fb':0, '1f475-1f3fc':0, '1f475-1f3fd':0, '1f475-1f3fe':0, '1f475-1f3ff':0, '1f476-1f3fb':0, '1f476-1f3fc':0, '1f476-1f3fd':0, '1f476-1f3fe':0, '1f476-1f3ff':0, '1f477-1f3fb-200d-2640':0, '1f477-1f3fc-200d-2640':0, '1f477-1f3fd-200d-2640':0, '1f477-1f3fe-200d-2640':0, '1f477-1f3ff-200d-2640':0, '1f477-1f3fb-200d-2642':0, '1f477-1f3fc-200d-2642':0, '1f477-1f3fd-200d-2642':0, '1f477-1f3fe-200d-2642':0, '1f477-1f3ff-200d-2642':0, '1f477-1f3fb':0, '1f477-1f3fc':0, '1f477-1f3fd':0, '1f477-1f3fe':0, '1f477-1f3ff':0, '1f478-1f3fb':0, '1f478-1f3fc':0, '1f478-1f3fd':0, '1f478-1f3fe':0, '1f478-1f3ff':0, '1f47c-1f3fb':0, '1f47c-1f3fc':0, '1f47c-1f3fd':0, '1f47c-1f3fe':0, '1f47c-1f3ff':0, '1f481-1f3fb-200d-2640':0, '1f481-1f3fc-200d-2640':0, '1f481-1f3fd-200d-2640':0, '1f481-1f3fe-200d-2640':0, '1f481-1f3ff-200d-2640':0, '1f481-1f3fb-200d-2642':0, '1f481-1f3fc-200d-2642':0, '1f481-1f3fd-200d-2642':0, '1f481-1f3fe-200d-2642':0, '1f481-1f3ff-200d-2642':0, '1f481-1f3fb':0, '1f481-1f3fc':0, '1f481-1f3fd':0, '1f481-1f3fe':0, '1f481-1f3ff':0, '1f482-1f3fb-200d-2640':0, '1f482-1f3fc-200d-2640':0, '1f482-1f3fd-200d-2640':0, '1f482-1f3fe-200d-2640':0, '1f482-1f3ff-200d-2640':0, '1f482-1f3fb-200d-2642':0, '1f482-1f3fc-200d-2642':0, '1f482-1f3fd-200d-2642':0, '1f482-1f3fe-200d-2642':0, '1f482-1f3ff-200d-2642':0, '1f482-1f3fb':0, '1f482-1f3fc':0, '1f482-1f3fd':0, '1f482-1f3fe':0, '1f482-1f3ff':0, '1f483-1f3fb':0, '1f483-1f3fc':0, '1f483-1f3fd':0, '1f483-1f3fe':0, '1f483-1f3ff':0, '1f485-1f3fb':0, '1f485-1f3fc':0, '1f485-1f3fd':0, '1f485-1f3fe':0, '1f485-1f3ff':0, '1f486-1f3fb-200d-2640':0, '1f486-1f3fc-200d-2640':0, '1f486-1f3fd-200d-2640':0, '1f486-1f3fe-200d-2640':0, '1f486-1f3ff-200d-2640':0, '1f486-1f3fb-200d-2642':0, '1f486-1f3fc-200d-2642':0, '1f486-1f3fd-200d-2642':0, '1f486-1f3fe-200d-2642':0, '1f486-1f3ff-200d-2642':0, '1f486-1f3fb':0, '1f486-1f3fc':0, '1f486-1f3fd':0, '1f486-1f3fe':0, '1f486-1f3ff':0, '1f487-1f3fb-200d-2640':0, '1f487-1f3fc-200d-2640':0, '1f487-1f3fd-200d-2640':0, '1f487-1f3fe-200d-2640':0, '1f487-1f3ff-200d-2640':0, '1f487-1f3fb-200d-2642':0, '1f487-1f3fc-200d-2642':0, '1f487-1f3fd-200d-2642':0, '1f487-1f3fe-200d-2642':0, '1f487-1f3ff-200d-2642':0, '1f487-1f3fb':0, '1f487-1f3fc':0, '1f487-1f3fd':0, '1f487-1f3fe':0, '1f487-1f3ff':0, '1f48f-1f3fb':0, '1f48f-1f3fc':0, '1f48f-1f3fd':0, '1f48f-1f3fe':0, '1f48f-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f491-1f3fb':0, '1f491-1f3fc':0, '1f491-1f3fd':0, '1f491-1f3fe':0, '1f491-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fe':0, '1f4aa-1f3fb':0, '1f4aa-1f3fc':0, '1f4aa-1f3fd':0, '1f4aa-1f3fe':0, '1f4aa-1f3ff':0, '1f574-1f3fb':0, '1f574-1f3fc':0, '1f574-1f3fd':0, '1f574-1f3fe':0, '1f574-1f3ff':0, '1f575-1f3fb-200d-2640':0, '1f575-1f3fc-200d-2640':0, '1f575-1f3fd-200d-2640':0, '1f575-1f3fe-200d-2640':0, '1f575-1f3ff-200d-2640':0, '1f575-1f3fb-200d-2642':0, '1f575-1f3fc-200d-2642':0, '1f575-1f3fd-200d-2642':0, '1f575-1f3fe-200d-2642':0, '1f575-1f3ff-200d-2642':0, '1f575-1f3fb':0, '1f575-1f3fc':0, '1f575-1f3fd':0, '1f575-1f3fe':0, '1f575-1f3ff':0, '1f57a-1f3fb':0, '1f57a-1f3fc':0, '1f57a-1f3fd':0, '1f57a-1f3fe':0, '1f57a-1f3ff':0, '1f590-1f3fb':0, '1f590-1f3fc':0, '1f590-1f3fd':0, '1f590-1f3fe':0, '1f590-1f3ff':0, '1f595-1f3fb':0, '1f595-1f3fc':0, '1f595-1f3fd':0, '1f595-1f3fe':0, '1f595-1f3ff':0, '1f596-1f3fb':0, '1f596-1f3fc':0, '1f596-1f3fd':0, '1f596-1f3fe':0, '1f596-1f3ff':0, '1f645-1f3fb-200d-2640':0, '1f645-1f3fc-200d-2640':0, '1f645-1f3fd-200d-2640':0, '1f645-1f3fe-200d-2640':0, '1f645-1f3ff-200d-2640':0, '1f645-1f3fb-200d-2642':0, '1f645-1f3fc-200d-2642':0, '1f645-1f3fd-200d-2642':0, '1f645-1f3fe-200d-2642':0, '1f645-1f3ff-200d-2642':0, '1f645-1f3fb':0, '1f645-1f3fc':0, '1f645-1f3fd':0, '1f645-1f3fe':0, '1f645-1f3ff':0, '1f646-1f3fb-200d-2640':0, '1f646-1f3fc-200d-2640':0, '1f646-1f3fd-200d-2640':0, '1f646-1f3fe-200d-2640':0, '1f646-1f3ff-200d-2640':0, '1f646-1f3fb-200d-2642':0, '1f646-1f3fc-200d-2642':0, '1f646-1f3fd-200d-2642':0, '1f646-1f3fe-200d-2642':0, '1f646-1f3ff-200d-2642':0, '1f646-1f3fb':0, '1f646-1f3fc':0, '1f646-1f3fd':0, '1f646-1f3fe':0, '1f646-1f3ff':0, '1f647-1f3fb-200d-2640':0, '1f647-1f3fc-200d-2640':0, '1f647-1f3fd-200d-2640':0, '1f647-1f3fe-200d-2640':0, '1f647-1f3ff-200d-2640':0, '1f647-1f3fb-200d-2642':0, '1f647-1f3fc-200d-2642':0, '1f647-1f3fd-200d-2642':0, '1f647-1f3fe-200d-2642':0, '1f647-1f3ff-200d-2642':0, '1f647-1f3fb':0, '1f647-1f3fc':0, '1f647-1f3fd':0, '1f647-1f3fe':0, '1f647-1f3ff':0, '1f64b-1f3fb-200d-2640':0, '1f64b-1f3fc-200d-2640':0, '1f64b-1f3fd-200d-2640':0, '1f64b-1f3fe-200d-2640':0, '1f64b-1f3ff-200d-2640':0, '1f64b-1f3fb-200d-2642':0, '1f64b-1f3fc-200d-2642':0, '1f64b-1f3fd-200d-2642':0, '1f64b-1f3fe-200d-2642':0, '1f64b-1f3ff-200d-2642':0, '1f64b-1f3fb':0, '1f64b-1f3fc':0, '1f64b-1f3fd':0, '1f64b-1f3fe':0, '1f64b-1f3ff':0, '1f64c-1f3fb':0, '1f64c-1f3fc':0, '1f64c-1f3fd':0, '1f64c-1f3fe':0, '1f64c-1f3ff':0, '1f64d-1f3fb-200d-2640':0, '1f64d-1f3fc-200d-2640':0, '1f64d-1f3fd-200d-2640':0, '1f64d-1f3fe-200d-2640':0, '1f64d-1f3ff-200d-2640':0, '1f64d-1f3fb-200d-2642':0, '1f64d-1f3fc-200d-2642':0, '1f64d-1f3fd-200d-2642':0, '1f64d-1f3fe-200d-2642':0, '1f64d-1f3ff-200d-2642':0, '1f64d-1f3fb':0, '1f64d-1f3fc':0, '1f64d-1f3fd':0, '1f64d-1f3fe':0, '1f64d-1f3ff':0, '1f64e-1f3fb-200d-2640':0, '1f64e-1f3fc-200d-2640':0, '1f64e-1f3fd-200d-2640':0, '1f64e-1f3fe-200d-2640':0, '1f64e-1f3ff-200d-2640':0, '1f64e-1f3fb-200d-2642':0, '1f64e-1f3fc-200d-2642':0, '1f64e-1f3fd-200d-2642':0, '1f64e-1f3fe-200d-2642':0, '1f64e-1f3ff-200d-2642':0, '1f64e-1f3fb':0, '1f64e-1f3fc':0, '1f64e-1f3fd':0, '1f64e-1f3fe':0, '1f64e-1f3ff':0, '1f64f-1f3fb':0, '1f64f-1f3fc':0, '1f64f-1f3fd':0, '1f64f-1f3fe':0, '1f64f-1f3ff':0, '1f6a3-1f3fb-200d-2640':0, '1f6a3-1f3fc-200d-2640':0, '1f6a3-1f3fd-200d-2640':0, '1f6a3-1f3fe-200d-2640':0, '1f6a3-1f3ff-200d-2640':0, '1f6a3-1f3fb-200d-2642':0, '1f6a3-1f3fc-200d-2642':0, '1f6a3-1f3fd-200d-2642':0, '1f6a3-1f3fe-200d-2642':0, '1f6a3-1f3ff-200d-2642':0, '1f6a3-1f3fb':0, '1f6a3-1f3fc':0, '1f6a3-1f3fd':0, '1f6a3-1f3fe':0, '1f6a3-1f3ff':0, '1f6b4-1f3fb-200d-2640':0, '1f6b4-1f3fc-200d-2640':0, '1f6b4-1f3fd-200d-2640':0, '1f6b4-1f3fe-200d-2640':0, '1f6b4-1f3ff-200d-2640':0, '1f6b4-1f3fb-200d-2642':0, '1f6b4-1f3fc-200d-2642':0, '1f6b4-1f3fd-200d-2642':0, '1f6b4-1f3fe-200d-2642':0, '1f6b4-1f3ff-200d-2642':0, '1f6b4-1f3fb':0, '1f6b4-1f3fc':0, '1f6b4-1f3fd':0, '1f6b4-1f3fe':0, '1f6b4-1f3ff':0, '1f6b5-1f3fb-200d-2640':0, '1f6b5-1f3fc-200d-2640':0, '1f6b5-1f3fd-200d-2640':0, '1f6b5-1f3fe-200d-2640':0, '1f6b5-1f3ff-200d-2640':0, '1f6b5-1f3fb-200d-2642':0, '1f6b5-1f3fc-200d-2642':0, '1f6b5-1f3fd-200d-2642':0, '1f6b5-1f3fe-200d-2642':0, '1f6b5-1f3ff-200d-2642':0, '1f6b5-1f3fb':0, '1f6b5-1f3fc':0, '1f6b5-1f3fd':0, '1f6b5-1f3fe':0, '1f6b5-1f3ff':0, '1f6b6-1f3fb-200d-2640':0, '1f6b6-1f3fc-200d-2640':0, '1f6b6-1f3fd-200d-2640':0, '1f6b6-1f3fe-200d-2640':0, '1f6b6-1f3ff-200d-2640':0, '1f6b6-1f3fb-200d-2642':0, '1f6b6-1f3fc-200d-2642':0, '1f6b6-1f3fd-200d-2642':0, '1f6b6-1f3fe-200d-2642':0, '1f6b6-1f3ff-200d-2642':0, '1f6b6-1f3fb':0, '1f6b6-1f3fc':0, '1f6b6-1f3fd':0, '1f6b6-1f3fe':0, '1f6b6-1f3ff':0, '1f6c0-1f3fb':0, '1f6c0-1f3fc':0, '1f6c0-1f3fd':0, '1f6c0-1f3fe':0, '1f6c0-1f3ff':0, '1f6cc-1f3fb':0, '1f6cc-1f3fc':0, '1f6cc-1f3fd':0, '1f6cc-1f3fe':0, '1f6cc-1f3ff':0, '1f90c-1f3fb':0, '1f90c-1f3fc':0, '1f90c-1f3fd':0, '1f90c-1f3fe':0, '1f90c-1f3ff':0, '1f90f-1f3fb':0, '1f90f-1f3fc':0, '1f90f-1f3fd':0, '1f90f-1f3fe':0, '1f90f-1f3ff':0, '1f918-1f3fb':0, '1f918-1f3fc':0, '1f918-1f3fd':0, '1f918-1f3fe':0, '1f918-1f3ff':0, '1f919-1f3fb':0, '1f919-1f3fc':0, '1f919-1f3fd':0, '1f919-1f3fe':0, '1f919-1f3ff':0, '1f91a-1f3fb':0, '1f91a-1f3fc':0, '1f91a-1f3fd':0, '1f91a-1f3fe':0, '1f91a-1f3ff':0, '1f91b-1f3fb':0, '1f91b-1f3fc':0, '1f91b-1f3fd':0, '1f91b-1f3fe':0, '1f91b-1f3ff':0, '1f91c-1f3fb':0, '1f91c-1f3fc':0, '1f91c-1f3fd':0, '1f91c-1f3fe':0, '1f91c-1f3ff':0, '1f91d-1f3fb':0, '1f91d-1f3fc':0, '1f91d-1f3fd':0, '1f91d-1f3fe':0, '1f91d-1f3ff':0, '1f91e-1f3fb':0, '1f91e-1f3fc':0, '1f91e-1f3fd':0, '1f91e-1f3fe':0, '1f91e-1f3ff':0, '1f91f-1f3fb':0, '1f91f-1f3fc':0, '1f91f-1f3fd':0, '1f91f-1f3fe':0, '1f91f-1f3ff':0, '1f926-1f3fb-200d-2640':0, '1f926-1f3fc-200d-2640':0, '1f926-1f3fd-200d-2640':0, '1f926-1f3fe-200d-2640':0, '1f926-1f3ff-200d-2640':0, '1f926-1f3fb-200d-2642':0, '1f926-1f3fc-200d-2642':0, '1f926-1f3fd-200d-2642':0, '1f926-1f3fe-200d-2642':0, '1f926-1f3ff-200d-2642':0, '1f926-1f3fb':0, '1f926-1f3fc':0, '1f926-1f3fd':0, '1f926-1f3fe':0, '1f926-1f3ff':0, '1f930-1f3fb':0, '1f930-1f3fc':0, '1f930-1f3fd':0, '1f930-1f3fe':0, '1f930-1f3ff':0, '1f931-1f3fb':0, '1f931-1f3fc':0, '1f931-1f3fd':0, '1f931-1f3fe':0, '1f931-1f3ff':0, '1f932-1f3fb':0, '1f932-1f3fc':0, '1f932-1f3fd':0, '1f932-1f3fe':0, '1f932-1f3ff':0, '1f933-1f3fb':0, '1f933-1f3fc':0, '1f933-1f3fd':0, '1f933-1f3fe':0, '1f933-1f3ff':0, '1f934-1f3fb':0, '1f934-1f3fc':0, '1f934-1f3fd':0, '1f934-1f3fe':0, '1f934-1f3ff':0, '1f935-1f3fb-200d-2640':0, '1f935-1f3fc-200d-2640':0, '1f935-1f3fd-200d-2640':0, '1f935-1f3fe-200d-2640':0, '1f935-1f3ff-200d-2640':0, '1f935-1f3fb-200d-2642':0, '1f935-1f3fc-200d-2642':0, '1f935-1f3fd-200d-2642':0, '1f935-1f3fe-200d-2642':0, '1f935-1f3ff-200d-2642':0, '1f935-1f3fb':0, '1f935-1f3fc':0, '1f935-1f3fd':0, '1f935-1f3fe':0, '1f935-1f3ff':0, '1f936-1f3fb':0, '1f936-1f3fc':0, '1f936-1f3fd':0, '1f936-1f3fe':0, '1f936-1f3ff':0, '1f937-1f3fb-200d-2640':0, '1f937-1f3fc-200d-2640':0, '1f937-1f3fd-200d-2640':0, '1f937-1f3fe-200d-2640':0, '1f937-1f3ff-200d-2640':0, '1f937-1f3fb-200d-2642':0, '1f937-1f3fc-200d-2642':0, '1f937-1f3fd-200d-2642':0, '1f937-1f3fe-200d-2642':0, '1f937-1f3ff-200d-2642':0, '1f937-1f3fb':0, '1f937-1f3fc':0, '1f937-1f3fd':0, '1f937-1f3fe':0, '1f937-1f3ff':0, '1f938-1f3fb-200d-2640':0, '1f938-1f3fc-200d-2640':0, '1f938-1f3fd-200d-2640':0, '1f938-1f3fe-200d-2640':0, '1f938-1f3ff-200d-2640':0, '1f938-1f3fb-200d-2642':0, '1f938-1f3fc-200d-2642':0, '1f938-1f3fd-200d-2642':0, '1f938-1f3fe-200d-2642':0, '1f938-1f3ff-200d-2642':0, '1f938-1f3fb':0, '1f938-1f3fc':0, '1f938-1f3fd':0, '1f938-1f3fe':0, '1f938-1f3ff':0, '1f939-1f3fb-200d-2640':0, '1f939-1f3fc-200d-2640':0, '1f939-1f3fd-200d-2640':0, '1f939-1f3fe-200d-2640':0, '1f939-1f3ff-200d-2640':0, '1f939-1f3fb-200d-2642':0, '1f939-1f3fc-200d-2642':0, '1f939-1f3fd-200d-2642':0, '1f939-1f3fe-200d-2642':0, '1f939-1f3ff-200d-2642':0, '1f939-1f3fb':0, '1f939-1f3fc':0, '1f939-1f3fd':0, '1f939-1f3fe':0, '1f939-1f3ff':0, '1f93d-1f3fb-200d-2640':0, '1f93d-1f3fc-200d-2640':0, '1f93d-1f3fd-200d-2640':0, '1f93d-1f3fe-200d-2640':0, '1f93d-1f3ff-200d-2640':0, '1f93d-1f3fb-200d-2642':0, '1f93d-1f3fc-200d-2642':0, '1f93d-1f3fd-200d-2642':0, '1f93d-1f3fe-200d-2642':0, '1f93d-1f3ff-200d-2642':0, '1f93d-1f3fb':0, '1f93d-1f3fc':0, '1f93d-1f3fd':0, '1f93d-1f3fe':0, '1f93d-1f3ff':0, '1f93e-1f3fb-200d-2640':0, '1f93e-1f3fc-200d-2640':0, '1f93e-1f3fd-200d-2640':0, '1f93e-1f3fe-200d-2640':0, '1f93e-1f3ff-200d-2640':0, '1f93e-1f3fb-200d-2642':0, '1f93e-1f3fc-200d-2642':0, '1f93e-1f3fd-200d-2642':0, '1f93e-1f3fe-200d-2642':0, '1f93e-1f3ff-200d-2642':0, '1f93e-1f3fb':0, '1f93e-1f3fc':0, '1f93e-1f3fd':0, '1f93e-1f3fe':0, '1f93e-1f3ff':0, '1f977-1f3fb':0, '1f977-1f3fc':0, '1f977-1f3fd':0, '1f977-1f3fe':0, '1f977-1f3ff':0, '1f9b5-1f3fb':0, '1f9b5-1f3fc':0, '1f9b5-1f3fd':0, '1f9b5-1f3fe':0, '1f9b5-1f3ff':0, '1f9b6-1f3fb':0, '1f9b6-1f3fc':0, '1f9b6-1f3fd':0, '1f9b6-1f3fe':0, '1f9b6-1f3ff':0, '1f9b8-1f3fb-200d-2640':0, '1f9b8-1f3fc-200d-2640':0, '1f9b8-1f3fd-200d-2640':0, '1f9b8-1f3fe-200d-2640':0, '1f9b8-1f3ff-200d-2640':0, '1f9b8-1f3fb-200d-2642':0, '1f9b8-1f3fc-200d-2642':0, '1f9b8-1f3fd-200d-2642':0, '1f9b8-1f3fe-200d-2642':0, '1f9b8-1f3ff-200d-2642':0, '1f9b8-1f3fb':0, '1f9b8-1f3fc':0, '1f9b8-1f3fd':0, '1f9b8-1f3fe':0, '1f9b8-1f3ff':0, '1f9b9-1f3fb-200d-2640':0, '1f9b9-1f3fc-200d-2640':0, '1f9b9-1f3fd-200d-2640':0, '1f9b9-1f3fe-200d-2640':0, '1f9b9-1f3ff-200d-2640':0, '1f9b9-1f3fb-200d-2642':0, '1f9b9-1f3fc-200d-2642':0, '1f9b9-1f3fd-200d-2642':0, '1f9b9-1f3fe-200d-2642':0, '1f9b9-1f3ff-200d-2642':0, '1f9b9-1f3fb':0, '1f9b9-1f3fc':0, '1f9b9-1f3fd':0, '1f9b9-1f3fe':0, '1f9b9-1f3ff':0, '1f9bb-1f3fb':0, '1f9bb-1f3fc':0, '1f9bb-1f3fd':0, '1f9bb-1f3fe':0, '1f9bb-1f3ff':0, '1f9cd-1f3fb-200d-2640':0, '1f9cd-1f3fc-200d-2640':0, '1f9cd-1f3fd-200d-2640':0, '1f9cd-1f3fe-200d-2640':0, '1f9cd-1f3ff-200d-2640':0, '1f9cd-1f3fb-200d-2642':0, '1f9cd-1f3fc-200d-2642':0, '1f9cd-1f3fd-200d-2642':0, '1f9cd-1f3fe-200d-2642':0, '1f9cd-1f3ff-200d-2642':0, '1f9cd-1f3fb':0, '1f9cd-1f3fc':0, '1f9cd-1f3fd':0, '1f9cd-1f3fe':0, '1f9cd-1f3ff':0, '1f9ce-1f3fb-200d-2640':0, '1f9ce-1f3fc-200d-2640':0, '1f9ce-1f3fd-200d-2640':0, '1f9ce-1f3fe-200d-2640':0, '1f9ce-1f3ff-200d-2640':0, '1f9ce-1f3fb-200d-2642':0, '1f9ce-1f3fc-200d-2642':0, '1f9ce-1f3fd-200d-2642':0, '1f9ce-1f3fe-200d-2642':0, '1f9ce-1f3ff-200d-2642':0, '1f9ce-1f3fb':0, '1f9ce-1f3fc':0, '1f9ce-1f3fd':0, '1f9ce-1f3fe':0, '1f9ce-1f3ff':0, '1f9cf-1f3fb-200d-2640':0, '1f9cf-1f3fc-200d-2640':0, '1f9cf-1f3fd-200d-2640':0, '1f9cf-1f3fe-200d-2640':0, '1f9cf-1f3ff-200d-2640':0, '1f9cf-1f3fb-200d-2642':0, '1f9cf-1f3fc-200d-2642':0, '1f9cf-1f3fd-200d-2642':0, '1f9cf-1f3fe-200d-2642':0, '1f9cf-1f3ff-200d-2642':0, '1f9cf-1f3fb':0, '1f9cf-1f3fc':0, '1f9cf-1f3fd':0, '1f9cf-1f3fe':0, '1f9cf-1f3ff':0, '1f9d1-1f3fb-200d-1f33e':0, '1f9d1-1f3fc-200d-1f33e':0, '1f9d1-1f3fd-200d-1f33e':0, '1f9d1-1f3fe-200d-1f33e':0, '1f9d1-1f3ff-200d-1f33e':0, '1f9d1-1f3fb-200d-1f373':0, '1f9d1-1f3fc-200d-1f373':0, '1f9d1-1f3fd-200d-1f373':0, '1f9d1-1f3fe-200d-1f373':0, '1f9d1-1f3ff-200d-1f373':0, '1f9d1-1f3fb-200d-1f37c':0, '1f9d1-1f3fc-200d-1f37c':0, '1f9d1-1f3fd-200d-1f37c':0, '1f9d1-1f3fe-200d-1f37c':0, '1f9d1-1f3ff-200d-1f37c':0, '1f9d1-1f3fb-200d-1f384':0, '1f9d1-1f3fc-200d-1f384':0, '1f9d1-1f3fd-200d-1f384':0, '1f9d1-1f3fe-200d-1f384':0, '1f9d1-1f3ff-200d-1f384':0, '1f9d1-1f3fb-200d-1f393':0, '1f9d1-1f3fc-200d-1f393':0, '1f9d1-1f3fd-200d-1f393':0, '1f9d1-1f3fe-200d-1f393':0, '1f9d1-1f3ff-200d-1f393':0, '1f9d1-1f3fb-200d-1f3a4':0, '1f9d1-1f3fc-200d-1f3a4':0, '1f9d1-1f3fd-200d-1f3a4':0, '1f9d1-1f3fe-200d-1f3a4':0, '1f9d1-1f3ff-200d-1f3a4':0, '1f9d1-1f3fb-200d-1f3a8':0, '1f9d1-1f3fc-200d-1f3a8':0, '1f9d1-1f3fd-200d-1f3a8':0, '1f9d1-1f3fe-200d-1f3a8':0, '1f9d1-1f3ff-200d-1f3a8':0, '1f9d1-1f3fb-200d-1f3eb':0, '1f9d1-1f3fc-200d-1f3eb':0, '1f9d1-1f3fd-200d-1f3eb':0, '1f9d1-1f3fe-200d-1f3eb':0, '1f9d1-1f3ff-200d-1f3eb':0, '1f9d1-1f3fb-200d-1f3ed':0, '1f9d1-1f3fc-200d-1f3ed':0, '1f9d1-1f3fd-200d-1f3ed':0, '1f9d1-1f3fe-200d-1f3ed':0, '1f9d1-1f3ff-200d-1f3ed':0, '1f9d1-1f3fb-200d-1f4bb':0, '1f9d1-1f3fc-200d-1f4bb':0, '1f9d1-1f3fd-200d-1f4bb':0, '1f9d1-1f3fe-200d-1f4bb':0, '1f9d1-1f3ff-200d-1f4bb':0, '1f9d1-1f3fb-200d-1f4bc':0, '1f9d1-1f3fc-200d-1f4bc':0, '1f9d1-1f3fd-200d-1f4bc':0, '1f9d1-1f3fe-200d-1f4bc':0, '1f9d1-1f3ff-200d-1f4bc':0, '1f9d1-1f3fb-200d-1f527':0, '1f9d1-1f3fc-200d-1f527':0, '1f9d1-1f3fd-200d-1f527':0, '1f9d1-1f3fe-200d-1f527':0, '1f9d1-1f3ff-200d-1f527':0, '1f9d1-1f3fb-200d-1f52c':0, '1f9d1-1f3fc-200d-1f52c':0, '1f9d1-1f3fd-200d-1f52c':0, '1f9d1-1f3fe-200d-1f52c':0, '1f9d1-1f3ff-200d-1f52c':0, '1f9d1-1f3fb-200d-1f680':0, '1f9d1-1f3fc-200d-1f680':0, '1f9d1-1f3fd-200d-1f680':0, '1f9d1-1f3fe-200d-1f680':0, '1f9d1-1f3ff-200d-1f680':0, '1f9d1-1f3fb-200d-1f692':0, '1f9d1-1f3fc-200d-1f692':0, '1f9d1-1f3fd-200d-1f692':0, '1f9d1-1f3fe-200d-1f692':0, '1f9d1-1f3ff-200d-1f692':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fb-200d-1f9af':0, '1f9d1-1f3fc-200d-1f9af':0, '1f9d1-1f3fd-200d-1f9af':0, '1f9d1-1f3fe-200d-1f9af':0, '1f9d1-1f3ff-200d-1f9af':0, '1f9d1-1f3fb-200d-1f9b0':0, '1f9d1-1f3fc-200d-1f9b0':0, '1f9d1-1f3fd-200d-1f9b0':0, '1f9d1-1f3fe-200d-1f9b0':0, '1f9d1-1f3ff-200d-1f9b0':0, '1f9d1-1f3fb-200d-1f9b1':0, '1f9d1-1f3fc-200d-1f9b1':0, '1f9d1-1f3fd-200d-1f9b1':0, '1f9d1-1f3fe-200d-1f9b1':0, '1f9d1-1f3ff-200d-1f9b1':0, '1f9d1-1f3fb-200d-1f9b2':0, '1f9d1-1f3fc-200d-1f9b2':0, '1f9d1-1f3fd-200d-1f9b2':0, '1f9d1-1f3fe-200d-1f9b2':0, '1f9d1-1f3ff-200d-1f9b2':0, '1f9d1-1f3fb-200d-1f9b3':0, '1f9d1-1f3fc-200d-1f9b3':0, '1f9d1-1f3fd-200d-1f9b3':0, '1f9d1-1f3fe-200d-1f9b3':0, '1f9d1-1f3ff-200d-1f9b3':0, '1f9d1-1f3fb-200d-1f9bc':0, '1f9d1-1f3fc-200d-1f9bc':0, '1f9d1-1f3fd-200d-1f9bc':0, '1f9d1-1f3fe-200d-1f9bc':0, '1f9d1-1f3ff-200d-1f9bc':0, '1f9d1-1f3fb-200d-1f9bd':0, '1f9d1-1f3fc-200d-1f9bd':0, '1f9d1-1f3fd-200d-1f9bd':0, '1f9d1-1f3fe-200d-1f9bd':0, '1f9d1-1f3ff-200d-1f9bd':0, '1f9d1-1f3fb-200d-2695':0, '1f9d1-1f3fc-200d-2695':0, '1f9d1-1f3fd-200d-2695':0, '1f9d1-1f3fe-200d-2695':0, '1f9d1-1f3ff-200d-2695':0, '1f9d1-1f3fb-200d-2696':0, '1f9d1-1f3fc-200d-2696':0, '1f9d1-1f3fd-200d-2696':0, '1f9d1-1f3fe-200d-2696':0, '1f9d1-1f3ff-200d-2696':0, '1f9d1-1f3fb-200d-2708':0, '1f9d1-1f3fc-200d-2708':0, '1f9d1-1f3fd-200d-2708':0, '1f9d1-1f3fe-200d-2708':0, '1f9d1-1f3ff-200d-2708':0, '1f9d1-1f3fb':0, '1f9d1-1f3fc':0, '1f9d1-1f3fd':0, '1f9d1-1f3fe':0, '1f9d1-1f3ff':0, '1f9d2-1f3fb':0, '1f9d2-1f3fc':0, '1f9d2-1f3fd':0, '1f9d2-1f3fe':0, '1f9d2-1f3ff':0, '1f9d3-1f3fb':0, '1f9d3-1f3fc':0, '1f9d3-1f3fd':0, '1f9d3-1f3fe':0, '1f9d3-1f3ff':0, '1f9d4-1f3fb-200d-2640':0, '1f9d4-1f3fc-200d-2640':0, '1f9d4-1f3fd-200d-2640':0, '1f9d4-1f3fe-200d-2640':0, '1f9d4-1f3ff-200d-2640':0, '1f9d4-1f3fb-200d-2642':0, '1f9d4-1f3fc-200d-2642':0, '1f9d4-1f3fd-200d-2642':0, '1f9d4-1f3fe-200d-2642':0, '1f9d4-1f3ff-200d-2642':0, '1f9d4-1f3fb':0, '1f9d4-1f3fc':0, '1f9d4-1f3fd':0, '1f9d4-1f3fe':0, '1f9d4-1f3ff':0, '1f9d5-1f3fb':0, '1f9d5-1f3fc':0, '1f9d5-1f3fd':0, '1f9d5-1f3fe':0, '1f9d5-1f3ff':0, '1f9d6-1f3fb-200d-2640':0, '1f9d6-1f3fc-200d-2640':0, '1f9d6-1f3fd-200d-2640':0, '1f9d6-1f3fe-200d-2640':0, '1f9d6-1f3ff-200d-2640':0, '1f9d6-1f3fb-200d-2642':0, '1f9d6-1f3fc-200d-2642':0, '1f9d6-1f3fd-200d-2642':0, '1f9d6-1f3fe-200d-2642':0, '1f9d6-1f3ff-200d-2642':0, '1f9d6-1f3fb':0, '1f9d6-1f3fc':0, '1f9d6-1f3fd':0, '1f9d6-1f3fe':0, '1f9d6-1f3ff':0, '1f9d7-1f3fb-200d-2640':0, '1f9d7-1f3fc-200d-2640':0, '1f9d7-1f3fd-200d-2640':0, '1f9d7-1f3fe-200d-2640':0, '1f9d7-1f3ff-200d-2640':0, '1f9d7-1f3fb-200d-2642':0, '1f9d7-1f3fc-200d-2642':0, '1f9d7-1f3fd-200d-2642':0, '1f9d7-1f3fe-200d-2642':0, '1f9d7-1f3ff-200d-2642':0, '1f9d7-1f3fb':0, '1f9d7-1f3fc':0, '1f9d7-1f3fd':0, '1f9d7-1f3fe':0, '1f9d7-1f3ff':0, '1f9d8-1f3fb-200d-2640':0, '1f9d8-1f3fc-200d-2640':0, '1f9d8-1f3fd-200d-2640':0, '1f9d8-1f3fe-200d-2640':0, '1f9d8-1f3ff-200d-2640':0, '1f9d8-1f3fb-200d-2642':0, '1f9d8-1f3fc-200d-2642':0, '1f9d8-1f3fd-200d-2642':0, '1f9d8-1f3fe-200d-2642':0, '1f9d8-1f3ff-200d-2642':0, '1f9d8-1f3fb':0, '1f9d8-1f3fc':0, '1f9d8-1f3fd':0, '1f9d8-1f3fe':0, '1f9d8-1f3ff':0, '1f9d9-1f3fb-200d-2640':0, '1f9d9-1f3fc-200d-2640':0, '1f9d9-1f3fd-200d-2640':0, '1f9d9-1f3fe-200d-2640':0, '1f9d9-1f3ff-200d-2640':0, '1f9d9-1f3fb-200d-2642':0, '1f9d9-1f3fc-200d-2642':0, '1f9d9-1f3fd-200d-2642':0, '1f9d9-1f3fe-200d-2642':0, '1f9d9-1f3ff-200d-2642':0, '1f9d9-1f3fb':0, '1f9d9-1f3fc':0, '1f9d9-1f3fd':0, '1f9d9-1f3fe':0, '1f9d9-1f3ff':0, '1f9da-1f3fb-200d-2640':0, '1f9da-1f3fc-200d-2640':0, '1f9da-1f3fd-200d-2640':0, '1f9da-1f3fe-200d-2640':0, '1f9da-1f3ff-200d-2640':0, '1f9da-1f3fb-200d-2642':0, '1f9da-1f3fc-200d-2642':0, '1f9da-1f3fd-200d-2642':0, '1f9da-1f3fe-200d-2642':0, '1f9da-1f3ff-200d-2642':0, '1f9da-1f3fb':0, '1f9da-1f3fc':0, '1f9da-1f3fd':0, '1f9da-1f3fe':0, '1f9da-1f3ff':0, '1f9db-1f3fb-200d-2640':0, '1f9db-1f3fc-200d-2640':0, '1f9db-1f3fd-200d-2640':0, '1f9db-1f3fe-200d-2640':0, '1f9db-1f3ff-200d-2640':0, '1f9db-1f3fb-200d-2642':0, '1f9db-1f3fc-200d-2642':0, '1f9db-1f3fd-200d-2642':0, '1f9db-1f3fe-200d-2642':0, '1f9db-1f3ff-200d-2642':0, '1f9db-1f3fb':0, '1f9db-1f3fc':0, '1f9db-1f3fd':0, '1f9db-1f3fe':0, '1f9db-1f3ff':0, '1f9dc-1f3fb-200d-2640':0, '1f9dc-1f3fc-200d-2640':0, '1f9dc-1f3fd-200d-2640':0, '1f9dc-1f3fe-200d-2640':0, '1f9dc-1f3ff-200d-2640':0, '1f9dc-1f3fb-200d-2642':0, '1f9dc-1f3fc-200d-2642':0, '1f9dc-1f3fd-200d-2642':0, '1f9dc-1f3fe-200d-2642':0, '1f9dc-1f3ff-200d-2642':0, '1f9dc-1f3fb':0, '1f9dc-1f3fc':0, '1f9dc-1f3fd':0, '1f9dc-1f3fe':0, '1f9dc-1f3ff':0, '1f9dd-1f3fb-200d-2640':0, '1f9dd-1f3fc-200d-2640':0, '1f9dd-1f3fd-200d-2640':0, '1f9dd-1f3fe-200d-2640':0, '1f9dd-1f3ff-200d-2640':0, '1f9dd-1f3fb-200d-2642':0, '1f9dd-1f3fc-200d-2642':0, '1f9dd-1f3fd-200d-2642':0, '1f9dd-1f3fe-200d-2642':0, '1f9dd-1f3ff-200d-2642':0, '1f9dd-1f3fb':0, '1f9dd-1f3fc':0, '1f9dd-1f3fd':0, '1f9dd-1f3fe':0, '1f9dd-1f3ff':0, '261d-1f3fb':0, '261d-1f3fc':0, '261d-1f3fd':0, '261d-1f3fe':0, '261d-1f3ff':0, '26f9-1f3fb-200d-2640':0, '26f9-1f3fc-200d-2640':0, '26f9-1f3fd-200d-2640':0, '26f9-1f3fe-200d-2640':0, '26f9-1f3ff-200d-2640':0, '26f9-1f3fb-200d-2642':0, '26f9-1f3fc-200d-2642':0, '26f9-1f3fd-200d-2642':0, '26f9-1f3fe-200d-2642':0, '26f9-1f3ff-200d-2642':0, '26f9-1f3fb':0, '26f9-1f3fc':0, '26f9-1f3fd':0, '26f9-1f3fe':0, '26f9-1f3ff':0, '270a-1f3fb':0, '270a-1f3fc':0, '270a-1f3fd':0, '270a-1f3fe':0, '270a-1f3ff':0, '270b-1f3fb':0, '270b-1f3fc':0, '270b-1f3fd':0, '270b-1f3fe':0, '270b-1f3ff':0, '270c-1f3fb':0, '270c-1f3fc':0, '270c-1f3fd':0, '270c-1f3fe':0, '270c-1f3ff':0, '270d-1f3fb':0, '270d-1f3fc':0, '270d-1f3fd':0, '270d-1f3fe':0, '270d-1f3ff':0}};\n\nconst Emoji: {[emoji: string]: number} = EmojiVersions[''];\nfor(const version in EmojiVersions) {\n  if(version) {\n    Object.assign(Emoji, EmojiVersions[version as EMOJI_VERSION]);\n  }\n}\n\nexport default Emoji;\n\n/* Emoji[\"00a9-fe0f\"] = 6362;\nEmoji[\"00ae-fe0f\"] = 6363;\nEmoji[\"2122-fe0f\"] = 6364; */\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ctx from './ctx';\r\n\r\nexport const USER_AGENT = navigator ? navigator.userAgent : null;\r\nexport const IS_APPLE = navigator.userAgent.search(/OS X|iPhone|iPad|iOS/i) !== -1;\r\nexport const IS_ANDROID = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\r\nexport const IS_CHROMIUM = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n\r\n// https://stackoverflow.com/a/58065241\r\nexport const IS_APPLE_MOBILE = (/iPad|iPhone|iPod/.test(navigator.platform) ||\r\n  (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\r\n  !(ctx as any).MSStream;\r\n\r\nexport const IS_SAFARI = !!('safari' in ctx) || !!(USER_AGENT && (/\\b(iPad|iPhone|iPod)\\b/.test(USER_AGENT) || (!!USER_AGENT.match('Safari') && !USER_AGENT.match('Chrome'))))/*  || true */;\r\nexport const IS_FIREFOX = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n\r\nexport const IS_MOBILE_SAFARI = IS_SAFARI && IS_APPLE_MOBILE;\r\n\r\nexport const IS_MOBILE = /* screen.width && screen.width < 480 ||  */navigator.maxTouchPoints > 0 && navigator.userAgent.search(/iOS|iPhone OS|Android|BlackBerry|BB10|Series ?[64]0|J2ME|MIDP|opera mini|opera mobi|mobi.+Gecko|Windows Phone/i) != -1;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport LatinizeMap from '../config/latinizeMap';\n\nexport const badCharsRe = /[`~!@#$%^&*()\\-_=+\\[\\]\\\\|{}'\";:\\/?.>,<]+/g;\nconst trimRe = /^\\s+|\\s$/g;\n\nconst C2L: {[k: string]: string} = {\n  'й': 'q',\n  'ц': 'w',\n  'у': 'e',\n  'к': 'r',\n  'е': 't',\n  'н': 'y',\n  'г': 'u',\n  'ш': 'i',\n  'щ': 'o',\n  'з': 'p',\n  'х': '[',\n  'ъ': ']',\n  'ф': 'a',\n  'ы': 's',\n  'в': 'd',\n  'а': 'f',\n  'п': 'g',\n  'р': 'h',\n  'о': 'j',\n  'л': 'k',\n  'д': 'l',\n  'ж': ';',\n  'э': '\\'',\n  'я': 'z',\n  'ч': 'x',\n  'с': 'c',\n  'м': 'v',\n  'и': 'b',\n  'т': 'n',\n  'ь': 'm',\n  'б': ',',\n  'ю': '.',\n  '.': '/'\n};\n\nexport function clearBadCharsAndTrim(text: string) {\n  return text.replace(badCharsRe, '').replace(trimRe, '');\n}\n\nexport function fixCyrillic(text: string) {\n  return text.toLowerCase().replace(/[\\wа-я]/g, (ch) => {\n    const latinizeCh = C2L[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport function latinizeString(text: string) {\n  return text.replace(/[^A-Za-z0-9]/g, (ch) => {\n    const latinizeCh = LatinizeMap[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport default function cleanSearchText(text: string, latinize = true) {\n  return processSearchText(text, {\n    clearBadChars: true,\n    latinize,\n    ignoreCase: true\n  });\n}\n\nexport type ProcessSearchTextOptions = Partial<{\n  clearBadChars: boolean,\n  latinize: boolean,\n  ignoreCase: boolean,\n  includeTag: boolean\n}>;\n\nexport function processSearchText(text: string, options: ProcessSearchTextOptions = {}) {\n  const hasTag = options.includeTag && text.charAt(0) === '%';\n  const originalText = text;\n  if(options.clearBadChars) text = clearBadCharsAndTrim(text);\n  if(options.latinize) text = latinizeString(text);\n  if(options.ignoreCase) text = text.toLowerCase();\n  if(hasTag) text = '%' + text;\n  if(options.latinize) text += '\\x01' + fixCyrillic(originalText);\n  return text;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {InputFileLocation, InputStickerSet, InputWebFileLocation} from '../layer';\r\nimport type {DownloadOptions} from '../lib/mtproto/apiFileManager';\r\n\r\nconst FILENAME_JOINER = '_';\r\n\r\nexport function getFileNameByLocation(location: InputFileLocation | InputWebFileLocation, options?: Partial<{\r\n  fileName: string,\r\n  downloadId: string\r\n}>) {\r\n  const fileName = '';// (options?.fileName || '').split('.');\r\n  const ext = fileName[fileName.length - 1] || '';\r\n\r\n  let str: string;\r\n  switch(location._) {\r\n    case 'inputPhotoFileLocation': {\r\n      str = ['photo', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputDocumentFileLocation': {\r\n      str = ['document', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputPeerPhotoFileLocation':\r\n      str = ['peerPhoto', location.photo_id, location.pFlags.big ? 'big' : 'small'].join(FILENAME_JOINER);\r\n      break;\r\n\r\n    case 'inputStickerSetThumb': {\r\n      const id = (location.stickerset as InputStickerSet.inputStickerSetID).id ||\r\n        (location.stickerset as InputStickerSet.inputStickerSetShortName).short_name ||\r\n        (location.stickerset as InputStickerSet.inputStickerSetDice).emoticon ||\r\n        location.stickerset._;\r\n      str = ['stickerSetThumb', id, location.thumb_version].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputFileLocation': {\r\n      str = location.volume_id + '_' + location.local_id;\r\n      break;\r\n    }\r\n\r\n    case 'inputWebFileLocation': {\r\n      str = ['webFile', location.url].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      console.error('Unrecognized location:', location);\r\n      str = '';\r\n      break;\r\n    }\r\n  }\r\n\r\n  return str + (options?.downloadId ? '_download' : '') + (ext ? '.' + ext : ext);\r\n}\r\n\r\nexport type FileURLType = 'photo' | 'thumb' | 'document' | 'stream' | 'download';\r\nexport function getFileURL(type: FileURLType, options: DownloadOptions) {\r\n  // console.log('getFileURL', location);\r\n  // const perf = performance.now();\r\n  const encoded = encodeURIComponent(JSON.stringify(options));\r\n  // console.log('getFileURL encode:', performance.now() - perf, encoded);\r\n\r\n  return /* '/' +  */type + '/' + encoded;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {Database} from '../../config/databases';\r\nimport Modes from '../../config/modes';\r\nimport makeError from '../../helpers/makeError';\r\nimport safeAssign from '../../helpers/object/safeAssign';\r\nimport {logger} from '../logger';\r\n\r\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/createIndex\r\n */\r\nexport type IDBIndex = {\r\n  indexName: string,\r\n  keyPath: string,\r\n  objectParameters: IDBIndexParameters\r\n};\r\n\r\nexport type IDBStore = {\r\n  name: string,\r\n  indexes?: IDBIndex[]\r\n};\r\n\r\nexport type IDBOptions = {\r\n  name?: string,\r\n  storeName: string,\r\n  stores?: IDBStore[],\r\n  version?: number\r\n};\r\n\r\nconst DEBUG = false;\r\n\r\nexport class IDB {\r\n  private static INSTANCES: IDB[] = [];\r\n  private openDbPromise: Promise<IDBDatabase>;\r\n  private db: IDBDatabase;\r\n  private storageIsAvailable: boolean;\r\n  private log: ReturnType<typeof logger>;\r\n  private name: string;\r\n  private version: number;\r\n  private stores: IDBStore[];\r\n\r\n  constructor(db: Database<any>) {\r\n    safeAssign(this, db);\r\n\r\n    if(Modes.test) {\r\n      this.name += '_test';\r\n    }\r\n\r\n    this.storageIsAvailable = true;\r\n    this.log = logger(['IDB', db.name].join('-'));\r\n    this.log('constructor');\r\n\r\n    this.openDatabase(true);\r\n\r\n    IDB.INSTANCES.push(this);\r\n  }\r\n\r\n  public isAvailable() {\r\n    return this.storageIsAvailable;\r\n  }\r\n\r\n  public openDatabase(createNew = false): Promise<IDBDatabase> {\r\n    if(this.openDbPromise && !createNew) {\r\n      return this.openDbPromise;\r\n    }\r\n\r\n    const createIndexes = (os: IDBObjectStore, store: IDBStore) => {\r\n      const indexNames = Array.from(os.indexNames);\r\n      for(const indexName of indexNames) {\r\n        os.deleteIndex(indexName);\r\n      }\r\n\r\n      if(!store.indexes?.length) {\r\n        return;\r\n      }\r\n\r\n      for(const index of store.indexes) {\r\n        if(os.indexNames.contains(index.indexName)) {\r\n          continue;\r\n        }\r\n\r\n        os.createIndex(index.indexName, index.keyPath, index.objectParameters);\r\n      }\r\n    };\r\n\r\n    const createObjectStore = (db: IDBDatabase, store: IDBStore) => {\r\n      const os = db.createObjectStore(store.name);\r\n      createIndexes(os, store);\r\n    };\r\n\r\n    try {\r\n      var request = indexedDB.open(this.name, this.version);\r\n\r\n      if(!request) {\r\n        return Promise.reject();\r\n      }\r\n    } catch(error) {\r\n      this.log.error('error opening db', (error as Error).message);\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    let finished = false;\r\n    setTimeout(() => {\r\n      if(!finished) {\r\n        request.onerror(makeError('IDB_CREATE_TIMEOUT') as Event);\r\n      }\r\n    }, 3000);\r\n\r\n    return this.openDbPromise = new Promise<IDBDatabase>((resolve, reject) => {\r\n      request.onsuccess = (event) => {\r\n        finished = true;\r\n        const db = request.result;\r\n        let calledNew = false;\r\n\r\n        this.log('Opened');\r\n\r\n        db.onerror = (error) => {\r\n          this.storageIsAvailable = false;\r\n          this.log.error('Error creating/accessing IndexedDB database', error);\r\n          reject(error);\r\n        };\r\n\r\n        db.onclose = (e) => {\r\n          this.log.error('closed:', e);\r\n          !calledNew && this.openDatabase();\r\n        };\r\n\r\n        db.onabort = (e) => {\r\n          this.log.error('abort:', e);\r\n          const transaction = e.target as IDBTransaction;\r\n\r\n          this.openDatabase(calledNew = true);\r\n\r\n          if(transaction.onerror) {\r\n            transaction.onerror(e);\r\n          }\r\n\r\n          db.close();\r\n        };\r\n\r\n        db.onversionchange = (e) => {\r\n          this.log.error('onversionchange, lol?');\r\n        };\r\n\r\n        resolve(this.db = db);\r\n      };\r\n\r\n      request.onerror = (event) => {\r\n        finished = true;\r\n        this.storageIsAvailable = false;\r\n        this.log.error('Error creating/accessing IndexedDB database', event);\r\n        reject(event);\r\n      };\r\n\r\n      request.onupgradeneeded = (event) => {\r\n        finished = true;\r\n        this.log.warn('performing idb upgrade from', event.oldVersion, 'to', event.newVersion);\r\n\r\n        const target = event.target as IDBOpenDBRequest;\r\n        const db = target.result;\r\n        this.stores.forEach((store) => {\r\n          /* if(db.objectStoreNames.contains(store.name)) {\r\n            //if(event.oldVersion === 1) {\r\n              db.deleteObjectStore(store.name);\r\n            //}\r\n          } */\r\n\r\n          if(!db.objectStoreNames.contains(store.name)) {\r\n            createObjectStore(db, store);\r\n          } else {\r\n            const txn = target.transaction;\r\n            const os = txn.objectStore(store.name);\r\n            createIndexes(os, store);\r\n          }\r\n        });\r\n      };\r\n    });\r\n  }\r\n\r\n  public static create<T extends Database<any>>(db: T) {\r\n    return this.INSTANCES.find((instance) => instance.name === db.name) ?? new IDB(db);\r\n  }\r\n\r\n  public static closeDatabases(preserve?: IDB) {\r\n    this.INSTANCES.forEach((storage) => {\r\n      if(preserve && preserve === storage) {\r\n        return;\r\n      }\r\n\r\n      const db = storage.db;\r\n      if(db) {\r\n        db.onclose = () => {};\r\n        db.close();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default class IDBStorage<T extends Database<any>, StoreName extends string = T['stores'][0]['name']> {\r\n  private log: ReturnType<typeof logger>;\r\n  private storeName: T['stores'][0]['name'];\r\n  private idb: IDB;\r\n\r\n  constructor(db: T, storeName: typeof db['stores'][0]['name']) {\r\n    this.storeName = storeName;\r\n    this.log = logger(['IDB', db.name, storeName].join('-'));\r\n    this.idb = IDB.create(db);\r\n  }\r\n\r\n  /**\r\n   * ! WARNING ! function requires at least one opened connection\r\n   */\r\n  /* public static clearObjectStores() {\r\n    const storage = this.STORAGES[0];\r\n    this.closeDatabases(storage);\r\n\r\n    const names = Array.from(storage.db.objectStoreNames);\r\n    const promises = names.map((name) => storage.clear(name));\r\n    return Promise.all(promises);\r\n  } */\r\n\r\n  /* public static deleteDatabase() {\r\n    this.closeDatabases();\r\n\r\n    const storages = this.STORAGES;\r\n    const dbNames = Array.from(new Set(storages.map((storage) => storage.name)));\r\n    const promises = dbNames.map((dbName) => {\r\n      return new Promise<void>((resolve, reject) => {\r\n        const deleteRequest = indexedDB.deleteDatabase(dbName);\r\n\r\n        deleteRequest.onerror = () => {\r\n          reject();\r\n        };\r\n\r\n        deleteRequest.onsuccess = () => {\r\n          resolve();\r\n        };\r\n      });\r\n    });\r\n\r\n    return Promise.all(promises);\r\n  } */\r\n\r\n  public delete(entryName: string | string[], storeName?: StoreName): Promise<void> {\r\n    // return Promise.resolve();\r\n    if(!Array.isArray(entryName)) {\r\n      entryName = [].concat(entryName);\r\n    }\r\n\r\n    return this.getObjectStore('readwrite', (objectStore) => {\r\n      return (entryName as string[]).map((entryName) => objectStore.delete(entryName));\r\n    }, DEBUG ? 'delete: ' + entryName.join(', ') : '', storeName);\r\n  }\r\n\r\n  public clear(storeName?: StoreName): Promise<void> {\r\n    return this.getObjectStore('readwrite', (objectStore) => objectStore.clear(), DEBUG ? 'clear' : '', storeName);\r\n  }\r\n\r\n  public save(entryName: string | string[], value: any | any[], storeName?: StoreName) {\r\n    // const handleError = (error: Error) => {\r\n    //   this.log.error('save: transaction error:', entryName, value, db, error, error && error.name);\r\n    //   if((!error || error.name === 'InvalidStateError')/*  && false */) {\r\n    //     setTimeout(() => {\r\n    //       this.save(entryName, value);\r\n    //     }, 2e3);\r\n    //   } else {\r\n    //     //console.error('IndexedDB saveFile transaction error:', error, error && error.name);\r\n    //   }\r\n    // };\r\n\r\n    if(!Array.isArray(entryName)) {\r\n      entryName = [].concat(entryName);\r\n      value = [].concat(value);\r\n    }\r\n\r\n    return this.getObjectStore('readwrite', (objectStore) => {\r\n      return (entryName as string[]).map((entryName, idx) => objectStore.put(value[idx], entryName));\r\n    }, DEBUG ? 'save: ' + entryName.join(', ') : '', storeName);\r\n  }\r\n\r\n  // public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n  //   //return Promise.resolve(blobConstruct([blob]));\r\n  //   if(!(blob instanceof Blob)) {\r\n  //     blob = blobConstruct(blob);\r\n  //   }\r\n\r\n  //   return this.save(fileName, blob);\r\n  // }\r\n\r\n  /* public saveFileBase64(db: IDBDatabase, fileName: string, blob: Blob | any): Promise<Blob> {\r\n    if(this.getBlobSize(blob) > 10 * 1024 * 1024) {\r\n      return Promise.reject();\r\n    }\r\n\r\n    if(!(blob instanceof Blob)) {\r\n      var safeMimeType = blobSafeMimeType(blob.type || 'image/jpeg');\r\n      var address = 'data:' + safeMimeType + ';base64,' + bytesToBase64(blob);\r\n      return this.storagePutB64String(db, fileName, address).then(() => {\r\n        return blob;\r\n      });\r\n    }\r\n\r\n    try {\r\n      var reader = new FileReader();\r\n    } catch (e) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject();\r\n    }\r\n\r\n    let promise = new Promise<Blob>((resolve, reject) => {\r\n      reader.onloadend = () => {\r\n        this.storagePutB64String(db, fileName, reader.result as string).then(() => {\r\n          resolve(blob);\r\n        }, reject);\r\n      }\r\n\r\n      reader.onerror = reject;\r\n    });\r\n\r\n\r\n    try {\r\n      reader.readAsDataURL(blob);\r\n    } catch (e) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject();\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public storagePutB64String(db: IDBDatabase, fileName: string, b64string: string) {\r\n    try {\r\n      var objectStore = db.transaction([this.storeName], 'readwrite')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.put(b64string, fileName);\r\n    } catch(error) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      request.onsuccess = function(event) {\r\n        resolve();\r\n      };\r\n\r\n      request.onerror = reject;\r\n    });\r\n  }\r\n\r\n  public getBlobSize(blob: any) {\r\n    return blob.size || blob.byteLength || blob.length;\r\n  } */\r\n\r\n  public get<T>(entryName: string[], storeName?: StoreName): Promise<T[]>;\r\n  public get<T>(entryName: string, storeName?: StoreName): Promise<T>;\r\n  public get<T>(entryName: string | string[], storeName?: StoreName): Promise<T> | Promise<T[]> {\r\n    // return Promise.reject();\r\n\r\n    if(!Array.isArray(entryName)) {\r\n      entryName = [].concat(entryName);\r\n    }\r\n\r\n    if(!entryName.length) {\r\n      return Promise.resolve([]) as any;\r\n    }\r\n\r\n    return this.getObjectStore<T>('readonly', (objectStore) => {\r\n      return (entryName as string[]).map((entryName) => objectStore.get(entryName));\r\n    }, DEBUG ? 'get: ' + entryName.join(', ') : '', storeName);\r\n  }\r\n\r\n  private getObjectStore<T>(\r\n    mode: IDBTransactionMode,\r\n    callback: (objectStore: IDBObjectStore) => IDBRequest | IDBRequest[],\r\n    log?: string,\r\n    storeName = this.storeName\r\n  ) {\r\n    let perf: number;\r\n\r\n    if(log) {\r\n      perf = performance.now();\r\n      this.log(log + ': start');\r\n    }\r\n\r\n    return this.idb.openDatabase().then((db) => {\r\n      return new Promise<T>((resolve, reject) => {\r\n        /* if(mode === 'readwrite') {\r\n          return;\r\n        } */\r\n\r\n        const transaction = db.transaction([storeName], mode);\r\n\r\n        const onError = () => {\r\n          clearTimeout(timeout);\r\n          reject(transaction.error);\r\n        };\r\n\r\n        // let resolved = false;\r\n        const onComplete = (/* what: string */) => {\r\n          clearTimeout(timeout);\r\n\r\n          if(log) {\r\n            this.log(log + ': end', performance.now() - perf/* , what */);\r\n          }\r\n\r\n          // if(resolved) {\r\n          //   return;\r\n          // }\r\n\r\n          // resolved = true;\r\n          const results = requests.map((r) => r.result);\r\n          resolve(isArray ? results : results[0]);\r\n        };\r\n\r\n        transaction.onerror = onError;\r\n\r\n        // * have to wait while clearing or setting something\r\n        const waitForTransactionComplete = mode === 'readwrite';\r\n        if(waitForTransactionComplete) {\r\n          transaction.oncomplete = () => onComplete(/* 'transaction' */);\r\n        }\r\n\r\n        const timeout = setTimeout(() => {\r\n          this.log.error('transaction not finished', transaction, log);\r\n        }, 10000);\r\n\r\n        /* transaction.addEventListener('abort', (e) => {\r\n          //handleError();\r\n          this.log.error('IndexedDB: transaction abort!', transaction.error);\r\n        }); */\r\n\r\n        const callbackResult = callback(transaction.objectStore(storeName));\r\n\r\n        const isArray = Array.isArray(callbackResult);\r\n        const requests: IDBRequest[] = isArray ? callbackResult : [].concat(callbackResult) as any;\r\n\r\n        if(waitForTransactionComplete) {\r\n          return;\r\n        }\r\n\r\n        const length = requests.length;\r\n        let left = length;\r\n\r\n        const onRequestFinished = () => {\r\n          if(transaction.error) {\r\n            return;\r\n          }\r\n\r\n          if(!--left) {\r\n            onComplete(/* 'requests' */);\r\n          }\r\n        };\r\n\r\n        for(let i = 0; i < length; ++i) {\r\n          const request = requests[i];\r\n          request.onerror = onError;\r\n          request.onsuccess = onRequestFinished;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public getAll<T>(storeName?: StoreName): Promise<T[]> {\r\n    return this.getObjectStore<T[]>('readonly', (objectStore) => objectStore.getAll(), DEBUG ? 'getAll' : '', storeName);\r\n  }\r\n\r\n  /* public getAllKeys(): Promise<Array<string>> {\r\n    console.time('getAllEntries');\r\n    return this.openDatabase().then((db) => {\r\n      var objectStore = db.transaction([this.storeName], 'readonly')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.getAllKeys();\r\n\r\n      return new Promise((resolve, reject) => {\r\n        request.onsuccess = function(event) {\r\n          // @ts-ignore\r\n          var result = event.target.result;\r\n          resolve(result);\r\n          console.timeEnd('getAllEntries');\r\n        }\r\n\r\n        request.onerror = reject;\r\n      });\r\n    });\r\n  } */\r\n\r\n  /* public isFileExists(fileName: string): Promise<boolean> {\r\n    console.time('isFileExists');\r\n    return this.openDatabase().then((db) => {\r\n      var objectStore = db.transaction([this.storeName], 'readonly')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.openCursor(fileName);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        request.onsuccess = function(event) {\r\n          // @ts-ignore\r\n          var cursor = event.target.result;\r\n          resolve(!!cursor);\r\n          console.timeEnd('isFileExists');\r\n        }\r\n\r\n        request.onerror = reject;\r\n      });\r\n    });\r\n  } */\r\n\r\n  /* public getFileWriter(fileName: string, mimeType: string) {\r\n    var fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\r\n      return this.saveFile(fileName, blob);\r\n    });\r\n\r\n    return Promise.resolve(fakeWriter);\r\n  } */\r\n}\r\n","import type ENVIRONMENT from '.';\n\nlet environment: typeof ENVIRONMENT;\nexport function getEnvironment() {\n  return environment;\n}\n\nexport function setEnvironment(env: typeof environment) {\n  return environment = env;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Message, StickerSet, Update, NotifyPeer, PeerNotifySettings, PollResults, Poll, WebPage, GroupCall, GroupCallParticipant, ReactionCount, MessagePeerReaction, PhoneCall, Config, Reaction} from '../layer';\nimport type {AppMessagesManager, Dialog, MessagesStorageKey, MyMessage} from './appManagers/appMessagesManager';\nimport type {MyDialogFilter} from './storages/filters';\nimport type {Folder} from './storages/dialogs';\nimport type {UserTyping} from './appManagers/appProfileManager';\nimport type {MyDraftMessage} from './appManagers/appDraftsManager';\nimport type {ConnectionStatusChange} from './mtproto/connectionStatus';\nimport type {GroupCallId} from './appManagers/appGroupCallsManager';\nimport type {AppManagers} from './appManagers/managers';\nimport type {State} from '../config/state';\nimport type {Progress} from './appManagers/appDownloadManager';\nimport type {CallId} from './appManagers/appCallsManager';\nimport type {MyDocument} from './appManagers/appDocsManager';\nimport {NULL_PEER_ID, UserAuth} from './mtproto/mtproto_config';\nimport EventListenerBase from '../helpers/eventListenerBase';\nimport {MOUNT_CLASS_TO} from '../config/debug';\nimport MTProtoMessagePort from './mtproto/mtprotoMessagePort';\nimport {IS_WORKER} from '../helpers/context';\nimport {MTAppConfig} from './mtproto/appConfig';\n\nexport type BroadcastEvents = {\n  'chat_full_update': ChatId,\n  'chat_update': ChatId,\n\n  'channel_update': ChatId,\n\n  'user_update': UserId,\n  'user_auth': UserAuth,\n  'user_full_update': UserId,\n\n  'peer_pinned_messages': {peerId: PeerId, mids?: number[], pinned?: boolean, unpinAll?: true},\n  'peer_pinned_hidden': {peerId: PeerId, maxId: number},\n  'peer_typings': {peerId: PeerId, typings: UserTyping[]},\n  'peer_block': {peerId: PeerId, blocked: boolean},\n  'peer_title_edit': PeerId,\n  'peer_bio_edit': PeerId,\n  'peer_deleted': PeerId, // left chat, deleted user dialog, left channel\n  'peer_full_update': PeerId,\n\n  'filter_delete': MyDialogFilter,\n  'filter_update': MyDialogFilter,\n  'filter_new': MyDialogFilter,\n  'filter_order': number[],\n\n  'folder_unread': Omit<Folder, 'dialogs' | 'dispatchUnreadTimeout'>,\n\n  'dialog_draft': {peerId: PeerId, dialog: Dialog, drop: boolean, draft: MyDraftMessage | undefined},\n  'dialog_unread': {peerId: PeerId, dialog: Dialog},\n  'dialog_flush': {peerId: PeerId, dialog: Dialog},\n  'dialog_drop': {peerId: PeerId, dialog?: Dialog},\n  'dialog_migrate': {migrateFrom: PeerId, migrateTo: PeerId},\n  // 'dialog_top': Dialog,\n  'dialog_notify_settings': Dialog,\n  // 'dialog_order': {dialog: Dialog, pos: number},\n  'dialogs_multiupdate': Map<PeerId, Dialog>,\n\n  'history_append': {storageKey: MessagesStorageKey, message: Message.message},\n  'history_update': {storageKey: MessagesStorageKey, message: MyMessage, sequential?: boolean},\n  'history_reply_markup': {peerId: PeerId},\n  'history_multiappend': MyMessage,\n  'history_delete': {peerId: PeerId, msgs: Set<number>},\n  'history_forbidden': PeerId,\n  'history_reload': PeerId,\n  // 'history_request': void,\n\n  'message_edit': {storageKey: MessagesStorageKey, peerId: PeerId, mid: number, message: MyMessage},\n  'message_sent': {storageKey: MessagesStorageKey, tempId: number, tempMessage: any, mid: number, message: MyMessage},\n  'message_error': {storageKey: MessagesStorageKey, tempId: number, error: ApiError},\n  'messages_views': {peerId: PeerId, mid: number, views: number}[],\n  'messages_reactions': {message: Message.message, changedResults: ReactionCount[]}[],\n  'messages_pending': void,\n  'messages_read': void,\n  'messages_downloaded': {peerId: PeerId, mids: number[]},\n  'messages_media_read': {peerId: PeerId, mids: number[]},\n\n  'replies_updated': Message.message,\n\n  'scheduled_new': Message.message,\n  'scheduled_delete': {peerId: PeerId, mids: number[]},\n\n  'album_edit': {peerId: PeerId, groupId: string, deletedMids: number[], messages: Message.message[]},\n\n  'stickers_installed': StickerSet.stickerSet,\n  'stickers_deleted': StickerSet.stickerSet,\n  'stickers_updated': {type: 'recent' | 'faved', stickers: MyDocument[]},\n  'stickers_top': Long,\n  'sticker_updated': {type: 'recent' | 'faved', document: MyDocument, faved: boolean},\n\n  'state_cleared': void,\n  'state_synchronized': ChatId | void,\n  'state_synchronizing': ChatId | void,\n\n  'contacts_update': UserId,\n  'avatar_update': PeerId,\n  'poll_update': {poll: Poll, results: PollResults},\n  'invalidate_participants': ChatId,\n  // 'channel_settings': {channelId: number},\n  'webpage_updated': {id: WebPage.webPage['id'], msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[]},\n\n  'connection_status_change': ConnectionStatusChange,\n  'settings_updated': {key: string, value: any, settings: State['settings']},\n  'draft_updated': {peerId: PeerId, threadId: number, draft: MyDraftMessage | undefined, force?: boolean},\n\n  'background_change': void,\n\n  'privacy_update': Update.updatePrivacy,\n\n  'notify_settings': Update.updateNotifySettings,\n  'notify_peer_type_settings': {key: Exclude<NotifyPeer['_'], 'notifyPeer'>, settings: PeerNotifySettings},\n\n  'notification_reset': string,\n  'notification_cancel': string,\n\n  'language_change': string,\n\n  'theme_change': void,\n\n  'media_play': void,\n\n  'emoji_recent': AppEmoji,\n\n  'download_progress': Progress,\n  'document_downloading': DocId,\n  'document_downloaded': DocId,\n\n  'choosing_sticker': boolean\n\n  'group_call_update': GroupCall,\n  'group_call_participant': {groupCallId: GroupCallId, participant: GroupCallParticipant},\n  // 'group_call_video_track_added': {instance: GroupCallInstance}\n\n  'call_update': PhoneCall,\n  'call_signaling': {callId: CallId, data: Uint8Array},\n\n  'quick_reaction': Reaction,\n\n  'service_notification': Update.updateServiceNotification,\n\n  'logging_out': void,\n\n  'payment_sent': {peerId: PeerId, mid: number, receiptMessage: Message.messageService}\n\n  'premium_toggle': boolean,\n\n  'config': Config,\n  'app_config': MTAppConfig\n};\n\nexport type BroadcastEventsListeners = {\n  [name in keyof BroadcastEvents]: (e: BroadcastEvents[name]) => void\n};\n\nexport class RootScope extends EventListenerBase<BroadcastEventsListeners> {\n  public myId: PeerId;\n  private connectionStatus: {[name: string]: ConnectionStatusChange};\n  public settings: State['settings'];\n  public managers: AppManagers;\n  public premium: boolean;\n\n  constructor() {\n    super();\n\n    this.myId = NULL_PEER_ID;\n    this.connectionStatus = {};\n    this.premium = false;\n\n    this.addEventListener('user_auth', ({id}) => {\n      this.myId = id.toPeerId();\n    });\n\n    this.addEventListener('premium_toggle', (isPremium) => {\n      this.premium = isPremium;\n    });\n\n    this.addEventListener('connection_status_change', (status) => {\n      this.connectionStatus[status.name] = status;\n    });\n\n    this.dispatchEvent = (e, ...args) => {\n      super.dispatchEvent(e, ...args);\n      MTProtoMessagePort.getInstance().invokeVoid('event', {name: e as string, args});\n    };\n\n    if(!IS_WORKER) {\n      this.addEventListener('settings_updated', ({settings}) => {\n        this.settings = settings;\n      });\n    }\n  }\n\n  public getConnectionStatus() {\n    return this.connectionStatus;\n  }\n\n  public getPremium() {\n    return this.premium;\n  }\n\n  public dispatchEventSingle(...args: any[]) {\n    // @ts-ignore\n    super.dispatchEvent(...args);\n  }\n}\n\nconst rootScope = new RootScope();\nMOUNT_CLASS_TO.rootScope = rootScope;\nexport default rootScope;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {State} from '../../config/state';\nimport rootScope from '../rootScope';\nimport stateStorage from '../stateStorage';\nimport setDeepProperty from '../../helpers/object/setDeepProperty';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\nexport class AppStateManager {\n  private state: State = {} as any;\n  private storage = stateStorage;\n\n  // ! for mtproto worker use only\n  public newVersion: string;\n  public oldVersion: string;\n  public userId: UserId;\n\n  public getState() {\n    return Promise.resolve(this.state);\n  }\n\n  public setByKey(key: string, value: any) {\n    setDeepProperty(this.state, key, value);\n\n    const first = key.split('.')[0] as keyof State;\n    if(first === 'settings') {\n      rootScope.dispatchEvent('settings_updated', {key, value, settings: this.state.settings});\n    }\n\n    this.pushToState(first, this.state[first]);\n  }\n\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true, onlyLocal?: boolean) {\n    if(direct) {\n      this.state[key] = value;\n    }\n\n    this.setKeyValueToStorage(key, value, onlyLocal);\n  }\n\n  public setKeyValueToStorage<T extends keyof State>(key: T, value: State[T] = this.state[key], onlyLocal?: boolean) {\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {name: 'state', key, value});\n\n    this.storage.set({\n      [key]: value\n    }, onlyLocal);\n  }\n\n  /* public resetState() {\n    for(let i in this.state) {\n      // @ts-ignore\n      this.state[i] = false;\n    }\n    sessionStorage.set(this.state).then(() => {\n      location.reload();\n    });\n  } */\n}\n\nconst appStateManager = new AppStateManager();\nexport default appStateManager;\n","import getDeepProperty from './getDeepProperty';\n\nexport default function setDeepProperty(object: any, key: string, value: any) {\n  const splitted = key.split('.');\n  getDeepProperty(object, splitted.slice(0, -1).join('.'))[splitted.pop()] = value;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport pause from '../../../helpers/schedulers/pause';\nimport {DcId} from '../../../types';\nimport {logger, LogTypes} from '../../logger';\nimport type MTPNetworker from '../networker';\nimport MTTransport from './transport';\nimport Modes from '../../../config/modes';\n\n                   \nimport transportController from './controller';\n// import networkStats from '../networkStats';\n         \n\nexport default class HTTP implements MTTransport {\n  public networker: MTPNetworker;\n  private log: ReturnType<typeof logger>;\n\n  private pending: Array<{\n    resolve: (body: Uint8Array) => void,\n    reject: any,\n    body: Uint8Array\n  }> = [];\n  private releasing: boolean;\n\n  public connected: boolean;\n  private destroyed: boolean;\n  private debug: boolean;\n\n  constructor(protected dcId: DcId, protected url: string, logSuffix: string) {\n    this.debug = Modes.debug && false;\n\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n\n    this.log = logger(`HTTP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connected = false;\n  }\n\n  public _send(body: Uint8Array, mode?: RequestMode) {\n    const length = body.length;\n    this.debug && this.log.debug('-> body length to send:', length);\n\n    // networkStats.addSent(this.dcId, length);\n    return fetch(this.url, {method: 'POST', body, mode}).then((response) => {\n      if(response.status !== 200 && !mode) {\n        response.arrayBuffer().then((buffer) => {\n          this.log.error('not 200',\n            new TextDecoder('utf-8').decode(new Uint8Array(buffer)));\n        });\n\n        throw response;\n      }\n\n      this.setConnected(true);\n\n      // * test resending by dropping random request\n      // if(Math.random() > .5) {\n      //   throw 'asd';\n      // }\n\n      return response.arrayBuffer().then((buffer) => {\n        // networkStats.addReceived(this.dcId, buffer.byteLength);\n        return new Uint8Array(buffer);\n      });\n    }, (err) => {\n      this.setConnected(false);\n      throw err;\n    });\n  }\n\n  private setConnected(connected: boolean) {\n    if(this.connected === connected || this.destroyed) {\n      return;\n    }\n\n    this.connected = connected;\n\n                       \n    transportController.setTransportValue('https', connected);\n             \n  }\n\n  public destroy() {\n    this.setConnected(false);\n    this.destroyed = true;\n    this.pending.forEach((pending) => pending.reject());\n    this.pending.length = 0;\n  }\n\n  public send(body: Uint8Array) {\n    if(this.networker) {\n      return this._send(body);\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending() {\n    if(this.releasing) return;\n\n    this.releasing = true;\n    // this.log('-> messages to send:', this.pending.length);\n    for(let i = 0; i < this.pending.length; ++i) {\n      const pending = this.pending[i];\n      const {body, resolve} = pending;\n\n      try {\n        const result = await this._send(body);\n        resolve(result);\n        this.pending.splice(i, 1);\n      } catch(err) {\n        this.log.error('Send plain request error:', err);\n        await pause(5000);\n      }\n\n      --i;\n    }\n\n    this.releasing = false;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {logger, LogTypes} from '../../logger';\r\nimport Modes from '../../../config/modes';\r\nimport EventListenerBase from '../../../helpers/eventListenerBase';\r\nimport {MTConnection} from './transport';\r\n\r\n// let closeSocketBefore = Date.now() + 30e3;\r\n// let closeSocketAfter = Date.now() + 10e3;\r\n\r\nexport default class Socket extends EventListenerBase<{\r\n  open: () => void,\r\n  message: (buffer: ArrayBuffer) => any,\r\n  close: () => void,\r\n}> implements MTConnection {\r\n  private ws: WebSocket;\r\n  private log: ReturnType<typeof logger>;\r\n  private debug = Modes.debug && false;\r\n\r\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\r\n    super();\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n    this.connect();\r\n\r\n    return this;\r\n  }\r\n\r\n  private removeListeners() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.ws.removeEventListener('open', this.handleOpen);\r\n    this.ws.removeEventListener('close', this.handleClose);\r\n    this.ws.removeEventListener('error', this.handleError);\r\n    this.ws.removeEventListener('message', this.handleMessage);\r\n    this.ws = undefined;\r\n  }\r\n\r\n  private connect() {\r\n    this.ws = new WebSocket(this.url, 'binary');\r\n    this.ws.binaryType = 'arraybuffer';\r\n    this.ws.addEventListener('open', this.handleOpen);\r\n    this.ws.addEventListener('close', this.handleClose);\r\n    this.ws.addEventListener('error', this.handleError);\r\n    this.ws.addEventListener('message', this.handleMessage);\r\n\r\n    // if(Date.now() < closeSocketBefore) {\r\n    // if(Date.now() >= closeSocketAfter) {\r\n    //   this.ws.close();\r\n    // }\r\n  }\r\n\r\n  public close() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.log('close execution');\r\n\r\n    try {\r\n      this.ws.close();\r\n    } catch(err) {\r\n\r\n    }\r\n    this.handleClose();\r\n  }\r\n\r\n  private handleOpen = () => {\r\n    this.log('opened');\r\n\r\n    this.debug && this.log.debug('sending init packet');\r\n    this.dispatchEvent('open');\r\n  };\r\n\r\n  private handleError = (e: Event) => {\r\n    this.log.error('handleError', e);\r\n    this.close();\r\n  };\r\n\r\n  private handleClose = (e?: CloseEvent) => {\r\n    this.log('closed', e/* , this.pending, this.ws.bufferedAmount */);\r\n\r\n    this.removeListeners();\r\n    this.dispatchEvent('close');\r\n  };\r\n\r\n  private handleMessage = (event: MessageEvent) => {\r\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\r\n\r\n    this.dispatchEvent('message', event.data as ArrayBuffer);\r\n  };\r\n\r\n  public send = (body: Uint8Array) => {\r\n    this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n    this.ws.send(body);\r\n  };\r\n}\r\n","export default function randomize<T extends ArrayBufferView>(arr: T) {\n  if(crypto && 'getRandomValues' in crypto) {\n    crypto.getRandomValues(arr);\n  } else {\n    throw new Error('NO_SECURE_RANDOM');\n  }\n\n  return arr;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import aesjs from 'aes-js';\r\nimport randomize from '../../../helpers/array/randomize';\r\nimport cryptoMessagePort from '../../crypto/cryptoMessagePort';\r\nimport {Codec} from './codec';\r\n\r\n/*\r\n@cryptography/aes не работает с массивами которые не кратны 4, поэтому использую intermediate а не abridged\r\n*/\r\nexport default class Obfuscation {\r\n  /* private enc: aesjs.ModeOfOperation.ModeOfOperationCTR;\r\n  private dec: aesjs.ModeOfOperation.ModeOfOperationCTR; */\r\n\r\n  private id: number;\r\n  private idPromise: Promise<Obfuscation['id']>;\r\n  private process: (data: Uint8Array, operation: 'encrypt' | 'decrypt') => ReturnType<Obfuscation['_process']>;\r\n\r\n  // private cryptoEncKey: CryptoKey;\r\n  // private cryptoDecKey: CryptoKey;\r\n  // private cryptoKey: CryptoKey;\r\n\r\n  // private encIv: Uint8Array;\r\n  // private decIv: Uint8Array;\r\n\r\n  // private decIvCounter: Counter;\r\n\r\n  public async init(codec: Codec) {\r\n    if(this.idPromise !== undefined) {\r\n      this.release();\r\n    }\r\n\r\n    const initPayload = new Uint8Array(64);\r\n    randomize(initPayload);\r\n\r\n    while(true) {\r\n      const val = (initPayload[3] << 24) | (initPayload[2] << 16) | (initPayload[1] << 8) | initPayload[0];\r\n      const val2 = (initPayload[7] << 24) | (initPayload[6] << 16) | (initPayload[5] << 8) | initPayload[4];\r\n      if(initPayload[0] !== 0xef &&\r\n          val !== 0x44414548 &&\r\n          val !== 0x54534f50 &&\r\n          val !== 0x20544547 &&\r\n          val !== 0x4954504f &&\r\n          val !== 0xeeeeeeee &&\r\n          val !== 0xdddddddd &&\r\n          val2 !== 0x00000000) {\r\n        // initPayload[56] = initPayload[57] = initPayload[58] = initPayload[59] = transport;\r\n        break;\r\n      }\r\n      randomize(initPayload);\r\n    }\r\n\r\n    // //////////////////////initPayload.subarray(60, 62).hex = dcId;\r\n    /* initPayload.set(new Uint8Array([161, 208, 67, 71, 118, 109, 20, 111, 113, 255, 134, 10, 159, 241, 7, 44, 217, 82, 187, 76, 108, 131, 200, 186, 33, 57, 177, 251, 52, 34, 18, 54, 65, 105, 37, 89, 38, 20, 47, 168, 126, 181, 24, 138, 212, 68, 60, 150, 225, 37, 181, 4, 201, 50, 72, 151, 168, 143, 204, 169, 81, 187, 241, 23]));\r\n    console.log('initPayload', initPayload); */\r\n\r\n    const reversedPayload = initPayload.slice().reverse();\r\n\r\n    const encKey = initPayload.slice(8, 40);\r\n    const encIv = /* this.encIv =  */initPayload.slice(40, 56);\r\n    const decKey = reversedPayload.slice(8, 40);\r\n    const decIv = /* this.decIv =  */reversedPayload.slice(40, 56);\r\n\r\n    /* this.enc = new aesjs.ModeOfOperation.ctr(encKey, new aesjs.Counter(encIv as any));\r\n    this.dec = new aesjs.ModeOfOperation.ctr(decKey, new aesjs.Counter(decIv as any)); */\r\n\r\n    // console.log('encKey', encKey.hex, encIv.hex);\r\n    // console.log('decKey', decKey.hex, decIv.hex);\r\n\r\n    const idPromise = this.idPromise = cryptoMessagePort.invokeCrypto('aes-ctr-prepare', {\r\n      encKey,\r\n      encIv,\r\n      decKey,\r\n      decIv\r\n    });\r\n\r\n    this.process = async(data, operation) => {\r\n      await idPromise;\r\n      return this._process(data, operation);\r\n    };\r\n\r\n    this.id = await idPromise;\r\n\r\n    this.process = this._process;\r\n\r\n    // this.decIvCounter = new Counter(this.decIv);\r\n    /* const key = this.cryptoEncKey = await subtle.importKey(\r\n      'raw',\r\n      encKey,\r\n      {name: 'AES-CTR'},\r\n      false,\r\n      ['encrypt']\r\n    ); */\r\n\r\n    // this.cryptoDecKey = await subtle.importKey(\r\n    //   'raw',\r\n    //   decKey,\r\n    //   {name: 'AES-CTR'},\r\n    //   false,\r\n    //   ['encrypt']\r\n    // );\r\n\r\n    // this.cryptoKey = await subtle.importKey(\r\n    //   'raw',\r\n    //   encKey,\r\n    //   {name: 'AES-CTR'},\r\n    //   false,\r\n    //   ['encrypt', 'decrypt']\r\n    // );\r\n\r\n    initPayload.set(codec.obfuscateTag, 56);\r\n    const encrypted = await this.encode(initPayload.slice());\r\n\r\n    // console.log('encrypted', encrypted);\r\n\r\n    initPayload.set(encrypted.slice(56, 64), 56);\r\n\r\n    return initPayload;\r\n  }\r\n\r\n  /* public encode(payload: Uint8Array) {\r\n    let startTime = performance.now();\r\n    let res = this.enc.encrypt(payload);\r\n    let time = performance.now() - startTime;\r\n\r\n    try {\r\n      startTime = performance.now();\r\n      let arr = this.encNew.encrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      let time2 = performance.now() - startTime;\r\n      console.log('Obfuscation: encode comparison:', res, arr, resNew, res.hex === resNew.hex, time2 < time);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    let res = this.dec.encrypt(payload);\r\n\r\n    try {\r\n      let arr = this.decNew.decrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      console.log('Obfuscation: decode comparison:', res, arr, resNew, res.hex === resNew.hex);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n\r\n    return res;\r\n  } */\r\n\r\n  private _process = (data: Uint8Array, operation: 'encrypt' | 'decrypt') => {\r\n    return cryptoMessagePort.invokeCryptoNew({\r\n      method: 'aes-ctr-process',\r\n      args: [{id: this.id, data, operation}],\r\n      transfer: [data.buffer]\r\n    }) as Promise<Uint8Array>;\r\n  };\r\n\r\n  public encode(payload: Uint8Array) {\r\n    /* return subtle.encrypt({\r\n        name: 'AES-CTR',\r\n        counter: this.encIv,\r\n        length: 64\r\n      },\r\n      this.cryptoEncKey,\r\n      payload\r\n    ); */\r\n    return this.process(payload, 'encrypt');\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    return this.process(payload, 'decrypt');\r\n  }\r\n\r\n  public async release() {\r\n    const idPromise = this.idPromise;\r\n    if(idPromise === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.id = undefined;\r\n    this.idPromise = undefined;\r\n\r\n    const id = await idPromise;\r\n    cryptoMessagePort.invokeCrypto('aes-ctr-destroy', id);\r\n  }\r\n\r\n  public destroy() {\r\n    this.release();\r\n  }\r\n\r\n  // public encode(payload: Uint8Array) {\r\n  //   let res = this.encNew.encrypt(payload);\r\n  //   let bytes = new Uint8Array(bytesFromWordss(res));\r\n\r\n  //   return bytes;\r\n  // }\r\n\r\n  // public async decode(payload: Uint8Array) {\r\n  //   const counter = this.decIvCounter.counter.slice();\r\n  //   this.decIvCounter.increment();\r\n\r\n  //   const n: ArrayBuffer = await subtle.encrypt({\r\n  //       name: 'AES-CTR',\r\n  //       counter: counter,\r\n  //       length: 64\r\n  //     },\r\n  //     this.cryptoDecKey,\r\n  //     payload\r\n  //   );\r\n\r\n  //   const decoded = this.decNew.update(payload);\r\n\r\n  //   console.log('decode', bytesToHex(decoded), 'new', n, bytesToHex(new Uint8Array(n)));\r\n\r\n  //   return decoded;\r\n  // }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import { bytesFromHex, addPadding } from \"../../bin_utils\";\r\nimport {Codec} from './codec';\r\n\r\nclass AbridgedPacketCodec implements Codec {\r\n  public tag = 0xef;\r\n  public obfuscateTag = new Uint8Array([this.tag, this.tag, this.tag, this.tag]);\r\n\r\n  public encodePacket(data: Uint8Array) {\r\n    const len = data.byteLength >> 2;\r\n    let header: Uint8Array;\r\n    if(len < 127) {\r\n      header = new Uint8Array([len]);\r\n    } else { // Length: payload length, divided by four, and encoded as 3 length bytes (little endian)\r\n      // header = new Uint8Array([0x7f, ...addPadding(bytesFromHex(len.toString(16)).reverse(), 3, true)/* .reverse() */]);\r\n      header = new Uint8Array([0x7f, len & 0xFF, (len >> 8) & 0xFF, (len >> 16) & 0xFF]);\r\n      // console.log('got nobody cause im braindead', header, len);\r\n    }\r\n\r\n    return header.concat(data);\r\n    // return new Uint8Array([...header, ...data]);\r\n  }\r\n\r\n  public readPacket(data: Uint8Array) {\r\n    let length = data[0];\r\n    if(length >= 127) { // 0x7f\r\n      length = data[1] | (data[2] << 8) | (data[3] << 16);\r\n\r\n      return data.slice(4, length << 2 + 1); // need +1\r\n    }\r\n\r\n    return data.slice(1, length << 2 + 1); // need +1\r\n  }\r\n}\r\n\r\nexport default new AbridgedPacketCodec();\r\n","export default function bytesToHex(bytes: ArrayLike<number>) {\n  const length = bytes.length;\n  const arr: string[] = new Array(length);\n  for(let i = 0; i < length; ++i) {\n    arr[i] = (bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16);\n  }\n  return arr.join('');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from '../../../config/modes';\nimport {logger, LogTypes} from '../../logger';\nimport MTPNetworker from '../networker';\nimport Obfuscation from './obfuscation';\nimport MTTransport, {MTConnection, MTConnectionConstructable} from './transport';\n// import intermediatePacketCodec from './intermediate';\nimport abridgedPacketCodec from './abridged';\n// import paddedIntermediatePacketCodec from './padded';\nimport {ConnectionStatus} from '../connectionStatus';\n\n                   \nimport transportController from './controller';\nimport bytesToHex from '../../../helpers/bytes/bytesToHex';\n// import networkStats from '../networkStats';\nimport ctx from '../../../environment/ctx';\n         \n\nexport default class TcpObfuscated implements MTTransport {\n  private codec = abridgedPacketCodec;\n  private obfuscation = new Obfuscation();\n  public networker: MTPNetworker;\n\n  private pending: Array<Partial<{\n    resolve: any,\n    reject: any,\n    body: Uint8Array,\n    encoded?: Uint8Array,\n    bodySent: boolean\n  }>> = [];\n\n  private debug = Modes.debug && false/* true */;\n  private log: ReturnType<typeof logger>;\n  public connected = false;\n  private lastCloseTime: number;\n  public connection: MTConnection;\n\n  private autoReconnect = true;\n  private reconnectTimeout: number;\n  private releasingPending: boolean;\n\n  // private debugPayloads: MTPNetworker['debugRequests'] = [];\n\n  constructor(\n    private Connection: MTConnectionConstructable,\n    private dcId: number,\n    private url: string,\n    private logSuffix: string,\n    private retryTimeout: number\n  ) {\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`TCP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connect();\n  }\n\n  private onOpen = async() => {\n    this.connected = true;\n\n                       \n    transportController.setTransportOpened('websocket');\n             \n\n    const initPayload = await this.obfuscation.init(this.codec);\n    if(!this.connected) {\n      return;\n    }\n\n    this.connection.send(initPayload);\n\n    if(this.networker) {\n      this.pending.length = 0; // ! clear queue and reformat messages to container, because if sending simultaneously 10+ messages, connection will die\n      this.networker.setConnectionStatus(ConnectionStatus.Connected);\n      this.networker.cleanupSent();\n      this.networker.resend();\n    }/*  else {\n      for(const pending of this.pending) {\n        if(pending.encoded && pending.body) {\n          pending.encoded = this.encodeBody(pending.body);\n        }\n      }\n    } */\n\n    setTimeout(() => {\n      this.releasePending();\n    }, 0);\n  };\n\n  private onMessage = async(buffer: ArrayBuffer) => {\n    // networkStats.addReceived(this.dcId, buffer.byteLength);\n\n    let data = await this.obfuscation.decode(new Uint8Array(buffer));\n    data = this.codec.readPacket(data);\n\n    if(this.networker) { // authenticated!\n      // this.pending = this.pending.filter((p) => p.body); // clear pending\n\n      this.debug && this.log.debug('redirecting to networker', data.length);\n      this.networker.parseResponse(data).then((response) => {\n        this.debug && this.log.debug('redirecting to networker response:', response);\n\n        try {\n          this.networker.processMessage(response.response, response.messageId, response.sessionId);\n        } catch(err) {\n          this.log.error('handleMessage networker processMessage error', err);\n        }\n\n        // this.releasePending();\n      }).catch((err) => {\n        this.log.error('handleMessage networker parseResponse error', err);\n      });\n\n      // this.dd();\n      return;\n    }\n\n    // console.log('got hex:', data.hex);\n    const pending = this.pending.shift();\n    if(!pending) {\n      this.debug && this.log.debug('no pending for res:', bytesToHex(data));\n      return;\n    }\n\n    pending.resolve(data);\n  };\n\n  private onClose = () => {\n    this.clear();\n\n    let needTimeout: number, retryAt: number;\n    if(this.autoReconnect) {\n      const time = Date.now();\n      const diff = time - this.lastCloseTime;\n      needTimeout = !isNaN(diff) && diff < this.retryTimeout ? this.retryTimeout - diff : 0;\n      retryAt = time + needTimeout;\n    }\n\n    if(this.networker) {\n      this.networker.setConnectionStatus(ConnectionStatus.Closed, retryAt);\n      this.pending.length = 0;\n    }\n\n    if(this.autoReconnect) {\n      this.log('will try to reconnect after timeout:', needTimeout / 1000);\n      this.reconnectTimeout = ctx.setTimeout(this.reconnect, needTimeout);\n    } else {\n      this.log('reconnect isn\\'t needed');\n    }\n  };\n\n  public clear() {\n                       \n    if(this.connected) {\n      transportController.setTransportClosed('websocket');\n    }\n             \n\n    this.connected = false;\n\n    if(this.connection) {\n      this.connection.removeEventListener('open', this.onOpen);\n      this.connection.removeEventListener('close', this.onClose);\n      this.connection.removeEventListener('message', this.onMessage);\n      this.connection = undefined;\n    }\n  }\n\n  /**\n   * invoke only when closed\n   */\n  public reconnect = () => {\n    if(this.reconnectTimeout !== undefined) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = undefined;\n    }\n\n    if(this.connection) {\n      return;\n    }\n\n    this.log('trying to reconnect...');\n    this.lastCloseTime = Date.now();\n\n    if(!this.networker) {\n      for(const pending of this.pending) {\n        if(pending.bodySent) {\n          pending.bodySent = false;\n        }\n      }\n    } else {\n      this.networker.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.connect();\n  }\n\n  public forceReconnect() {\n    this.close();\n    this.reconnect();\n  }\n\n  public destroy() {\n    this.setAutoReconnect(false);\n    this.close();\n\n    if(this.obfuscation) {\n      this.obfuscation.destroy();\n    }\n\n    this.pending.forEach((pending) => {\n      if(pending.reject) {\n        pending.reject();\n      }\n    });\n    this.pending.length = 0;\n  }\n\n  public close() {\n    const connection = this.connection;\n    if(connection) {\n      const connected = this.connected;\n      this.clear();\n      if(connected) { // wait for buffered messages if they are there\n        connection.addEventListener('message', this.onMessage);\n        connection.addEventListener('close', () => {\n          connection.removeEventListener('message', this.onMessage);\n        }, {once: true});\n        connection.close();\n      }\n    }\n  }\n\n  /**\n   * Will connect if enable and disconnected \\\n   * Will reset reconnection timeout if disable\n   */\n  public setAutoReconnect(enable: boolean) {\n    this.autoReconnect = enable;\n\n    if(!enable) {\n      if(this.reconnectTimeout !== undefined) {\n        clearTimeout(this.reconnectTimeout);\n        this.reconnectTimeout = undefined;\n      }\n    } else if(!this.connection && this.reconnectTimeout === undefined) {\n      this.reconnect();\n    }\n  }\n\n  private connect() {\n    if(this.connection) {\n      this.close();\n    }\n\n    this.connection = new this.Connection(this.dcId, this.url, this.logSuffix);\n    this.connection.addEventListener('open', this.onOpen);\n    this.connection.addEventListener('close', this.onClose);\n    this.connection.addEventListener('message', this.onMessage);\n  }\n\n  public changeUrl(url: string) {\n    if(this.url === url) {\n      return;\n    }\n\n    this.url = url;\n    this.forceReconnect();\n  }\n\n  private encodeBody(body: Uint8Array) {\n    const toEncode = this.codec.encodePacket(body);\n\n    // this.log('send before obf:', /* body.hex, nonce.hex, */ toEncode.hex);\n    const encoded = this.obfuscation.encode(toEncode);\n    // this.log('send after obf:', enc.hex);\n\n    return encoded;\n  }\n\n  public send(body: Uint8Array) {\n    this.debug && this.log.debug('-> body length to pending:', body.length);\n\n    const encoded: typeof body = /* this.connected ? this.encodeBody(body) :  */undefined;\n\n    // return;\n\n    if(this.networker) {\n      this.pending.push({body, encoded});\n      this.releasePending();\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body, encoded});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending(/* tt = false */) {\n    if(!this.connected || this.releasingPending) {\n      // this.connect();\n      return;\n    }\n\n    this.releasingPending = true;\n\n    /* if(!tt) {\n      this.releasePendingDebounced();\n      return;\n    } */\n\n    // this.log('-> messages to send:', this.pending.length);\n    let length = this.pending.length;\n    let sent = false;\n    // for(let i = length - 1; i >= 0; --i) {\n    for(let i = 0; i < length; ++i) {\n      const pending = this.pending[i];\n      if(!pending) {\n        break;\n      }\n\n      const {body, bodySent} = pending;\n      if(body && !bodySent) {\n        // this.debugPayloads.push({before: body.slice(), after: enc});\n\n        this.debug && this.log.debug('-> body length to send:', body.length);\n\n        // if(!encoded) {\n        //   encoded = pending.encoded = this.encodeBody(body);\n        // }\n\n        const encoded = pending.encoded ??= await this.encodeBody(body);\n        if(!this.connected) {\n          break;\n        }\n\n        // networkStats.addSent(this.dcId, encoded.byteLength);\n        this.connection.send(encoded);\n\n        if(!pending.resolve) { // remove if no response needed\n          this.pending.splice(i--, 1);\n          length--;\n        } else {\n          pending.bodySent = true;\n        }\n\n        sent = true;\n        // delete pending.body;\n      }\n    }\n\n    this.releasingPending = undefined;\n\n    if(this.pending.length && sent) {\n      this.releasePending();\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport MTTransport, {MTConnectionConstructable} from './transports/transport';\nimport Modes from '../../config/modes';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\n\n                       \nimport HTTP from './transports/http';\n         \n\n                     \nimport Socket from './transports/websocket';\nimport TcpObfuscated from './transports/tcpObfuscated';\nimport {IS_WEB_WORKER} from '../../helpers/context';\nimport {DcId} from '../../types';\nimport {getEnvironment} from '../../environment/utils';\n\n                                            \n                                                       \n         \n\n         \n\nexport type TransportType = 'websocket' | 'https' | 'http';\nexport type ConnectionType = 'client' | 'download' | 'upload';\ntype Servers = {\n  [transportType in TransportType]: {\n    [connectionType in ConnectionType]: {\n      [dcId: DcId]: MTTransport[]\n    }\n  }\n};\n\nconst TEST_SUFFIX = Modes.test ? '_test' : '';\nconst PREMIUM_SUFFIX = '_premium';\n\nexport function getTelegramConnectionSuffix(connectionType: ConnectionType) {\n  return connectionType === 'client' ? '' : '-1';\n}\n\n                     \nexport function constructTelegramWebSocketUrl(dcId: DcId, connectionType: ConnectionType, premium?: boolean) {\n  const suffix = getTelegramConnectionSuffix(connectionType);\n  const path = connectionType !== 'client' ? 'apiws' + TEST_SUFFIX + (premium ? PREMIUM_SUFFIX : '') : ('apiws' + TEST_SUFFIX);\n  const chosenServer = `wss://${App.suffix.toLowerCase()}ws${dcId}${suffix}.web.telegram.org/${path}`;\n\n  return chosenServer;\n}\n         \n\nexport class DcConfigurator {\n  private sslSubdomains = ['pluto', 'venus', 'aurora', 'vesta', 'flora'];\n\n  private dcOptions = Modes.test ?\n    [\n      {id: 1, host: '149.154.175.10',  port: 80},\n      {id: 2, host: '149.154.167.40',  port: 80},\n      {id: 3, host: '149.154.175.117', port: 80}\n    ] :\n    [\n      {id: 1, host: '149.154.175.50',  port: 80},\n      {id: 2, host: '149.154.167.50',  port: 80},\n      {id: 3, host: '149.154.175.100', port: 80},\n      {id: 4, host: '149.154.167.91',  port: 80},\n      {id: 5, host: '149.154.171.5',   port: 80}\n    ];\n\n  public chosenServers: Servers = {} as any;\n\n                       \n  private transportSocket = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\n    const chosenServer = constructTelegramWebSocketUrl(dcId, connectionType, premium);\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n\n    const retryTimeout = connectionType === 'client' ? 10000 : 10000;\n\n    let oooohLetMeLive: MTConnectionConstructable;\n                                                \n    oooohLetMeLive = Socket;\n            \n                                                                                                                                                   \n             \n\n    return new TcpObfuscated(oooohLetMeLive, dcId, chosenServer, logSuffix, retryTimeout);\n  };\n           \n\n                         \n  private transportHTTP = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\n    let chosenServer: string;\n    if(Modes.ssl || !Modes.http) {\n      const suffix = getTelegramConnectionSuffix(connectionType);\n      const subdomain = this.sslSubdomains[dcId - 1] + suffix;\n      const path = Modes.test ? 'apiw_test1' : 'apiw1';\n      chosenServer = 'https://' + subdomain + '.web.telegram.org/' + path;\n    } else {\n      for(const dcOption of this.dcOptions) {\n        if(dcOption.id === dcId) {\n          chosenServer = 'http://' + dcOption.host + (dcOption.port !== 80 ? ':' + dcOption.port : '') + '/apiw1';\n          break;\n        }\n      }\n    }\n\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n    return new HTTP(dcId, chosenServer, logSuffix);\n  };\n           \n\n  public chooseServer(\n    dcId: DcId,\n    connectionType: ConnectionType = 'client',\n    transportType: TransportType = Modes.transport,\n    reuse = true,\n    premium?: boolean\n  ) {\n    /* if(transportType === 'websocket' && !Modes.multipleConnections) {\n      connectionType = 'client';\n    } */\n\n    if(!this.chosenServers.hasOwnProperty(transportType)) {\n      this.chosenServers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const servers = this.chosenServers[transportType][connectionType];\n\n    if(!(dcId in servers)) {\n      servers[dcId] = [];\n    }\n\n    const transports = servers[dcId];\n\n    if(!transports.length || !reuse/*  || (upload && transports.length < 1) */) {\n      let transport: MTTransport;\n\n                                               \n      transport = (transportType === 'websocket' ? this.transportSocket : this.transportHTTP)(dcId, connectionType, premium);\n                            \n                                                                      \n              \n                                                                    \n               \n\n      if(!transport) {\n        console.error('No chosenServer!', dcId);\n        return null;\n      }\n\n      if(reuse) {\n        transports.push(transport);\n      }\n\n      return transport;\n    }\n\n    return transports[0];\n  }\n\n  public static removeTransport<T>(obj: any, transport: T) {\n    for(const transportType in obj) {\n      // @ts-ignore\n      for(const connectionType in obj[transportType]) {\n        // @ts-ignore\n        for(const dcId in obj[transportType][connectionType]) {\n          // @ts-ignore\n          const transports: T[] = obj[transportType][connectionType][dcId];\n          indexOfAndSplice(transports, transport);\n        }\n      }\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from '../../../config/app';\nimport deferredPromise from '../../../helpers/cancellablePromise';\nimport EventListenerBase from '../../../helpers/eventListenerBase';\nimport pause from '../../../helpers/schedulers/pause';\nimport {TransportType, DcConfigurator} from '../dcConfigurator';\nimport type HTTP from './http';\nimport type TcpObfuscated from './tcpObfuscated';\nimport MTTransport from './transport';\n\nexport class MTTransportController extends EventListenerBase<{\n  change: (opened: MTTransportController['opened']) => void,\n  transport: (type: TransportType) => void\n}> {\n  private opened: Map<TransportType, number>;\n  private transports: {[k in TransportType]?: MTTransport};\n  private pinging: boolean;\n  private dcConfigurator: DcConfigurator;\n\n  constructor() {\n    super(true);\n\n    this.opened = new Map();\n    /* this.addEventListener('change', (opened) => {\n      this.dispatchEvent('transport', opened.get('websocket') || !opened.get('https') ? 'websocket' : 'https');\n    }); */\n\n    this.addEventListener('change', (opened) => {\n      if(!opened.get('websocket')) {\n        this.waitForWebSocket();\n      }\n    });\n\n    // setTimeout(() => {\n    // this.waitForWebSocket();\n    // }, 200); // wait for first transport so won't have delay for first WS\n  }\n\n  public async pingTransports() {\n    const dcConfigurator = this.dcConfigurator ??= new DcConfigurator();\n    const timeout = 2000;\n    const transports: {[k in TransportType]?: MTTransport} = this.transports = {\n      https: dcConfigurator.chooseServer(App.baseDcId, 'client', 'https', false),\n      websocket: dcConfigurator.chooseServer(App.baseDcId, 'client', 'websocket', false)\n    };\n\n    const httpPromise = deferredPromise<boolean>();\n    ((this.transports.https as HTTP)._send(new Uint8Array(), 'no-cors') as any as Promise<any>)\n    .then(() => httpPromise.resolve(true), () => httpPromise.resolve(false));\n    setTimeout(() => httpPromise.resolve(false), timeout);\n\n    const websocketPromise = deferredPromise<boolean>();\n    const socket = transports.websocket as TcpObfuscated;\n    socket.setAutoReconnect(false);\n    socket.connection.addEventListener('close', () => websocketPromise.resolve(false), {once: true});\n    socket.connection.addEventListener('open', () => websocketPromise.resolve(true), {once: true});\n    setTimeout(() => {\n      if(websocketPromise.isFulfilled || websocketPromise.isRejected) {\n        return;\n      }\n\n      if(socket.connection) {\n        socket.connection.close();\n      }\n\n      websocketPromise.resolve(false);\n    }, timeout);\n\n    const [isHttpAvailable, isWebSocketAvailable] = await Promise.all([httpPromise, websocketPromise]);\n\n    for(const transportType in transports) {\n      const transport = transports[transportType as TransportType];\n      transport.destroy();\n    }\n\n    const result = {\n      https: isHttpAvailable || this.opened.get('https') > 0,\n      websocket: isWebSocketAvailable || this.opened.get('websocket') > 0\n    };\n\n    // result.websocket = false;\n    return result;\n  }\n\n  public async waitForWebSocket() {\n    if(this.pinging) return;\n    this.pinging = true;\n\n    while(true) {\n      const {https, websocket} = await this.pingTransports();\n      if(https || websocket) {\n        this.dispatchEvent('transport', websocket || !https ? 'websocket' : 'https');\n      }\n\n      if(websocket) {\n        break;\n      }\n\n      await pause(10000);\n    }\n\n    this.pinging = false;\n  }\n\n  public setTransportValue(type: TransportType, value: boolean) {\n    let length = this.opened.get(type) || 0;\n    length += value ? 1 : -1;\n\n    this.opened.set(type, length);\n    this.dispatchEvent('change', this.opened);\n  }\n\n  public setTransportOpened(type: TransportType) {\n    return this.setTransportValue(type, true);\n  }\n\n  public setTransportClosed(type: TransportType) {\n    return this.setTransportValue(type, false);\n  }\n}\n\nconst transportController = new MTTransportController();\nexport default transportController;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport deferredPromise, {CancellablePromise} from '../../../../helpers/cancellablePromise';\r\nimport type {StoragesResults} from './loadStorages';\r\n\r\nconst RESET_STORAGES_PROMISE: CancellablePromise<Set<keyof StoragesResults>> = deferredPromise();\r\nexport default RESET_STORAGES_PROMISE;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {CryptoMessagePort} from '../crypto/cryptoMessagePort';\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\nimport type {ApiManager} from '../mtproto/apiManager';\nimport type {Authorizer} from '../mtproto/authorizer';\nimport type {DcConfigurator} from '../mtproto/dcConfigurator';\nimport type {NetworkerFactory} from '../mtproto/networkerFactory';\nimport type {PasswordManager} from '../mtproto/passwordManager';\nimport type {ReferenceDatabase} from '../mtproto/referenceDatabase';\nimport type {TimeManager} from '../mtproto/timeManager';\nimport type {RootScope} from '../rootScope';\nimport type DialogsStorage from '../storages/dialogs';\nimport type FiltersStorage from '../storages/filters';\nimport type PeersStorage from '../storages/peers';\nimport type ThumbsStorage from '../storages/thumbs';\nimport type {ApiUpdatesManager} from './apiUpdatesManager';\nimport type {AppAvatarsManager} from './appAvatarsManager';\nimport type {AppCallsManager} from './appCallsManager';\nimport type {AppChatsManager} from './appChatsManager';\nimport type {AppDocsManager} from './appDocsManager';\nimport type {AppDraftsManager} from './appDraftsManager';\nimport type {AppEmojiManager} from './appEmojiManager';\nimport type {AppGroupCallsManager} from './appGroupCallsManager';\nimport type {AppInlineBotsManager} from './appInlineBotsManager';\nimport type {AppMessagesIdsManager} from './appMessagesIdsManager';\nimport type {AppMessagesManager} from './appMessagesManager';\nimport type {AppNotificationsManager} from './appNotificationsManager';\nimport type AppPaymentsManager from './appPaymentsManager';\nimport type {AppPeersManager} from './appPeersManager';\nimport type {AppPhotosManager} from './appPhotosManager';\nimport type {AppPollsManager} from './appPollsManager';\nimport type {AppPrivacyManager} from './appPrivacyManager';\nimport type {AppProfileManager} from './appProfileManager';\nimport type {AppReactionsManager} from './appReactionsManager';\nimport type {AppStateManager} from './appStateManager';\nimport type {AppStickersManager} from './appStickersManager';\nimport type {AppStoragesManager} from './appStoragesManager';\nimport type {AppUsersManager} from './appUsersManager';\nimport type AppWebDocsManager from './appWebDocsManager';\nimport type {AppWebPagesManager} from './appWebPagesManager';\nimport type {AppManagers} from './managers';\n\nexport class AppManager {\n  protected appPeersManager: AppPeersManager;\n  protected appChatsManager: AppChatsManager;\n  protected appDocsManager: AppDocsManager;\n  protected appPhotosManager: AppPhotosManager;\n  protected appPollsManager: AppPollsManager;\n  protected appUsersManager: AppUsersManager;\n  protected appWebPagesManager: AppWebPagesManager;\n  protected appDraftsManager: AppDraftsManager;\n  protected appProfileManager: AppProfileManager;\n  protected appNotificationsManager: AppNotificationsManager;\n  protected apiUpdatesManager: ApiUpdatesManager;\n  protected appAvatarsManager: AppAvatarsManager;\n  protected appGroupCallsManager: AppGroupCallsManager;\n  protected appCallsManager: AppCallsManager;\n  protected appReactionsManager: AppReactionsManager;\n  protected appMessagesManager: AppMessagesManager;\n  protected appMessagesIdsManager: AppMessagesIdsManager;\n  protected appPrivacyManager: AppPrivacyManager;\n  protected appInlineBotsManager: AppInlineBotsManager;\n  protected appStickersManager: AppStickersManager;\n  protected referenceDatabase: ReferenceDatabase;\n  protected appEmojiManager: AppEmojiManager;\n  protected dialogsStorage: DialogsStorage;\n  protected filtersStorage: FiltersStorage;\n  protected apiManager: ApiManager;\n  // protected apiManager: ApiManagerProxy;\n  protected passwordManager: PasswordManager;\n  protected cryptoWorker: CryptoMessagePort;\n  protected apiFileManager: ApiFileManager;\n  protected peersStorage: PeersStorage;\n  protected thumbsStorage: ThumbsStorage;\n  protected networkerFactory: NetworkerFactory;\n  protected rootScope: RootScope;\n  protected authorizer: Authorizer;\n  protected dcConfigurator: DcConfigurator;\n  protected timeManager: TimeManager;\n  protected appStoragesManager: AppStoragesManager;\n  protected appStateManager: AppStateManager;\n  protected appWebDocsManager: AppWebDocsManager;\n  protected appPaymentsManager: AppPaymentsManager;\n\n  public clear: (init?: boolean) => void;\n\n  public setManagers(managers: AppManagers) {\n    Object.assign(this, managers);\n    // this.after();\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type{Chat} from '../../../../layer';\r\nimport type{Dialog} from '../../appMessagesManager';\r\nimport type{User} from '../../appUsersManager';\r\nimport type {StoragesStorages} from './createStorages';\r\nimport {recordPromiseBound} from '../../../../helpers/recordPromise';\r\nimport {Awaited} from '../../../../types';\r\nimport {logger} from '../../../logger';\r\nimport RESET_STORAGES_PROMISE from './resetStoragesPromise';\r\n\r\nexport type StoragesResults = Awaited<ReturnType<typeof loadStoragesInner>>;\r\n\r\nasync function loadStoragesInner(storages: StoragesStorages) {\r\n  const recordPromise = recordPromiseBound(logger('STORAGES-LOADER'));\r\n  const storagesKeys = Object.keys(storages) as Array<keyof StoragesStorages>;\r\n  const storagesPromises: Promise<any>[] = storagesKeys.map((key) => {\r\n    const promise = storages[key].getAll();\r\n    return recordPromise(promise, 'storage ' + (key as any as string));\r\n  });\r\n\r\n  const storagesResults: {\r\n    users: User[],\r\n    chats: Chat[],\r\n    dialogs: Dialog[]\r\n  } = {} as any;\r\n  const arr = await Promise.all(storagesPromises);\r\n  for(let i = 0, length = storagesKeys.length; i < length; ++i) {\r\n    storagesResults[storagesKeys[i]] = arr[i] as any;\r\n  }\r\n\r\n  arr.splice(0, storagesKeys.length);\r\n\r\n  const resetStorages = await RESET_STORAGES_PROMISE;\r\n  if(resetStorages.size) {\r\n    for(const key of resetStorages) {\r\n      storagesResults[key].length = 0;\r\n    }\r\n\r\n    resetStorages.clear();\r\n  }\r\n\r\n  return storagesResults;\r\n}\r\n\r\nlet promise: ReturnType<typeof loadStoragesInner>;\r\nexport default function loadStorages(storages: StoragesStorages) {\r\n  return promise ??= loadStoragesInner(storages);\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {logger} from '../logger';\nimport {AppManager} from './manager';\nimport createStorages from './utils/storages/createStorages';\nimport loadStorages from './utils/storages/loadStorages';\n\nexport class AppStoragesManager extends AppManager {\n  private storages: ReturnType<typeof createStorages>;\n\n  // private loadPromise: CancellablePromise<StoragesResults>;\n\n  private log: ReturnType<typeof logger>;\n\n  constructor() {\n    super();\n\n    this.log = logger('STORAGES');\n    this.storages = createStorages();\n    // this.loadPromise = deferredPromise();\n  }\n\n  public loadStorages() {\n    return loadStorages(this.storages);\n    // loadStorages(this.storages).then((storagesResults) => {\n    // this.loadPromise.resolve(storagesResults);\n    // });\n\n    // return this.loadPromise;\n  }\n\n  // public setStoragesResults(storagesResults: StoragesResults) {\n  //   this.loadPromise.resolve(storagesResults);\n  // }\n\n  public async loadStorage<T extends keyof AppStoragesManager['storages']>(name: T) {\n    return this.loadStorages().then((storagesResults) => {\n      return {\n        storage: this.storages[name],\n        results: storagesResults[name]\n      };\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {Chat} from '../../../../layer';\r\nimport type {Dialog} from '../../appMessagesManager';\r\nimport type {User} from '../../appUsersManager';\r\nimport DATABASE_STATE from '../../../../config/databases/state';\r\nimport AppStorage from '../../../storage';\r\n\r\nexport type StoragesStorages = {\r\n  users: AppStorage<Record<UserId, User>, typeof DATABASE_STATE>,\r\n  chats: AppStorage<Record<ChatId, Chat>, typeof DATABASE_STATE>,\r\n  dialogs: AppStorage<Record<PeerId, Dialog>, typeof DATABASE_STATE>\r\n};\r\n\r\nexport default function createStorages() {\r\n  const names: (keyof StoragesStorages)[] = ['users', 'chats', 'dialogs'];\r\n  const storages: StoragesStorages = {} as any;\r\n  for(const name of names) {\r\n    // @ts-ignore\r\n    storages[name] = new AppStorage(DATABASE_STATE, name);\r\n  }\r\n\r\n  return storages;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo} from '../../layer';\r\nimport randomize from '../../helpers/array/randomize';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\nexport class PasswordManager extends AppManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return this.apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    // state = Object.assign({}, state);\r\n    // state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then((state) => {\r\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n\r\n      if(settings.currentPassword) {\r\n        currentHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n\r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      randomize(salt1);\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n\r\n      if(settings.newPassword) {\r\n        newHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n\r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n\r\n        return this.apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public getInputCheckPassword(password: string, state: AccountPassword) {\r\n    return this.cryptoWorker.invokeCrypto('computeSRP', password, state, false) as Promise<InputCheckPasswordSRP.inputCheckPasswordSRP>;\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return this.getInputCheckPassword(password, state).then((inputCheckPassword) => {\r\n      // console.log('SRP', inputCheckPassword);\r\n      return this.apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\r\n      }, options).then((auth) => {\r\n        if(auth._ === 'auth.authorization') {\r\n          this.apiManager.setUser(auth.user);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return this.apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return this.apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return this.apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Photo} from '../../layer';\nimport {logger} from '../logger';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport {AppManager} from '../appManagers/manager';\nimport makeError from '../../helpers/makeError';\n\nexport type ReferenceContext = ReferenceContext.referenceContextProfilePhoto | ReferenceContext.referenceContextMessage | ReferenceContext.referenceContextEmojiesSounds | ReferenceContext.referenceContextReactions | ReferenceContext.referenceContextUserFull | ReferenceContext.referenceContextCustomEmoji;\nexport namespace ReferenceContext {\n  export type referenceContextProfilePhoto = {\n    type: 'profilePhoto',\n    peerId: PeerId\n  };\n\n  export type referenceContextMessage = {\n    type: 'message',\n    peerId: PeerId,\n    messageId: number\n  };\n\n  export type referenceContextEmojiesSounds = {\n    type: 'emojiesSounds'\n  };\n\n  export type referenceContextReactions = {\n    type: 'reactions'\n  };\n\n  export type referenceContextUserFull = {\n    type: 'userFull',\n    userId: UserId\n  };\n\n  export type referenceContextCustomEmoji = {\n    type: 'customEmoji',\n    docId: DocId\n  };\n}\n\nexport type ReferenceBytes = Photo.photo['file_reference'];\nexport type ReferenceContexts = Set<ReferenceContext>;\n\n// type ReferenceBytes = Uint8Array;\n\nexport class ReferenceDatabase extends AppManager {\n  private contexts: Map<ReferenceBytes, ReferenceContexts> = new Map();\n  // private references: Map<ReferenceBytes, number[]> = new Map();\n  private links: {[hex: string]: ReferenceBytes} = {};\n  private log = logger('RD', undefined, true);\n  private refreshEmojiesSoundsPromise: Promise<any>;\n\n  // constructor() {\n  //   super();\n\n  // apiManager.addTaskListener('refreshReference', (task: RefreshReferenceTask) => {\n  //   const originalPayload = task.payload;\n\n  //   assumeType<RefreshReferenceTaskResponse>(task);\n  //   task.originalPayload = originalPayload;\n\n  //   this.refreshReference(originalPayload).then((bytes) => {\n  //     task.payload = bytes;\n  //   }, (err) => {\n  //     task.error = err;\n  //   }).then(() => apiManager.postMessage(task));\n  // });\n  // }\n\n  public saveContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(!contexts) {\n      contexts = new Set();\n      this.contexts.set(reference, contexts);\n    }\n\n    this.links[bytesToHex(reference)] = reference;\n    for(const _context of contexts) {\n      if(deepEqual(_context, context)) {\n        return;\n      }\n    }\n\n    contexts.add(context);\n  }\n\n  public getReferenceByLink(reference: ReferenceBytes) {\n    return this.links[bytesToHex(reference)];\n  }\n\n  public getContexts(reference: ReferenceBytes): [ReferenceContexts, ReferenceBytes] {\n    const contexts = this.contexts.get(reference) || (reference = this.getReferenceByLink(reference) || reference, this.contexts.get(reference));\n    return [contexts, reference];\n  }\n\n  public getContext(reference: ReferenceBytes): [ReferenceContext, ReferenceBytes] {\n    const contexts = this.getContexts(reference);\n    return contexts[0] ? [contexts[0].values().next().value, contexts[1]] : undefined;\n  }\n\n  public deleteContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(contexts) {\n      for(const _context of contexts) {\n        if(deepEqual(_context, context)) {\n          contexts.delete(_context);\n          if(!contexts.size) {\n            this.contexts.delete(reference);\n            delete this.links[bytesToHex(reference)];\n          }\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public refreshReference(reference: ReferenceBytes, context?: ReferenceContext): Promise<Uint8Array | number[]> {\n    this.log('refreshReference: start', reference.slice(), context);\n    if(!context) {\n      const c = this.getContext(reference);\n      if(!c) {\n        this.log('refreshReference: got no context for reference:', reference.slice());\n        return Promise.reject('NO_CONTEXT');\n      }\n\n      [context, reference] = c;\n    }\n\n    let promise: Promise<any>;\n    switch(context?.type) {\n      case 'message': {\n        promise = this.appMessagesManager.reloadMessages(context.peerId, context.messageId, true);\n        break;\n        // .then(() => {\n        //   console.log('FILE_REFERENCE_EXPIRED: got message', context, appMessagesManager.getMessage((context as ReferenceContext.referenceContextMessage).messageId).media, reference);\n        // });\n      }\n\n      case 'emojiesSounds': {\n        promise = this.refreshEmojiesSoundsPromise || this.appStickersManager.getAnimatedEmojiSounds(true).then(() => {\n          this.refreshEmojiesSoundsPromise = undefined;\n        });\n        break;\n      }\n\n      case 'userFull': {\n        promise = Promise.resolve(this.appProfileManager.getProfile(context.userId, true));\n        break;\n      }\n\n      case 'customEmoji': {\n        promise = this.appEmojiManager.getCustomEmojiDocuments([context.docId]);\n      }\n\n      default: {\n        this.log.warn('refreshReference: not implemented context', context);\n        return Promise.reject();\n      }\n    }\n\n    const hex = bytesToHex(reference);\n    this.log('refreshReference: refreshing reference:', hex);\n    return promise.then(() => {\n      const newHex = bytesToHex(reference);\n      this.log('refreshReference: refreshed, reference before:', hex, 'after:', newHex);\n      if(hex !== newHex) {\n        return reference;\n      }\n\n      this.deleteContext(reference, context);\n\n      const newContext = this.getContext(reference);\n      if(newContext) {\n        return this.refreshReference(reference, newContext[0]);\n      }\n\n      this.log.error('refreshReference: no new context, reference before:', hex, 'after:', newHex, context);\n\n      throw makeError('NO_NEW_CONTEXT');\n    });\n  }\n\n  /* public replaceReference(oldReference: ReferenceBytes, newReference: ReferenceBytes) {\n    const contexts = this.contexts.get(oldReference);\n    if(contexts) {\n      this.contexts.delete(oldReference);\n      this.contexts.set(newReference, contexts);\n    }\n  } */\n}\n","export default function safeReplaceObject(wasObject: any, newObject: any) {\n  if(!wasObject) {\n    return newObject;\n  }\n\n  for(var key in wasObject) {\n    if(!newObject.hasOwnProperty(key)) {\n      delete wasObject[key];\n    }\n  }\n\n  for(var key in newObject) {\n    // if (newObject.hasOwnProperty(key)) { // useless\n    wasObject[key] = newObject[key];\n    // }\n  }\n\n  return wasObject;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Message, MessageAction, MessageMedia} from '../../../../layer';\nimport getPeerId from '../peers/getPeerId';\n\nexport default function getPeerIdsFromMessage(message: Message.message | Message.messageService) {\n  const peerIds: number[] = [\n    message.fromId,\n    message.viaBotId,\n    (message as Message.message).fwdFromId\n  ];\n\n  const media = (message as Message.message).media;\n  if(media) {\n    const contactUserId = (media as MessageMedia.messageMediaContact).user_id;\n    if(contactUserId !== undefined) {\n      peerIds.push(contactUserId.toPeerId());\n    }\n\n    const results = (media as MessageMedia.messageMediaPoll).results;\n    const recentVoters = results?.recent_voters;\n    if(recentVoters?.length) {\n      peerIds.push(...recentVoters.map((userId) => userId.toPeerId()));\n    }\n  }\n\n  const recentReactions = ((message as Message.message).reactions)?.recent_reactions;\n  if(recentReactions?.length) {\n    peerIds.push(...recentReactions.map((reaction) => getPeerId(reaction.peer_id)));\n  }\n\n  const action = (message as Message.messageService).action;\n  if(action) {\n    const userIds: UserId[] = [\n      ...((action as MessageAction.messageActionChatAddUser).users || []),\n      (action as MessageAction.messageActionChatDeleteUser).user_id,\n      (action as MessageAction.messageActionChatJoinedByLink).inviter_id\n    ];\n    peerIds.push(...userIds.filter(Boolean).map((userId) => userId.toPeerId()));\n\n    const chatIds: ChatId[] = [\n      (action as MessageAction.messageActionChatMigrateTo).channel_id,\n      (action as MessageAction.messageActionChannelMigrateFrom).chat_id\n    ];\n    peerIds.push(...chatIds.filter(Boolean).map((chatId) => chatId.toPeerId(true)));\n  }\n\n  const recentRepliers = ((message as Message.message).replies)?.recent_repliers;\n  if(recentRepliers?.length) {\n    peerIds.push(...recentRepliers.map((reply) => getPeerId(reply)));\n  }\n\n  return new Set(peerIds.filter(Boolean));\n}\n","export default function defineNotNumerableProperties<T extends any>(obj: T, names: (keyof T)[]) {\n  // const perf = performance.now();\n  const props = {writable: true, configurable: true};\n  const out: {[name in keyof T]?: typeof props} = {};\n  names.forEach((name) => {\n    if(!obj.hasOwnProperty(name)) {\n      out[name] = props;\n    }\n  });\n  Object.defineProperties(obj, out);\n  // console.log('defineNotNumerableProperties time:', performance.now() - perf);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Dialog} from '../../appMessagesManager';\nimport type getDialogIndexKey from './getDialogIndexKey';\n\nexport default function setDialogIndex(\n  dialog: Dialog,\n  indexKey: ReturnType<typeof getDialogIndexKey>,\n  index: number\n) {\n  return dialog[indexKey] = index;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {Chat, DialogPeer, Message, MessageAction, MessageMedia, MessagesPeerDialogs, Update} from '../../layer';\nimport type {Dialog, MyMessage} from '../appManagers/appMessagesManager';\nimport tsNow from '../../helpers/tsNow';\nimport SearchIndex from '../searchIndex';\nimport {SliceEnd} from '../../helpers/slicedArray';\nimport {MyDialogFilter} from './filters';\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, NULL_PEER_ID, REAL_FOLDERS, REAL_FOLDER_ID} from '../mtproto/mtproto_config';\nimport {NoneToVoidFunction} from '../../types';\nimport ctx from '../../environment/ctx';\nimport AppStorage from '../storage';\nimport type DATABASE_STATE from '../../config/databases/state';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport getServerMessageId from '../appManagers/utils/messageId/getServerMessageId';\nimport generateMessageId from '../appManagers/utils/messageId/generateMessageId';\nimport {AppManager} from '../appManagers/manager';\nimport getDialogIndexKey from '../appManagers/utils/dialogs/getDialogIndexKey';\nimport isObject from '../../helpers/object/isObject';\nimport getDialogIndex from '../appManagers/utils/dialogs/getDialogIndex';\nimport getPeerIdsFromMessage from '../appManagers/utils/messages/getPeerIdsFromMessage';\nimport {AppStoragesManager} from '../appManagers/appStoragesManager';\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\nimport setDialogIndex from '../appManagers/utils/dialogs/setDialogIndex';\n\nexport type FolderDialog = {\n  dialog: Dialog,\n  index: number\n};\n\nexport type Folder = {\n  dialogs: Dialog[],\n  id: number,\n  unreadMessagesCount: number,\n  unreadPeerIds: Set<PeerId>,\n  unreadUnmutedPeerIds: Set<PeerId>,\n  dispatchUnreadTimeout?: number\n};\n\nexport const GLOBAL_FOLDER_ID: REAL_FOLDER_ID = undefined;\n\n// let spentTime = 0;\nexport default class DialogsStorage extends AppManager {\n  private storage: AppStoragesManager['storages']['dialogs'];\n\n  private dialogs: {[peerId: PeerId]: Dialog};\n\n  private folders: {[folderId: number]: Folder} = {};\n\n  private allDialogsLoaded: {[folder_id: number]: boolean};\n  private dialogsOffsetDate: {[folder_id: number]: number};\n  private pinnedOrders: {[folder_id: number]: PeerId[]};\n  private dialogsNum: number;\n\n  private dialogsIndex: SearchIndex<PeerId>;\n\n  private cachedResults: {\n    query: string,\n    count: number,\n    dialogs: Dialog[],\n    folderId: number\n  };\n\n  protected after() {\n    this.clear(true);\n\n    this.rootScope.addEventListener('language_change', () => {\n      const peerId = this.appUsersManager.getSelf().id.toPeerId(false);\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        const peerText = this.appPeersManager.getPeerSearchText(peerId);\n        this.dialogsIndex.indexObject(peerId, peerText);\n      }\n    });\n\n    const onFilterUpdate = (filter: MyDialogFilter) => {\n      const dialogs = this.getCachedDialogs(false);\n      for(let i = 0; i < dialogs.length; ++i) {\n        this.processDialogForFilter(dialogs[i], filter);\n      }\n    };\n\n    this.rootScope.addEventListener('filter_order', () => {\n      const dialogs = this.getCachedDialogs(false);\n      // const indexKeys: ReturnType<DialogsStorage['getDialogIndexKey']>[] = [];\n      for(const filterId in this.folders) {\n        if(+filterId > 1) {\n          delete this.folders[filterId];\n        }\n\n        // indexKeys.push(this.getDialogIndexKey(+filterId));\n      }\n\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        // for(const indexKey of indexKeys) {\n        //   delete dialog[indexKey];\n        // }\n\n        this.processDialogForFilters(dialog);\n      }\n    });\n\n    this.rootScope.addEventListener('filter_update', onFilterUpdate);\n    this.rootScope.addEventListener('filter_new', onFilterUpdate);\n\n    this.rootScope.addEventListener('filter_delete', (filter) => {\n      const dialogs = this.getCachedDialogs(false);\n\n      const indexKey = this.getDialogIndexKeyByFilterId(filter.id);\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        delete dialog[indexKey];\n      }\n\n      delete this.folders[filter.id];\n    });\n\n    this.rootScope.addEventListener('dialog_notify_settings', (dialog) => {\n      this.processDialogForFilters(dialog);\n      this.prepareDialogUnreadCountModifying(dialog)();\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const chat: Chat.chat = this.appChatsManager.getChat(chatId);\n\n      const peerId = chatId.toPeerId(true);\n      if(chat.pFlags.left && this.getDialogOnly(peerId)) {\n        this.dropDialogOnDeletion(peerId);\n      }\n    });\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateFolderPeers: this.onUpdateFolderPeers,\n\n      updateDialogPinned: this.onUpdateDialogPinned,\n\n      updatePinnedDialogs: this.onUpdatePinnedDialogs\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('dialogs')\n    ]).then(([state, {results: dialogs, storage}]) => {\n      this.storage = storage;\n      this.dialogs = this.storage.getCache();\n\n      for(const folderId of REAL_FOLDERS) {\n        const order = state.pinnedOrders[folderId];\n        if(!order) {\n          continue;\n        }\n\n        const _order = this.pinnedOrders[folderId];\n        _order.splice(0, _order.length, ...order);\n      }\n\n      if(dialogs.length) {\n        AppStorage.freezeSaving<typeof DATABASE_STATE>(this.setDialogsFromState.bind(this, dialogs), ['chats', 'dialogs', 'messages', 'users']);\n      }\n\n      this.allDialogsLoaded = state.allDialogsLoaded || {};\n\n      if(dialogs.length) {\n        this.appDraftsManager.addMissedDialogs();\n      }\n    });\n  }\n\n  private setDialogsFromState(dialogs: Dialog[]) {\n    for(let i = 0, length = dialogs.length; i < length; ++i) {\n      const dialog = dialogs[i];\n      if(!dialog) {\n        continue;\n      }\n\n      // if(dialog.peerId !== SERVICE_PEER_ID) {\n      dialog.top_message = getServerMessageId(dialog.top_message); // * fix outgoing message to avoid copying dialog\n      // }\n\n      if(dialog.topMessage) {\n        this.appMessagesManager.saveMessages([dialog.topMessage]);\n      }\n\n      for(let i = 0; i <= 21; ++i) {\n        const indexKey: ReturnType<typeof getDialogIndexKey> = `index_${i}` as any;\n        delete dialog[indexKey];\n      }\n      // delete dialog.indexes;\n\n      this.saveDialog(dialog, undefined, true);\n\n      // ! WARNING, убрать это когда нужно будет делать чтобы pending сообщения сохранялись\n      const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      if(!message) {\n        this.appMessagesManager.reloadConversation(dialog.peerId);\n      }\n    }\n  }\n\n  public isDialogsLoaded(folderId: number) {\n    return !!this.allDialogsLoaded[folderId];\n  }\n\n  public setDialogsLoaded(folderId: number, loaded: boolean) {\n    if(folderId === GLOBAL_FOLDER_ID && loaded) {\n      this.allDialogsLoaded[FOLDER_ID_ALL] = loaded;\n      this.allDialogsLoaded[FOLDER_ID_ARCHIVE] = loaded;\n    } else {\n      this.allDialogsLoaded[folderId] = loaded;\n    }\n\n    if(Array.from(REAL_FOLDERS).every((folderId) => this.allDialogsLoaded[folderId])) {\n      this.allDialogsLoaded[GLOBAL_FOLDER_ID] = true;\n    }\n\n    this.appStateManager.pushToState('allDialogsLoaded', this.allDialogsLoaded);\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      this.storage.clear();\n\n      this.setDialogsLoaded(FOLDER_ID_ALL, false);\n      this.setDialogsLoaded(FOLDER_ID_ARCHIVE, false);\n      this.setDialogsLoaded(GLOBAL_FOLDER_ID, false);\n\n      for(const folderId of REAL_FOLDERS) {\n        this.resetPinnedOrder(folderId);\n      }\n      this.savePinnedOrders();\n    } else {\n      this.allDialogsLoaded = {};\n      this.pinnedOrders = {};\n      for(const folderId of REAL_FOLDERS) {\n        this.pinnedOrders[folderId] = [];\n      }\n    }\n\n    this.folders = {};\n    this.dialogsOffsetDate = {};\n    this.dialogsNum = 0;\n    this.dialogsIndex = new SearchIndex({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n    this.cachedResults = {\n      query: '',\n      count: 0,\n      dialogs: [],\n      folderId: 0\n    };\n  };\n\n  public handleDialogUnpinning(dialog: Dialog, folderId: number) {\n    delete dialog.pFlags.pinned;\n    indexOfAndSplice(this.pinnedOrders[folderId], dialog.peerId);\n    this.savePinnedOrders();\n  }\n\n  public savePinnedOrders() {\n    this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\n  }\n\n  public resetPinnedOrder(folderId: number) {\n    this.pinnedOrders[folderId].length = 0;\n  }\n\n  public getPinnedOrders(folderId: number) {\n    return this.pinnedOrders[folderId];\n  }\n\n  public getOffsetDate(folderId: number): number {\n    const offsetDate = this.dialogsOffsetDate[folderId] || 0;\n    if(folderId === GLOBAL_FOLDER_ID && !offsetDate) { // make request not from beginning if we have loaded some dialogs\n      return Math.min(...Array.from(REAL_FOLDERS).sort((a, b) => a - b));\n    }\n\n    return offsetDate;\n  }\n\n  private generateFolder(id: number) {\n    const folder: Folder = {\n      dialogs: [],\n      id,\n      unreadMessagesCount: 0,\n      unreadPeerIds: new Set(),\n      unreadUnmutedPeerIds: new Set()\n    };\n\n    defineNotNumerableProperties(folder, ['dispatchUnreadTimeout']);\n\n    return folder;\n  }\n\n  public getFolder(id: number) {\n    return this.folders[id] ??= this.generateFolder(id);\n  }\n\n  public getFolderDialogs(id: number, skipMigrated = true): Dialog[] {\n    if(id === GLOBAL_FOLDER_ID) { // * it won't be sorted\n      return this.getCachedDialogs(skipMigrated);\n    }\n\n    const folder = this.getFolder(id);\n    return skipMigrated ? folder.dialogs.filter((dialog) => dialog.migratedTo === undefined) : folder.dialogs;\n  }\n\n  public getNextDialog(currentPeerId: PeerId, next: boolean, filterId: number) {\n    const folder = this.getFolderDialogs(filterId, true);\n    let dialog: Dialog;\n    if(!currentPeerId) {\n      if(next) {\n        dialog = folder[0];\n      }\n    } else {\n      const idx = folder.findIndex((dialog) => dialog.peerId === currentPeerId);\n      if(idx !== -1) {\n        const nextIndex = next ? idx + 1 : idx - 1;\n        dialog = folder[nextIndex];\n      }\n    }\n\n    return dialog;\n  }\n\n  public getDialogIndexKeyByFilterId(filterId: number) {\n    if(REAL_FOLDERS.has(filterId)) return getDialogIndexKey(filterId as REAL_FOLDER_ID);\n    const filter = this.filtersStorage.getFilter(filterId);\n    return getDialogIndexKey(filter.localId);\n  }\n\n  public isPeerUnmuted(peerId: PeerId) {\n    return !this.appNotificationsManager.isPeerLocalMuted(peerId, true);\n  }\n\n  public getFolderUnreadCount(filterId: number) {\n    const folder = this.getFolder(filterId);\n    return {unreadUnmutedCount: folder.unreadUnmutedPeerIds.size, unreadCount: folder.unreadPeerIds.size};\n  }\n\n  public getCachedDialogs(skipMigrated?: boolean) {\n    const arrays = Array.from(REAL_FOLDERS).map((folderId) => this.getFolderDialogs(folderId, skipMigrated));\n    return [].concat(...arrays) as typeof arrays[0];\n  }\n\n  private setDialogIndexInFilter(dialog: Dialog, indexKey: ReturnType<typeof getDialogIndexKey>, filter: MyDialogFilter) {\n    let index: number;\n\n    const isRealFolder = REAL_FOLDERS.has(filter.id);\n    /* if(isRealFolder) {\n      // index = getDialogIndex(dialog, indexKey);\n      index = this.generateIndexForDialog(dialog, true);\n    } else  */if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n      const pinnedIndex = filter.pinnedPeerIds.indexOf(dialog.peerId);\n      if(pinnedIndex !== -1) {\n        index = this.generateDialogIndex(this.generateDialogPinnedDateByIndex(filter.pinnedPeerIds.length - 1 - pinnedIndex), true);\n      } else if(dialog.pFlags?.pinned || isRealFolder) {\n        index = this.generateIndexForDialog(dialog, true, undefined, !isRealFolder);\n      } else {\n        index = getDialogIndex(dialog) ?? this.generateIndexForDialog(dialog, true);\n      }\n    }\n\n    // if(!dialog.hasOwnProperty(indexKey)) {\n    //   defineNotNumerableProperties(dialog, [indexKey]);\n    // }\n\n    return setDialogIndex(dialog, indexKey, index);\n  }\n\n  public getDialog(peerId: PeerId, folderId?: number, skipMigrated = true): [Dialog, number] | [] {\n    const folders: Dialog[][] = [];\n\n    if(folderId === undefined) {\n      folders.push(...Array.from(REAL_FOLDERS).map((folderId) => this.getFolder(folderId).dialogs));\n    } else {\n      folders.push(this.getFolderDialogs(folderId, false));\n    }\n\n    for(const folder of folders) {\n      let i = 0, skipped = 0;\n      for(let length = folder.length; i < length; ++i) {\n        const dialog = folder[i];\n        if(dialog.peerId === peerId) {\n          return [dialog, i - skipped];\n        } else if(skipMigrated && dialog.migratedTo !== undefined) {\n          ++skipped;\n        }\n      }\n    }\n\n    return [];\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogs[peerId];\n  }\n\n  public getDialogIndex(peerId: PeerId | Dialog, indexKey: ReturnType<typeof getDialogIndexKey>) {\n    const dialog = isObject(peerId) ? peerId : this.getDialogOnly(peerId);\n    return getDialogIndex(dialog, indexKey);\n  }\n\n  /*\n  var date = Date.now() / 1000 | 0;\n  var m = date * 0x10000;\n\n  var k = (date + 1) * 0x10000;\n  k - m;\n  65536\n  */\n  public generateDialogIndex(date?: number, isPinned?: boolean) {\n    if(date === undefined) {\n      date = tsNow(true) + this.timeManager.getServerTimeOffset();\n    }\n\n    return (date * 0x10000) + (isPinned ? 0 : ((++this.dialogsNum) & 0xFFFF));\n  }\n\n  public processDialogForFilters(dialog: Dialog) {\n    // let perf = performance.now();\n    const filters = this.filtersStorage.getFilters();\n    for(const id in filters) {\n      const filter = filters[id];\n      this.processDialogForFilter(dialog, filter);\n    }\n    // spentTime += (performance.now() - perf);\n    // console.log('generate index time:', spentTime);\n  }\n\n  public processDialogForFilter(dialog: Dialog, filter: MyDialogFilter) {\n    const indexKey = this.getDialogIndexKeyByFilterId(filter.id);\n    const folder = this.getFolder(filter.id);\n    const dialogs = folder.dialogs;\n\n    const wasIndex = dialogs.findIndex((d) => d.peerId === dialog.peerId);\n    const wasDialog = dialogs[wasIndex];\n    const wasDialogIndex = this.getDialogIndex(wasDialog, indexKey);\n\n    const newDialogIndex = this.setDialogIndexInFilter(dialog, indexKey, filter);\n\n    if(wasDialogIndex === newDialogIndex) {\n      return false;\n    }\n\n    if((!wasDialogIndex && newDialogIndex) || (wasIndex && !newDialogIndex)) {\n      this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog, !!newDialogIndex);\n    }\n\n    if(wasIndex !== -1) {\n      dialogs.splice(wasIndex, 1);\n    }\n\n    if(newDialogIndex) {\n      insertInDescendSortedArray(dialogs, dialog, (dialog) => this.getDialogIndex(dialog, indexKey), -1);\n    }\n\n    return true;\n  }\n\n  public prepareDialogUnreadCountModifying(dialog: Dialog) {\n    const callbacks: NoneToVoidFunction[] = [\n      this.prepareFolderUnreadCountModifyingByDialog(dialog.folder_id, dialog)\n    ];\n\n    const filters = this.filtersStorage.getFilters();\n    for(const id in filters) {\n      const filter = filters[id];\n      if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n        callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog));\n      }\n    }\n\n    return () => callbacks.forEach((callback) => callback());\n  }\n\n  public prepareFolderUnreadCountModifyingByDialog(folderId: number, dialog: Dialog, toggle?: boolean) {\n    const wasUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n    const wasUnmuted = this.isPeerUnmuted(dialog.peerId);\n\n    if(toggle !== undefined) {\n      const addMessagesCount = toggle ? wasUnreadCount : -wasUnreadCount;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!wasUnreadCount, wasUnreadCount && wasUnmuted, dialog);\n      return;\n    }\n\n    return () => {\n      const newUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n      const newUnmuted = this.isPeerUnmuted(dialog.peerId);\n\n      const addMessagesCount = newUnreadCount - wasUnreadCount;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!newUnreadCount, newUnreadCount && newUnmuted, dialog);\n    };\n  }\n\n  public modifyFolderUnreadCount(\n    folderId: number,\n    addMessagesCount: number,\n    toggleDialog: boolean,\n    toggleUnmuted: boolean,\n    dialog: Dialog\n  ) {\n    const folder = this.getFolder(folderId);\n    if(addMessagesCount) {\n      folder.unreadMessagesCount = Math.max(0, folder.unreadMessagesCount + addMessagesCount);\n    }\n\n    const {peerId} = dialog;\n    if(toggleDialog) {\n      folder.unreadPeerIds.add(peerId);\n    } else {\n      folder.unreadPeerIds.delete(peerId);\n    }\n\n    if(toggleUnmuted) {\n      folder.unreadUnmutedPeerIds.add(peerId);\n    } else {\n      folder.unreadUnmutedPeerIds.delete(peerId);\n    }\n\n    if(folder.dispatchUnreadTimeout === undefined) {\n      folder.dispatchUnreadTimeout = ctx.setTimeout(() => {\n        folder.dispatchUnreadTimeout = undefined;\n        const _folder = {...folder};\n        delete _folder.dialogs;\n        this.rootScope.dispatchEvent('folder_unread', _folder);\n      }, 0);\n    }\n  }\n\n  public generateIndexForDialog(\n    dialog: Dialog,\n    justReturn?: boolean,\n    message?: MyMessage,\n    noPinnedOrderUpdate?: boolean\n  ) {\n    if(!justReturn) {\n      return;\n    }\n\n    let topDate = 0, isPinned: boolean;\n    if(dialog.pFlags.pinned && !noPinnedOrderUpdate) {\n      topDate = this.generateDialogPinnedDate(dialog);\n      isPinned = true;\n    } else {\n      if(!message) {\n        message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      }\n\n      topDate = (message as Message.message)?.date || topDate;\n\n      const channelId = this.appPeersManager.isChannel(dialog.peerId) && dialog.peerId.toChatId();\n      if(channelId) {\n        const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n        if(!topDate || (channel.date && channel.date > topDate)) {\n          topDate = channel.date;\n        }\n      }\n\n      if(dialog.draft?._ === 'draftMessage' && dialog.draft.date > topDate) {\n        topDate = dialog.draft.date;\n      }\n    }\n\n    if(!topDate) {\n      topDate = tsNow(true);\n    }\n\n    const index = this.generateDialogIndex(topDate, isPinned);\n    if(justReturn) {\n      return index;\n    }\n\n    const indexKey = getDialogIndexKey(dialog.folder_id);\n    setDialogIndex(dialog, indexKey, index);\n  }\n\n  public generateDialogPinnedDateByIndex(pinnedIndex: number) {\n    return 0x7fff0000 + (pinnedIndex & 0xFFFF); // 0xFFFF - потому что в папках может быть бесконечное число пиннедов\n  }\n\n  public generateDialogPinnedDate(dialog: Dialog) {\n    const order = this.pinnedOrders[dialog.folder_id];\n\n    let pinnedIndex = order.indexOf(dialog.peerId);\n    if(pinnedIndex === -1) {\n      order.unshift(dialog.peerId);\n      pinnedIndex = 0;\n      this.savePinnedOrders();\n    }\n\n    return this.generateDialogPinnedDateByIndex(order.length - 1 - pinnedIndex);\n  }\n\n  /* public generateDialog(peerId: PeerId) {\n    const dialog: Dialog = {\n      _: 'dialog',\n      pFlags: {},\n      peer: this.appPeersManager.getOutputPeer(peerId),\n      top_message: 0,\n      read_inbox_max_id: 0,\n      read_outbox_max_id: 0,\n      unread_count: 0,\n      unread_mentions_count: 0,\n      notify_settings: {\n        _: 'peerNotifySettings',\n      },\n    };\n\n    return dialog;\n  } */\n\n  public setDialogToState(dialog: Dialog) {\n    const {peerId, pts} = dialog;\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const messagesStorage = this.appMessagesManager.getHistoryMessagesStorage(peerId);\n    const history = historyStorage.history.slice;\n    let incomingMessage: MyMessage;\n    for(let i = 0, length = history.length; i < length; ++i) {\n      const mid = history[i];\n      const message: MyMessage = this.appMessagesManager.getMessageFromStorage(messagesStorage, mid);\n      if(message && !message.pFlags.is_outgoing/*  || peerId === SERVICE_PEER_ID */) {\n        incomingMessage = message;\n\n        const peerIds = getPeerIdsFromMessage(message);\n        this.peersStorage.requestPeersForKey(peerIds, `topMessage_${peerId}`);\n\n        break;\n      }\n    }\n\n    dialog.topMessage = incomingMessage;\n\n    // DO NOT TOUCH THESE LINES, SOME REAL MAGIC HERE.\n    // * Read service chat when refreshing page with outgoing & getting new service outgoing message\n    /* if(incomingMessage && dialog.read_inbox_max_id >= dialog.top_message) {\n      dialog.unread_count = 0;\n    }\n\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_outbox_max_id); */\n    // CAN TOUCH NOW\n\n    if(peerId.isAnyChat() && pts) {\n      const newPts = this.apiUpdatesManager.getChannelState(peerId.toChatId(), pts).pts;\n      dialog.pts = newPts;\n    }\n\n    this.storage.set({\n      [peerId]: dialog\n    });\n\n    this.peersStorage.requestPeer(peerId, 'dialog');\n\n    /* for(let id in this.filtersStorage.filters) {\n      const filter = this.filtersStorage.filters[id];\n\n      if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n\n      }\n    } */\n  }\n\n  public pushDialog(dialog: Dialog, offsetDate?: number, ignoreOffsetDate?: boolean, saveGlobalOffset?: boolean) {\n    const {folder_id, peerId} = dialog;\n\n    this.dialogs[peerId] = dialog;\n\n    offsetDate ??= this.getDialogOffsetDate(dialog);\n\n    this.processDialogForFilters(dialog);\n\n    if(offsetDate && !dialog.pFlags.pinned) {\n      if(saveGlobalOffset) {\n        const savedGlobalOffsetDate = this.dialogsOffsetDate[GLOBAL_FOLDER_ID];\n        if(!savedGlobalOffsetDate || offsetDate < savedGlobalOffsetDate) {\n          this.dialogsOffsetDate[GLOBAL_FOLDER_ID] = offsetDate;\n        }\n      }\n\n      const savedOffsetDate = this.dialogsOffsetDate[folder_id];\n      if(!savedOffsetDate || offsetDate < savedOffsetDate) {\n        // if(pos !== -1) {\n        if(!ignoreOffsetDate && !this.isDialogsLoaded(folder_id)) {\n          this.dropDialog(peerId, true);\n          return;\n        }\n\n        this.dialogsOffsetDate[folder_id] = offsetDate;\n      }\n    }\n\n    this.setDialogToState(dialog);\n\n    // if(pos === -1) {\n    // this.prepareFolderUnreadCountModifyingByDialog(folder_id, dialog, true);\n    // }\n\n    // const indexKey = getDialogIndexKey(folder_id);\n    // /* const newPos =  */insertInDescendSortedArray(dialogs, dialog, (dialog) => getDialogIndex(dialog, indexKey), -1);\n    /* if(pos !== -1 && pos !== newPos) {\n      rootScope.dispatchEvent('dialog_order', {dialog, pos: newPos});\n    } */\n  }\n\n  public dropDialogFromFolders(peerId: PeerId) {\n    const foundDialog = this.getDialog(peerId, undefined, false);\n    const [dialog, index] = foundDialog;\n    if(dialog) {\n      const folder = this.getFolder(dialog.folder_id);\n      folder.dialogs.splice(index, 1);\n      const wasPinned = indexOfAndSplice(this.pinnedOrders[dialog.folder_id], peerId) !== undefined;\n\n      this.processDialogForFilters(dialog);\n\n      this.dialogsIndex.indexObject(peerId, '');\n\n      if(wasPinned) {\n        this.savePinnedOrders();\n      }\n    }\n\n    return foundDialog;\n  }\n\n  public dropDialog(peerId: PeerId, keepLocal?: boolean): ReturnType<DialogsStorage['getDialog']> {\n    const dialog = this.getDialogOnly(peerId);\n    const foundDialog = this.dropDialogFromFolders(peerId);\n    if(dialog) {\n      if(!keepLocal) {\n        delete this.dialogs[peerId];\n      }\n\n      this.clearDialogFromState(dialog, keepLocal);\n    }\n\n    return foundDialog;\n  }\n\n  public clearDialogFromState(dialog: Dialog, keepLocal: boolean) {\n    const peerId = dialog.peerId;\n    this.peersStorage.requestPeersForKey([], `topMessage_${peerId}`);\n    this.peersStorage.releasePeer(peerId, 'dialog');\n    this.storage.delete(peerId, keepLocal);\n  }\n\n  public dropDialogWithEvent(peerId: PeerId) {\n    const dropped = this.dropDialog(peerId);\n    if(dropped.length) {\n      this.rootScope.dispatchEvent('dialog_drop', {peerId, dialog: dropped[0]});\n    }\n\n    return dropped;\n  }\n\n  /**\n   * leaving chat, leaving channel, deleting private dialog\n   */\n  public dropDialogOnDeletion(peerId: PeerId) {\n    this.dropDialogWithEvent(peerId);\n    this.rootScope.dispatchEvent('peer_deleted', peerId);\n  }\n\n  public applyDialogs(dialogsResult: MessagesPeerDialogs.messagesPeerDialogs) {\n    // * В эту функцию попадут только те диалоги, в которых есть read_inbox_max_id и read_outbox_max_id, в отличие от тех, что будут в getTopMessages\n\n    // ! fix 'dialogFolder', maybe there is better way to do it, this only can happen by 'messages.getPinnedDialogs' by folder_id: 0\n    forEachReverse(dialogsResult.dialogs, (dialog, idx) => {\n      if(dialog._ === 'dialogFolder') {\n        dialogsResult.dialogs.splice(idx, 1);\n      }\n    });\n\n    this.appUsersManager.saveApiUsers(dialogsResult.users);\n    this.appChatsManager.saveApiChats(dialogsResult.chats);\n    this.appMessagesManager.saveMessages(dialogsResult.messages);\n\n    // this.appMessagesManager.log('applyConversation', dialogsResult);\n\n    const updatedDialogs: Map<PeerId, Dialog> = new Map();\n    (dialogsResult.dialogs as Dialog[]).forEach((dialog) => {\n      const peerId = this.appPeersManager.getPeerId(dialog.peer);\n      let topMid = dialog.top_message;\n\n      const topPendingMid = this.appMessagesManager.pendingTopMsgs[peerId];\n      if(topPendingMid) {\n        const topPendingMessage = this.appMessagesManager.getMessageByPeer(peerId, topPendingMid) as MyMessage;\n        const topMessage = this.appMessagesManager.getMessageByPeer(peerId, topMid) as MyMessage;\n        if(!topMid || (topPendingMessage && (!topMessage || topPendingMessage?.date > topMessage?.date))) {\n          dialog.top_message = topMid = topPendingMid;\n          this.appMessagesManager.getHistoryStorage(peerId).maxId = topPendingMid;\n        }\n      }\n\n      /* const d = Object.assign({}, dialog);\n      if(peerId === 239602833) {\n        this.log.error('applyConversation lun', dialog, d);\n      } */\n\n      if(topMid || dialog.draft?._ === 'draftMessage') {\n        if(this.saveDialog(dialog)) {\n          updatedDialogs.set(peerId, dialog);\n        }\n      } else {\n        this.dropDialogWithEvent(peerId);\n      }\n\n      const updates = this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n      if(updates !== undefined) {\n        for(const update of updates) {\n          updates.delete(update);\n          this.apiUpdatesManager.saveUpdate(update);\n        }\n\n        if(!updates.size) {\n          delete this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n        }\n      }\n    });\n\n    if(updatedDialogs.size) {\n      this.rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n    }\n  }\n\n  private getDialogOffsetDate(dialog: Dialog) {\n    const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n    return message?.date || 0;\n  }\n\n  public canSaveDialogByPeerId(peerId: PeerId) {\n    if(peerId.isAnyChat()) {\n      const chat: Chat = this.appChatsManager.getChat(peerId.toChatId());\n      // ! chatForbidden stays for chat where you're kicked\n      if(\n        chat._ === 'channelForbidden' ||\n        // || chat._ === 'chatForbidden'\n        (chat as Chat.chat).pFlags.left\n        // || (chat as any).pFlags.kicked\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Won't save migrated from peer, forbidden peers, left and kicked\n   */\n  public saveDialog(dialog: Dialog, folderId = dialog.folder_id ?? FOLDER_ID_ALL, ignoreOffsetDate?: boolean, saveGlobalOffset?: boolean) {\n    const peerId = this.appPeersManager.getPeerId(dialog.peer);\n    if(!peerId) {\n      console.error('saveConversation no peerId???', dialog, folderId);\n      return false;\n    }\n\n    if(dialog._ !== 'dialog'/*  || peerId === 239602833 */) {\n      console.error('saveConversation not regular dialog', dialog, Object.assign({}, dialog));\n    }\n\n    if(!this.canSaveDialogByPeerId(peerId)) {\n      return false;\n    }\n\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : NULL_PEER_ID;\n\n    const peerText = this.appPeersManager.getPeerSearchText(peerId);\n    this.dialogsIndex.indexObject(peerId, peerText);\n\n    const wasDialogBefore = this.getDialogOnly(peerId);\n\n    let mid: number, message: MyMessage;\n    if(dialog.top_message) {\n      mid = generateMessageId(dialog.top_message);// dialog.top_message;\n\n      // preserve outgoing message\n      const wasTopMessage = wasDialogBefore?.top_message && this.appMessagesManager.getMessageByPeer(peerId, wasDialogBefore.top_message) as MyMessage;\n      if(wasTopMessage?.pFlags?.is_outgoing && wasDialogBefore.top_message >= mid) {\n        mid = wasDialogBefore.top_message;\n      }\n\n      message = this.appMessagesManager.getMessageByPeer(peerId, mid);\n    } else {\n      mid = this.appMessagesManager.generateTempMessageId(peerId);\n      message = {\n        _: 'message',\n        id: mid,\n        mid,\n        from_id: this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId(false)),\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\n        deleted: true,\n        pFlags: {out: true},\n        date: 0,\n        message: ''\n      };\n      this.appMessagesManager.saveMessages([message], {isOutgoing: true});\n    }\n\n    if(!message?.pFlags) {\n      this.appMessagesManager.log.error('saveConversation no message:', dialog, message);\n    }\n\n    if(!channelId && peerId.isAnyChat()) {\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\n      if(chat && chat.migrated_to && chat.pFlags.deactivated) {\n        const migratedToPeer = this.appPeersManager.getPeerId(chat.migrated_to);\n        this.appMessagesManager.migratedFromTo[peerId] = migratedToPeer;\n        this.appMessagesManager.migratedToFrom[migratedToPeer] = peerId;\n        dialog.migratedTo = migratedToPeer;\n        // return;\n      }\n    }\n\n    dialog.top_message = mid;\n    // dialog.unread_count = wasDialogBefore && dialog.read_inbox_max_id === getServerMessageId(wasDialogBefore.read_inbox_max_id) ? wasDialogBefore.unread_count : dialog.unread_count;\n    dialog.read_inbox_max_id = generateMessageId(wasDialogBefore && !dialog.read_inbox_max_id ? wasDialogBefore.read_inbox_max_id : dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = generateMessageId(wasDialogBefore && !dialog.read_outbox_max_id ? wasDialogBefore.read_outbox_max_id : dialog.read_outbox_max_id);\n\n    if(dialog.folder_id === undefined) {\n      if(dialog._ === 'dialog') {\n        // ! СЛОЖНО ! СМОТРИ В getTopMessages\n        dialog.folder_id = wasDialogBefore ? wasDialogBefore.folder_id : folderId;\n      }/*  else if(dialog._ === 'dialogFolder') {\n        dialog.folder_id = dialog.folder.id;\n      } */\n    }\n\n    dialog.draft = this.appDraftsManager.saveDraft(peerId, 0, dialog.draft);\n    dialog.peerId = peerId;\n    // dialog.indexes ??= {} as any;\n\n    // if(dialog.peerId === -) {\n    //   debugger;\n    // }\n\n    // Because we saved message without dialog present\n    if(message && message.pFlags.is_outgoing) {\n      const isOut = message.pFlags.out;\n      if(mid > dialog[isOut ? 'read_outbox_max_id' : 'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n\n        if(!dialog.unread_count && !isOut) {\n          ++dialog.unread_count;\n        }\n      } else {\n        delete message.pFlags.unread;\n      }\n    }\n\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const slice = historyStorage.history.slice;\n    /* if(historyStorage === undefined) { // warning\n      historyStorage.history.push(mid);\n    } else  */if(!slice.length) {\n      historyStorage.history.unshift(mid);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    } else if(!slice.isEnd(SliceEnd.Bottom)) { // * this will probably never happen, however, if it does, then it will fix slice with top_message\n      const slice = historyStorage.history.insertSlice([mid]);\n      slice.setEnd(SliceEnd.Bottom);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    }\n\n    historyStorage.maxId = mid;\n    historyStorage.readMaxId = dialog.read_inbox_max_id;\n    historyStorage.readOutboxMaxId = dialog.read_outbox_max_id;\n\n    this.appNotificationsManager.savePeerSettings({\n      peerId,\n      settings: dialog.notify_settings\n    });\n\n    if(channelId && dialog.pts) {\n      this.apiUpdatesManager.addChannelState(channelId, dialog.pts);\n    }\n\n    this.generateIndexForDialog(dialog);\n\n    if(wasDialogBefore) {\n      // fix unread count\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(wasDialogBefore);\n      safeReplaceObject(wasDialogBefore, dialog);\n      releaseUnreadCount();\n    }\n\n    this.pushDialog(dialog, message?.date, ignoreOffsetDate, saveGlobalOffset);\n\n    return true;\n  }\n\n  public getDialogs(query = '', offsetIndex?: number, limit = 20, folderId: number = 0, skipMigrated = false): {\n    dialogs: Dialog[],\n    count: number,\n    isTopEnd: boolean,\n    isEnd: boolean\n  } | Promise<{\n    dialogs: Dialog[],\n    count: number,\n    isTopEnd: boolean,\n    isEnd: boolean\n  }> {\n    if(!REAL_FOLDERS.has(folderId)) {\n      const promises: Promise<any>[] = [];\n\n      const fillContactsResult = this.appUsersManager.fillContacts();\n      if(!fillContactsResult.cached) {\n        promises.push(fillContactsResult.promise);\n      }\n\n      const reloadMissingDialogsPromise = this.filtersStorage.reloadMissingPeerIds(folderId);\n      if(reloadMissingDialogsPromise) {\n        promises.push(reloadMissingDialogsPromise);\n      }\n\n      if(promises.length) {\n        return Promise.all(promises).then(() => {\n          return this.getDialogs(query, offsetIndex, limit, folderId, skipMigrated);\n        });\n      }\n    }\n\n    // let's load only first pages by certain folderId. next pages will load without folder filtering\n    const realFolderId: REAL_FOLDER_ID = !REAL_FOLDERS.has(folderId) || this.getOffsetDate(folderId) ? GLOBAL_FOLDER_ID : folderId as REAL_FOLDER_ID;\n    let curDialogStorage = this.getFolderDialogs(folderId, skipMigrated);\n\n    const indexKey = this.getDialogIndexKeyByFilterId(folderId);\n\n    if(query) {\n      if(!limit || this.cachedResults.query !== query || this.cachedResults.folderId !== folderId) {\n        this.cachedResults.query = query;\n        this.cachedResults.folderId = folderId;\n\n        const results = this.dialogsIndex.search(query);\n\n        const dialogs: Dialog[] = [];\n        for(const peerId in this.dialogs) {\n          const dialog = this.dialogs[peerId];\n          if(results.has(dialog.peerId) && dialog.folder_id === folderId) {\n            dialogs.push(dialog);\n          }\n        }\n\n        dialogs.sort((d1, d2) => this.getDialogIndex(d2, indexKey) - this.getDialogIndex(d1, indexKey));\n        this.cachedResults.dialogs = dialogs;\n        this.cachedResults.count = dialogs.length;\n      }\n\n      curDialogStorage = this.cachedResults.dialogs;\n    } else {\n      this.cachedResults.query = '';\n    }\n\n    let offset = 0;\n    if(offsetIndex > 0) {\n      for(let length = curDialogStorage.length; offset < length; ++offset) {\n        if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n          break;\n        }\n      }\n    }\n\n    const loadedAll = this.isDialogsLoaded(realFolderId);\n    const isEnoughDialogs = curDialogStorage.length >= (offset + limit);\n    if(query || loadedAll || isEnoughDialogs) {\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: loadedAll ? curDialogStorage.length : null,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        isEnd: (query || loadedAll) && (offset + limit) >= curDialogStorage.length\n      };\n    }\n\n    return this.appMessagesManager.getTopMessages(limit, realFolderId).then((result) => {\n      // const curDialogStorage = this[folderId];\n      if(skipMigrated) {\n        curDialogStorage = this.getFolderDialogs(folderId, skipMigrated);\n      }\n\n      offset = 0;\n      if(offsetIndex > 0) {\n        for(let length = curDialogStorage.length; offset < length; ++offset) {\n          if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n            break;\n          }\n        }\n      }\n\n      // this.log.warn(offset, offset + limit, curDialogStorage.dialogs.length, this.dialogs.length);\n\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: result.count === undefined ? curDialogStorage.length : result.count,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        // isEnd: this.isDialogsLoaded(realFolderId) && (offset + limit) >= curDialogStorage.length\n        isEnd: result.isEnd\n      };\n    });\n  }\n\n  // only 0 and 1 folders\n  private onUpdateFolderPeers = (update: Update.updateFolderPeers) => {\n    // this.log('updateFolderPeers', update);\n    const peers = update.folder_peers;\n\n    peers.forEach((folderPeer) => {\n      const {folder_id, peer} = folderPeer;\n\n      const peerId = this.appPeersManager.getPeerId(peer);\n      const dialog = this.dropDialog(peerId)[0];\n      if(dialog) {\n        if(dialog.pFlags?.pinned) {\n          this.handleDialogUnpinning(dialog, folder_id);\n        }\n\n        dialog.folder_id = folder_id as REAL_FOLDER_ID;\n        this.generateIndexForDialog(dialog);\n        this.pushDialog(dialog); // need for simultaneously updatePinnedDialogs\n      }\n\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n    });\n  };\n\n  private onUpdateDialogPinned = (update: Update.updateDialogPinned) => {\n    const folderId = update.folder_id ?? FOLDER_ID_ALL;\n    // this.log('updateDialogPinned', update);\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    // этот код внизу никогда не сработает, в папках за пиннед отвечает updateDialogFilter\n    /* if(update.folder_id > 1) {\n      const filter = this.filtersStorage.filters[update.folder_id];\n      if(update.pFlags.pinned) {\n        filter.pinned_peers.unshift(peerId);\n      } else {\n        filter.pinned_peers.findAndSplice((p) => p === peerId);\n      }\n    } */\n\n    if(dialog) {\n      if(!update.pFlags.pinned) {\n        this.handleDialogUnpinning(dialog, folderId);\n      } else { // means set\n        dialog.pFlags.pinned = true;\n      }\n\n      this.generateIndexForDialog(dialog);\n    }\n\n    this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n  };\n\n  private onUpdatePinnedDialogs = (update: Update.updatePinnedDialogs) => {\n    const folderId = update.folder_id ?? FOLDER_ID_ALL;\n\n    const handleOrder = (order: PeerId[]) => {\n      this.resetPinnedOrder(folderId);\n      this.pinnedOrders[folderId].push(...order);\n      this.savePinnedOrders();\n      order.reverse(); // index must be higher\n      order.forEach((peerId) => {\n        newPinned[peerId] = true;\n\n        const dialog = this.getDialogOnly(peerId);\n        this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n        if(!dialog) {\n          return;\n        }\n\n        dialog.pFlags.pinned = true;\n        this.generateIndexForDialog(dialog);\n      });\n\n      const dialogs = this.getFolderDialogs(folderId, false);\n      for(const dialog of dialogs) {\n        if(!dialog.pFlags.pinned) {\n          break;\n        }\n\n        const peerId = dialog.peerId;\n        if(!newPinned[peerId]) {\n          this.appMessagesManager.scheduleHandleNewDialogs(peerId);\n        }\n      }\n    };\n\n    // this.log('updatePinnedDialogs', update);\n    const newPinned: {[peerId: PeerId]: true} = {};\n    if(!update.order) {\n      this.apiManager.invokeApi('messages.getPinnedDialogs', {\n        folder_id: folderId\n      }).then((dialogsResult) => {\n        // * for test reordering and rendering\n        // dialogsResult.dialogs.reverse();\n\n        this.applyDialogs(dialogsResult);\n\n        handleOrder(dialogsResult.dialogs.map((d) => d.peerId));\n\n        /* dialogsResult.dialogs.forEach((dialog) => {\n          newPinned[dialog.peerId] = true;\n        });\n\n        this.dialogsStorage.getFolder(folderId).forEach((dialog) => {\n          const peerId = dialog.peerId;\n          if(dialog.pFlags.pinned && !newPinned[peerId]) {\n            this.newDialogsToHandle[peerId] = {reload: true};\n            this.scheduleHandleNewDialogs();\n          }\n        }); */\n      });\n\n      return;\n    }\n\n    // this.log('before order:', this.dialogsStorage[0].map((d) => d.peerId));\n\n    handleOrder(update.order.map((peer) => this.appPeersManager.getPeerId((peer as DialogPeer.dialogPeer).peer)));\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {DialogFilter, Update} from '../../layer';\nimport type {Dialog} from '../appManagers/appMessagesManager';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport copy from '../../helpers/object/copy';\nimport {AppManager} from '../appManagers/manager';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport assumeType from '../../helpers/assumeType';\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, REAL_FOLDERS, REAL_FOLDER_ID, START_LOCAL_ID} from '../mtproto/mtproto_config';\nimport makeError from '../../helpers/makeError';\n\nexport type MyDialogFilter = DialogFilter.dialogFilter;\n\nconst convertment = [\n  ['pinned_peers', 'pinnedPeerIds'],\n  ['exclude_peers', 'excludePeerIds'],\n  ['include_peers', 'includePeerIds']\n] as ['pinned_peers' | 'exclude_peers' | 'include_peers', 'pinnedPeerIds' | 'excludePeerIds' | 'includePeerIds'][];\n\nconst PREPENDED_FILTERS = REAL_FOLDERS.size;\n\nconst LOCAL_FILTER: MyDialogFilter = {\n  _: 'dialogFilter',\n  pFlags: {},\n  flags: 0,\n  id: 0,\n  title: '',\n  exclude_peers: [],\n  include_peers: [],\n  pinned_peers: [],\n  excludePeerIds: [],\n  includePeerIds: [],\n  pinnedPeerIds: []\n};\n\nexport default class FiltersStorage extends AppManager {\n  private filters: {[filterId: string]: MyDialogFilter};\n  private filtersArr: Array<MyDialogFilter>;\n  private localFilters: {[filterId: string]: MyDialogFilter};\n  private localId: number;\n  private reloadedPeerIds: Set<PeerId>;\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateDialogFilter: this.onUpdateDialogFilter,\n\n      updateDialogFilters: this.onUpdateDialogFilters,\n\n      updateDialogFilterOrder: this.onUpdateDialogFilterOrder\n    });\n\n    // delete peers when dialog is being dropped\n    /* rootScope.addEventListener('peer_deleted', (peerId) => {\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        let modified = false;\n        [filter.pinned_peers, filter.include_peers, filter.exclude_peers].forEach((arr) => {\n          forEachReverse(arr, (inputPeer, idx) => {\n            if(getPeerId(inputPeer) === peerId) {\n              arr.splice(idx, 1);\n              modified = true;\n            }\n          });\n        });\n\n        if(modified) {\n          this.saveDialogFilter(filter, true);\n        }\n      }\n    }); */\n\n    this.rootScope.addEventListener('premium_toggle', () => {\n      this.onUpdateDialogFilters({_: 'updateDialogFilters'});\n    });\n\n    return this.appStateManager.getState().then((state) => {\n      const filtersArr = this.prependFilters(state.filtersArr);\n      filtersArr.map((filter) => {\n        this.saveDialogFilter(filter, false, true);\n      });\n    });\n  }\n\n  /**\n   * ! use it only with saving\n   */\n  private prependFilters(filters: DialogFilter[]) {\n    filters = filters.slice();\n\n    const allChatsFilter = this.localFilters[FOLDER_ID_ALL];\n    const archiveFilter = this.localFilters[FOLDER_ID_ARCHIVE];\n\n    const allChatsFilterIndex = filters.findIndex((filter) => filter._ === 'dialogFilterDefault' || filter.id === FOLDER_ID_ALL);\n    if(allChatsFilterIndex !== -1) filters[allChatsFilterIndex] = allChatsFilter;\n    else filters.unshift(allChatsFilter);\n\n    findAndSplice(filters, (filter) => (filter as MyDialogFilter).id === FOLDER_ID_ARCHIVE);\n    filters.splice(/* 1 */filters[0] === allChatsFilter ? 1 : 0, 0, archiveFilter);\n\n    this.localId = START_LOCAL_ID;\n    filters.forEach((filter) => {\n      delete filter.localId;\n    });\n\n    return filters;\n  }\n\n  private generateLocalFilter(id: REAL_FOLDER_ID) {\n    const filter: MyDialogFilter = {...copy(LOCAL_FILTER), id};\n    if(id === FOLDER_ID_ALL) {\n      filter.pFlags.exclude_archived = true;\n    } else if(id === FOLDER_ID_ARCHIVE) {\n      filter.pFlags.exclude_unarchived = true;\n    }\n\n    if(REAL_FOLDERS.has(id)) {\n      filter.pinnedPeerIds = this.dialogsStorage.getPinnedOrders(id);\n    }\n\n    return filter;\n  }\n\n  // private getLocalFilter(id: number) {\n  //   return this.filters[id] ??= this.generateLocalFilter(id);\n  // }\n\n  public clear = (init?: boolean) => {\n    if(!init) {\n      // safeReplaceObject(this.filters, {});\n      this.reloadedPeerIds.clear();\n      this.clearFilters();\n    } else {\n      this.filters = {};\n      this.filtersArr = [];\n      this.reloadedPeerIds = new Set();\n\n      this.localFilters = {};\n      for(const filterId of REAL_FOLDERS) {\n        this.localFilters[filterId] = this.generateLocalFilter(filterId as REAL_FOLDER_ID);\n      }\n    }\n\n    this.localId = START_LOCAL_ID;\n  };\n\n  private onUpdateDialogFilter = (update: Update.updateDialogFilter) => {\n    if(update.filter) {\n      this.saveDialogFilter(update.filter as any);\n    } else if(this.filters[update.id]) { // Папка удалена\n      // this.getDialogFilters(true);\n      this.rootScope.dispatchEvent('filter_delete', this.filters[update.id]);\n      delete this.filters[update.id];\n      findAndSplice(this.filtersArr, (filter) => (filter as DialogFilter.dialogFilter).id === update.id);\n    }\n\n    this.pushToState();\n  };\n\n  private onUpdateDialogFilters = (update: Update.updateDialogFilters) => {\n    // console.warn('updateDialogFilters', update);\n\n    const oldFilters = copy(this.filters);\n\n    this.getDialogFilters(true).then((filters) => {\n      for(const _filterId in oldFilters) {\n        const filterId = +_filterId;\n        if(!filters.find((filter) => filter.id === filterId)) { // * deleted\n          this.onUpdateDialogFilter({_: 'updateDialogFilter', id: filterId});\n        }\n      }\n\n      this.onUpdateDialogFilterOrder({_: 'updateDialogFilterOrder', order: filters.map((filter) => filter.id)});\n    });\n  };\n\n  private onUpdateDialogFilterOrder = (update: Update.updateDialogFilterOrder) => {\n    // console.log('updateDialogFilterOrder', update);\n\n    const order = update.order.slice();\n    if(!order.includes(FOLDER_ID_ARCHIVE)) {\n      order.splice(order[0] === FOLDER_ID_ALL ? 1 : 0, 0, FOLDER_ID_ARCHIVE);\n    }\n\n    this.localId = START_LOCAL_ID;\n    order.forEach((filterId) => {\n      const filter = this.filters[filterId];\n      delete filter.localId;\n      this.setLocalId(filter);\n    });\n\n    this.rootScope.dispatchEvent('filter_order', order);\n\n    this.pushToState();\n  };\n\n  private pushToState() {\n    this.appStateManager.pushToState('filtersArr', this.filtersArr);\n  }\n\n  public testDialogForFilter(dialog: Dialog, filter: MyDialogFilter) {\n    if(REAL_FOLDERS.has(filter.id)) {\n      return dialog.folder_id === filter.id && this.dialogsStorage.canSaveDialogByPeerId(dialog.peerId);\n    }\n\n    const peerId = dialog.peerId;\n\n    // * check whether dialog exists\n    if(!this.appMessagesManager.getDialogOnly(peerId)) {\n      return false;\n    }\n\n    // exclude_peers\n    if(filter.excludePeerIds.includes(peerId)) {\n      return false;\n    }\n\n    // include_peers\n    if(filter.includePeerIds.includes(peerId)) {\n      return true;\n    }\n\n    const pFlags = filter.pFlags;\n\n    // exclude_archived\n    if(pFlags.exclude_archived && dialog.folder_id === FOLDER_ID_ARCHIVE) {\n      return false;\n    }\n\n    // exclude_read\n    if(pFlags.exclude_read && !this.appMessagesManager.isDialogUnread(dialog)) {\n      return false;\n    }\n\n    // exclude_muted\n    if(pFlags.exclude_muted && this.appNotificationsManager.isPeerLocalMuted(peerId) && !(dialog.unread_mentions_count && dialog.unread_count)) {\n      return false;\n    }\n\n    if(this.appPeersManager.isAnyChat(peerId)) {\n      // broadcasts\n      if(pFlags.broadcasts && this.appPeersManager.isBroadcast(peerId)) {\n        return true;\n      }\n\n      // groups\n      if(pFlags.groups && this.appPeersManager.isAnyGroup(peerId)) {\n        return true;\n      }\n    } else {\n      const userId = peerId.toUserId();\n\n      // bots\n      if(this.appUsersManager.isBot(userId)) {\n        return !!pFlags.bots;\n      }\n\n      // non_contacts\n      if(pFlags.non_contacts && !this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n\n      // contacts\n      if(pFlags.contacts && this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public testDialogForFilterId(dialog: Dialog, filterId: number) {\n    return this.testDialogForFilter(dialog, this.filters[filterId]);\n  }\n\n  public getFilter(filterId: number) {\n    return this.filters[filterId];\n  }\n\n  public getFilters() {\n    return this.filters;\n  }\n\n  public clearFilters() {\n    const filters = this.getFilters();\n    for(const filterId in filters) { // delete filters\n      if(REAL_FOLDERS.has(+filterId)) {\n        continue;\n      }\n\n      this.onUpdateDialogFilter({\n        _: 'updateDialogFilter',\n        id: +filterId\n      });\n    }\n  }\n\n  public async toggleDialogPin(peerId: PeerId, filterId: number) {\n    const filter = this.filters[filterId];\n\n    const index = filter.pinnedPeerIds.indexOf(peerId);\n    const wasPinned = index !== -1;\n\n    if(wasPinned) {\n      filter.pinned_peers.splice(index, 1);\n      filter.pinnedPeerIds.splice(index, 1);\n    }\n\n    if(!wasPinned) {\n      if(filter.pinned_peers.length >= (await this.apiManager.getConfig()).pinned_infolder_count_max) {\n        return Promise.reject(makeError('PINNED_DIALOGS_TOO_MUCH'));\n      }\n\n      filter.pinned_peers.unshift(this.appPeersManager.getInputPeerById(peerId));\n      filter.pinnedPeerIds.unshift(peerId);\n    }\n\n    return this.updateDialogFilter(filter);\n  }\n\n  public createDialogFilter(filter: MyDialogFilter, prepend?: boolean) {\n    const maxId = Math.max(1, ...Object.keys(this.filters).map((i) => +i));\n    filter = copy(filter);\n    filter.id = maxId + 1;\n    return this.updateDialogFilter(filter, undefined, prepend);\n  }\n\n  public updateDialogFilter(filter: MyDialogFilter, remove = false, prepend = false) {\n    const flags = remove ? 0 : 1;\n\n    return this.apiManager.invokeApi('messages.updateDialogFilter', {\n      flags,\n      id: filter.id,\n      filter: remove ? undefined : this.getOutputDialogFilter(filter)\n    }).then((bool: boolean) => { // возможно нужна проверка и откат, если результат не ТРУ\n      // console.log('updateDialogFilter bool:', bool);\n\n      if(bool) {\n        /* if(!this.filters[filter.id]) {\n          this.saveDialogFilter(filter);\n        }\n\n        rootScope.$broadcast('filter_update', filter); */\n\n        this.onUpdateDialogFilter({\n          _: 'updateDialogFilter',\n          id: filter.id,\n          filter: remove ? undefined : filter as any\n        });\n\n        if(prepend) {\n          const f: MyDialogFilter[] = [];\n          for(const filterId in this.filters) {\n            const filter = this.filters[filterId];\n            ++filter.localId;\n            f.push(filter);\n          }\n\n          filter.localId = START_LOCAL_ID;\n\n          const order = f.sort((a, b) => a.localId - b.localId).map((filter) => filter.id);\n          this.onUpdateDialogFilterOrder({\n            _: 'updateDialogFilterOrder',\n            order\n          });\n        }\n      }\n\n      return bool;\n    });\n  }\n\n  public getOutputDialogFilter(filter: MyDialogFilter) {\n    const c = copy(filter);\n    /* convertment.forEach(([from, to]) => {\n      c[from] = c[to].map((peerId) => this.appPeersManager.getInputPeerById(peerId));\n    }); */\n\n    this.filterIncludedPinnedPeers(filter);\n\n    return c;\n  }\n\n  private filterIncludedPinnedPeers(filter: MyDialogFilter) {\n    forEachReverse(filter.includePeerIds, (peerId, idx) => {\n      if(filter.pinnedPeerIds.includes(peerId)) {\n        filter.include_peers.splice(idx, 1);\n        filter.includePeerIds.splice(idx, 1);\n      }\n    });\n  }\n\n  // private spliceMissingPeerIds(filterId: number, type: ArgumentTypes<FiltersStorage['reloadMissingPeerIds']>[1], missingPeerIds: PeerId[]) {\n  //   const filter = this.getFilter(filterId);\n  //   const peers = filter && filter[type];\n  //   if(!peers?.length) {\n  //     return;\n  //   }\n\n  //   let spliced = false;\n  //   missingPeerIds.forEach((peerId) => {\n  //     const inputPeer = findAndSplice(peers, (inputPeer) => getPeerId(inputPeer) === peerId);\n  //     if(inputPeer) {\n  //       spliced = true;\n  //     }\n  //   });\n\n  //   if(spliced) {\n  //     this.onUpdateDialogFilter({\n  //       _: 'updateDialogFilter',\n  //       id: filterId,\n  //       filter\n  //     });\n  //   }\n  // }\n\n  public reloadMissingPeerIds(filterId: number, type: 'pinned_peers' | 'include_peers' | 'exclude_peers' = 'pinned_peers') {\n    const filter = this.getFilter(filterId);\n    const peers = filter && filter[type];\n    if(!peers?.length) {\n      return;\n    }\n\n    // const missingPeerIds: PeerId[] = [];\n    const reloadDialogs = peers.filter((inputPeer) => {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      const isAlreadyReloaded = this.reloadedPeerIds.has(peerId);\n      const dialog = this.appMessagesManager.getDialogOnly(peerId);\n      // if(isAlreadyReloaded && !dialog) {\n      //   missingPeerIds.push(peerId);\n      // }\n\n      const reload = !isAlreadyReloaded && !dialog;\n      return reload;\n    });\n\n    if(!reloadDialogs.length) {\n      // if(missingPeerIds.length) {\n      //   this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n      // }\n\n      return;\n    }\n\n    const reloadPromises = reloadDialogs.map((inputPeer) => {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      const promise = this.appMessagesManager.reloadConversation(inputPeer)\n      .then((dialog) => {\n        this.reloadedPeerIds.add(peerId);\n\n        return dialog ? undefined : peerId;\n      });\n\n      return promise;\n    });\n\n    const reloadPromise = Promise.all(reloadPromises).then((missingPeerIds) => {\n      missingPeerIds = missingPeerIds.filter(Boolean);\n      if(!missingPeerIds.length) {\n        return;\n      }\n\n      // this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n    });\n\n    return reloadPromise;\n  }\n\n  public async getDialogFilters(overwrite = false): Promise<MyDialogFilter[]> {\n    const keys = Object.keys(this.filters);\n    if(keys.length > PREPENDED_FILTERS && !overwrite) {\n      return keys.map((filterId) => this.filters[filterId]).sort((a, b) => a.localId - b.localId);\n    }\n\n    const filters = await this.apiManager.invokeApiSingle('messages.getDialogFilters');\n    const prepended = this.prependFilters(filters);\n    return prepended.map((filter) => this.saveDialogFilter(filter, overwrite)).filter(Boolean);\n  }\n\n  public getSuggestedDialogsFilters() {\n    return this.apiManager.invokeApi('messages.getSuggestedDialogFilters');\n  }\n\n  public saveDialogFilter(filter: DialogFilter, update = true, silent?: boolean) {\n    // defineNotNumerableProperties(filter, ['includePeerIds', 'excludePeerIds', 'pinnedPeerIds']);\n\n    if(filter._ === 'dialogFilterDefault') {\n      filter = this.localFilters[FOLDER_ID_ALL];\n    }\n\n    assumeType<MyDialogFilter>(filter);\n    if(!REAL_FOLDERS.has(filter.id)) {\n      convertment.forEach(([from, to]) => {\n        assumeType<MyDialogFilter>(filter);\n        filter[to] = filter[from].map((peer) => this.appPeersManager.getPeerId(peer));\n      });\n\n      this.filterIncludedPinnedPeers(filter);\n\n      filter.include_peers = filter.pinned_peers.concat(filter.include_peers);\n      filter.includePeerIds = filter.pinnedPeerIds.concat(filter.includePeerIds);\n    }\n\n    const oldFilter = this.filters[filter.id];\n    if(oldFilter) {\n      Object.assign(oldFilter, filter);\n    } else {\n      this.filters[filter.id] = filter;\n    }\n\n    this.setLocalId(filter);\n\n    if(!silent) {\n      if(update) {\n        this.rootScope.dispatchEvent('filter_update', filter);\n      } else if(!oldFilter) {\n        this.rootScope.dispatchEvent('filter_new', filter);\n      }\n    }\n\n    return filter;\n  }\n\n  private setLocalId(filter: MyDialogFilter) {\n    if(filter.localId !== undefined) {\n      if(filter.localId >= this.localId) {\n        this.localId = filter.localId + 1;\n      }\n    } else {\n      filter.localId = this.localId++ as MyDialogFilter['localId'];\n      findAndSplice(this.filtersArr, (_filter) => _filter.id === filter.id);\n      this.filtersArr.push(filter);\n      this.pushToState();\n    }\n  }\n\n  public async isFilterIdAvailable(filterId: number) {\n    if(REAL_FOLDERS.has(filterId)) {\n      return true;\n    }\n\n    const limit = await this.apiManager.getLimit('folders');\n    const isFolderAvailable = this.filtersArr.filter((filter) => !REAL_FOLDERS.has(filter.id)).slice(0, limit).some((filter) => filter.id === filterId);\n\n    return isFolderAvailable;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function applyMixins(derivedCtor: any, constructors: any[]) {\r\n  // const callbacks: Array<(...args: any[]) => any> = [];\r\n\r\n  constructors.forEach((baseCtor) => {\r\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\r\n      const value: PropertyDescriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null);\r\n      /* if(name === '_constructor') {\r\n        callbacks.push(value.value);\r\n        return;\r\n      } else  */if(name === 'constructor') {\r\n        return;\r\n      }\r\n\r\n      Object.defineProperty(\r\n        derivedCtor.prototype,\r\n        name,\r\n        value\r\n      );\r\n    });\r\n  });\r\n\r\n  // if(callbacks.length) {\r\n  //   function c(...args: any[]): any {\r\n  //     callbacks.forEach((cb, idx) => {\r\n  //       // @ts-ignore\r\n  //       cb.apply(this, args[idx] || []);\r\n  //     });\r\n  //   };\r\n\r\n  //   Object.defineProperty(derivedCtor.prototype, 'superConstructor', {\r\n  //     configurable: true,\r\n  //     enumerable: true,\r\n  //     value: c,\r\n  //     writable: true\r\n  //   });\r\n  // }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport DEBUG from '../../config/debug';\nimport {ConstructorDeclMap, Message, MessageEntity, MessageFwdHeader, Peer, Update, Updates} from '../../layer';\nimport {logger, LogTypes} from '../logger';\nimport assumeType from '../../helpers/assumeType';\nimport App from '../../config/app';\nimport filterUnique from '../../helpers/array/filterUnique';\nimport {AppManager} from './manager';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport ctx from '../../environment/ctx';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport applyMixins from '../../helpers/applyMixins';\n\ntype UpdatesState = {\n  pendingPtsUpdates: (Update & {pts: number, pts_count: number})[],\n  pendingSeqUpdates?: {[seq: number]: {seq: number, date: number, updates: any[]}},\n  syncPending: {\n    seqAwaiting?: number,\n    ptsAwaiting?: true,\n    timeout: number\n  },\n  syncLoading: Promise<void>,\n\n  seq?: number,\n  pts?: number,\n  date?: number,\n  lastPtsUpdateTime?: number\n};\n\nconst SYNC_DELAY = 6;\n\nclass ApiUpdatesManager {\n  public updatesState: UpdatesState = {\n    pendingPtsUpdates: [],\n    pendingSeqUpdates: {},\n    syncPending: null,\n    syncLoading: null\n  };\n\n  private channelStates: {[channelId: ChatId]: UpdatesState} = {};\n  private attached = false;\n\n  private log = logger('UPDATES', LogTypes.Error | LogTypes.Warn | LogTypes.Log/*  | LogTypes.Debug */);\n  private debug = DEBUG;\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  private setProxy() {\n    const self = this;\n    this.updatesState = new Proxy(this.updatesState, {\n      set: function(target: ApiUpdatesManager['updatesState'], key: keyof ApiUpdatesManager['updatesState'], value: ApiUpdatesManager['updatesState'][typeof key]) {\n        // @ts-ignore\n        target[key] = value;\n        self.saveUpdatesState();\n        return true;\n      }\n    });\n  }\n\n  public saveUpdatesState() {\n    const us = this.updatesState;\n    this.appStateManager.pushToState('updates', {\n      seq: us.seq,\n      pts: us.pts,\n      date: us.date\n    });\n  }\n\n  private popPendingSeqUpdate() {\n    const state = this.updatesState;\n    const nextSeq = state.seq + 1;\n    const pendingUpdatesData = state.pendingSeqUpdates[nextSeq];\n    if(!pendingUpdatesData) {\n      return false;\n    }\n\n    const updates = pendingUpdatesData.updates;\n    for(let i = 0, length = updates.length; i < length; ++i) {\n      this.saveUpdate(updates[i]);\n    }\n\n    state.seq = pendingUpdatesData.seq;\n    if(pendingUpdatesData.date && state.date < pendingUpdatesData.date) {\n      state.date = pendingUpdatesData.date;\n    }\n    delete state.pendingSeqUpdates[nextSeq];\n\n    if(!this.popPendingSeqUpdate() &&\n      state.syncPending &&\n      state.syncPending.seqAwaiting &&\n      state.seq >= state.syncPending.seqAwaiting) {\n      if(!state.syncPending.ptsAwaiting) {\n        clearTimeout(state.syncPending.timeout);\n        state.syncPending = null;\n      } else {\n        delete state.syncPending.seqAwaiting;\n      }\n    }\n\n    return true;\n  }\n\n  private popPendingPtsUpdate(channelId: ChatId) {\n    const curState = channelId ? this.getChannelState(channelId) : this.updatesState;\n    if(!curState.pendingPtsUpdates.length) {\n      return false;\n    }\n\n    curState.pendingPtsUpdates.sort((a, b) => {\n      return a.pts - b.pts;\n    });\n    // this.log('pop update', channelId, curState.pendingPtsUpdates)\n\n    let curPts = curState.pts;\n    let goodPts = 0;\n    let goodIndex = 0;\n    for(let i = 0, length = curState.pendingPtsUpdates.length; i < length; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n      curPts += update.pts_count;\n      if(curPts >= update.pts) {\n        goodPts = update.pts;\n        goodIndex = i;\n      }\n    }\n\n    if(!goodPts) {\n      return false;\n    }\n\n    this.debug && this.log.debug('pop pending pts updates', goodPts, curState.pendingPtsUpdates.slice(0, goodIndex + 1));\n\n    curState.pts = goodPts;\n    for(let i = 0; i <= goodIndex; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n\n      // @ts-ignore\n      this.saveUpdate(update);\n    }\n    curState.pendingPtsUpdates.splice(0, goodIndex + 1);\n\n    if(!curState.pendingPtsUpdates.length && curState.syncPending) {\n      if(!curState.syncPending.seqAwaiting) {\n        clearTimeout(curState.syncPending.timeout);\n        curState.syncPending = null;\n      } else {\n        delete curState.syncPending.ptsAwaiting;\n      }\n    }\n\n    return true;\n  }\n\n  public forceGetDifference() {\n    if(!this.updatesState.syncLoading) {\n      this.getDifference();\n    }\n  }\n\n  public processLocalUpdate(update: Update) {\n    this.processUpdateMessage({\n      _: 'updateShort',\n      update\n    } as Updates);\n  }\n\n  public processUpdateMessage = (updateMessage: any, options: Partial<{\n    override: boolean\n  }> = {}) => {\n    // return forceGetDifference()\n    const processOpts = {\n      date: updateMessage.date,\n      seq: updateMessage.seq,\n      seqStart: updateMessage.seq_start\n      // ignoreSyncLoading: options.ignoreSyncLoading\n    };\n\n    this.debug && this.log.debug('processUpdateMessage', updateMessage);\n\n    switch(updateMessage._) {\n      case 'updatesTooLong':\n      case 'new_session_created':\n        this.forceGetDifference();\n        break;\n\n      case 'updateShort':\n        this.processUpdate(updateMessage.update, processOpts);\n        break;\n\n      case 'updateShortMessage':\n      case 'updateShortChatMessage': {\n        assumeType<Updates.updateShortChatMessage | Updates.updateShortMessage>(updateMessage);\n        this.debug && this.log.debug('updateShortMessage | updateShortChatMessage', {...updateMessage});\n        const isOut = updateMessage.pFlags.out;\n        const fromId = (updateMessage as Updates.updateShortChatMessage).from_id || (isOut ? this.appPeersManager.peerId : (updateMessage as Updates.updateShortMessage).user_id);\n        const toId = (updateMessage as Updates.updateShortChatMessage).chat_id ?\n          (updateMessage as Updates.updateShortChatMessage).chat_id.toPeerId(true) :\n          ((updateMessage as Updates.updateShortMessage).user_id.toPeerId(false) || this.appPeersManager.peerId);\n\n        this.processUpdate({\n          _: 'updateNewMessage',\n          message: {\n            _: 'message',\n            pFlags: updateMessage.pFlags,\n            id: updateMessage.id,\n            from_id: this.appPeersManager.getOutputPeer(fromId.toPeerId()),\n            peer_id: this.appPeersManager.getOutputPeer(toId),\n            date: updateMessage.date,\n            message: updateMessage.message,\n            fwd_from: updateMessage.fwd_from,\n            reply_to: updateMessage.reply_to,\n            entities: updateMessage.entities\n          },\n          pts: updateMessage.pts,\n          pts_count: updateMessage.pts_count\n        }, processOpts);\n        break;\n      }\n\n      case 'updatesCombined':\n      case 'updates':\n        this.appUsersManager.saveApiUsers(updateMessage.users, options.override);\n        this.appChatsManager.saveApiChats(updateMessage.chats, options.override);\n\n        updateMessage.updates.forEach((update: Update) => {\n          this.processUpdate(update, processOpts);\n        });\n        break;\n\n      default:\n        this.log.warn('Unknown update message', updateMessage);\n    }\n  };\n\n  private getDifference(first = false): Promise<void> {\n    // this.trace('Get full diff')\n    const updatesState = this.updatesState;\n    const wasSyncing = updatesState.syncLoading;\n    if(!wasSyncing) {\n      updatesState.pendingSeqUpdates = {};\n      updatesState.pendingPtsUpdates = [];\n    }\n\n    if(updatesState.syncPending) {\n      clearTimeout(updatesState.syncPending.timeout);\n      updatesState.syncPending = null;\n    }\n\n    const promise = this.apiManager.invokeApi('updates.getDifference', {\n      pts: updatesState.pts,\n      pts_total_limit: first /* && false  */? /* 50 */1200 : undefined,\n      date: updatesState.date,\n      qts: -1\n    }, {\n      timeout: 0x7fffffff\n    }).then((differenceResult) => {\n      this.debug && this.log.debug('Get diff result', differenceResult);\n\n      if(differenceResult._ === 'updates.differenceEmpty') {\n        this.debug && this.log.debug('apply empty diff', differenceResult.seq);\n        updatesState.date = differenceResult.date;\n        updatesState.seq = differenceResult.seq;\n        return;\n      }\n\n      // ! SORRY I'M SORRY I'M SORRY\n      if(first) {\n        this.rootScope.dispatchEvent('state_synchronizing');\n      }\n\n      if(differenceResult._ !== 'updates.differenceTooLong') {\n        this.appUsersManager.saveApiUsers(differenceResult.users);\n        this.appChatsManager.saveApiChats(differenceResult.chats);\n\n        // Should be first because of updateMessageID\n        // this.log('applying', differenceResult.other_updates.length, 'other updates')\n\n        differenceResult.other_updates.forEach((update) => {\n          switch(update._) {\n            case 'updateChannelTooLong':\n            case 'updateNewChannelMessage':\n            case 'updateEditChannelMessage':\n              this.processUpdate(update);\n              return;\n          }\n\n          this.saveUpdate(update);\n        });\n\n        // this.log('applying', differenceResult.new_messages.length, 'new messages')\n        differenceResult.new_messages.forEach((apiMessage) => {\n          this.saveUpdate({\n            _: 'updateNewMessage',\n            message: apiMessage,\n            pts: updatesState.pts,\n            pts_count: 0\n          });\n        });\n\n        const nextState = differenceResult._ === 'updates.difference' ? differenceResult.state : differenceResult.intermediate_state;\n        updatesState.seq = nextState.seq;\n        updatesState.pts = nextState.pts;\n        updatesState.date = nextState.date;\n      } else {\n        updatesState.pts = differenceResult.pts;\n        updatesState.date = (Date.now() / 1000 | 0) + this.timeManager.getServerTimeOffset();\n        delete updatesState.seq;\n\n        this.channelStates = {};\n\n        this.log.warn('getDifference:', differenceResult._);\n        this.onDifferenceTooLong();\n      }\n\n      // this.log('apply diff', updatesState.seq, updatesState.pts)\n\n      if(differenceResult._ === 'updates.differenceSlice') {\n        return this.getDifference();\n      } else {\n        this.debug && this.log.debug('finished get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(updatesState, promise);\n    }\n\n    return promise;\n  }\n\n  private getChannelDifference(channelId: ChatId): Promise<void> {\n    const channelState = this.getChannelState(channelId);\n    const wasSyncing = channelState.syncLoading;\n    if(!wasSyncing) {\n      channelState.pendingPtsUpdates = [];\n    }\n\n    if(channelState.syncPending) {\n      clearTimeout(channelState.syncPending.timeout);\n      channelState.syncPending = null;\n    }\n\n    const log = this.debug ? this.log.bindPrefix('getChannelDifference-' + channelId) : undefined;\n    // this.log.trace('Get channel diff', appChatsManager.getChat(channelId), channelState.pts);\n    const promise = this.apiManager.invokeApi('updates.getChannelDifference', {\n      channel: this.appChatsManager.getChannelInput(channelId),\n      filter: {_: 'channelMessagesFilterEmpty'},\n      pts: channelState.pts,\n      limit: 30\n    }, {timeout: 0x7fffffff}).then((differenceResult) => {\n      log?.debug('diff result', differenceResult)\n      channelState.pts = 'pts' in differenceResult ? differenceResult.pts : undefined;\n\n      if(differenceResult._ === 'updates.channelDifferenceEmpty') {\n        // log?.debug('apply channel empty diff', differenceResult);\n        return;\n      }\n\n      if(differenceResult._ === 'updates.channelDifferenceTooLong') {\n        // log?.debug('channel diff too long', differenceResult);\n        delete this.channelStates[channelId];\n\n        this.saveUpdate({_: 'updateChannelReload', channel_id: channelId});\n        return;\n      }\n\n      this.appUsersManager.saveApiUsers(differenceResult.users);\n      this.appChatsManager.saveApiChats(differenceResult.chats);\n\n      // Should be first because of updateMessageID\n      log?.debug('applying', differenceResult.other_updates.length, 'channel other updates');\n      differenceResult.other_updates.forEach((update) => {\n        this.saveUpdate(update);\n      });\n\n      log?.debug('applying', differenceResult.new_messages.length, 'channel new messages');\n      differenceResult.new_messages.forEach((apiMessage) => {\n        this.saveUpdate({\n          _: 'updateNewChannelMessage',\n          message: apiMessage,\n          pts: channelState.pts,\n          pts_count: 0\n        });\n      });\n\n      log?.debug('apply channel diff', channelState.pts);\n\n      if(differenceResult._ === 'updates.channelDifference' &&\n        !differenceResult.pFlags.final) {\n        return this.getChannelDifference(channelId);\n      } else {\n        log?.debug('finished channel get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(channelState, promise, channelId);\n    }\n\n    return promise;\n  }\n\n  private onDifferenceTooLong() {\n    this.appUsersManager.clear();\n    this.appChatsManager.clear();\n    this.appMessagesManager.clear();\n\n    this.rootScope.dispatchEvent('state_cleared');\n  }\n\n  private justAName(state: UpdatesState, promise: UpdatesState['syncLoading'], channelId?: ChatId) {\n    state.syncLoading = promise;\n    this.rootScope.dispatchEvent('state_synchronizing', channelId);\n\n    promise.then(() => {\n      state.syncLoading = null;\n      this.rootScope.dispatchEvent('state_synchronized', channelId);\n    }, () => {\n      state.syncLoading = null;\n    });\n  }\n\n  public addChannelState(channelId: ChatId, pts: number) {\n    if(!pts) {\n      throw new Error('Add channel state without pts ' + channelId);\n    }\n\n    if(!(channelId in this.channelStates)) {\n      this.channelStates[channelId] = {\n        pts,\n        pendingPtsUpdates: [],\n        syncPending: null,\n        syncLoading: null\n      };\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public getChannelState(channelId: ChatId, pts?: number) {\n    if(this.channelStates[channelId] === undefined) {\n      this.addChannelState(channelId, pts);\n    }\n\n    return this.channelStates[channelId];\n  }\n\n  private processUpdate(update: Update, options: Partial<{\n    date: number,\n    seq: number,\n    seqStart: number/* ,\n    ignoreSyncLoading: boolean */\n  }> = {}) {\n    let channelId: ChatId;\n    switch(update._) {\n      case 'updateNewChannelMessage':\n      case 'updateEditChannelMessage':\n        channelId = this.appPeersManager.getPeerId(update.message.peer_id).toChatId();\n        break;\n      /* case 'updateDeleteChannelMessages':\n        channelId = update.channel_id;\n        break; */\n      case 'updateChannelTooLong':\n        channelId = update.channel_id;\n        if(!(channelId in this.channelStates)) {\n          return false;\n        }\n        break;\n      default:\n        if('channel_id' in update && 'pts' in update) {\n          channelId = update.channel_id;\n        }\n        break;\n    }\n\n    const {pts, pts_count} = update as Update.updateNewMessage;\n    const curState = channelId ? this.getChannelState(channelId, pts) : this.updatesState;\n\n    // this.log.log('process', channelId, curState.pts, update)\n\n    if(curState.syncLoading/*  && !options.ignoreSyncLoading */) {\n      return false;\n    }\n\n    if(update._ === 'updateChannelTooLong') {\n      if(!curState.lastPtsUpdateTime ||\n          curState.lastPtsUpdateTime < (Date.now() - SYNC_DELAY)) {\n        // this.log.trace('channel too long, get diff', channelId, update)\n        this.getChannelDifference(channelId);\n      }\n      return false;\n    }\n\n    if(update._ === 'updateNewMessage' ||\n        update._ === 'updateEditMessage' ||\n        update._ === 'updateNewChannelMessage' ||\n        update._ === 'updateEditChannelMessage') {\n      const message = update.message as Message.message;\n      const toPeerId = this.appPeersManager.getPeerId(message.peer_id);\n      const fwdHeader: MessageFwdHeader.messageFwdHeader = message.fwd_from || {} as any;\n      let reason: string;\n      if(message.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(message.from_id), message.pFlags.post/* || channelId*/) && (reason = 'author') ||\n          fwdHeader.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(fwdHeader.from_id), !!(fwdHeader.from_id as Peer.peerChannel).channel_id) && (reason = 'fwdAuthor') ||\n          (fwdHeader.from_id as Peer.peerChannel)?.channel_id && !this.appChatsManager.hasChat((fwdHeader.from_id as Peer.peerChannel).channel_id, true) && (reason = 'fwdChannel') ||\n          toPeerId.isUser() && !this.appUsersManager.hasUser(toPeerId) && (reason = 'toPeer User') ||\n          toPeerId.isAnyChat() && !this.appChatsManager.hasChat(toPeerId.toChatId()) && (reason = 'toPeer Chat')) {\n        this.log.warn('Not enough data for message update', toPeerId, reason, message);\n        if(channelId && this.appChatsManager.hasChat(channelId)) {\n          this.getChannelDifference(channelId);\n        } else {\n          this.forceGetDifference();\n        }\n        return false;\n      }\n    } else if(channelId && !this.appChatsManager.hasChat(channelId)) {\n      // this.log.log('skip update, missing channel', channelId, update)\n      return false;\n    }\n\n    let popPts: boolean;\n    let popSeq: boolean;\n\n    if(pts) {\n      const newPts = curState.pts + (pts_count || 0);\n      if(newPts < pts) {\n        this.debug && this.log.warn('Pts hole', curState, update, channelId && this.appChatsManager.getChat(channelId));\n        curState.pendingPtsUpdates.push(update as Update.updateNewMessage);\n        if(!curState.syncPending && !curState.syncLoading) {\n          curState.syncPending = {\n            timeout: ctx.setTimeout(() => {\n              curState.syncPending = null;\n\n              if(curState.syncLoading) {\n                return;\n              }\n\n              if(channelId) {\n                this.getChannelDifference(channelId);\n              } else {\n                this.getDifference();\n              }\n            }, SYNC_DELAY)\n          };\n        }\n\n        curState.syncPending.ptsAwaiting = true;\n        return false;\n      }\n\n      if(pts > curState.pts) {\n        curState.pts = pts;\n        popPts = true;\n\n        curState.lastPtsUpdateTime = Date.now();\n      } else if(pts_count) {\n        // this.log.warn('Duplicate update', update)\n        return false;\n      }\n\n      if(channelId && options.date && this.updatesState.date < options.date) {\n        this.updatesState.date = options.date;\n      }\n    } else if(!channelId && options.seq > 0) {\n      const seq = options.seq;\n      const seqStart = options.seqStart || seq;\n\n      if(seqStart !== curState.seq + 1) {\n        if(seqStart > curState.seq) {\n          this.debug && this.log.warn('Seq hole', curState, curState.syncPending && curState.syncPending.seqAwaiting);\n\n          if(curState.pendingSeqUpdates[seqStart] === undefined) {\n            curState.pendingSeqUpdates[seqStart] = {seq, date: options.date, updates: []};\n          }\n          curState.pendingSeqUpdates[seqStart].updates.push(update);\n\n          if(!curState.syncPending) {\n            curState.syncPending = {\n              timeout: ctx.setTimeout(() => {\n                curState.syncPending = null;\n\n                if(curState.syncLoading) {\n                  return;\n                }\n\n                this.getDifference();\n              }, SYNC_DELAY)\n            };\n          }\n\n          if(!curState.syncPending.seqAwaiting ||\n            curState.syncPending.seqAwaiting < seqStart) {\n            curState.syncPending.seqAwaiting = seqStart;\n          }\n          return false;\n        }\n      }\n\n      if(curState.seq !== seq) {\n        curState.seq = seq;\n        if(options.date && curState.date < options.date) {\n          curState.date = options.date;\n        }\n\n        popSeq = true;\n      }\n    }\n\n    this.saveUpdate(update);\n\n    if(popPts) {\n      this.popPendingPtsUpdate(channelId);\n    } else if(popSeq) {\n      this.popPendingSeqUpdate();\n    }\n  }\n\n  public saveUpdate(update: Update) {\n    // this.debug && this.log('saveUpdate', update);\n    this.dispatchEvent(update._, update as any);\n  }\n\n  public attach(langCode?: string) {\n    if(this.attached) return;\n\n    // return;\n\n    this.log('attach');\n\n    this.attached = true;\n\n    this.appStateManager.getState().then(({updates: state}) => {\n      const newVersion = this.appStateManager.newVersion/*  || '1.6.0' */;\n\n      // rootScope.broadcast('state_synchronizing');\n      if(!state || !state.pts || !state.date/*  || !state.seq */) { // seq can be undefined because of updates.differenceTooLong\n        this.log('will get new state');\n\n        this.updatesState.syncLoading = new Promise((resolve) => {\n          this.apiManager.invokeApi('updates.getState', {}, {noErrorBox: true}).then((stateResult) => {\n            this.updatesState.seq = stateResult.seq;\n            this.updatesState.pts = stateResult.pts;\n            this.updatesState.date = stateResult.date;\n            this.saveUpdatesState();\n            // setTimeout(() => {\n            this.updatesState.syncLoading = null;\n            resolve();\n            // rootScope.broadcast('state_synchronized');\n            // }, 1000);\n\n          // ! for testing\n          // updatesState.seq = 1\n          // updatesState.pts = stateResult.pts - 5000\n          // updatesState.date = 1\n          // getDifference()\n          });\n        });\n      } else {\n        // ! for testing\n        /* state.seq = 1;\n        state.pts = state.pts - 15;\n        state.date = 1; */\n        // state.pts -= 100;\n\n        // state.date = 1628623682;\n        // state.pts = 2007500;\n        // state.seq = 503;\n\n        Object.assign(this.updatesState, state);\n\n        this.log('will get difference', Object.assign({}, state));\n\n        this.getDifference(true)/* .finally(() => {\n          if(this.updatesState.syncLoading) {\n            rootScope.broadcast('state_synchronizing');\n          }\n        }) */;\n      }\n\n      this.apiManager.setUpdatesProcessor(this.processUpdateMessage);\n\n      // this.updatesState.syncLoading.then(() => {\n      this.setProxy();\n      // });\n\n      if(newVersion) {\n        this.updatesState.syncLoading.then(async() => {\n          const strs: Record<string, string> = {\n            en: 'was updated to version',\n            ru: 'обновлён до версии'\n          };\n\n          const getChangelog = (lang: string) => {\n            fetch(`changelogs/${lang}_${newVersion.split(' ')[0]}.md`)\n            .then((res) => (res.status === 200 && res.ok && res.text()) || Promise.reject())\n            .then((text) => {\n              const langStr = strs[lang] || strs.en;\n              const pre = `**Telegram Web${App.suffix} ${langStr} ${newVersion}**\\n\\n`;\n\n              text = pre + text;\n\n              const entities: MessageEntity[] = [];\n              const message = parseMarkdown(text, entities);\n\n              const update: Update.updateServiceNotification = {\n                _: 'updateServiceNotification',\n                entities,\n                message,\n                type: 'local',\n                pFlags: {},\n                inbox_date: Date.now() / 1000 | 0,\n                media: undefined\n              };\n\n              this.processLocalUpdate(update);\n            });\n          };\n\n          const languages = filterUnique([langCode, 'en']);\n          for(const language of languages) {\n            try {\n              await getChangelog(language);\n              break;\n            } catch(err) {\n\n            }\n          }\n        });\n      }\n    });\n  }\n}\n\ninterface ApiUpdatesManager extends EventListenerBase<{\n  [name in Update['_']]: (update: ConstructorDeclMap[name]) => void\n}>, AppManager {}\napplyMixins(ApiUpdatesManager, [EventListenerBase, AppManager]);\n\nexport {ApiUpdatesManager};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {UserProfilePhoto, ChatPhoto, InputFileLocation} from '../../layer';\nimport {DownloadOptions} from '../mtproto/apiFileManager';\nimport {AppManager} from './manager';\n\nexport type PeerPhotoSize = 'photo_small' | 'photo_big';\n\nexport class AppAvatarsManager extends AppManager {\n  private savedAvatarURLs: {\n    [peerId: PeerId]: {\n      [size in PeerPhotoSize]?: string | Promise<string>\n    }\n  } = {};\n\n  protected after() {\n    this.rootScope.addEventListener('avatar_update', (peerId) => {\n      this.removeFromAvatarsCache(peerId);\n    });\n  }\n\n  public isAvatarCached(peerId: PeerId, size?: PeerPhotoSize) {\n    const saved = this.savedAvatarURLs[peerId];\n    if(size === undefined) {\n      return !!saved;\n    }\n\n    return !!(saved && saved[size] && !(saved[size] instanceof Promise));\n  }\n\n  public removeFromAvatarsCache(peerId: PeerId) {\n    if(this.savedAvatarURLs[peerId]) {\n      delete this.savedAvatarURLs[peerId];\n    }\n  }\n\n  public loadAvatar(peerId: PeerId, photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, size: PeerPhotoSize) {\n    let saved = this.savedAvatarURLs[peerId];\n    if(!saved || !saved[size]) {\n      if(!saved) {\n        saved = this.savedAvatarURLs[peerId] = {};\n      }\n\n      // console.warn('will invoke downloadSmallFile:', peerId);\n      const peerPhotoFileLocation: InputFileLocation.inputPeerPhotoFileLocation = {\n        _: 'inputPeerPhotoFileLocation',\n        pFlags: {},\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        photo_id: photo.photo_id\n      };\n\n      const downloadOptions: DownloadOptions = {dcId: photo.dc_id, location: peerPhotoFileLocation};\n      if(size === 'photo_big') {\n        peerPhotoFileLocation.pFlags.big = true;\n        downloadOptions.limitPart = 512 * 1024;\n      }\n\n      /* let str: string;\n      const time = Date.now();\n      if(peerId === 0) {\n        str = `download avatar ${peerId}`;\n      } */\n\n      const promise = this.apiFileManager.download(downloadOptions);\n      return saved[size] = promise.then((blob) => {\n        return saved[size] = URL.createObjectURL(blob);\n\n        /* if(str) {\n          console.log(str, Date.now() / 1000, Date.now() - time);\n        } */\n      });\n    } else {\n      return saved[size];\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {getEnvironment} from '../../environment/utils';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {nextRandomUint} from '../../helpers/random';\nimport {InputPhoneCall, MessagesDhConfig, PhoneCall, PhoneCallDiscardReason, PhoneCallProtocol, PhonePhoneCall} from '../../layer';\nimport {AppManager} from './manager';\n\nexport type CallId = PhoneCall['id'];\n\nexport type MyPhoneCall = Exclude<PhoneCall, PhoneCall.phoneCallEmpty | PhoneCall.phoneCallDiscarded>;\n\nexport class AppCallsManager extends AppManager {\n  private calls: Map<CallId, MyPhoneCall>;\n\n  protected after() {\n    this.calls = new Map();\n\n    if(!getEnvironment().IS_CALL_SUPPORTED) {\n      return;\n    }\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updatePhoneCall: (update) => {\n        this.saveCall(update.phone_call);\n      },\n\n      updatePhoneCallSignalingData: (update) => {\n        this.rootScope.dispatchEvent('call_signaling', {callId: update.phone_call_id, data: update.data});\n      }\n    });\n  }\n\n  public computeKey(g_b: Uint8Array, a: Uint8Array, p: Uint8Array) {\n    return this.cryptoWorker.invokeCrypto('compute-dh-key', g_b, a, p);\n  }\n\n  public saveCall(call: PhoneCall) {\n    const isDiscarded = call._ === 'phoneCallDiscarded';\n    const oldCall = this.calls.get(call.id);\n    if(oldCall) {\n      // if(shouldUpdate) {\n      safeReplaceObject(oldCall, call);\n      // }\n\n      if(isDiscarded) {\n        this.calls.delete(call.id);\n      }\n\n      call = oldCall;\n    } else if(!isDiscarded) {\n      this.calls.set(call.id, call as any);\n    }\n\n    this.rootScope.dispatchEvent('call_update', call);\n\n    return call;\n  }\n\n  public getCall(callId: CallId) {\n    return this.calls.get(callId);\n  }\n\n  public getCallInput(id: CallId): InputPhoneCall {\n    const call = this.getCall(id);\n    return {\n      _: 'inputPhoneCall',\n      id: call.id,\n      access_hash: call.access_hash\n    };\n  }\n\n  public savePhonePhoneCall(phonePhoneCall: PhonePhoneCall) {\n    this.appUsersManager.saveApiUsers(phonePhoneCall.users);\n    return this.saveCall(phonePhoneCall.phone_call);\n  }\n\n  public generateDh() {\n    return this.apiManager.invokeApi('messages.getDhConfig', {\n      version: 0,\n      random_length: 256\n    }).then((dhConfig) => {\n      return this.cryptoWorker.invokeCrypto('generate-dh', dhConfig as MessagesDhConfig.messagesDhConfig);\n    });\n  }\n\n  // private verifyProtocolCompatibility(protocol: PhoneCallProtocol) {\n  //   const my = getCallProtocol();\n  //   const myVersion = my.library_versions[0];\n  //   return !protocol.library_versions.find((version) => {\n  //     return compareVersion(myVersion, version) > 0;\n  //   });\n  // }\n\n  public async requestCall(userId: UserId, protocol: PhoneCallProtocol, g_a_hash: Uint8Array, video?: boolean) {\n    const phonePhoneCall = await this.apiManager.invokeApi('phone.requestCall', {\n      user_id: this.appUsersManager.getUserInput(userId),\n      protocol: protocol,\n      video: video,\n      random_id: nextRandomUint(32),\n      g_a_hash: g_a_hash\n    });\n\n    return this.savePhonePhoneCall(phonePhoneCall);\n  }\n\n  public async discardCall(callId: CallId, duration: number, reason: PhoneCallDiscardReason['_'], video?: boolean) {\n    if(!this.getCall(callId)) {\n      return;\n    }\n\n    const updates = await this.apiManager.invokeApi('phone.discardCall', {\n      video,\n      peer: this.getCallInput(callId),\n      duration,\n      reason: {\n        _: reason\n      },\n      connection_id: '0'\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n  }\n}\n","import {RestrictionReason} from '../layer';\n\nconst platforms = new Set([\n  'all',\n  'web',\n  'webk'\n]);\n\nconst ignore = new Set();\n\nexport function getRestrictionReason(reasons: RestrictionReason[]) {\n  // return reasons[0];\n  return reasons.find((reason) => platforms.has(reason.platform) && !ignore.has(reason.reason));\n}\n\nexport function isRestricted(reasons: RestrictionReason[]) {\n  return !!getRestrictionReason(reasons);\n}\n\nexport function ignoreRestrictionReasons(reasons: string[]) {\n  ignore.clear();\n  reasons.forEach((reason) => {\n    ignore.add(reason);\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport deepEqual from '../../helpers/object/deepEqual';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {ChannelParticipant, ChannelsCreateChannel, Chat, ChatAdminRights, ChatBannedRights, ChatInvite, ChatPhoto, ChatReactions, InputChannel, InputChatPhoto, InputFile, InputPeer, MessagesSponsoredMessages, SponsoredMessage, Update, Updates} from '../../layer';\nimport {isRestricted} from '../../helpers/restrictions';\nimport {AppManager} from './manager';\nimport hasRights from './utils/chats/hasRights';\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\nimport {AppStoragesManager} from './appStoragesManager';\n\nexport type Channel = Chat.channel;\nexport type ChatRights = keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags'] | 'change_type' | 'change_permissions' | 'delete_chat' | 'view_participants';\n\nexport class AppChatsManager extends AppManager {\n  private storage: AppStoragesManager['storages']['chats'];\n\n  private chats: {[id: ChatId]: Chat.channel | Chat.chat | any};\n  // private usernames: any;\n  // private channelAccess: any;\n  // private megagroups: {[id: number]: true};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      /* updateChannel: (update) => {\n        const channelId = update.channel_id;\n        //console.log('updateChannel:', update);\n        rootScope.broadcast('channel_settings', {channelId});\n      }, */\n\n      updateChannelParticipant: (update) => {\n        this.apiManager.clearCache('channels.getParticipants', (params) => {\n          return (params.channel as InputChannel.inputChannel).channel_id === update.channel_id;\n        });\n      },\n\n      updateChatDefaultBannedRights: (update) => {\n        const chatId = this.appPeersManager.getPeerId(update.peer).toChatId();\n        const chat: Chat.chat = this.chats[chatId];\n        if(chat) {\n          chat.default_banned_rights = update.default_banned_rights;\n          this.rootScope.dispatchEvent('chat_update', chatId);\n        }\n      }\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('chats')\n    ]).then(([state, {results: chats, storage}]) => {\n      this.storage = storage;\n\n      if(chats.length) {\n        for(let i = 0, length = chats.length; i < length; ++i) {\n          const chat = chats[i];\n          if(chat) {\n            this.chats[chat.id] = chat;\n          }\n        }\n      }\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(peerId.isUser() || this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.set({\n          [peerId.toChatId()]: this.getChat(peerId.toChatId())\n        });\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(peerId.isUser() || !this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.delete(peerId.toChatId());\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const chatId in this.chats) {\n        if(!chatId) continue;\n        if(!this.peersStorage.isPeerNeeded(chatId.toPeerId(true))) {\n          /* const chat = this.chats[chatId];\n          if(chat.username) {\n            delete this.usernames[cleanUsername(chat.username)];\n          } */\n\n          this.storage.delete(chatId);\n          delete this.chats[chatId];\n        }\n      }\n    } else {\n      this.chats = {};\n    }\n  };\n\n  public saveApiChats(apiChats: any[], override?: boolean) {\n    if((apiChats as any).saved) return;\n    (apiChats as any).saved = true;\n    apiChats.forEach((chat) => this.saveApiChat(chat, override));\n  }\n\n  public saveApiChat(chat: Chat, override?: boolean) {\n    if(chat._ === 'chatEmpty') return;\n    /* if(chat._ !== 'chat' && chat._ !== 'channel') {\n      return;\n    } */\n\n    // * exclude from state\n    // defineNotNumerableProperties(chat, ['rTitle', 'initials']);\n\n    const oldChat: Exclude<Chat, Chat.chatEmpty> = this.chats[chat.id];\n\n    /* if(oldChat && !override) {\n      return;\n    } */\n\n    (chat as Chat.chat).pFlags ??= {};\n\n    if((chat as Chat.channel).pFlags.min && oldChat !== undefined) {\n      return;\n    }\n\n    if(chat._ === 'channel' &&\n        chat.participants_count === undefined &&\n        oldChat !== undefined &&\n        (oldChat as Chat.channel).participants_count) {\n      chat.participants_count = (oldChat as Chat.channel).participants_count;\n    }\n\n    /* if(chat.username) {\n      let searchUsername = searchIndexManager.cleanUsername(chat.username);\n      this.usernames[searchUsername] = chat.id;\n    } */\n\n    const peerId = chat.id.toPeerId(true);\n    if(oldChat === undefined) {\n      this.chats[chat.id] = chat;\n    } else {\n      const oldPhotoId = ((oldChat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const newPhotoId = ((chat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const changedPhoto = oldPhotoId !== newPhotoId;\n\n      const changedTitle = oldChat.title !== chat.title;\n\n      const changedAnyBadge = (oldChat as Chat.channel).pFlags.verified !== (chat as Chat.channel).pFlags.verified ||\n        (oldChat as Chat.channel).pFlags.scam !== (chat as Chat.channel).pFlags.scam ||\n        (oldChat as Chat.channel).pFlags.fake !== (chat as Chat.channel).pFlags.fake;\n\n      safeReplaceObject(oldChat, chat);\n      this.rootScope.dispatchEvent('chat_update', chat.id);\n\n      if(changedPhoto) {\n        this.rootScope.dispatchEvent('avatar_update', peerId);\n      }\n\n      if(changedTitle || changedAnyBadge) {\n        this.rootScope.dispatchEvent('peer_title_edit', peerId);\n      }\n    }\n\n    if(this.peersStorage.isPeerNeeded(peerId)) {\n      this.storage.set({\n        [chat.id]: chat\n      });\n    }\n  }\n\n  public getChat(id: ChatId) {\n    return this.chats[id] || {_: 'chatEmpty', id, deleted: true, access_hash: '', pFlags: {}/* this.channelAccess[id] */};\n  }\n\n  public getChatTyped(id: ChatId): Chat {\n    return this.getChat(id);\n  }\n\n  /**\n   * Check the user's ability to do an action in chat\n   * @param id\n   * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\n   * @param rights do not provide this parameter when checking rights for self\n   * @param isThread\n   * @returns\n   */\n  public hasRights(id: ChatId, action: ChatRights, rights?: ChatAdminRights | ChatBannedRights, isThread?: boolean) {\n    return hasRights(this.getChat(id), action, rights, isThread);\n  }\n\n  public editChatDefaultBannedRights(id: ChatId, banned_rights: ChatBannedRights) {\n    const chat: Chat.chat = this.getChat(id);\n    if(chat.default_banned_rights) {\n      if(chat.default_banned_rights.until_date === banned_rights.until_date && deepEqual(chat.default_banned_rights.pFlags, banned_rights.pFlags)) {\n        return Promise.resolve();\n      }\n    }\n\n    return this.apiManager.invokeApi('messages.editChatDefaultBannedRights', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true)),\n      banned_rights\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  /* public resolveUsername(username: string) {\n    return this.usernames[username] || 0;\n  } */\n\n  /* public saveChannelAccess(id: ChatId, accessHash: string) {\n    this.channelAccess[id] = accessHash;\n  } */\n\n  /* public saveIsMegagroup(id: ChatId) {\n    this.megagroups[id] = true;\n  } */\n\n  public isChannel(id: ChatId) {\n    const chat = this.chats[id];\n    return !!(chat && (chat._ === 'channel' || chat._ === 'channelForbidden')/*  || this.channelAccess[id] */);\n  }\n\n  public isMegagroup(id: ChatId) {\n    /* if(this.megagroups[id]) {\n      return true;\n    } */\n\n    const chat: Chat = this.chats[id];\n    return !!(chat as Chat.channel)?.pFlags?.megagroup;\n  }\n\n  public isBroadcast(id: ChatId) {\n    return this.isChannel(id) && !this.isMegagroup(id);\n  }\n\n  public isInChat(id: ChatId) {\n    let good = true;\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channelForbidden' ||\n      chat._ === 'chatForbidden' ||\n      chat._ === 'chatEmpty' ||\n      (chat as Chat.chat).pFlags.left ||\n      // || (chat as any).pFlags.kicked\n      (chat as Chat.chat).pFlags.deactivated) {\n      good = false;\n    }\n\n    return good;\n  }\n\n  public getChannelInput(id: ChatId): InputChannel {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'chatEmpty' || !(chat as Chat.channel).access_hash) {\n      return {\n        _: 'inputChannelEmpty'\n      };\n    } else {\n      return {\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: (chat as Chat.channel).access_hash/*  || this.channelAccess[id] */ || '0'\n      };\n    }\n  }\n\n  public getInputPeer(id: ChatId) {\n    return this.isChannel(id) ? this.getChannelInputPeer(id) : this.getChatInputPeer(id);\n  }\n\n  public getChatInputPeer(id: ChatId): InputPeer.inputPeerChat {\n    return {\n      _: 'inputPeerChat',\n      chat_id: id\n    };\n  }\n\n  public getChannelInputPeer(id: ChatId): InputPeer.inputPeerChannel {\n    return {\n      _: 'inputPeerChannel',\n      channel_id: id,\n      access_hash: this.getChat(id).access_hash/*  || this.channelAccess[id] */ || 0\n    };\n  }\n\n  public hasChat(id: ChatId, allowMin?: true) {\n    const chat = this.chats[id];\n    return isObject(chat) && (allowMin || !chat.pFlags.min);\n  }\n\n  public getChatPhoto(id: ChatId) {\n    const chat: Chat.chat = this.getChat(id);\n\n    return chat && chat.photo || {\n      _: 'chatPhotoEmpty'\n    };\n  }\n\n  public getChatString(id: ChatId) {\n    const chat = this.getChat(id);\n    if(this.isChannel(id)) {\n      return (this.isMegagroup(id) ? 's' : 'c') + id + '_' + chat.access_hash;\n    }\n    return 'g' + id;\n  }\n\n  /* public wrapForFull(id: number, fullChat: any) {\n    const chatFull = copy(fullChat);\n    const chat = this.getChat(id);\n\n    if(!chatFull.participants_count) {\n      chatFull.participants_count = chat.participants_count;\n    }\n\n    if(chatFull.participants &&\n        chatFull.participants._ === 'chatParticipants') {\n      chatFull.participants.participants = this.wrapParticipants(id, chatFull.participants.participants);\n    }\n\n    if(chatFull.about) {\n      chatFull.rAbout = wrapRichText(chatFull.about, {noLinebreaks: true});\n    }\n\n    //chatFull.peerString = this.getChatString(id);\n    chatFull.chat = chat;\n\n    return chatFull;\n  }\n\n  public wrapParticipants(id: number, participants: any[]) {\n    const chat = this.getChat(id);\n    const myId = appUsersManager.getSelf().id;\n    if(this.isChannel(id)) {\n      const isAdmin = chat.pFlags.creator;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = isAdmin && participant._ === 'channelParticipant';\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    } else {\n      const isAdmin = chat.pFlags.creator || chat.pFlags.admins_enabled && chat.pFlags.admin;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = !participant.canLeave && (\n          chat.pFlags.creator ||\n          participant._ === 'chatParticipant' && (isAdmin || myId === participant.inviter_id)\n        );\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    }\n\n    return participants;\n  } */\n\n  public createChannel(options: ChannelsCreateChannel): Promise<ChatId> {\n    return this.apiManager.invokeApi('channels.createChannel', options).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const channelId = (updates as any).chats[0].id;\n      return channelId;\n    });\n  }\n\n  public inviteToChannel(id: ChatId, userIds: UserId[]) {\n    const input = this.getChannelInput(id);\n    const usersInputs = userIds.map((u) => this.appUsersManager.getUserInput(u));\n\n    return this.apiManager.invokeApi('channels.inviteToChannel', {\n      channel: input,\n      users: usersInputs\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public createChat(title: string, userIds: UserId[]): Promise<ChatId> {\n    return this.apiManager.invokeApi('messages.createChat', {\n      users: userIds.map((u) => this.appUsersManager.getUserInput(u)),\n      title\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const chatId = (updates as any as Updates.updates).chats[0].id;\n      return chatId;\n    });\n  }\n\n  private onChatUpdated = (chatId: ChatId, updates?: any) => {\n    // console.log('onChatUpdated', chatId, updates);\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    if(updates?.updates?.length && this.isChannel(chatId)) {\n      this.rootScope.dispatchEvent('invalidate_participants', chatId);\n    }\n  };\n\n  public leaveChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.leaveChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public joinChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.joinChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public addChatUser(id: ChatId, userId: UserId, fwdLimit = 100) {\n    return this.apiManager.invokeApi('messages.addChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId),\n      fwd_limit: fwdLimit\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChatUser(id: ChatId, userId: UserId) {\n    return this.apiManager.invokeApi('messages.deleteChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public leaveChat(id: ChatId) {\n    return this.deleteChatUser(id, this.appUsersManager.getSelf().id);\n  }\n\n  public leave(id: ChatId) {\n    return this.isChannel(id) ? this.leaveChannel(id) : this.leaveChat(id);\n  }\n\n  public delete(id: ChatId) {\n    return this.isChannel(id) ? this.deleteChannel(id) : this.deleteChat(id);\n  }\n\n  public deleteChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.deleteChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChat(id: ChatId) {\n    // return this.leaveChat(id).then(() => {\n    return this.apiManager.invokeApi('messages.deleteChat', {\n      chat_id: id\n    });\n    // });\n  }\n\n  public migrateChat(id: ChatId): Promise<ChatId> {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channel') return Promise.resolve(chat.id);\n    return this.apiManager.invokeApi('messages.migrateChat', {\n      chat_id: id\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n      const update: Update.updateChannel = (updates as Updates.updates).updates.find((u) => u._ === 'updateChannel') as any;\n      return update.channel_id;\n    });\n  }\n\n  public updateUsername(id: ChatId, username: string) {\n    return this.apiManager.invokeApi('channels.updateUsername', {\n      channel: this.getChannelInput(id),\n      username\n    }).then((bool) => {\n      if(bool) {\n        const chat: Chat.channel = this.getChat(id);\n        chat.username = username;\n      }\n\n      return bool;\n    });\n  }\n\n  public editPhoto(id: ChatId, inputFile: InputFile) {\n    const inputChatPhoto: InputChatPhoto = {\n      _: 'inputChatUploadedPhoto',\n      file: inputFile\n    };\n\n    let promise: any;\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editPhoto', {\n        channel: this.getChannelInput(id),\n        photo: inputChatPhoto\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatPhoto', {\n        chat_id: id,\n        photo: inputChatPhoto\n      });\n    }\n\n    return promise.then((updates: any) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editTitle(id: ChatId, title: string) {\n    let promise: any;\n\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editTitle', {\n        channel: this.getChannelInput(id),\n        title\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatTitle', {\n        chat_id: id,\n        title\n      });\n    }\n\n    return promise.then((updates: any) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editAbout(id: ChatId, about: string) {\n    const peerId = id.toPeerId(true);\n    return this.apiManager.invokeApi('messages.editChatAbout', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      about\n    }).then((bool) => {\n      if(bool) {\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return bool;\n    });\n  }\n\n  public editBanned(id: ChatId, participant: PeerId | ChannelParticipant, banned_rights: ChatBannedRights) {\n    const peerId = typeof(participant) !== 'object' ? participant : getParticipantPeerId(participant);\n    return this.apiManager.invokeApi('channels.editBanned', {\n      channel: this.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId),\n      banned_rights\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n\n      if(typeof(participant) === 'object') {\n        const timestamp = Date.now() / 1000 | 0;\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateChannelParticipant',\n          channel_id: id,\n          date: timestamp,\n          actor_id: undefined,\n          qts: undefined,\n          user_id: peerId,\n          prev_participant: participant,\n          new_participant: Object.keys(banned_rights.pFlags).length ? {\n            _: 'channelParticipantBanned',\n            date: timestamp,\n            banned_rights,\n            kicked_by: this.appUsersManager.getSelf().id,\n            peer: this.appPeersManager.getOutputPeer(peerId),\n            pFlags: {}\n          } : undefined\n        });\n      }\n    });\n  }\n\n  public clearChannelParticipantBannedRights(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {}\n    });\n  }\n\n  public kickFromChannel(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {\n        view_messages: true\n      }\n    });\n  }\n\n  public kickFromChat(id: ChatId, participant: PeerId | ChannelParticipant) {\n    if(this.isChannel(id)) return this.kickFromChannel(id, participant);\n    else return this.deleteChatUser(id, (participant as PeerId).toUserId());\n  }\n\n  public resolveChannel(id: ChatId) {\n    return this.apiManager.invokeApiSingle('channels.getChannels', {\n      id: [{\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: '0'\n      }]\n    }).then((messagesChats) => {\n      this.saveApiChats(messagesChats.chats);\n    });\n  }\n\n  public togglePreHistoryHidden(id: ChatId, enabled: boolean) {\n    return this.migrateChat(id).then((channelId) => {\n      return this.apiManager.invokeApi('channels.togglePreHistoryHidden', {\n        channel: this.getChannelInput(channelId),\n        enabled\n      });\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleSignatures(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('channels.toggleSignatures', {\n      channel: this.getChannelInput(id),\n      enabled\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleNoForwards(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('messages.toggleNoForwards', {\n      peer: this.getInputPeer(id),\n      enabled\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public setChatAvailableReactions(id: ChatId, reactions: ChatReactions) {\n    const chatFull = this.appProfileManager.getCachedFullChat(id);\n    if(chatFull) {\n      chatFull.available_reactions = reactions;\n    }\n\n    return this.apiManager.invokeApi('messages.setChatAvailableReactions', {\n      peer: this.getInputPeer(id),\n      available_reactions: reactions\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public isRestricted(chatId: ChatId) {\n    const chat: Chat.channel = this.getChat(chatId);\n    const restrictionReasons = chat.restriction_reason;\n\n    return !!(chat.pFlags.restricted && restrictionReasons && isRestricted(restrictionReasons));\n  }\n\n  public getSendAs(channelId: ChatId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getSendAs',\n      params: {\n        peer: this.getChannelInputPeer(channelId)\n      },\n      processResult: (sendAsPeers) => {\n        this.appUsersManager.saveApiUsers(sendAsPeers.users);\n        this.saveApiChats(sendAsPeers.chats);\n\n        return sendAsPeers.peers;\n      }\n    });\n  }\n\n  public importChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.importChatInvite', {hash})\n    .then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      const chat = (updates as Updates.updates).chats[0];\n      return chat.id;\n    });\n  }\n\n  public checkUsername(chatId: ChatId, username: string) {\n    return this.apiManager.invokeApi('channels.checkUsername', {\n      channel: this.getChannelInput(chatId),\n      username\n    });\n  }\n\n  public getSponsoredMessage(chatId: ChatId) {\n    // const s: MessagesSponsoredMessages.messagesSponsoredMessages = {\n    //   '_': 'messages.sponsoredMessages',\n    //   'messages': [\n    //     {\n    //       '_': 'sponsoredMessage',\n    //       'pFlags': {},\n    //       'flags': 9,\n    //       'random_id': new Uint8Array([\n    //         80,\n    //         5,\n    //         249,\n    //         174,\n    //         44,\n    //         73,\n    //         173,\n    //         14,\n    //         246,\n    //         81,\n    //         187,\n    //         182,\n    //         223,\n    //         5,\n    //         4,\n    //         128\n    //       ]),\n    //       'from_id': {\n    //         '_': 'peerUser',\n    //         'user_id': 983000232\n    //       },\n    //       'start_param': 'GreatMinds',\n    //       'message': 'This is a long sponsored message. In fact, it has the maximum length allowed on the platform – 160 characters 😬😬. It\\'s promoting a bot with a start parameter.' + chatId\n    //     }\n    //   ],\n    //   'chats': [],\n    //   'users': [\n    //     {\n    //       '_': 'user',\n    //       'pFlags': {\n    //         'bot': true,\n    //         'verified': true,\n    //         'apply_min_photo': true\n    //       },\n    //       'flags': 34226219,\n    //       'id': 983000232,\n    //       'access_hash': '-294959558742535650',\n    //       'first_name': 'Quiz Bot',\n    //       'username': 'QuizBot',\n    //       'photo': {\n    //         '_': 'userProfilePhoto',\n    //         'pFlags': {},\n    //         'flags': 2,\n    //         'photo_id': '4221953848856651689',\n    //         'stripped_thumb': new Uint8Array([\n    //           1,\n    //           8,\n    //           8,\n    //           155,\n    //           247,\n    //           95,\n    //           103,\n    //           255,\n    //           0,\n    //           110,\n    //           138,\n    //           40,\n    //           174,\n    //           132,\n    //           142,\n    //           6,\n    //           238,\n    //           127\n    //         ]),\n    //         'dc_id': 2\n    //       },\n    //       'bot_info_version': 11,\n    //       'bot_inline_placeholder': 'Search a quiz...',\n    //       'sortName': 'quiz bot'\n    //     }\n    //   ]\n    // };\n\n    // const promise = Promise.resolve(s);\n    const promise = this.apiManager.invokeApiCacheable('channels.getSponsoredMessages', {\n      channel: this.getChannelInput(chatId)\n    }, {cacheSeconds: 300});\n\n    return promise.then((sponsoredMessages) => {\n      this.appUsersManager.saveApiUsers(sponsoredMessages.users);\n      this.appChatsManager.saveApiChats(sponsoredMessages.chats);\n\n      const sponsoredMessage = sponsoredMessages.messages.shift();\n      sponsoredMessages.messages.push(sponsoredMessage);\n\n      return sponsoredMessages;\n    });\n  }\n\n  public viewSponsoredMessage(chatId: ChatId, randomId: SponsoredMessage['random_id']) {\n    return this.apiManager.invokeApiSingle('channels.viewSponsoredMessage', {\n      channel: this.getChannelInput(chatId),\n      random_id: randomId\n    });\n  }\n\n  public checkChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.checkChatInvite', {\n      hash: hash\n    }).then((chatInvite) => {\n      if((chatInvite as ChatInvite.chatInvitePeek).chat) {\n        this.saveApiChat((chatInvite as ChatInvite.chatInvitePeek).chat, true);\n      }\n\n      return chatInvite;\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type lang from '../lang';\nimport type langSign from '../langSign';\nimport type {State} from '../config/state';\nimport localLang from '../lang'\nimport DEBUG, {MOUNT_CLASS_TO} from '../config/debug';\nimport {HelpCountriesList, HelpCountry, LangPackDifference, LangPackString} from '../layer';\nimport stateStorage from './stateStorage';\nimport App from '../config/app';\nimport rootScope from './rootScope';\nimport {IS_MOBILE} from '../environment/userAgent';\nimport deepEqual from '../helpers/object/deepEqual';\nimport safeAssign from '../helpers/object/safeAssign';\nimport capitalizeFirstLetter from '../helpers/string/capitalizeFirstLetter';\nimport matchUrlProtocol from './richTextProcessor/matchUrlProtocol';\nimport wrapUrl from './richTextProcessor/wrapUrl';\n\nexport const langPack: {[actionType: string]: LangPackKey} = {\n  'messageActionChatCreate': 'ActionCreateGroup',\n  'messageActionChatCreateYou': 'ActionYouCreateGroup',\n  'messageActionChatEditTitle': 'ActionChangedTitle',\n  'messageActionChatEditPhoto': 'ActionChangedPhoto',\n  'messageActionChatEditVideo': 'ActionChangedVideo',\n  'messageActionChatDeletePhoto': 'ActionRemovedPhoto',\n  'messageActionChatReturn': 'ActionAddUserSelf',\n  'messageActionChatReturnYou': 'ActionAddUserSelfYou',\n  'messageActionChatJoined': 'ActionAddUserSelfMega',\n  'messageActionChatJoinedYou': 'ChannelMegaJoined',\n  'messageActionChatAddUser': 'ActionAddUser',\n  'messageActionChatAddUsers': 'ActionAddUser',\n  'messageActionChatLeave': 'ActionLeftUser',\n  'messageActionChatLeaveYou': 'YouLeft',\n  'messageActionChatDeleteUser': 'ActionKickUser',\n  'messageActionChatJoinedByLink': 'ActionInviteUser',\n  'messageActionPinMessage': 'Chat.Service.Group.UpdatedPinnedMessage',\n  'messageActionContactSignUp': 'Chat.Service.PeerJoinedTelegram',\n  'messageActionChannelCreate': 'ActionCreateChannel',\n  'messageActionChannelEditTitle': 'Chat.Service.Channel.UpdatedTitle',\n  'messageActionChannelEditPhoto': 'Chat.Service.Channel.UpdatedPhoto',\n  'messageActionChannelEditVideo': 'Chat.Service.Channel.UpdatedVideo',\n  'messageActionChannelDeletePhoto': 'Chat.Service.Channel.RemovedPhoto',\n  'messageActionHistoryClear': 'HistoryCleared',\n  'messageActionDiscussionStarted': 'DiscussionStarted',\n\n  'messageActionChannelMigrateFrom': 'ActionMigrateFromGroup',\n\n  'messageActionPhoneCall.video_in_ok': 'ChatList.Service.VideoCall.incoming',\n  'messageActionPhoneCall.video_out_ok': 'ChatList.Service.VideoCall.outgoing',\n  'messageActionPhoneCall.video_missed': 'ChatList.Service.VideoCall.Missed',\n  'messageActionPhoneCall.video_cancelled': 'ChatList.Service.VideoCall.Cancelled',\n  'messageActionPhoneCall.in_ok': 'ChatList.Service.Call.incoming',\n  'messageActionPhoneCall.out_ok': 'ChatList.Service.Call.outgoing',\n  'messageActionPhoneCall.missed': 'ChatList.Service.Call.Missed',\n  'messageActionPhoneCall.cancelled': 'ChatList.Service.Call.Cancelled',\n\n  'messageActionGroupCall.started': 'Chat.Service.VoiceChatStarted.Channel',\n  'messageActionGroupCall.started_by': 'Chat.Service.VoiceChatStarted',\n  'messageActionGroupCall.started_byYou': 'Chat.Service.VoiceChatStartedYou',\n  'messageActionGroupCall.ended': 'Chat.Service.VoiceChatFinished.Channel',\n  'messageActionGroupCall.ended_by': 'Chat.Service.VoiceChatFinished',\n  'messageActionGroupCall.ended_byYou': 'Chat.Service.VoiceChatFinishedYou',\n\n  'messageActionBotAllowed': 'Chat.Service.BotPermissionAllowed',\n};\n\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\n\nexport type FormatterArgument = string | number | Node | FormatterArgument[];\nexport type FormatterArguments = FormatterArgument[];\n\nexport const UNSUPPORTED_LANG_PACK_KEY: LangPackKey = IS_MOBILE ? 'Message.Unsupported.Mobile' : 'Message.Unsupported.Desktop';\n\nnamespace I18n {\n  export const strings: Map<LangPackKey, LangPackString> = new Map();\n  export const countriesList: HelpCountry[] = [];\n  let pluralRules: Intl.PluralRules;\n\n  let cacheLangPackPromise: Promise<LangPackDifference>;\n  export let lastRequestedLangCode: string;\n  export let lastRequestedNormalizedLangCode: string;\n  export let lastAppliedLangCode: string;\n  export let requestedServerLanguage = false;\n  export let timeFormat: State['settings']['timeFormat'];\n\n  function setLangCode(langCode: string) {\n    lastRequestedLangCode = langCode;\n    lastRequestedNormalizedLangCode = langCode.split('-')[0];\n  }\n\n  export function getCacheLangPack(): Promise<LangPackDifference> {\n    if(cacheLangPackPromise) return cacheLangPackPromise;\n    return cacheLangPackPromise = Promise.all([\n      stateStorage.get('langPack') as Promise<LangPackDifference>,\n      polyfillPromise\n    ]).then(([langPack]) => {\n      if(!langPack/*  || true */) {\n        return loadLocalLangPack();\n      } else if(DEBUG && false) {\n        return getLangPack(langPack.lang_code);\n      }/*  else if(langPack.appVersion !== App.langPackVersion) {\n        return getLangPack(langPack.lang_code);\n      } */\n\n      if(!lastRequestedLangCode) {\n        setLangCode(langPack.lang_code);\n      }\n\n      applyLangPack(langPack);\n      return langPack;\n    }).finally(() => {\n      cacheLangPackPromise = undefined;\n    });\n  }\n\n  function updateAmPm() {\n    if(timeFormat === 'h12') {\n      try {\n        const dateTimeFormat = getDateTimeFormat({hour: 'numeric', minute: 'numeric', hour12: true});\n        const date = new Date();\n        date.setHours(0);\n        const amText = dateTimeFormat.format(date);\n        amPmCache.am = amText.split(' ')[1];\n        date.setHours(12);\n        const pmText = dateTimeFormat.format(date);\n        amPmCache.pm = pmText.split(' ')[1];\n      } catch(err) {\n        console.error('cannot get am/pm', err);\n        amPmCache = {am: 'AM', pm: 'PM'};\n      }\n    }\n  }\n\n  export function setTimeFormat(\n    format: State['settings']['timeFormat'],\n    haveToUpdate = !!timeFormat && timeFormat !== format\n  ) {\n    timeFormat = format;\n\n    updateAmPm();\n\n    if(haveToUpdate) {\n      cachedDateTimeFormats.clear();\n      const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n      elements.forEach((element) => {\n        const instance = weakMap.get(element);\n\n        if(instance instanceof IntlDateElement) {\n          instance.update();\n        }\n      });\n    }\n  }\n\n  export function loadLocalLangPack() {\n    const defaultCode = App.langPackCode;\n    setLangCode(defaultCode);\n    return Promise.all([\n      import('../lang'),\n      import('../langSign'),\n      import('../countries')\n    ]).then(([lang, langSign, countries]) => {\n      const strings: LangPackString[] = [];\n      formatLocalStrings(lang.default, strings);\n      formatLocalStrings(langSign.default, strings);\n\n      const langPack: LangPackDifference = {\n        _: 'langPackDifference',\n        from_version: 0,\n        lang_code: defaultCode,\n        strings,\n        version: 0,\n        local: true,\n        countries: countries.default\n      };\n      return saveLangPack(langPack);\n    });\n  }\n\n  export function loadLangPack(langCode: string, web?: boolean) {\n    web = true;\n    requestedServerLanguage = true;\n    const managers = rootScope.managers;\n    return Promise.all([\n      managers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n        lang_code: langCode,\n        lang_pack: web ? 'web' : App.langPack\n      }),\n      !web && managers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n        lang_code: langCode,\n        lang_pack: 'android'\n      }),\n      import('../lang'),\n      import('../langSign'),\n      managers.apiManager.invokeApiCacheable('help.getCountriesList', {\n        lang_code: langCode,\n        hash: 0\n      }) as Promise<HelpCountriesList.helpCountriesList>,\n      polyfillPromise\n    ]);\n  }\n\n  export function getStrings(langCode: string, strings: string[]) {\n    return rootScope.managers.apiManager.invokeApi('langpack.getStrings', {\n      lang_pack: App.langPack,\n      lang_code: langCode,\n      keys: strings\n    });\n  }\n\n  export function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\n    for(const i in strings) {\n      // @ts-ignore\n      const v = strings[i];\n      if(typeof(v) === 'string') {\n        pushTo.push({\n          _: 'langPackString',\n          key: i,\n          value: v\n        });\n      } else {\n        pushTo.push({\n          _: 'langPackStringPluralized',\n          key: i,\n          ...v\n        });\n      }\n    }\n\n    return pushTo;\n  }\n\n  export function getLangPack(langCode: string, web?: boolean) {\n    setLangCode(langCode);\n    return loadLangPack(langCode, web).then(([langPack1, langPack2, localLangPack1, localLangPack2, countries, _]) => {\n      let strings: LangPackString[] = [];\n\n      [localLangPack1, localLangPack2].forEach((l) => {\n        formatLocalStrings(l.default as any, strings);\n      });\n\n      strings = strings.concat(...[langPack1.strings, langPack2.strings].filter(Boolean));\n\n      langPack1.strings = strings;\n      langPack1.countries = countries;\n      return saveLangPack(langPack1);\n    });\n  }\n\n  export function saveLangPack(langPack: LangPackDifference) {\n    langPack.appVersion = App.langPackVersion;\n\n    return stateStorage.set({langPack}).then(() => {\n      applyLangPack(langPack);\n      return langPack;\n    });\n  }\n\n  export const polyfillPromise = (function checkIfPolyfillNeeded() {\n    if(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\n      return Promise.resolve();\n    } else {\n      return import('./pluralPolyfill').then((_Intl) => {\n        (window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\n      });\n    }\n  })();\n\n  export function applyLangPack(langPack: LangPackDifference) {\n    const currentLangCode = lastRequestedLangCode;\n    if(langPack.lang_code !== currentLangCode) {\n      return;\n    }\n\n    try {\n      pluralRules = new Intl.PluralRules(lastRequestedNormalizedLangCode);\n    } catch(err) {\n      console.error('pluralRules error', err);\n      pluralRules = new Intl.PluralRules(lastRequestedNormalizedLangCode.split('-', 1)[0]);\n    }\n\n    try {\n      pluralRules = new Intl.PluralRules(langPack.lang_code);\n    } catch(err) {\n      console.error('pluralRules error', err);\n      pluralRules = new Intl.PluralRules(langPack.lang_code.split('-', 1)[0]);\n    }\n\n    strings.clear();\n\n    for(const string of langPack.strings) {\n      strings.set(string.key as LangPackKey, string);\n    }\n\n    if(langPack.countries) {\n      countriesList.length = 0;\n      countriesList.push(...langPack.countries.countries);\n\n      langPack.countries.countries.forEach((country) => {\n        if(country.name) {\n          const langPackKey: any = country.default_name;\n          strings.set(langPackKey, {\n            _: 'langPackString',\n            key: langPackKey,\n            value: country.name\n          });\n        }\n      });\n    }\n\n    if(lastAppliedLangCode !== currentLangCode) {\n      rootScope.dispatchEvent('language_change', currentLangCode);\n      lastAppliedLangCode = currentLangCode;\n      cachedDateTimeFormats.clear();\n      updateAmPm();\n    }\n\n    const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n    elements.forEach((element) => {\n      const instance = weakMap.get(element);\n\n      if(instance) {\n        instance.update();\n      }\n    });\n\n    // apply local langpack on top\n    Object.entries(localLang).forEach(([stringKey, stringValue]) => {\n      if (!strings.get(stringKey as LangPackKey)) {\n        // apply only unset lang strings\n        const langValue: LangPackString = {\n          _: \"langPackString\",\n          key: stringKey,\n          value: stringValue as string,\n        }\n        strings.set(stringKey as LangPackKey, langValue);\n      }\n    })\n  }\n\n  function pushNextArgument(out: ReturnType<typeof superFormatter>, args: FormatterArguments, indexHolder: {i: number}) {\n    const arg = args[indexHolder.i++];\n    if(Array.isArray(arg)) {\n      out.push(...arg as any);\n    } else {\n      out.push(arg);\n    }\n  }\n\n  export function superFormatter(input: string, args?: FormatterArguments, indexHolder = {i: 0}): Exclude<FormatterArgument, FormatterArgument[]>[] {\n    const out: ReturnType<typeof superFormatter> = [];\n    const regExp = /(\\*\\*|__)(.+?)\\1|(\\n)|(\\[.+?\\]\\(.*?\\))|un\\d|%\\d\\$.|%./g;\n\n    let lastIndex = 0;\n    input.replace(regExp, (match, p1: any, p2: any, p3: any, p4: string, offset: number, string: string) => {\n      // console.table({match, p1, p2, offset, string});\n\n      out.push(string.slice(lastIndex, offset));\n\n      if(p1) {\n        // offset += p1.length;\n        let element: HTMLElement;\n        switch(p1) {\n          case '**': {\n            element = document.createElement('b');\n            break;\n          }\n\n          case '__': {\n            element = document.createElement('i');\n            break;\n          }\n        }\n\n        element.append(...superFormatter(p2, args, indexHolder) as any);\n        out.push(element);\n      } else if(p3) {\n        out.push(document.createElement('br'));\n      } else if(p4) {\n        const idx = p4.lastIndexOf(']');\n        const text = p4.slice(1, idx);\n\n        const url = p4.slice(idx + 2, p4.length - 1);\n        let a: HTMLAnchorElement;\n        if(url && matchUrlProtocol(url)) {\n          a = document.createElement('a');\n          const wrappedUrl = wrapUrl(url);\n          a.href = wrappedUrl.url;\n          if(wrappedUrl.onclick) a.setAttribute('onclick', wrappedUrl.onclick);\n          a.target = '_blank';\n        } else {\n          a = args[indexHolder.i++] as HTMLAnchorElement;\n\n          if(a instanceof DocumentFragment) { // right after wrapRichText\n            a = a.firstChild as any;\n          }\n\n          a.textContent = ''; // reset content\n        }\n\n        a.append(...superFormatter(text, args, indexHolder) as any);\n\n        out.push(a);\n      } else if(args) {\n        pushNextArgument(out, args, indexHolder);\n      }\n\n      lastIndex = offset + match.length;\n      return '';\n    });\n\n    if(lastIndex !== input.length) {\n      out.push(input.slice(lastIndex));\n    }\n\n    return out;\n  }\n\n  export function format(key: LangPackKey, plain: true, args?: FormatterArguments): string;\n  export function format(key: LangPackKey, plain?: false, args?: FormatterArguments): ReturnType<typeof superFormatter>;\n  export function format(key: LangPackKey, plain = false, args?: FormatterArguments): ReturnType<typeof superFormatter> | string {\n    const str = strings.get(key);\n    let input: string;\n    if(str) {\n      if(str._ === 'langPackStringPluralized' && args?.length) {\n        let v = args[0] as number | string;\n        if(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\n        const s = pluralRules.select(v);\n        // @ts-ignore\n        input = str[s + '_value'] || str['other_value'];\n      } else if(str._ === 'langPackString') {\n        input = str.value;\n      } else {\n        // input = '[' + key + ']';\n        input = key;\n      }\n    } else {\n      // input = '[' + key + ']';\n      input = key;\n    }\n\n    const result = superFormatter(input, args);\n    if(plain) { // * let's try a hack now... (don't want to replace []() entity)\n      return result.map((item) => item instanceof Node ? item.textContent : item).join('');\n    } else {\n      return result;\n    }\n\n    /* if(plain) {\n      if(args?.length) {\n        const regExp = /un\\d|%\\d\\$.|%./g;\n        let i = 0;\n        input = input.replace(regExp, (match, offset, string) => {\n          return '' + args[i++];\n        });\n      }\n\n      return input;\n    } else {\n      return superFormatter(input, args);\n    } */\n  }\n\n  export const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\n\n  export type IntlElementBaseOptions = {\n    element?: HTMLElement,\n    property?: 'innerText' | 'innerHTML' | 'placeholder' | 'textContent',\n  };\n\n  abstract class IntlElementBase<Options extends IntlElementBaseOptions> {\n    public element: IntlElementBaseOptions['element'];\n    public property: IntlElementBaseOptions['property'];\n\n    constructor(options?: Options) {\n      this.element = options?.element || document.createElement('span');\n      this.element.classList.add('i18n');\n\n      this.property = options?.property;\n      if(options && ((options as any as IntlElementOptions).key || (options as any as IntlDateElementOptions).date)) {\n        this.update(options);\n      }\n\n      weakMap.set(this.element, this);\n    }\n\n    abstract update(options?: Options): void;\n  }\n\n  export type IntlElementOptions = IntlElementBaseOptions & {\n    key?: LangPackKey,\n    args?: FormatterArguments\n  };\n  export class IntlElement extends IntlElementBase<IntlElementOptions> {\n    public key: IntlElementOptions['key'];\n    public args: IntlElementOptions['args'];\n\n    constructor(options: IntlElementOptions = {}) {\n      super({...options, property: options.property ?? 'innerHTML'});\n    }\n\n    public update(options?: IntlElementOptions) {\n      safeAssign(this, options);\n\n      if(this.property === 'innerHTML') {\n        this.element.textContent = '';\n        this.element.append(...format(this.key, false, this.args) as any);\n      } else {\n        // @ts-ignore\n        const v = this.element[this.property];\n        const formatted = format(this.key, true, this.args);\n\n        // * hasOwnProperty won't work here\n        if(v === undefined) this.element.dataset[this.property] = formatted;\n        else (this.element as HTMLInputElement)[this.property] = formatted;\n      }\n    }\n\n    public compareAndUpdate(options?: IntlElementOptions) {\n      if(this.key === options.key && deepEqual(this.args, options.args)) {\n        return;\n      }\n\n      return this.update(options);\n    }\n  }\n\n  const cachedDateTimeFormats: Map<string, Intl.DateTimeFormat> = new Map();\n  function getDateTimeFormat(options: Intl.DateTimeFormatOptions = {}) {\n    const json = JSON.stringify(options);\n    let dateTimeFormat = cachedDateTimeFormats.get(json);\n    if(!dateTimeFormat) {\n      dateTimeFormat = new Intl.DateTimeFormat(lastRequestedNormalizedLangCode + '-u-hc-' + timeFormat, options);\n      cachedDateTimeFormats.set(json, dateTimeFormat);\n    }\n\n    return dateTimeFormat;\n  }\n\n  export let amPmCache = {am: 'AM', pm: 'PM'};\n  export type IntlDateElementOptions = IntlElementBaseOptions & {\n    date?: Date,\n    options: Intl.DateTimeFormatOptions\n  };\n  export class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\n    public date: IntlDateElementOptions['date'];\n    public options: IntlDateElementOptions['options'];\n\n    constructor(options: IntlDateElementOptions) {\n      super({...options, property: options.property ?? 'textContent'});\n    }\n\n    public update(options?: IntlDateElementOptions) {\n      safeAssign(this, options);\n\n      let text: string;\n      if(this.options.hour && this.options.minute && Object.keys(this.options).length === 2/*  && false */) {\n        const hours = this.date.getHours();\n        text = ('0' + (timeFormat === 'h12' ? (hours % 12) || 12 : hours)).slice(-2) + ':' + ('0' + this.date.getMinutes()).slice(-2);\n        // if(this.options.second) {\n        //   text += ':' + ('0' + this.date.getSeconds()).slice(-2);\n        // }\n\n        if(timeFormat === 'h12') {\n          text += ' ' + (hours < 12 ? amPmCache.am : amPmCache.pm);\n        }\n      } else {\n        // * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\n        const dateTimeFormat = getDateTimeFormat(this.options);\n        text = capitalizeFirstLetter(dateTimeFormat.format(this.date));\n      }\n\n      (this.element as any)[this.property] = text;\n    }\n  }\n\n  export function i18n(key: LangPackKey, args?: FormatterArguments) {\n    return new IntlElement({key, args}).element;\n  }\n\n  export function i18n_(options: IntlElementOptions) {\n    return new IntlElement(options).element;\n  }\n\n  export function _i18n(element: HTMLElement, key: LangPackKey, args?: FormatterArguments, property?: IntlElementOptions['property']) {\n    return new IntlElement({element, key, args, property}).element;\n  }\n}\n\nexport {I18n};\nexport default I18n;\n\nconst i18n = I18n.i18n;\nexport {i18n};\n\nconst i18n_ = I18n.i18n_;\nexport {i18n_};\n\nconst _i18n = I18n._i18n;\nexport {_i18n};\n\nexport function joinElementsWith(elements: (Node | string)[], joiner: typeof elements[0] | ((isLast: boolean) => typeof elements[0])) {\n  const arr = elements.slice(0, 1);\n  for(let i = 1; i < elements.length; ++i) {\n    const isLast = (elements.length - 1) === i;\n    arr.push(typeof(joiner) === 'function' ? joiner(isLast) : joiner);\n    arr.push(elements[i]);\n  }\n\n  return arr;\n}\n\n\nexport function join(elements: (Node | string)[], useLast: boolean, plain: true): string;\nexport function join(elements: (Node | string)[], useLast?: boolean, plain?: false): (string | Node)[];\nexport function join(elements: (Node | string)[], useLast: boolean, plain: boolean): string | (string | Node)[];\nexport function join(elements: (Node | string)[], useLast = true, plain?: boolean): string | (string | Node)[] {\n  const joined = joinElementsWith(elements, (isLast) => {\n    const langPackKey: LangPackKey = isLast && useLast ? 'AutoDownloadSettings.LastDelimeter' : 'AutoDownloadSettings.Delimeter';\n    return plain ? I18n.format(langPackKey, true) : i18n(langPackKey);\n  });\n\n  return plain ? joined.join('') : joined;\n}\n\nMOUNT_CLASS_TO.I18n = I18n;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MOUNT_CLASS_TO} from '../config/debug';\r\nimport I18n, {i18n} from '../lib/langPack';\r\n\r\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\nexport const ONE_DAY = 86400;\r\n\r\n// https://stackoverflow.com/a/6117889\r\nexport const getWeekNumber = (date: Date) => {\r\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n  const dayNum = d.getUTCDay() || 7;\r\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\r\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / ONE_DAY) + 1) / 7);\r\n};\r\n\r\nexport function formatDateAccordingToTodayNew(time: Date) {\r\n  const today = new Date();\r\n  const now = today.getTime() / 1000 | 0;\r\n  const timestamp = time.getTime() / 1000 | 0;\r\n\r\n  const options: Intl.DateTimeFormatOptions = {};\r\n  if((now - timestamp) < ONE_DAY && today.getDate() === time.getDate()) { // if the same day\r\n    options.hour = options.minute = '2-digit';\r\n  } else if(today.getFullYear() !== time.getFullYear()) { // different year\r\n    options.year = options.day = 'numeric';\r\n    options.month = '2-digit';\r\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(today) === getWeekNumber(time)) { // current week\r\n    options.weekday = 'short';\r\n  } else { // same year\r\n    options.month = 'short';\r\n    options.day = 'numeric';\r\n  }\r\n\r\n  return new I18n.IntlDateElement({\r\n    date: time,\r\n    options\r\n  }).element;\r\n}\r\n\r\nexport function formatFullSentTimeRaw(timestamp: number, options: {\r\n  capitalize?: boolean\r\n} = {}) {\r\n  const date = new Date();\r\n  const time = new Date(timestamp * 1000);\r\n  const now = date.getTime() / 1000;\r\n\r\n  const timeEl = formatTime(time);\r\n\r\n  let dateEl: Node | string;\r\n  if((now - timestamp) < ONE_DAY && date.getDate() === time.getDate()) { // if the same day\r\n    dateEl = i18n(options.capitalize ? 'Date.Today' : 'Peer.Status.Today');\r\n  } else if((now - timestamp) < (ONE_DAY * 2) && (date.getDate() - 1) === time.getDate()) { // yesterday\r\n    dateEl = i18n(options.capitalize ? 'Yesterday' : 'Peer.Status.Yesterday');\r\n\r\n    if(options.capitalize) {\r\n      (dateEl as HTMLElement).style.textTransform = 'capitalize';\r\n    }\r\n  } else if(date.getFullYear() !== time.getFullYear()) { // different year\r\n    dateEl = new I18n.IntlDateElement({\r\n      date: time,\r\n      options: {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      }\r\n    }).element;\r\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate() + ', ' + time.getFullYear();\r\n  } else {\r\n    dateEl = new I18n.IntlDateElement({\r\n      date: time,\r\n      options: {\r\n        month: 'short',\r\n        day: 'numeric'\r\n      }\r\n    }).element;\r\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate();\r\n  }\r\n\r\n  return {dateEl, timeEl};\r\n}\r\n\r\nexport function formatFullSentTime(timestamp: number) {\r\n  const {dateEl, timeEl} = formatFullSentTimeRaw(timestamp, {\r\n    capitalize: true\r\n  });\r\n\r\n  const fragment = document.createDocumentFragment();\r\n  fragment.append(dateEl, ' ', i18n('ScheduleController.at'), ' ', timeEl);\r\n  return fragment;\r\n}\r\n\r\nexport function formatTime(date: Date) {\r\n  return new I18n.IntlDateElement({\r\n    date,\r\n    options: {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }\r\n  }).element;\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.formatDateAccordingToTodayNew = formatDateAccordingToTodayNew);\r\n\r\nexport const getFullDate = (date: Date, options: Partial<{\r\n  noTime: true,\r\n  noSeconds: true,\r\n  monthAsNumber: true,\r\n  leadingZero: true\r\n}> = {}) => {\r\n  const joiner = options.monthAsNumber ? '.' : ' ';\r\n  const time = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + (options.noSeconds ? '' : ':' + ('0' + date.getSeconds()).slice(-2));\r\n\r\n  return (options.leadingZero ? ('0' + date.getDate()).slice(-2) : date.getDate()) +\r\n    joiner + (options.monthAsNumber ? ('0' + (date.getMonth() + 1)).slice(-2) : months[date.getMonth()]) +\r\n    joiner + date.getFullYear() +\r\n    (options.noTime ? '' : ', ' + time);\r\n};\r\n\r\n// https://github.com/DrKLO/Telegram/blob/d52b2c921abd3c1e8d6368858313ad0cb0468c07/TMessagesProj/src/main/java/org/telegram/ui/Adapters/FiltersView.java\r\nconst minYear = 2013;\r\nconst yearPattern = new RegExp('20[0-9]{1,2}');\r\nconst monthYearOrDayPattern = new RegExp('(\\\\w{3,}) ([0-9]{0,4})', 'i');\r\nconst yearOrDayAndMonthPattern = new RegExp('([0-9]{0,4}) (\\\\w{2,})', 'i');\r\nconst shortDate = new RegExp('^([0-9]{1,4})(\\\\.| |/|\\\\-)([0-9]{1,4})$', 'i');\r\nconst longDate = new RegExp('^([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,4})$', 'i');\r\nconst numberOfDaysEachMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nexport type DateData = {\r\n  title: string,\r\n  minDate: number,\r\n  maxDate: number,\r\n};\r\nexport function fillTipDates(query: string, dates: DateData[]) {\r\n  const q = query.trim().toLowerCase();\r\n\r\n  if(q.length < 3) {\r\n    return;\r\n  }\r\n\r\n  if('today'.indexOf(q) === 0) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: 'Today',\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  if('yesterday'.indexOf(q) === 0) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime() - 86400000;\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 86400001;\r\n    dates.push({\r\n      title: 'Yesterday',\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  const dayOfWeek = getDayOfWeek(q);\r\n  if(dayOfWeek >= 0) {\r\n    const date = new Date();\r\n    const now = date.getTime();\r\n    const currentDay = date.getDay();\r\n    const distance = dayOfWeek - currentDay;\r\n    date.setDate(date.getDate() + distance);\r\n    if(date.getTime() > now) {\r\n      date.setTime(date.getTime() - 604800000);\r\n    }\r\n    const year = date.getFullYear()\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: formatWeekLong(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  let matches: any[];\r\n  if((matches = shortDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const k = parseInt(g1);\r\n    const k1 = parseInt(g2);\r\n    if(k > 0 && k <= 31) {\r\n      if(k1 >= minYear && k <= 12) {\r\n        const selectedYear = k1;\r\n        const month = k - 1;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      } else if(k1 <= 12) {\r\n        const day = k - 1;\r\n        const month = k1 - 1;\r\n        createForDayMonth(dates, day, month);\r\n      }\r\n    } else if(k >= minYear && k1 <= 12) {\r\n      const selectedYear = k;\r\n      const month = k1 - 1;\r\n      createForMonthYear(dates, month, selectedYear);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = longDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const g3 = matches[5];\r\n    if(!matches[2] === matches[4]) {\r\n      return;\r\n    }\r\n\r\n    const day = parseInt(g1);\r\n    const month = parseInt(g2) - 1;\r\n    let year = parseInt(g3);\r\n    if(year >= 10 && year <= 99) {\r\n      year += 2000;\r\n    }\r\n\r\n    const currentYear = new Date().getFullYear();\r\n    if(validDateForMonth(day - 1, month) && year >= minYear && year <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(year, month, day);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const minDate = date.getTime();\r\n      date.setFullYear(year, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: formatterYearMax(minDate),\r\n        minDate,\r\n        maxDate\r\n      });\r\n      return;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = yearPattern.exec(q)) !== null) {\r\n    let selectedYear = +q;\r\n    const currentYear = new Date().getFullYear();\r\n    if(selectedYear < minYear) {\r\n      selectedYear = minYear;\r\n      for(let i = currentYear; i >= selectedYear; i--) {\r\n        const date = new Date();\r\n        date.setFullYear(i, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const minDate = date.getTime();\r\n        date.setFullYear(i + 1, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const maxDate = date.getTime() - 1;\r\n        dates.push({\r\n          title: '' + i,\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    } else if(selectedYear <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(selectedYear, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const minDate = date.getTime();\r\n      date.setFullYear(selectedYear + 1, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: '' + selectedYear,\r\n        minDate,\r\n        maxDate\r\n      });\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = monthYearOrDayPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g1);\r\n    if(month >= 0) {\r\n      const k = +g2;\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if(k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  if((matches = yearOrDayAndMonthPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g2);\r\n    if(month >= 0) {\r\n      const k = +g1;\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if(k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createForMonthYear(dates: DateData[], month: number, selectedYear: number) {\r\n  const currentYear = new Date().getFullYear();\r\n  const today = Date.now();\r\n  if(selectedYear >= minYear && selectedYear <= currentYear) {\r\n    const date = new Date();\r\n    date.setFullYear(selectedYear, month, 1);\r\n    date.setHours(0, 0, 0);\r\n    const minDate = date.getTime();\r\n    if(minDate > today) {\r\n      return;\r\n    }\r\n    date.setMonth(date.getMonth() + 1);\r\n    const maxDate = date.getTime() - 1;\r\n\r\n    dates.push({\r\n      title: formatterMonthYear(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n  }\r\n}\r\n\r\nfunction createForDayMonth(dates: DateData[], day: number, month: number) {\r\n  if(validDateForMonth(day, month)) {\r\n    const currentYear = new Date().getFullYear();\r\n    const today = Date.now();\r\n\r\n    for(let i = currentYear; i >= minYear; i--) {\r\n      if(month === 1 && day === 28 && !isLeapYear(i)) {\r\n        continue;\r\n      }\r\n\r\n      const date = new Date();\r\n      date.setFullYear(i, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const minDate = date.getTime();\r\n      if(minDate > today) {\r\n        continue;\r\n      }\r\n\r\n      date.setFullYear(i, month, day + 2);\r\n      date.setHours(0, 0, 0);\r\n      const maxDate = date.getTime() - 1;\r\n      if(i === currentYear) {\r\n        dates.push({\r\n          title: formatterDayMonth(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      } else {\r\n        dates.push({\r\n          title: formatterYearMax(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction formatterMonthYear(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getFullYear();\r\n}\r\n\r\nfunction formatterDayMonth(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getDate();\r\n}\r\n\r\nfunction formatterYearMax(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\r\n}\r\n\r\nfunction formatWeekLong(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return days[date.getDay()];\r\n}\r\n\r\nfunction validDateForMonth(day: number, month: number) {\r\n  if(month >= 0 && month < 12) {\r\n    if(day >= 0 && day < numberOfDaysEachMonth[month]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isLeapYear(year: number) {\r\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\r\n}\r\n\r\nfunction getMonth(q: string) {\r\n  /* String[] months = new String[]{\r\n          LocaleController.getString(\"January\", R.string.January).toLowerCase(),\r\n          LocaleController.getString(\"February\", R.string.February).toLowerCase(),\r\n          LocaleController.getString(\"March\", R.string.March).toLowerCase(),\r\n          LocaleController.getString(\"April\", R.string.April).toLowerCase(),\r\n          LocaleController.getString(\"May\", R.string.May).toLowerCase(),\r\n          LocaleController.getString(\"June\", R.string.June).toLowerCase(),\r\n          LocaleController.getString(\"July\", R.string.July).toLowerCase(),\r\n          LocaleController.getString(\"August\", R.string.August).toLowerCase(),\r\n          LocaleController.getString(\"September\", R.string.September).toLowerCase(),\r\n          LocaleController.getString(\"October\", R.string.October).toLowerCase(),\r\n          LocaleController.getString(\"November\", R.string.November).toLowerCase(),\r\n          LocaleController.getString(\"December\", R.string.December).toLowerCase()\r\n  }; */\r\n\r\n  /* String[] monthsEng = new String[12];\r\n  Calendar c = Calendar.getInstance();\r\n  for (int i = 1; i <= 12; i++) {\r\n      c.set(0, 0, 0, 0, 0, 0);\r\n      c.set(Calendar.MONTH, i);\r\n      monthsEng[i - 1] = c.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.ENGLISH).toLowerCase();\r\n  } */\r\n\r\n  q = q.toLowerCase();\r\n  for(let i = 0; i < 12; i++) {\r\n    const month = months[i].toLowerCase();\r\n    if(month.indexOf(q) === 0) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction getDayOfWeek(q: string) {\r\n  const c = new Date();\r\n  if(q.length <= 3) {\r\n    return -1;\r\n  }\r\n\r\n  for(let i = 0; i < 7; i++) {\r\n    c.setDate(c.getDate() + 1);\r\n\r\n    if(formatWeekLong(c.getTime()).toLowerCase().indexOf(q) === 0) {\r\n      return c.getDay();\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nMOUNT_CLASS_TO.fillTipDates = fillTipDates;\r\n","/**\n * Will be used for FILE_REFERENCE_EXPIRED\n * @param key\n * @param wasObject\n * @param newObject\n */\nexport default function safeReplaceArrayInObject<K>(key: K, wasObject: any, newObject: any) {\n  if('byteLength' in newObject[key]) { // Uint8Array\n    newObject[key] = [...newObject[key]];\n  }\n\n  if(wasObject && wasObject[key] !== newObject[key]) {\n    wasObject[key].length = newObject[key].length;\n    (newObject[key] as any[]).forEach((v, i) => {\n      wasObject[key][i] = v;\n    });\n\n    /* wasObject[key].set(newObject[key]); */\n    newObject[key] = wasObject[key];\n  }\n}\n","export const EXTENSION_MIME_TYPE_MAP: {[ext in MTFileExtension]: MTMimeType} = {\n  pdf: 'application/pdf',\n  tgv: 'application/x-tgwallpattern',\n  tgs: 'application/x-tgsticker',\n  json: 'application/json',\n  wav: 'audio/wav',\n  mp3: 'audio/mpeg',\n  ogg: 'audio/ogg',\n  jpeg: 'image/jpeg',\n  jpg: 'image/jpeg',\n  png: 'image/png',\n  gif: 'image/gif',\n  webp: 'image/webp',\n  mp4: 'video/mp4',\n  webm: 'video/webm',\n  mov: 'video/quicktime',\n  svg: 'image/svg+xml'\n};\n\nexport const MIME_TYPE_EXTENSION_MAP: {[mimeType in MTMimeType]?: MTFileExtension} = {};\n\nfor(const ext in EXTENSION_MIME_TYPE_MAP) {\n  MIME_TYPE_EXTENSION_MAP[EXTENSION_MIME_TYPE_MAP[ext as MTFileExtension]] = ext as MTFileExtension;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {AccountWallPapers, Document, DocumentAttribute, MessagesSavedGifs, PhotoSize, WallPaper} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {getFullDate} from '../../helpers/date';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\nimport {AppManager} from './manager';\nimport wrapPlainText from '../richTextProcessor/wrapPlainText';\nimport assumeType from '../../helpers/assumeType';\nimport {getEnvironment} from '../../environment/utils';\nimport {isServiceWorkerOnline} from '../mtproto/mtproto.worker';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport getDocumentInputFileLocation from './utils/docs/getDocumentInputFileLocation';\nimport getDocumentURL from './utils/docs/getDocumentURL';\nimport type {ThumbCache} from '../storages/thumbs';\nimport makeError from '../../helpers/makeError';\nimport {EXTENSION_MIME_TYPE_MAP} from '../../environment/mimeTypeMap';\nimport {THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\n\nexport type MyDocument = Document.document;\n\n// TODO: если залить картинку файлом, а потом перезайти в диалог - превьюшка заново скачается\n\ntype WallPaperId = WallPaper.wallPaper['id'];\n\nlet uploadWallPaperTempId = 0;\n\nexport class AppDocsManager extends AppManager {\n  private docs: {[docId: DocId]: MyDocument};\n\n  private stickerCachedThumbs: {[docId: DocId]: {[toneIndex: number]: {url: string, w: number, h: number}}};\n\n  private uploadingWallPapers: {[id: WallPaperId]: {cacheContext: ThumbCache, file: File}};\n\n  protected after() {\n    this.docs = {};\n    this.stickerCachedThumbs = {};\n    this.uploadingWallPapers = {};\n\n    MTProtoMessagePort.getInstance<false>().addEventListener('serviceWorkerOnline', (online) => {\n      if(!online) {\n        this.onServiceWorkerFail();\n      }\n    });\n  }\n\n  private onServiceWorkerFail = () => {\n    for(const id in this.docs) {\n      const doc = this.docs[id];\n\n      if(doc.supportsStreaming) {\n        delete doc.supportsStreaming;\n        this.thumbsStorage.deleteCacheContext(doc);\n      }\n    }\n  };\n\n  public saveDoc(doc: Document, context?: ReferenceContext): MyDocument {\n    if(!doc || doc._ === 'documentEmpty') {\n      return;\n    }\n\n    const oldDoc = this.docs[doc.id];\n\n    if(doc.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldDoc, doc);\n      this.referenceDatabase.saveContext(doc.file_reference, context);\n    }\n\n    // console.log('saveDoc', apiDoc, this.docs[apiDoc.id]);\n    // if(oldDoc) {\n    //   //if(doc._ !== 'documentEmpty' && doc._ === d._) {\n    //     if(doc.thumbs) {\n    //       if(!oldDoc.thumbs) oldDoc.thumbs = doc.thumbs;\n    //       /* else if(apiDoc.thumbs[0].bytes && !d.thumbs[0].bytes) {\n    //         d.thumbs.unshift(apiDoc.thumbs[0]);\n    //       } else if(d.thumbs[0].url) { // fix for converted thumb in safari\n    //         apiDoc.thumbs[0] = d.thumbs[0];\n    //       } */\n    //     }\n\n    //   //}\n\n    //   return oldDoc;\n\n    //   //return Object.assign(d, apiDoc, context);\n    //   //return context ? Object.assign(d, context) : d;\n    // }\n\n    if(!oldDoc) {\n      this.docs[doc.id] = doc;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(doc, [/* 'thumbs',  */'type', 'h', 'w', 'file_name',\n    // 'file', 'duration', 'downloaded', 'url', 'audioTitle',\n    // 'audioPerformer', 'sticker', 'stickerEmoji', 'stickerEmojiRaw',\n    // 'stickerSetInput', 'stickerThumbConverted', 'animated', 'supportsStreaming']);\n\n    for(let i = 0, length = doc.attributes.length; i < length; ++i) {\n      const attribute = doc.attributes[i];\n      switch(attribute._) {\n        case 'documentAttributeFilename':\n          doc.file_name = wrapPlainText(attribute.file_name);\n          break;\n\n        case 'documentAttributeAudio':\n          doc.duration = attribute.duration;\n          doc.type = attribute.pFlags.voice && doc.mime_type === 'audio/ogg' ? 'voice' : 'audio';\n          /* if(apiDoc.type === 'audio') {\n            apiDoc.supportsStreaming = true;\n          } */\n          break;\n\n        case 'documentAttributeVideo':\n          doc.duration = attribute.duration;\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          // apiDoc.supportsStreaming = attribute.pFlags?.supports_streaming/*  && apiDoc.size > 524288 */;\n          if(/* apiDoc.thumbs &&  */attribute.pFlags.round_message) {\n            doc.type = 'round';\n          } else /* if(apiDoc.thumbs) */ {\n            doc.type = 'video';\n          }\n          break;\n\n        case 'documentAttributeCustomEmoji':\n        case 'documentAttributeSticker':\n          if(attribute.alt !== undefined) {\n            doc.stickerEmojiRaw = attribute.alt;\n          }\n\n          if(attribute.stickerset) {\n            if(attribute.stickerset._ === 'inputStickerSetEmpty') {\n              delete attribute.stickerset;\n            } else if(attribute.stickerset._ === 'inputStickerSetID') {\n              doc.stickerSetInput = attribute.stickerset;\n            }\n          }\n\n          // * there can be no thumbs, then it is a document\n          if(/* apiDoc.thumbs &&  */doc.mime_type === 'image/webp' && (doc.thumbs || getEnvironment().IS_WEBP_SUPPORTED)) {\n            doc.type = 'sticker';\n            doc.sticker = 1;\n          } else if(doc.mime_type === 'video/webm') {\n            if(!getEnvironment().IS_WEBM_SUPPORTED) {\n              break;\n            }\n\n            doc.type = 'sticker';\n            doc.sticker = 3;\n            doc.animated = true;\n          }\n          break;\n\n        case 'documentAttributeImageSize':\n          doc.type = 'photo';\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          break;\n\n        case 'documentAttributeAnimated':\n          if((doc.mime_type === 'image/gif' || doc.mime_type === 'video/mp4')/*  && apiDoc.thumbs */) {\n            doc.type = 'gif';\n          }\n\n          doc.animated = true;\n          break;\n      }\n    }\n\n    if(!doc.mime_type) {\n      const ext = (doc.file_name || '').split('.').pop();\n      // @ts-ignore\n      const mappedMimeType = ext && EXTENSION_MIME_TYPE_MAP[ext.toLowerCase()];\n      if(mappedMimeType) {\n        doc.mime_type = mappedMimeType;\n      } else {\n        switch(doc.type) {\n          case 'gif':\n          case 'video':\n          case 'round':\n            doc.mime_type = 'video/mp4';\n            break;\n          case 'sticker':\n            doc.mime_type = 'image/webp';\n            break;\n          case 'audio':\n            doc.mime_type = 'audio/mpeg';\n            break;\n          case 'voice':\n            doc.mime_type = 'audio/ogg';\n            break;\n          default:\n            doc.mime_type = 'application/octet-stream';\n            break;\n        }\n      }\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.pdf) {\n      doc.type = 'pdf';\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif) {\n      doc.type = 'gif';\n    }\n\n    if(doc.type === 'voice' || doc.type === 'round') {\n      // browser will identify extension\n      const attribute = doc.attributes.find((attribute) => attribute._ === 'documentAttributeFilename') as DocumentAttribute.documentAttributeFilename;\n      const ext = attribute && attribute.file_name.split('.').pop();\n      const date = getFullDate(new Date(doc.date * 1000), {monthAsNumber: true, leadingZero: true}).replace(/[:\\.]/g, '-').replace(', ', '_');\n      doc.file_name = `${doc.type}_${date}${ext ? '.' + ext : ''}`;\n    }\n\n    if(isServiceWorkerOnline()) {\n      if((doc.type === 'gif' && doc.size > 8e6) || doc.type === 'audio' || doc.type === 'video'/*  || doc.mime_type.indexOf('video/') === 0 */) {\n        doc.supportsStreaming = true;\n\n        const cacheContext = this.thumbsStorage.getCacheContext(doc);\n        if(!cacheContext.url) {\n          this.thumbsStorage.setCacheContextURL(doc, undefined, getDocumentURL(doc), 0);\n        }\n      }\n    }\n\n    // for testing purposes\n    // doc.supportsStreaming = false;\n    // doc.url = ''; // * this will break upload urls\n\n    if(!doc.file_name) {\n      doc.file_name = '';\n    }\n\n    if(doc.mime_type === 'application/x-tgsticker' && doc.file_name === 'AnimatedSticker.tgs') {\n      doc.type = 'sticker';\n      doc.animated = true;\n      doc.sticker = 2;\n    }\n\n    /* if(!doc.url) {\n      doc.url = this.getFileURL(doc);\n    } */\n\n    if(oldDoc) {\n      return Object.assign(oldDoc, doc);\n    }\n\n    return doc;\n  }\n\n  public getDoc(docId: DocId | MyDocument): MyDocument {\n    return isObject<MyDocument>(docId) ? docId : this.docs[docId];\n  }\n\n  public downloadDoc(doc: MyDocument, queueId?: number, onlyCache?: boolean) {\n    return this.apiFileManager.downloadMedia({\n      media: doc,\n      queueId,\n      onlyCache\n    });\n  }\n\n  public getLottieCachedThumb(docId: DocId, toneIndex: number) {\n    const cached = this.stickerCachedThumbs[docId];\n    return cached && cached[toneIndex];\n  }\n\n  public saveLottiePreview(docId: DocId, blob: Blob, width: number, height: number, toneIndex: number) {\n    const doc = this.getDoc(docId);\n    if(!doc) {\n      return;\n    }\n\n    const cached = this.stickerCachedThumbs[doc.id] ??= {};\n\n    const thumb = cached[toneIndex];\n    if(thumb && thumb.w >= width && thumb.h >= height) {\n      return;\n    }\n\n    cached[toneIndex] = {\n      url: URL.createObjectURL(blob),\n      w: width,\n      h: height\n    };\n  }\n\n  public saveWebPConvertedStrippedThumb(docId: DocId, bytes: Uint8Array) {\n    const doc = this.getDoc(docId);\n    if(!doc) {\n      return;\n    }\n\n    const thumb = doc.thumbs && doc.thumbs.find((thumb) => thumb._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n    if(!thumb) {\n      return;\n    }\n\n    doc.pFlags.stickerThumbConverted = true;\n    thumb.bytes = bytes;\n  }\n\n  public getWallPapers() {\n    return this.apiManager.invokeApiHashable({method: 'account.getWallPapers'}).then((accountWallpapers) => {\n      const wallPapers = (accountWallpapers as AccountWallPapers.accountWallPapers).wallpapers as WallPaper.wallPaper[];\n      wallPapers.forEach((wallPaper) => {\n        wallPaper.document = this.saveDoc(wallPaper.document);\n      });\n\n      return wallPapers;\n    });\n  }\n\n  public prepareWallPaperUpload(file: File) {\n    const id = 'wallpaper-upload-' + ++uploadWallPaperTempId;\n\n    const thumb = {\n      _: 'photoSize',\n      h: 0,\n      w: 0,\n      location: {} as any,\n      size: file.size,\n      type: THUMB_TYPE_FULL\n    } as PhotoSize.photoSize;\n    let document: MyDocument = {\n      _: 'document',\n      access_hash: '',\n      attributes: [],\n      dc_id: 0,\n      file_reference: [],\n      id,\n      mime_type: file.type as MTMimeType,\n      size: file.size,\n      date: Date.now() / 1000,\n      pFlags: {},\n      thumbs: [thumb],\n      file_name: file.name\n    };\n\n    document = this.saveDoc(document);\n\n    const cacheContext = this.thumbsStorage.setCacheContextURL(document, undefined, URL.createObjectURL(file), file.size);\n\n    const wallpaper: WallPaper.wallPaper = {\n      _: 'wallPaper',\n      access_hash: '',\n      document: document,\n      id,\n      slug: id,\n      pFlags: {}\n    };\n\n    this.uploadingWallPapers[id] = {\n      cacheContext,\n      file\n    };\n\n    return wallpaper;\n  }\n\n  public uploadWallPaper(id: WallPaperId) {\n    const {cacheContext, file} = this.uploadingWallPapers[id];\n    delete this.uploadingWallPapers[id];\n\n    const upload = this.apiFileManager.upload({file, fileName: file.name});\n    return upload.then((inputFile) => {\n      return this.apiManager.invokeApi('account.uploadWallPaper', {\n        file: inputFile,\n        mime_type: file.type,\n        settings: {\n          _: 'wallPaperSettings'\n\n        }\n      }).then((wallPaper) => {\n        assumeType<WallPaper.wallPaper>(wallPaper);\n        wallPaper.document = this.saveDoc(wallPaper.document);\n        this.thumbsStorage.setCacheContextURL(wallPaper.document, undefined, cacheContext.url, cacheContext.downloaded);\n\n        return wallPaper;\n      });\n    });\n  }\n\n  public getGifs() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getSavedGifs',\n      processResult: (res) => {\n        assumeType<MessagesSavedGifs.messagesSavedGifs>(res);\n        return res.gifs.map((doc) => this.saveDoc(doc));\n      }\n    });\n  }\n\n  public requestDocPart(docId: DocId, dcId: number, offset: number, limit: number) {\n    const doc = this.getDoc(docId);\n    if(!doc) return Promise.reject(makeError('NO_DOC'));\n    return this.apiFileManager.requestFilePart(dcId, getDocumentInputFileLocation(doc), offset, limit);\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {FileURLType, getFileURL} from '../../../../helpers/fileName';\r\nimport {Document, PhotoSize} from '../../../../layer';\r\nimport getDocumentDownloadOptions from './getDocumentDownloadOptions';\r\n\r\nexport default function getDocumentURL(doc: Document.document, download = false, thumb?: PhotoSize.photoSize) {\r\n  let type: FileURLType;\r\n  if(download) {\r\n    type = 'download';\r\n  } else if(thumb) {\r\n    type = 'thumb';\r\n  } else if(doc.supportsStreaming) {\r\n    type = 'stream';\r\n  } else {\r\n    type = 'document';\r\n  }\r\n\r\n  return getFileURL(type, getDocumentDownloadOptions(doc, thumb));\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {MessageEntity, DraftMessage, MessagesSaveDraft} from '../../layer';\r\nimport tsNow from '../../helpers/tsNow';\r\nimport stateStorage from '../stateStorage';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport {AppManager} from './manager';\r\nimport generateMessageId from './utils/messageId/generateMessageId';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport draftsAreEqual from './utils/drafts/draftsAreEqual';\r\n\r\nexport type MyDraftMessage = DraftMessage.draftMessage;\r\n\r\nexport class AppDraftsManager extends AppManager {\r\n  private drafts: {[peerIdAndThreadId: string]: MyDraftMessage} = {};\r\n  private getAllDraftPromise: Promise<void>;\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateDraftMessage: (update) => {\r\n        const peerId = this.appPeersManager.getPeerId(update.peer);\r\n        this.saveDraft(peerId, update.threadId, update.draft, {notify: true});\r\n      }\r\n    });\r\n\r\n    /* return  */stateStorage.get('drafts').then((drafts) => {\r\n      this.drafts = drafts || {};\r\n    });\r\n  }\r\n\r\n  private getKey(peerId: PeerId, threadId?: number) {\r\n    return '' + peerId + (threadId ? '_' + threadId : '');\r\n  }\r\n\r\n  public getDraft(peerId: PeerId, threadId?: number) {\r\n    return this.drafts[this.getKey(peerId, threadId)];\r\n  }\r\n\r\n  public addMissedDialogs() {\r\n    return this.getAllDrafts().then(() => {\r\n      for(const key in this.drafts) {\r\n        if(key.indexOf('_') !== -1) { // exclude threads\r\n          continue;\r\n        }\r\n\r\n        const peerId = key.toPeerId();\r\n        const dialog = this.appMessagesManager.getDialogOnly(peerId);\r\n        if(!dialog) {\r\n          this.appMessagesManager.reloadConversation(peerId);\r\n          /* const dialog = appMessagesManager.generateDialog(peerId);\r\n          dialog.draft = this.drafts[key];\r\n          appMessagesManager.saveConversation(dialog);\r\n          appMessagesManager.newDialogsToHandle[peerId] = dialog;\r\n          appMessagesManager.scheduleHandleNewDialogs(); */\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private getAllDrafts() {\r\n    return this.getAllDraftPromise ??= this.apiManager.invokeApi('messages.getAllDrafts')\r\n    .then((updates) => {\r\n      const p = this.apiUpdatesManager.updatesState.syncLoading || Promise.resolve();\r\n      p.then(() => {\r\n        this.apiUpdatesManager.processUpdateMessage(updates);\r\n      });\r\n    });\r\n  }\r\n\r\n  public saveDraft(peerId: PeerId, threadId: number, apiDraft: DraftMessage, options: Partial<{\r\n    notify: boolean,\r\n    force: boolean\r\n  }> = {}) {\r\n    const draft = this.processApiDraft(apiDraft);\r\n\r\n    const key = this.getKey(peerId, threadId);\r\n    if(draft) {\r\n      this.drafts[key] = draft;\r\n    } else {\r\n      delete this.drafts[key];\r\n    }\r\n\r\n    stateStorage.set({\r\n      drafts: this.drafts\r\n    });\r\n\r\n    if(options.notify) {\r\n      // console.warn(dT(), 'save draft', peerId, apiDraft, options)\r\n      this.rootScope.dispatchEvent('draft_updated', {\r\n        peerId,\r\n        threadId,\r\n        draft,\r\n        force: options.force\r\n      });\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  private isEmptyDraft(draft: DraftMessage) {\r\n    if(!draft || draft._ === 'draftMessageEmpty') {\r\n      return true;\r\n    }\r\n\r\n    if(draft.reply_to_msg_id > 0) {\r\n      return false;\r\n    }\r\n\r\n    if(!draft.message.length) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private processApiDraft(draft: DraftMessage): MyDraftMessage {\r\n    if(!draft || draft._ !== 'draftMessage') {\r\n      return undefined;\r\n    }\r\n\r\n    if(draft.reply_to_msg_id) {\r\n      draft.reply_to_msg_id = generateMessageId(draft.reply_to_msg_id);\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  public async syncDraft(peerId: PeerId, threadId: number, localDraft?: DraftMessage, saveOnServer = true, force = false) {\r\n    // console.warn(dT(), 'sync draft', peerID)\r\n    const serverDraft = this.getDraft(peerId, threadId);\r\n    if(draftsAreEqual(serverDraft, localDraft)) {\r\n      // console.warn(dT(), 'equal drafts', localDraft, serverDraft)\r\n      return true;\r\n    }\r\n\r\n    // console.warn(dT(), 'changed draft', localDraft, serverDraft)\r\n    const params: MessagesSaveDraft = {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      message: ''\r\n    };\r\n\r\n    let draftObj: DraftMessage;\r\n    if(this.isEmptyDraft(localDraft)) {\r\n      draftObj = {_: 'draftMessageEmpty'};\r\n    } else {\r\n      assumeType<DraftMessage.draftMessage>(localDraft);\r\n      const message = localDraft.message;\r\n      const entities: MessageEntity[] = localDraft.entities;\r\n\r\n      if(localDraft.reply_to_msg_id) {\r\n        params.reply_to_msg_id = getServerMessageId(localDraft.reply_to_msg_id);\r\n      }\r\n\r\n      if(entities?.length) {\r\n        params.entities = this.appMessagesManager.getInputEntities(entities);\r\n      }\r\n\r\n      if(localDraft.pFlags.no_webpage) {\r\n        params.no_webpage = localDraft.pFlags.no_webpage;\r\n      }\r\n\r\n      params.message = message;\r\n    }\r\n\r\n    const saveLocalDraft = draftObj || localDraft;\r\n    saveLocalDraft.date = tsNow(true) + this.timeManager.getServerTimeOffset();\r\n\r\n    this.saveDraft(peerId, threadId, saveLocalDraft, {notify: true, force});\r\n\r\n    if(saveOnServer && !threadId) {\r\n      return this.apiManager.invokeApi('messages.saveDraft', params);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public clearAllDrafts() {\r\n    return this.apiManager.invokeApi('messages.clearAllDrafts').then((bool) => {\r\n      if(!bool) {\r\n        return;\r\n      }\r\n\r\n      for(const combined in this.drafts) {\r\n        const [peerId, threadId] = combined.split('_');\r\n        this.rootScope.dispatchEvent('draft_updated', {\r\n          peerId: peerId.toPeerId(),\r\n          threadId: threadId ? +threadId : undefined,\r\n          draft: undefined\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public clearDraft(peerId: PeerId, threadId: number) {\r\n    const emptyDraft: DraftMessage.draftMessageEmpty = {\r\n      _: 'draftMessageEmpty'\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, emptyDraft as any, false, true);\r\n    } else {\r\n      this.saveDraft(peerId, threadId, emptyDraft, {notify: true, force: true});\r\n    }\r\n  }\r\n\r\n  public setDraft(peerId: PeerId, threadId: number, message: string, entities?: MessageEntity[]) {\r\n    const draft: DraftMessage.draftMessage = {\r\n      _: 'draftMessage',\r\n      date: Date.now() / 1000 | 0,\r\n      message,\r\n      pFlags: {},\r\n      entities\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, draft, false, true);\r\n    } else {\r\n      this.saveDraft(peerId, threadId, draft, {notify: true, force: true});\r\n    }\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MyDocument} from './appDocsManager';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport isObject from '../../helpers/object/isObject';\nimport validateInitObject from '../../helpers/object/validateInitObject';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport SearchIndex from '../searchIndex';\nimport stateStorage from '../stateStorage';\nimport {AppManager} from './manager';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\n\ntype EmojiLangPack = {\n  keywords: {\n    [keyword: string]: string[],\n  },\n  version: number,\n  langCode: string\n};\n\nconst EMOJI_LANG_PACK: EmojiLangPack = {\n  keywords: {},\n  version: 0,\n  langCode: App.langPackCode\n};\n\nconst RECENT_MAX_LENGTH = 32;\n\ntype EmojiType = 'native' | 'custom';\n\nexport class AppEmojiManager extends AppManager {\n  private static POPULAR_EMOJI = ['😂', '😘', '❤️', '😍', '😊', '😁', '👍', '☺️', '😔', '😄', '😭', '💋', '😒', '😳', '😜', '🙈', '😉', '😃', '😢', '😝', '😱', '😡', '😏', '😞', '😅', '😚', '🙊', '😌', '😀', '😋', '😆', '👌', '😐', '😕'];\n  private keywordLangPacks: {\n    [langCode: string]: EmojiLangPack\n  } = {};\n\n  private index: SearchIndex<EmojiLangPack['keywords'][keyof EmojiLangPack['keywords']]>;\n  private indexedLangPacks: {[langCode: string]: boolean} = {};\n\n  private getKeywordsPromises: {[langCode: string]: Promise<EmojiLangPack>} = {};\n\n  private recent: {native?: string[], custom?: DocId[]} = {};\n  private getRecentEmojisPromises: {native?: Promise<string[]>, custom?: Promise<DocId[]>} = {};\n\n  private getCustomEmojiDocumentsPromise: Promise<any>;\n  private getCustomEmojiDocumentPromises: Map<DocId, CancellablePromise<MyDocument>> = new Map();\n\n  /* public getPopularEmoji() {\n    return stateStorage.get('emojis_popular').then((popEmojis) => {\n      var result = []\n      if (popEmojis && popEmojis.length) {\n        for (var i = 0, len = popEmojis.length; i < len; i++) {\n          result.push({code: popEmojis[i][0], rate: popEmojis[i][1]})\n        }\n        callback(result)\n        return\n      }\n\n      return stateStorage.get('emojis_recent').then((recentEmojis) => {\n        recentEmojis = recentEmojis || popular || []\n        var shortcut\n        var code\n        for (var i = 0, len = recentEmojis.length; i < len; i++) {\n          shortcut = recentEmojis[i]\n          if (Array.isArray(shortcut)) {\n            shortcut = shortcut[0]\n          }\n          if (shortcut && typeof shortcut === 'string') {\n            if (shortcut.charAt(0) == ':') {\n              shortcut = shortcut.substr(1, shortcut.length - 2)\n            }\n            if (code = shortcuts[shortcut]) {\n              result.push({code: code, rate: 1})\n            }\n          }\n        }\n        callback(result)\n      });\n    });\n  }\n\n  function pushPopularEmoji (code) {\n    getPopularEmoji(function (popularEmoji) {\n      var exists = false\n      var count = popularEmoji.length\n      var result = []\n      for (var i = 0; i < count; i++) {\n        if (popularEmoji[i].code == code) {\n          exists = true\n          popularEmoji[i].rate++\n        }\n        result.push([popularEmoji[i].code, popularEmoji[i].rate])\n      }\n      if (exists) {\n        result.sort(function (a, b) {\n          return b[1] - a[1]\n        })\n      } else {\n        if (result.length > 41) {\n          result = result.slice(0, 41)\n        }\n        result.push([code, 1])\n      }\n      ConfigStorage.set({emojis_popular: result})\n    })\n  } */\n\n  public getEmojiKeywords(langCode: string = App.langPackCode) {\n    const promise = this.getKeywordsPromises[langCode];\n    if(promise) {\n      return promise;\n    }\n\n    const storageKey: any = 'emojiKeywords_' + langCode;\n    return this.getKeywordsPromises[langCode] = stateStorage.get(storageKey).then((pack: EmojiLangPack) => {\n      if(!isObject(pack)) {\n        pack = {} as any;\n      }\n\n      validateInitObject(EMOJI_LANG_PACK, pack);\n\n      // important\n      pack.langCode = langCode;\n      this.keywordLangPacks[langCode] = pack;\n\n      return this.apiManager.invokeApi('messages.getEmojiKeywordsDifference', {\n        lang_code: pack.langCode,\n        from_version: pack.version\n      }).then((keywordsDifference) => {\n        pack.version = keywordsDifference.version;\n\n        const packKeywords = pack.keywords;\n        const keywords = keywordsDifference.keywords;\n        for(let i = 0, length = keywords.length; i < length; ++i) {\n          const {keyword, emoticons} = keywords[i];\n          packKeywords[keyword] = emoticons;\n        }\n\n        stateStorage.set({\n          [storageKey]: pack\n        });\n\n        return pack;\n      }, () => {\n        return pack;\n      });\n    });\n  }\n\n  public getBothEmojiKeywords() {\n    const promises: Promise<any>[] = [\n      this.getEmojiKeywords()\n    ];\n\n    if(this.networkerFactory.language !== App.langPackCode) {\n      promises.push(this.getEmojiKeywords(this.networkerFactory.language));\n    }\n\n    if(!this.recent.native) {\n      promises.push(this.getRecentEmojis('native'));\n    }\n\n    return Promise.all(promises);\n  }\n\n  private indexEmojis() {\n    if(!this.index) {\n      this.index = new SearchIndex(undefined, 2);\n    }\n\n    for(const langCode in this.keywordLangPacks) {\n      if(this.indexedLangPacks[langCode]) {\n        continue;\n      }\n\n      const pack = this.keywordLangPacks[langCode];\n      const keywords = pack.keywords;\n\n      for(const keyword in keywords) {\n        const emoticons = keywords[keyword];\n        this.index.indexObject(emoticons, keyword);\n      }\n\n      this.indexedLangPacks[langCode] = true;\n    }\n  }\n\n  public searchEmojis(q: string) {\n    this.indexEmojis();\n\n    q = q.toLowerCase().replace(/_/g, ' ');\n\n    // const perf = performance.now();\n    let emojis: Array<string>;\n    if(q.trim()) {\n      const set = this.index.search(q);\n      emojis = Array.from(set).reduce((acc, v) => acc.concat(v), []);\n    } else {\n      emojis = this.recent.native.concat(AppEmojiManager.POPULAR_EMOJI).slice(0, RECENT_MAX_LENGTH);\n    }\n\n    emojis = Array.from(new Set(emojis));\n    // console.log('searchEmojis', q, 'time', performance.now() - perf);\n\n    /* for(let i = 0, length = emojis.length; i < length; ++i) {\n      if(emojis[i].includes(zeroWidthJoiner) && !emojis[i].includes('\\ufe0f')) {\n        emojis[i] += '\\ufe0f';\n      }\n    } */\n\n    return emojis;\n  }\n\n  public getRecentEmojis<T extends EmojiType>(type: 'custom'): Promise<DocId[]>;\n  public getRecentEmojis<T extends EmojiType>(type: 'native'): Promise<string[]>;\n  public getRecentEmojis<T extends EmojiType>(type: T): Promise<string[] | DocId[]> {\n    const promises = this.getRecentEmojisPromises;\n    return promises[type] ??= this.appStateManager.getState().then((state) => {\n      let recent: string[] | DocId[] = [];\n      if(type === 'native') {\n        const {recentEmoji} = state;\n        recent = Array.isArray(recentEmoji) && recentEmoji.length ? recentEmoji : AppEmojiManager.POPULAR_EMOJI;\n      } else {\n        const {recentCustomEmoji} = state;\n        recent = Array.isArray(recentCustomEmoji) && recentCustomEmoji.length ? recentCustomEmoji : [];\n      }\n\n      return this.recent[type] = recent as any;\n    }) as any;\n  }\n\n  public pushRecentEmoji(emoji: AppEmoji) {\n    const type: EmojiType = emoji.docId ? 'custom' : 'native';\n    emoji.emoji = fixEmoji(emoji.emoji);\n    // @ts-ignore\n    this.getRecentEmojis(type).then((recent) => {\n      const i = emoji.docId || emoji.emoji;\n      indexOfAndSplice(recent, i);\n      recent.unshift(i);\n      recent.splice(RECENT_MAX_LENGTH, recent.length - RECENT_MAX_LENGTH);\n\n      this.appStateManager.pushToState(type === 'custom' ? 'recentCustomEmoji' : 'recentEmoji', recent);\n      this.rootScope.dispatchEvent('emoji_recent', emoji);\n    });\n  }\n\n  public getCustomEmojiDocuments(docIds: DocId[]) {\n    if(!docIds.length) return Promise.resolve([] as MyDocument[]);\n    return this.apiManager.invokeApi('messages.getCustomEmojiDocuments', {document_id: docIds}).then((documents) => {\n      return documents.map((doc) => {\n        return this.appDocsManager.saveDoc(doc, {\n          type: 'customEmoji',\n          docId: doc.id\n        });\n      });\n    });\n  }\n\n  public getCachedCustomEmojiDocuments(docIds: DocId[]) {\n    return docIds.map((docId) => this.appDocsManager.getDoc(docId));\n  }\n\n  private setDebouncedGetCustomEmojiDocuments() {\n    if(this.getCustomEmojiDocumentsPromise || !this.getCustomEmojiDocumentPromises.size) {\n      return;\n    }\n\n    this.getCustomEmojiDocumentsPromise = pause(0).then(() => {\n      const allIds = [...this.getCustomEmojiDocumentPromises.keys()];\n      const promises: Promise<any>[] = [];\n      do {\n        const ids = allIds.splice(0, 100);\n        const promise = this.getCustomEmojiDocuments(ids).then((docs) => {\n          docs.forEach((doc, idx) => {\n            const docId = ids[idx];\n            const deferred = this.getCustomEmojiDocumentPromises.get(docId);\n            this.getCustomEmojiDocumentPromises.delete(docId);\n            deferred.resolve(doc);\n          });\n        });\n\n        promises.push(promise);\n      } while(allIds.length);\n\n      return Promise.all(promises);\n    }).finally(() => {\n      this.getCustomEmojiDocumentsPromise = undefined;\n      this.setDebouncedGetCustomEmojiDocuments();\n    });\n  }\n\n  public getCustomEmojiDocument(id: DocId) {\n    let promise = this.getCustomEmojiDocumentPromises.get(id);\n    if(promise) {\n      return promise;\n    }\n\n    const doc = this.appDocsManager.getDoc(id);\n    if(doc) {\n      return doc;\n    }\n\n    promise = deferredPromise();\n    this.getCustomEmojiDocumentPromises.set(id, promise);\n\n    this.setDebouncedGetCustomEmojiDocuments();\n\n    return promise;\n  }\n\n  public getCustomEmojis() {\n    return this.appStickersManager.getEmojiStickers();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport type GroupCallConnectionInstance from '../calls/groupCallConnectionInstance';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {nextRandomUint} from '../../helpers/random';\nimport {DataJSON, GroupCall, GroupCallParticipant, GroupCallParticipantVideoSourceGroup, InputGroupCall, PhoneJoinGroupCall, PhoneJoinGroupCallPresentation, Update, Updates} from '../../layer';\nimport {logger} from '../logger';\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\n\nexport type GroupCallId = GroupCall['id'];\nexport type MyGroupCall = GroupCall | InputGroupCall;\n\nexport type GroupCallConnectionType = 'main' | 'presentation';\n\nexport type JoinGroupCallJsonPayload = {\n  fingerprints: {\n    fingerprint: string;\n    setup: string;\n    hash: string;\n  }[];\n  pwd: string;\n  ssrc: number;\n  'ssrc-groups': GroupCallParticipantVideoSourceGroup.groupCallParticipantVideoSourceGroup[];\n  ufrag: string;\n};\n\nconst GET_PARTICIPANTS_LIMIT = 100;\n\nexport type GroupCallOutputSource = 'main' | 'presentation' | number;\n\nexport class AppGroupCallsManager extends AppManager {\n  private log: ReturnType<typeof logger>;\n\n  private groupCalls: Map<GroupCallId, MyGroupCall>;\n  private participants: Map<GroupCallId, Map<PeerId, GroupCallParticipant>>;\n  private nextOffsets: Map<GroupCallId, string>;\n\n  // private doNotDispatchParticipantUpdate: PeerId;\n\n  protected after() {\n    this.log = logger('GROUP-CALLS');\n\n    this.groupCalls = new Map();\n    this.participants = new Map();\n    this.nextOffsets = new Map();\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateGroupCall: (update) => {\n        this.saveGroupCall(update.call, update.chat_id);\n      },\n\n      updateGroupCallParticipants: (update) => {\n        this.saveGroupCall(update.call);\n\n        // this.getGroupCallFull(update.call.id, true); // ! WARNING TEMP\n\n        const groupCallId = update.call.id;\n        this.saveApiParticipants(groupCallId, update.participants);\n      }\n    });\n\n    this.rootScope.addEventListener('group_call_update', (groupCall) => {\n      if(groupCall._ === 'groupCallDiscarded') {\n        this.participants.delete(groupCall.id);\n      }\n    });\n  }\n\n  public getCachedParticipants(groupCallId: GroupCallId) {\n    let participants = this.participants.get(groupCallId);\n    if(!participants) {\n      this.participants.set(groupCallId, participants = new Map());\n    }\n\n    return participants;\n  }\n\n  private prepareToSavingNextOffset(groupCallId: GroupCallId) {\n    const nextOffsetsMap = this.nextOffsets;\n\n    const setNextOffset = (newNextOffset: string) => {\n      if(nextOffsetsMap.get(groupCallId) === nextOffset) {\n        nextOffsetsMap.set(groupCallId, newNextOffset);\n      }\n    };\n\n    const nextOffset = nextOffsetsMap.get(groupCallId);\n    return {\n      nextOffset,\n      setNextOffset\n    };\n  }\n\n  public saveApiParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, skipCounterUpdating?: boolean) {\n    const participants = this.getCachedParticipants(groupCallId);\n\n    const peerId = getPeerId(participant.peer);\n\n    const oldParticipant = participants.get(peerId);\n    const hasLeft = participant.pFlags.left;\n    if(!oldParticipant && hasLeft) {\n      return;\n    }\n\n    // * fix missing flag\n    if(!participant.pFlags.muted && !participant.pFlags.can_self_unmute) {\n      participant.pFlags.can_self_unmute = true;\n    }\n\n    if(oldParticipant) {\n      safeReplaceObject(oldParticipant, participant);\n      participant = oldParticipant;\n    } else {\n      participants.set(peerId, participant);\n    }\n\n    // if(!skipCounterUpdating) {\n    const groupCall = this.getGroupCall(groupCallId);\n    if(groupCall?._ === 'groupCall') {\n      let modified = false;\n      if(hasLeft) {\n        --groupCall.participants_count;\n        modified = true;\n      } else if(participant.pFlags.just_joined && !oldParticipant && !participant.pFlags.self) {\n        ++groupCall.participants_count;\n        modified = true;\n      }\n\n      if(modified) {\n        this.rootScope.dispatchEvent('group_call_update', groupCall);\n      }\n    }\n    // }\n\n    if(hasLeft) {\n      participants.delete(peerId);\n    }\n\n    if(oldParticipant || true/*  && this.doNotDispatchParticipantUpdate !== peerId */) {\n      this.rootScope.dispatchEvent('group_call_participant', {\n        groupCallId,\n        participant\n      });\n    }\n  }\n\n  public saveApiParticipants(groupCallId: GroupCallId, apiParticipants: GroupCallParticipant[], skipCounterUpdating?: boolean) {\n    if((apiParticipants as any).saved) return;\n    (apiParticipants as any).saved = true;\n    apiParticipants.forEach((p) => this.saveApiParticipant(groupCallId, p, skipCounterUpdating));\n  }\n\n  public async editParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, options: Partial<{\n    muted: boolean,\n    volume: number,\n    raiseHand: boolean,\n    videoStopped: boolean,\n    videoPaused: boolean,\n    presentationPaused: boolean\n  }>) {\n    this.saveApiParticipant(groupCallId, participant);\n\n    const peerId = participant.pFlags.self ? NULL_PEER_ID : getPeerId(participant.peer);\n    const updates = await this.apiManager.invokeApiSingle('phone.editGroupCallParticipant', {\n      call: this.getGroupCallInput(groupCallId),\n      participant: peerId === NULL_PEER_ID ? this.appPeersManager.getInputPeerSelf() : this.appPeersManager.getInputPeerById(peerId),\n      muted: options.muted,\n      volume: options.volume,\n      raise_hand: options.raiseHand,\n      video_paused: options.videoPaused,\n      video_stopped: options.videoStopped,\n      presentation_paused: options.presentationPaused\n    });\n\n    // do not replace with peerId because it can be null\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = getPeerId(participant.peer);\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = undefined;\n  }\n\n  public getGroupCall(id: GroupCallId) {\n    return this.groupCalls.get(id);\n  }\n\n  public async getGroupCallFull(id: GroupCallId, override?: boolean): Promise<GroupCall> {\n    const call = this.getGroupCall(id);\n    if(call && call._ !== 'inputGroupCall' && !override) {\n      return call;\n    }\n\n    const limit = this.getCachedParticipants(id).size ? 0 : GET_PARTICIPANTS_LIMIT;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'phone.getGroupCall',\n      params: {\n        call: this.getGroupCallInput(id),\n        limit\n      },\n      processResult: (groupCall) => {\n        // ? maybe I should save group call after participants so I can avoid passing the 'skipCounterUpdating' flag ?\n        this.appUsersManager.saveApiUsers(groupCall.users);\n        this.appChatsManager.saveApiChats(groupCall.chats);\n        this.saveApiParticipants(id, groupCall.participants, true);\n        const call = this.saveGroupCall(groupCall.call) as GroupCall;\n\n        if(limit && this.nextOffsets.get(id) === undefined) {\n          this.nextOffsets.set(id, groupCall.participants_next_offset);\n        }\n\n        return call;\n      }\n    });\n  }\n\n  public saveGroupCall(call: MyGroupCall, chatId?: ChatId) {\n    const oldCall = this.groupCalls.get(call.id);\n    const shouldUpdate = call._ !== 'inputGroupCall' && (!oldCall || oldCall._ !== 'groupCallDiscarded');\n    if(oldCall) {\n      if(shouldUpdate) {\n        safeReplaceObject(oldCall, call);\n      }\n\n      call = oldCall;\n    } else {\n      this.groupCalls.set(call.id, call);\n    }\n\n    if(shouldUpdate) {\n      this.rootScope.dispatchEvent('group_call_update', call as any);\n    }\n\n    return call;\n  }\n\n  public async createGroupCall(chatId: ChatId, scheduleDate?: number, title?: string) {\n    const updates = await this.apiManager.invokeApi('phone.createGroupCall', {\n      peer: this.appPeersManager.getInputPeerById(chatId.toPeerId(true)),\n      random_id: nextRandomUint(32),\n      schedule_date: scheduleDate,\n      title\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCall') as Update.updateGroupCall;\n    return update.call;\n  }\n\n  public getGroupCallInput(id: GroupCallId): InputGroupCall {\n    const groupCall = this.getGroupCall(id);\n    return {\n      _: 'inputGroupCall',\n      id: groupCall.id,\n      access_hash: groupCall.access_hash\n    };\n  }\n\n  // public generateSelfParticipant(): GroupCallParticipant {\n  //   const mainSources = this.currentGroupCall.connections.main.sources;\n  //   const presentationSources = this.currentGroupCall.connections.presentation?.sources;\n  //   return {\n  //     _: 'groupCallParticipant',\n  //     pFlags: {\n  //       can_self_unmute: true,\n  //       self: true\n  //     },\n  //     source: mainSources.audio.source,\n  //     video: this.generateSelfVideo(mainSources.video),\n  //     presentation: presentationSources && this.generateSelfVideo(presentationSources.video, presentationSources.audio?.source),\n  //     date: tsNow(true),\n  //     peer: this.appPeersManager.getOutputPeer(rootScope.myId)\n  //   };\n  // }\n\n  public async getGroupCallParticipants(id: GroupCallId) {\n    const {nextOffset, setNextOffset} = this.prepareToSavingNextOffset(id);\n\n    if(nextOffset !== '') {\n      await this.apiManager.invokeApiSingleProcess({\n        method: 'phone.getGroupParticipants',\n        params: {\n          call: this.getGroupCallInput(id),\n          ids: [],\n          sources: [],\n          offset: nextOffset || '',\n          limit: GET_PARTICIPANTS_LIMIT\n        },\n        processResult: (groupCallParticipants) => {\n          const newNextOffset = groupCallParticipants.count === groupCallParticipants.participants.length ? '' : groupCallParticipants.next_offset;\n\n          this.appChatsManager.saveApiChats(groupCallParticipants.chats);\n          this.appUsersManager.saveApiUsers(groupCallParticipants.users);\n          this.saveApiParticipants(id, groupCallParticipants.participants);\n\n          setNextOffset(newNextOffset);\n        }\n      });\n    }\n\n    return {\n      participants: this.getCachedParticipants(id),\n      isEnd: this.nextOffsets.get(id) === ''\n    };\n  }\n\n  public hangUp(id: GroupCallId, discard?: boolean | number) {\n    const groupCallInput = this.getGroupCallInput(id);\n    let promise: Promise<Updates>;\n    if(typeof(discard) === 'boolean' && discard) {\n      promise = this.apiManager.invokeApi('phone.discardGroupCall', {\n        call: groupCallInput\n      });\n    } else if(typeof(discard) === 'number') {\n      promise = this.apiManager.invokeApi('phone.leaveGroupCall', {\n        call: groupCallInput,\n        source: discard\n      });\n    } else {\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', {\n        call: groupCallInput,\n        join_as: this.appPeersManager.getInputPeerSelf(),\n        muted: true,\n        video_stopped: true,\n        params: {\n          _: 'dataJSON',\n          data: ''\n        }\n      });\n    }\n\n    return promise.then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public async joinGroupCall(groupCallId: GroupCallId, params: DataJSON, options: GroupCallConnectionInstance['options']) {\n    const groupCallInput = this.getGroupCallInput(groupCallId);\n    let promise: Promise<Updates>;\n    if(options.type === 'main') {\n      const request: PhoneJoinGroupCall = {\n        call: groupCallInput,\n        join_as: this.appPeersManager.getInputPeerSelf(),\n        params,\n        muted: options.isMuted,\n        video_stopped: !options.joinVideo\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', request);\n      this.log(`[api] joinGroupCall id=${groupCallId}`, request);\n    } else {\n      const request: PhoneJoinGroupCallPresentation = {\n        call: groupCallInput,\n        params\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCallPresentation', request);\n      this.log(`[api] joinGroupCallPresentation id=${groupCallId}`, request);\n    }\n\n    const updates = await promise;\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCallConnection') as Update.updateGroupCallConnection;\n    return update;\n  }\n\n  public leaveGroupCallPresentation(groupCallId: GroupCallId) {\n    return this.apiManager.invokeApi('phone.leaveGroupCallPresentation', {\n      call: this.getGroupCallInput(groupCallId)\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputPhoto} from '../../../../layer';\nimport {MyPhoto} from '../../appPhotosManager';\n\nexport default function getPhotoInput(photo: MyPhoto): InputPhoto.inputPhoto {\n  return {\n    _: 'inputPhoto',\n    id: photo.id,\n    access_hash: photo.access_hash,\n    file_reference: photo.file_reference\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputMedia} from '../../../../layer';\nimport {MyPhoto} from '../../appPhotosManager';\nimport getPhotoInput from './getPhotoInput';\n\nexport default function getPhotoMediaInput(photo: MyPhoto): InputMedia.inputMediaPhoto {\n  return {\n    _: 'inputMediaPhoto',\n    id: getPhotoInput(photo),\n    ttl_seconds: 0\n  };\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {Document, InputMedia} from '../../../../layer';\r\n\r\nexport default function getMediaInput(doc: Document.document): InputMedia.inputMediaDocument {\r\n  return {\r\n    _: 'inputMediaDocument',\r\n    id: {\r\n      _: 'inputDocument',\r\n      id: doc.id,\r\n      access_hash: doc.access_hash,\r\n      file_reference: doc.file_reference\r\n    },\r\n    ttl_seconds: 0\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyDocument} from './appDocsManager';\r\nimport type {MyPhoto} from './appPhotosManager';\r\nimport type {MyTopPeer} from './appUsersManager';\r\nimport {BotInlineResult, GeoPoint, InputGeoPoint, InputMedia, MessageEntity, MessageMedia, MessagesBotResults, ReplyMarkup} from '../../layer';\r\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\r\nimport {AppManager} from './manager';\r\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\nimport generateQId from './utils/inlineBots/generateQId';\r\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\r\nimport {AppMessagesManager} from './appMessagesManager';\r\n\r\nexport class AppInlineBotsManager extends AppManager {\r\n  private inlineResults: {[queryAndResultIds: string]: BotInlineResult} = {};\r\n  private setHash: {\r\n    [botId: UserId]: {\r\n      peerId: PeerId,\r\n      time: number\r\n    }\r\n  } = {};\r\n\r\n  public getGeoInput(geo: GeoPoint): InputGeoPoint {\r\n    return geo._ === 'geoPoint' ? {\r\n      _: 'inputGeoPoint',\r\n      lat: geo.lat,\r\n      long: geo.long,\r\n      accuracy_radius: geo.accuracy_radius\r\n    } : {\r\n      _: 'inputGeoPointEmpty'\r\n    };\r\n  }\r\n\r\n  public getInlineResults(peerId: PeerId, botId: BotId, query = '', offset = '', geo?: GeoPoint) {\r\n    return this.apiManager.invokeApi('messages.getInlineBotResults', {\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      query,\r\n      geo_point: geo ? this.getGeoInput(geo) : undefined,\r\n      offset\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true}).then((botResults) => {\r\n      const queryId = botResults.query_id;\r\n\r\n      /* if(botResults.switch_pm) {\r\n        botResults.switch_pm.rText = wrapRichText(botResults.switch_pm.text, {noLinebreaks: true, noLinks: true});\r\n      } */\r\n\r\n      botResults.results.forEach((result) => {\r\n        if(result._ === 'botInlineMediaResult') {\r\n          if(result.document) {\r\n            result.document = this.appDocsManager.saveDoc(result.document);\r\n          }\r\n\r\n          if(result.photo) {\r\n            result.photo = this.appPhotosManager.savePhoto(result.photo);\r\n          }\r\n        }\r\n\r\n        this.inlineResults[generateQId(queryId, result.id)] = result;\r\n      });\r\n\r\n      return botResults;\r\n    });\r\n  }\r\n\r\n  private pushPopularBot(botId: BotId) {\r\n    this.appUsersManager.getTopPeers('bots_inline').then((topPeers) => {\r\n      const botPeerId = botId.toPeerId();\r\n      const index = topPeers.findIndex((topPeer) => topPeer.id === botPeerId);\r\n      let topPeer: MyTopPeer;\r\n      if(index !== -1) {\r\n        topPeer = topPeers[index];\r\n      } else {\r\n        topPeer = {\r\n          id: botPeerId,\r\n          rating: 0\r\n        };\r\n      }\r\n\r\n      ++topPeer.rating;\r\n      insertInDescendSortedArray(topPeers, topPeer, 'rating');\r\n\r\n      this.appStateManager.setKeyValueToStorage('topPeersCache');\r\n\r\n      // rootScope.$broadcast('inline_bots_popular')\r\n    });\r\n  }\r\n\r\n  public switchToPM(fromPeerId: PeerId, botId: BotId, startParam: string) {\r\n    this.setHash[botId] = {peerId: fromPeerId, time: Date.now()};\r\n    return this.appMessagesManager.startBot(botId, undefined, startParam);\r\n  }\r\n\r\n  /*\r\n  function resolveInlineMention (username) {\r\n    return AppPeersManager.resolveUsername(username).then(function (peerId) {\r\n      if (peerId.isUser()) {\r\n        var bot = AppUsersManager.getUser(peerId)\r\n        if (bot.pFlags.bot && bot.bot_inline_placeholder !== undefined) {\r\n          var resolvedBot = {\r\n            username: username,\r\n            id: peerId,\r\n            placeholder: bot.bot_inline_placeholder\r\n          }\r\n          if (bot.pFlags.bot_inline_geo &&\r\n            GeoLocationManager.isAvailable()) {\r\n              return checkGeoLocationAccess(peerId).then(function () {\r\n                return GeoLocationManager.getPosition().then(function (coords) {\r\n                  resolvedBot.geo = coords\r\n                  return qSync.when(resolvedBot)\r\n                })\r\n              })['catch'](function () {\r\n                return qSync.when(resolvedBot)\r\n              })\r\n            }\r\n            return qSync.when(resolvedBot)\r\n          }\r\n        }\r\n        return $q.reject()\r\n      }, function (error) {\r\n        error.handled = true\r\n        return $q.reject(error)\r\n      })\r\n    }\r\n\r\n    function regroupWrappedResults (results, rowW, rowH) {\r\n      if (!results ||\r\n        !results[0] ||\r\n        ['photo', 'gif', 'sticker'].indexOf(results[0].type) === -1) {\r\n          return\r\n        }\r\n        var ratios = []\r\n        angular.forEach(results, function (result) {\r\n          var w\r\n          var h, doc\r\n          var photo\r\n          if (result._ === 'botInlineMediaResult') {\r\n            if (doc = result.document) {\r\n              w = result.document.w\r\n              h = result.document.h\r\n            }\r\n            else if (photo = result.photo) {\r\n              var photoSize = (photo.sizes || [])[0]\r\n              w = photoSize && photoSize.w\r\n              h = photoSize && photoSize.h\r\n            }\r\n          }else {\r\n            w = result.w\r\n            h = result.h\r\n          }\r\n          if (!w || !h) {\r\n            w = h = 1\r\n          }\r\n          ratios.push(w / h)\r\n        })\r\n\r\n        var rows = []\r\n        var curCnt = 0\r\n        var curW = 0\r\n        angular.forEach(ratios, function (ratio) {\r\n          var w = ratio * rowH\r\n          curW += w\r\n          if (!curCnt || curCnt < 4 && curW < (rowW * 1.1)) {\r\n            curCnt++\r\n          } else {\r\n            rows.push(curCnt)\r\n            curCnt = 1\r\n            curW = w\r\n          }\r\n        })\r\n        if (curCnt) {\r\n          rows.push(curCnt)\r\n        }\r\n\r\n        var i = 0\r\n        var thumbs = []\r\n        var lastRowI = rows.length - 1\r\n        angular.forEach(rows, function (rowCnt, rowI) {\r\n          var lastRow = rowI === lastRowI\r\n          var curRatios = ratios.slice(i, i + rowCnt)\r\n          var sumRatios = 0\r\n          angular.forEach(curRatios, function (ratio) {\r\n            sumRatios += ratio\r\n          })\r\n          angular.forEach(curRatios, function (ratio, j) {\r\n            var thumbH = rowH\r\n            var thumbW = rowW * ratio / sumRatios\r\n            var realW = thumbH * ratio\r\n            if (lastRow && thumbW > realW) {\r\n              thumbW = realW\r\n            }\r\n            var result = results[i + j]\r\n            result.thumbW = Math.floor(thumbW) - 2\r\n            result.thumbH = Math.floor(thumbH) - 2\r\n          })\r\n\r\n          i += rowCnt\r\n        })\r\n      } */\r\n\r\n  public async checkSwitchReturn(botId: BotId) {\r\n    const bot = this.appUsersManager.getUser(botId);\r\n    if(!bot || !bot.pFlags.bot || !bot.bot_inline_placeholder) {\r\n      return;\r\n    }\r\n\r\n    const peerData = this.setHash[botId];\r\n    if(peerData) {\r\n      delete this.setHash[botId];\r\n      if((Date.now() - peerData.time) < 3600e3) {\r\n        return peerData.peerId;\r\n      }\r\n    }\r\n  }\r\n\r\n  public switchInlineQuery(peerId: PeerId, threadId: number, botId: BotId, query: string) {\r\n    this.appDraftsManager.setDraft(peerId, threadId, '@' + this.appUsersManager.getUser(botId).username + ' ' + query);\r\n  }\r\n\r\n  public callbackButtonClick(peerId: PeerId, mid: number, button: any) {\r\n    return this.apiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid),\r\n      data: button.data\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true});\r\n  }\r\n\r\n  /* function gameButtonClick (id) {\r\n    var message = AppMessagesManager.getMessage(id)\r\n    var peerId = AppMessagesManager.getMessagePeer(message)\r\n\r\n    return MtpApiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: AppPeersManager.getInputPeerByID(peerId),\r\n      msg_id: AppMessagesIDsManager.getMessageLocalID(id)\r\n    }, {timeout: 1, stopTime: -1, noErrorBox: true}).then(function (callbackAnswer) {\r\n      if (typeof callbackAnswer.message === 'string' &&\r\n      callbackAnswer.message.length) {\r\n        showCallbackMessage(callbackAnswer.message, callbackAnswer.pFlags.alert)\r\n      }\r\n      else if (typeof callbackAnswer.url === 'string') {\r\n        AppGamesManager.openGame(message.media.game.id, id, callbackAnswer.url)\r\n      }\r\n    })\r\n  } */\r\n\r\n  public sendInlineResult(peerId: PeerId, botId: BotId, queryAndResultIds: string, options: Partial<{\r\n    viaBotId: BotId,\r\n    queryId: string,\r\n    resultId: string,\r\n    replyMarkup: ReplyMarkup,\r\n    entities: MessageEntity[],\r\n    replyToMsgId: number,\r\n    clearDraft: true,\r\n    scheduleDate: number,\r\n    silent: true,\r\n    sendAsPeerId: PeerId,\r\n    geoPoint: GeoPoint\r\n  }> = {}) {\r\n    const inlineResult = this.inlineResults[queryAndResultIds];\r\n    if(!inlineResult) {\r\n      return;\r\n    }\r\n\r\n    this.pushPopularBot(botId);\r\n    const splitted = queryAndResultIds.split('_');\r\n    const queryID = splitted.shift();\r\n    const resultID = splitted.join('_');\r\n    options.viaBotId = botId;\r\n    options.queryId = queryID;\r\n    options.resultId = resultID;\r\n    if(inlineResult.send_message.reply_markup) {\r\n      options.replyMarkup = inlineResult.send_message.reply_markup;\r\n    }\r\n\r\n    if(inlineResult.send_message._ === 'botInlineMessageText') {\r\n      options.entities = inlineResult.send_message.entities;\r\n      this.appMessagesManager.sendText(peerId, inlineResult.send_message.message, options);\r\n    } else {\r\n      let caption = '';\r\n      let inputMedia: Parameters<AppMessagesManager['sendOther']>[1], messageMedia: MessageMedia;\r\n      const sendMessage = inlineResult.send_message;\r\n      switch(sendMessage._) {\r\n        case 'botInlineMessageMediaAuto': {\r\n          caption = sendMessage.message;\r\n\r\n          if(inlineResult._ === 'botInlineMediaResult') {\r\n            const {document, photo} = inlineResult;\r\n            if(document) {\r\n              inputMedia = getDocumentMediaInput(document as MyDocument);\r\n            } else {\r\n              inputMedia = getPhotoMediaInput(photo as MyPhoto);\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaGeo': {\r\n          inputMedia = {\r\n            _: 'inputMediaGeoPoint',\r\n            geo_point: this.getGeoInput(sendMessage.geo)\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaVenue': {\r\n          inputMedia = {\r\n            _: 'inputMediaVenue',\r\n            geo_point: this.getGeoInput(sendMessage.geo),\r\n            title: sendMessage.title,\r\n            address: sendMessage.address,\r\n            provider: sendMessage.provider,\r\n            venue_id: sendMessage.venue_id,\r\n            venue_type: sendMessage.venue_type\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaContact': {\r\n          inputMedia = {\r\n            _: 'inputMediaContact',\r\n            phone_number: sendMessage.phone_number,\r\n            first_name: sendMessage.first_name,\r\n            last_name: sendMessage.last_name,\r\n            vcard: sendMessage.vcard\r\n          };\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaInvoice': {\r\n          // const photo = sendMessage.photo;\r\n          // inputMedia = {\r\n          //   _: 'inputMediaInvoice',\r\n          //   description: sendMessage.description,\r\n          //   title: sendMessage.title,\r\n          //   photo: photo && {\r\n          //     _: 'inputWebDocument',\r\n          //     attributes: photo.attributes,\r\n          //     mime_type: photo.mime_type,\r\n          //     size: photo.size,\r\n          //     url: photo.url\r\n          //   },\r\n          //   invoice: undefined,\r\n          //   payload: undefined,\r\n          //   provider: undefined,\r\n          //   provider_data: undefined,\r\n          //   start_param: undefined\r\n          // };\r\n\r\n          messageMedia = {\r\n            _: 'messageMediaInvoice',\r\n            title: sendMessage.title,\r\n            description: sendMessage.description,\r\n            photo: sendMessage.photo,\r\n            currency: sendMessage.currency,\r\n            total_amount: sendMessage.total_amount,\r\n            pFlags: {\r\n              shipping_address_requested: sendMessage.pFlags.shipping_address_requested,\r\n              test: sendMessage.pFlags.test\r\n            },\r\n            start_param: undefined\r\n          };\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      if(!inputMedia && messageMedia) {\r\n        inputMedia = {\r\n          _: 'messageMediaPending',\r\n          messageMedia\r\n        };\r\n      }\r\n\r\n      this.appMessagesManager.sendOther(peerId, inputMedia, options);\r\n    }\r\n  }\r\n\r\n  /* function checkGeoLocationAccess (botID) {\r\n    var key = 'bot_access_geo' + botID\r\n    return Storage.get(key).then(function (geoAccess) {\r\n      if (geoAccess && geoAccess.granted) {\r\n        return true\r\n      }\r\n      return ErrorService.confirm({\r\n        type: 'BOT_ACCESS_GEO_INLINE'\r\n      }).then(function () {\r\n        var setHash = {}\r\n        setHash[key] = {granted: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return true\r\n      }, function () {\r\n        var setHash = {}\r\n        setHash[key] = {denied: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return $q.reject()\r\n      })\r\n    })\r\n  } */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {MESSAGE_ID_INCREMENT} from './utils/messageId';\r\nimport generateMessageId from './utils/messageId/generateMessageId';\r\n\r\nexport class AppMessagesIdsManager {\r\n  private tempNum = 0;\r\n\r\n  public generateTempMessageId(messageId: number) {\r\n    const num = ++this.tempNum;\r\n    return generateMessageId(messageId) + (num & (MESSAGE_ID_INCREMENT - 1));\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport indexOfAndSplice from './array/indexOfAndSplice';\r\nimport makeError from './makeError';\r\n\r\nexport type Middleware = {\r\n  (): boolean;\r\n  create(): MiddlewareHelper;\r\n  onClean: (callback: VoidFunction) => void;\r\n  onDestroy: (callback: VoidFunction) => void;\r\n};\r\n\r\nconst createDetails = (): {\r\n  cleaned?: boolean,\r\n  inner: MiddlewareHelper[],\r\n  onCleanCallbacks: VoidFunction[]\r\n} => ({\r\n  cleaned: false,\r\n  inner: [],\r\n  onCleanCallbacks: []\r\n});\r\n\r\nconst MIDDLEWARE_ERROR = makeError('MIDDLEWARE');\r\n\r\n// * onClean == cancel promises, etc\r\n// * onDestroy == destructor\r\nexport class MiddlewareHelper {\r\n  private details = createDetails();\r\n  private onDestroyCallbacks: VoidFunction[] = [];\r\n  private parent: MiddlewareHelper;\r\n  private destroyed: boolean;\r\n\r\n  public clean() {\r\n    const details = this.details;\r\n    details.cleaned = true;\r\n    details.inner.splice(0, details.inner.length).forEach((helper) => helper.destroy());\r\n    details.onCleanCallbacks.splice(0, details.onCleanCallbacks.length).forEach((callback) => callback());\r\n    this.details = createDetails();\r\n  }\r\n\r\n  public destroy() {\r\n    this.destroyed = true;\r\n    this.clean();\r\n    this.onDestroyCallbacks.splice(0, this.onDestroyCallbacks.length).forEach((callback) => callback());\r\n\r\n    if(this.parent) {\r\n      indexOfAndSplice(this.parent.details.inner, this);\r\n      this.parent = undefined;\r\n    }\r\n  }\r\n\r\n  public get(additionalCallback?: () => boolean) {\r\n    const details = this.details;\r\n\r\n    const middleware: Middleware = () => {\r\n      return !details.cleaned && (!additionalCallback || additionalCallback());\r\n    };\r\n\r\n    middleware.create = () => {\r\n      if(!middleware()) throw MIDDLEWARE_ERROR;\r\n      const helper = new MiddlewareHelper();\r\n      helper.parent = this;\r\n      details.inner.push(helper);\r\n      return helper;\r\n    };\r\n\r\n    middleware.onClean = (callback) => {\r\n      if(!middleware()) return callback();\r\n      details.onCleanCallbacks.push(callback);\r\n    };\r\n\r\n    middleware.onDestroy = this.onDestroy;\r\n\r\n    return middleware;\r\n  }\r\n\r\n  public onDestroy = (callback: VoidFunction) => {\r\n    if(this.destroyed) return callback();\r\n    this.onDestroyCallbacks.push(callback);\r\n  };\r\n}\r\n\r\n// * will change .cleaned and new instance will be created\r\nexport function getMiddleware() {\r\n  return new MiddlewareHelper();\r\n}\r\n","export default function splitStringByLength(str: string, maxLength: number) {\n  if(str.length < maxLength) return [str];\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\n  const delimiter = ' ';// '\\n';\n  const out: string[] = [];\n\n  const cut = (end?: number) => {\n    let part = str.slice(lastSliceStartIndex, end);\n    const _arrayIndex = arrayIndex++;\n    if(part.length > maxLength) {\n      const overflowPart = part.slice(maxLength);\n      const splitted = splitStringByLength(overflowPart, maxLength);\n      splitted.forEach((part) => {\n        out[arrayIndex++] = part;\n      });\n\n      part = part.slice(0, maxLength);\n    }\n\n    lastSliceStartIndex = end;\n    length = 0;\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\n  };\n\n  let lastIndex = 0;\n  do {\n    let index = str.indexOf(delimiter, lastIndex);\n    if(index === -1) {\n      if(lastIndex !== (str.length - 1)) {\n        cut();\n      }\n\n      break;\n    }\n\n    index += delimiter.length;\n\n    const partLength = index - lastIndex;\n    if((length + partLength) > maxLength) {\n      cut(length);\n    }\n\n    lastIndex = index;\n    length += partLength;\n  } while(true);\n\n  return out;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {TabState} from '../mtproto/mtprotoworker';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\ntype Tab = {\n  source: MessageEventSource,\n  state: TabState\n};\n\nexport class AppTabsManager {\n  private tabs: Map<Tab['source'], Tab>;\n\n  constructor() {\n    this.tabs = new Map();\n  }\n\n  public start() {\n    const port = MTProtoMessagePort.getInstance<false>();\n\n    port.addEventListener('tabState', (state, source) => {\n      const tab = this.tabs.get(source);\n      tab.state = state;\n    });\n  }\n\n  public getTabs() {\n    return [...this.tabs.values()].filter((tab) => !!tab.state);\n  }\n\n  public addTab(source: MessageEventSource) {\n    const tab: Tab = {\n      source,\n      state: undefined\n    };\n\n    this.tabs.set(source, tab);\n  }\n\n  public deleteTab(source: MessageEventSource) {\n    this.tabs.delete(source);\n  }\n}\n\nconst appTabsManager = new AppTabsManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appTabsManager = appTabsManager);\nexport default appTabsManager;\n","import {InputDocument} from '../../../../layer';\nimport type {MyDocument} from '../../appDocsManager';\n\nexport default function getDocumentInput(doc: MyDocument): InputDocument {\n  return {\n    _: 'inputDocument',\n    id: doc.id,\n    access_hash: doc.access_hash,\n    file_reference: doc.file_reference\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport LazyLoadQueueBase from '../../components/lazyLoadQueueBase';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport tsNow from '../../helpers/tsNow';\nimport {randomLong} from '../../helpers/random';\nimport {Chat, ChatFull, Dialog as MTDialog, DialogPeer, DocumentAttribute, InputMedia, InputMessage, InputPeerNotifySettings, InputSingleMedia, Message, MessageAction, MessageEntity, MessageFwdHeader, MessageMedia, MessageReplies, MessageReplyHeader, MessagesDialogs, MessagesFilter, MessagesMessages, MethodDeclMap, NotifyPeer, PeerNotifySettings, PhotoSize, SendMessageAction, Update, Photo, Updates, ReplyMarkup, InputPeer, InputPhoto, InputDocument, InputGeoPoint, WebPage, GeoPoint, ReportReason, MessagesGetDialogs, InputChannel, InputDialogPeer, ReactionCount, MessagePeerReaction, MessagesSearchCounter, Peer, MessageReactions, Document, InputFile, Reaction} from '../../layer';\nimport {ArgumentTypes, InvokeApiOptions} from '../../types';\nimport {logger, LogTypes} from '../logger';\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {GLOBAL_FOLDER_ID} from '../storages/dialogs';\nimport {ChatRights} from './appChatsManager';\nimport {MyDocument} from './appDocsManager';\nimport {MyPhoto} from './appPhotosManager';\nimport {getFileNameByLocation} from '../../helpers/fileName';\nimport DEBUG from '../../config/debug';\nimport SlicedArray, {Slice, SliceEnd} from '../../helpers/slicedArray';\nimport {FOLDER_ID_ALL, MUTE_UNTIL, NULL_PEER_ID, REAL_FOLDER_ID, REPLIES_HIDDEN_CHANNEL_ID, REPLIES_PEER_ID, SERVICE_PEER_ID, THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\n// import telegramMeWebManager from '../mtproto/telegramMeWebManager';\nimport {getMiddleware} from '../../helpers/middleware';\nimport assumeType from '../../helpers/assumeType';\nimport copy from '../../helpers/object/copy';\nimport getObjectKeysAndSort from '../../helpers/object/getObjectKeysAndSort';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport splitStringByLength from '../../helpers/string/splitStringByLength';\nimport debounce from '../../helpers/schedulers/debounce';\nimport {AppManager} from './manager';\nimport type {MediaSize} from '../../helpers/mediaSize';\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\nimport getPhotoDownloadOptions from './utils/photos/getPhotoDownloadOptions';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport mergeEntities from '../richTextProcessor/mergeEntities';\nimport parseEntities from '../richTextProcessor/parseEntities';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport generateMessageId from './utils/messageId/generateMessageId';\nimport filterMessagesByInputFilter from './utils/messages/filterMessagesByInputFilter';\nimport ctx from '../../environment/ctx';\nimport {getEnvironment} from '../../environment/utils';\nimport getDialogIndex from './utils/dialogs/getDialogIndex';\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\nimport getDocumentInputFileName from './utils/docs/getDocumentInputFileName';\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\nimport type {Progress} from './appDownloadManager';\nimport noop from '../../helpers/noop';\nimport appTabsManager from './appTabsManager';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport getAlbumText from './utils/messages/getAlbumText';\nimport pause from '../../helpers/schedulers/pause';\nimport makeError from '../../helpers/makeError';\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\nimport getDocumentInput from './utils/docs/getDocumentInput';\nimport reactionsEqual from './utils/reactions/reactionsEqual';\n\n// console.trace('include');\n// TODO: если удалить диалог находясь в папке, то он не удалится из папки и будет виден в настройках\n\nconst APITIMEOUT = 0;\nconst DO_NOT_READ_HISTORY = false;\n\nexport type HistoryStorage = {\n  count: number | null,\n  history: SlicedArray<number>,\n\n  maxId?: number,\n  readPromise?: Promise<void>,\n  readMaxId?: number,\n  readOutboxMaxId?: number,\n  triedToReadMaxId?: number,\n\n  maxOutId?: number,\n  replyMarkup?: Exclude<ReplyMarkup, ReplyMarkup.replyInlineMarkup>\n};\n\nexport type HistoryResult = {\n  count: number,\n  history: number[],\n  isEnd: ReturnType<Slice<number>['getEnds']>,\n  offsetIdOffset?: number,\n};\n\nexport type Dialog = MTDialog.dialog;\n\nexport type MyMessage = Message.message | Message.messageService;\nexport type MyInputMessagesFilter = 'inputMessagesFilterEmpty'\n  | 'inputMessagesFilterPhotos'\n  | 'inputMessagesFilterPhotoVideo'\n  | 'inputMessagesFilterVideo'\n  | 'inputMessagesFilterDocument'\n  | 'inputMessagesFilterVoice'\n  | 'inputMessagesFilterRoundVoice'\n  | 'inputMessagesFilterRoundVideo'\n  | 'inputMessagesFilterMusic'\n  | 'inputMessagesFilterUrl'\n  | 'inputMessagesFilterMyMentions'\n  | 'inputMessagesFilterChatPhotos'\n  | 'inputMessagesFilterPinned';\n\nexport type PinnedStorage = Partial<{\n  promise: Promise<PinnedStorage>,\n  count: number,\n  maxId: number\n}>;\nexport type MessagesStorage = Map<number, Message.message | Message.messageService> & {peerId: PeerId, type: MessagesStorageType, key: MessagesStorageKey};\nexport type MessagesStorageType = 'scheduled' | 'history' | 'grouped';\nexport type MessagesStorageKey = `${PeerId}_${MessagesStorageType}`;\n\nexport type MyMessageActionType = Message.messageService['action']['_'];\n\ntype PendingAfterMsg = Partial<InvokeApiOptions & {\n  afterMessageId: string,\n  messageId: string\n}>;\n\ntype MapValueType<A> = A extends Map<any, infer V> ? V : never;\n\nexport type BatchUpdates = {\n  'messages_reactions': AppMessagesManager['batchUpdateReactions'],\n  'messages_views': AppMessagesManager['batchUpdateViews']\n};\n\ntype PendingMessageDetails = {\n  peerId: PeerId,\n  tempId: number,\n  threadId: number,\n  storage: MessagesStorage,\n  sequential?: boolean\n};\n\nconst processAfter = (cb: () => void) => {\n  // setTimeout(cb, 0);\n  cb();\n};\n\nconst UPDATE_STICKERSET_ORDER = true;\n\nexport class AppMessagesManager extends AppManager {\n  private messagesStorageByPeerId: {[peerId: string]: MessagesStorage};\n  private groupedMessagesStorage: {[groupId: string]: MessagesStorage}; // will be used for albums\n  private scheduledMessagesStorage: {[peerId: PeerId]: MessagesStorage};\n  private historiesStorage: {\n    [peerId: PeerId]: HistoryStorage\n  };\n  private threadsStorage: {\n    [peerId: PeerId]: {\n      [threadId: string]: HistoryStorage\n    }\n  };\n  private searchesStorage: {\n    [peerId: PeerId]: Partial<{\n      [inputFilter in MyInputMessagesFilter]: {\n        count?: number,\n        history: number[]\n      }\n    }>\n  };\n  private pinnedMessages: {[peerId: PeerId]: PinnedStorage};\n\n  private threadsServiceMessagesIdsStorage: {[peerId_threadId: string]: number};\n  private threadsToReplies: {\n    [peerId_threadId: string]: string;\n  };\n\n  private pendingByRandomId: {\n    [randomId: string]: PendingMessageDetails\n  } = {};\n  private pendingByMessageId: {[mid: string]: Long} = {};\n  private pendingAfterMsgs: {[peerId: PeerId]: PendingAfterMsg} = {};\n  public pendingTopMsgs: {[peerId: PeerId]: number} = {};\n  private tempFinalizeCallbacks: {\n    [tempId: string]: {\n      [callbackName: string]: Partial<{\n        deferred: CancellablePromise<void>,\n        callback: (message: MyMessage) => Promise<any>\n      }>\n    }\n  } = {};\n\n  private sendSmthLazyLoadQueue = new LazyLoadQueueBase(10);\n\n  private needSingleMessages: Map<PeerId, Map<number, CancellablePromise<Message.message | Message.messageService>>> = new Map();\n  private fetchSingleMessagesPromise: Promise<void> = null;\n  private extendedMedia: Map<PeerId, Map<number, CancellablePromise<void>>> = new Map();\n\n  private maxSeenId = 0;\n\n  public migratedFromTo: {[peerId: PeerId]: PeerId} = {};\n  public migratedToFrom: {[peerId: PeerId]: PeerId} = {};\n\n  private newDialogsHandlePromise: Promise<any>;\n  private newDialogsToHandle: Map<PeerId, Dialog> = new Map();\n  public newUpdatesAfterReloadToHandle: {[peerId: PeerId]: Set<Update>} = {};\n\n  private notificationsHandlePromise = 0;\n  private notificationsToHandle: {[peerId: PeerId]: {\n    fwdCount: number,\n    fromId: PeerId,\n    topMessage?: MyMessage\n  }} = {};\n\n  private reloadConversationsPromise: Promise<void>;\n  private reloadConversationsPeers: Map<PeerId, {inputDialogPeer: InputDialogPeer, promise: CancellablePromise<Dialog>}> = new Map();\n\n  public log = logger('MESSAGES', LogTypes.Error | LogTypes.Debug | LogTypes.Log | LogTypes.Warn);\n\n  private groupedTempId = 0;\n\n  private typings: {[peerId: PeerId]: {action: SendMessageAction, timeout?: number}} = {};\n\n  private middleware: ReturnType<typeof getMiddleware>;\n\n  private unreadMentions: {[peerId: PeerId]: SlicedArray<number>} = {};\n  private goToNextMentionPromises: {[peerId: PeerId]: Promise<number>} = {};\n\n  private batchUpdates: {\n    [k in keyof BatchUpdates]?: {\n      callback: BatchUpdates[k],\n      batch: ArgumentTypes<BatchUpdates[k]>[0]\n    }\n  } = {};\n  private batchUpdatesDebounced: () => Promise<void>;\n\n  private uploadFilePromises: {[fileName: string]: CancellablePromise<any>};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateMessageID: this.onUpdateMessageId,\n\n      updateNewDiscussionMessage: this.onUpdateNewMessage,\n      updateNewMessage: this.onUpdateNewMessage,\n      updateNewChannelMessage: this.onUpdateNewMessage,\n\n      updateDialogUnreadMark: this.onUpdateDialogUnreadMark,\n\n      updateEditMessage: this.onUpdateEditMessage,\n      updateEditChannelMessage: this.onUpdateEditMessage,\n\n      updateMessageReactions: this.onUpdateMessageReactions,\n\n      updateReadChannelDiscussionInbox: this.onUpdateReadHistory,\n      updateReadChannelDiscussionOutbox: this.onUpdateReadHistory,\n      updateReadHistoryInbox: this.onUpdateReadHistory,\n      updateReadHistoryOutbox: this.onUpdateReadHistory,\n      updateReadChannelInbox: this.onUpdateReadHistory,\n      updateReadChannelOutbox: this.onUpdateReadHistory,\n\n      updateChannelReadMessagesContents: this.onUpdateReadMessagesContents,\n      updateReadMessagesContents: this.onUpdateReadMessagesContents,\n\n      updateChannelAvailableMessages: this.onUpdateChannelAvailableMessages,\n\n      updateDeleteMessages: this.onUpdateDeleteMessages,\n      updateDeleteChannelMessages: this.onUpdateDeleteMessages,\n\n      updateChannel: this.onUpdateChannel,\n\n      updateChannelReload: this.onUpdateChannelReload,\n\n      updateChannelMessageViews: this.onUpdateChannelMessageViews,\n\n      updateServiceNotification: this.onUpdateServiceNotification,\n\n      updatePinnedMessages: this.onUpdatePinnedMessages,\n      updatePinnedChannelMessages: this.onUpdatePinnedMessages,\n\n      updateNotifySettings: this.onUpdateNotifySettings,\n\n      updateNewScheduledMessage: this.onUpdateNewScheduledMessage,\n\n      updateDeleteScheduledMessages: this.onUpdateDeleteScheduledMessages,\n\n      updateMessageExtendedMedia: this.onUpdateMessageExtendedMedia\n    });\n\n    // ! Invalidate notify settings, can optimize though\n    this.rootScope.addEventListener('notify_peer_type_settings', ({key, settings}) => {\n      const dialogs = this.dialogsStorage.getFolderDialogs(0).concat(this.dialogsStorage.getFolderDialogs(1));\n      let filterFunc: (dialog: Dialog) => boolean;\n      if(key === 'notifyUsers') filterFunc = (dialog) => dialog.peerId.isUser();\n      else if(key === 'notifyBroadcasts') filterFunc = (dialog) => this.appPeersManager.isBroadcast(dialog.peerId);\n      else filterFunc = (dialog) => this.appPeersManager.isAnyGroup(dialog.peerId);\n\n      dialogs\n      .filter(filterFunc)\n      .forEach((dialog) => {\n        this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n      });\n    });\n\n    this.rootScope.addEventListener('webpage_updated', ({id, msgs}) => {\n      msgs.forEach(({peerId, mid, isScheduled}) => {\n        const storage = isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n        const message = this.getMessageFromStorage(storage, mid) as Message.message;\n        if(!message) return;\n        message.media = {\n          _: 'messageMediaWebPage',\n          webpage: this.appWebPagesManager.getCachedWebPage(id)\n        };\n\n        this.rootScope.dispatchEvent('message_edit', {\n          storageKey: storage.key,\n          peerId,\n          mid,\n          message\n        });\n      });\n    });\n\n    this.rootScope.addEventListener('draft_updated', ({peerId, threadId, draft}) => {\n      if(threadId) return;\n\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        if(!threadId) {\n          dialog.draft = draft;\n\n          let drop = false;\n          if(!draft && !getServerMessageId(dialog.top_message)) {\n            this.dialogsStorage.dropDialog(peerId);\n            drop = true;\n          } else {\n            this.dialogsStorage.generateIndexForDialog(dialog);\n            this.dialogsStorage.pushDialog(dialog);\n          }\n\n          this.rootScope.dispatchEvent('dialog_draft', {\n            peerId,\n            dialog,\n            drop,\n            draft\n          });\n        }\n      } else {\n        this.reloadConversation(peerId);\n      }\n    });\n\n    this.rootScope.addEventListener('poll_update', ({poll}) => {\n      const set = this.appPollsManager.pollToMessages[poll.id];\n      if(set) {\n        for(const key of set) {\n          const [peerId, mid] = key.split('_');\n\n          const message = this.getMessageByPeer(peerId.toPeerId(), +mid);\n          if(message) {\n            this.setDialogToStateIfMessageIsTop(message);\n          }\n        }\n      }\n    });\n\n    this.batchUpdatesDebounced = debounce(() => {\n      for(const event in this.batchUpdates) {\n        const details = this.batchUpdates[event as keyof BatchUpdates];\n        delete this.batchUpdates[event as keyof BatchUpdates];\n\n        // @ts-ignore\n        const result = details.callback(details.batch);\n        if(result && (!(result instanceof Array) || result.length)) {\n          // @ts-ignore\n          rootScope.dispatchEvent(event as keyof BatchUpdates, result);\n        }\n      }\n    }, 33, false, true);\n\n    return this.appStateManager.getState().then((state) => {\n      if(state.maxSeenMsgId) {\n        this.maxSeenId = state.maxSeenMsgId;\n      }\n    });\n  }\n\n  public clear = (init?: boolean) => {\n    if(this.middleware) {\n      this.middleware.clean();\n    } else {\n      this.middleware = getMiddleware();\n      this.uploadFilePromises = {};\n    }\n\n    this.messagesStorageByPeerId = {};\n    this.groupedMessagesStorage = {};\n    this.scheduledMessagesStorage = {};\n    this.historiesStorage = {};\n    this.threadsStorage = {};\n    this.searchesStorage = {};\n    this.pinnedMessages = {};\n    this.threadsServiceMessagesIdsStorage = {};\n    this.threadsToReplies = {};\n\n    this.dialogsStorage && this.dialogsStorage.clear(init);\n    this.filtersStorage && this.filtersStorage.clear(init);\n  };\n\n  public getInputEntities(entities: MessageEntity[]) {\n    const sendEntites = copy(entities);\n    sendEntites.forEach((entity) => {\n      if(entity._ === 'messageEntityMentionName') {\n        (entity as any as MessageEntity.inputMessageEntityMentionName)._ = 'inputMessageEntityMentionName';\n        (entity as any as MessageEntity.inputMessageEntityMentionName).user_id = this.appUsersManager.getUserInput(entity.user_id);\n      }\n    });\n    return sendEntites;\n  }\n\n  public invokeAfterMessageIsSent(tempId: number, callbackName: string, callback: (message: MyMessage) => Promise<any>) {\n    const finalize = this.tempFinalizeCallbacks[tempId] ?? (this.tempFinalizeCallbacks[tempId] = {});\n    const obj = finalize[callbackName] ?? (finalize[callbackName] = {deferred: deferredPromise<void>()});\n\n    obj.callback = callback;\n\n    return obj.deferred;\n  }\n\n  public editMessage(message: any, text: string, options: Partial<{\n    noWebPage: true,\n    newMedia: any,\n    scheduleDate: number,\n    entities: MessageEntity[]\n  }> = {}): Promise<void> {\n    /* if(!this.canEditMessage(messageId)) {\n      return Promise.reject({type: 'MESSAGE_EDIT_FORBIDDEN'});\n    } */\n\n    const {mid, peerId} = message;\n\n    if(message.pFlags.is_outgoing) {\n      return this.invokeAfterMessageIsSent(mid, 'edit', (message) => {\n        // this.log('invoke editMessage callback', message);\n        return this.editMessage(message, text, options);\n      });\n    }\n\n    const entities = options.entities || [];\n    if(text) {\n      text = parseMarkdown(text, entities);\n    }\n\n    const schedule_date = options.scheduleDate || (message.pFlags.is_scheduled ? message.date : undefined);\n    return this.apiManager.invokeApi('messages.editMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: message.id,\n      message: text,\n      media: options.newMedia,\n      entities: entities.length ? this.getInputEntities(entities) : undefined,\n      no_webpage: options.noWebPage,\n      schedule_date\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }, (error) => {\n      this.log.error('editMessage error:', error);\n\n      if(error && error.type === 'MESSAGE_NOT_MODIFIED') {\n        error.handled = true;\n        return;\n      }\n      if(error && error.type === 'MESSAGE_EMPTY') {\n        error.handled = true;\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  public async sendText(peerId: PeerId, text: string, options: Partial<{\n    entities: MessageEntity[],\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    queryId: string,\n    resultId: string,\n    noWebPage: true,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    webPage: WebPage,\n    scheduleDate: number,\n    silent: true,\n    sendAsPeerId: PeerId,\n  }> = {}): Promise<void> {\n    if(!text.trim()) {\n      return;\n    }\n\n    options.entities ??= [];\n\n    // this.checkSendOptions(options);\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    const config = await this.apiManager.getConfig();\n    const MAX_LENGTH = config.message_length_max;\n    const splitted = splitStringByLength(text, MAX_LENGTH);\n    text = splitted[0];\n    if(splitted.length > 1) {\n      if(options.webPage?._ === 'webPage' && !text.includes(options.webPage.url)) {\n        delete options.webPage;\n      }\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    const entities = options.entities;\n    if(!options.viaBotId) {\n      text = parseMarkdown(text, entities);\n      // entities = mergeEntities(entities, parseEntities(text));\n    }\n\n    let sendEntites = this.getInputEntities(entities);\n    if(!sendEntites.length) {\n      sendEntites = undefined;\n    }\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    message.entities = entities;\n    message.message = text;\n\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n    const isChannel = this.appPeersManager.isChannel(peerId);\n\n    if(options.webPage) {\n      message.media = {\n        _: 'messageMediaWebPage',\n        webpage: options.webPage\n      };\n    }\n\n    const toggleError = (error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      toggleError();\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n      let apiPromise: any;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMessage', {\n          no_webpage: options.noWebPage,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          message: text,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          entities: sendEntites,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate || undefined,\n          silent: options.silent,\n          send_as: sendAs,\n          update_stickersets_order: UPDATE_STICKERSET_ORDER\n        }, sentRequestOptions);\n      }\n\n      /* function is<T>(value: any, condition: boolean): value is T {\n        return condition;\n      } */\n\n      // this.log('sendText', message.mid);\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates: Updates) => {\n        // this.log('sendText sent', message.mid);\n        // if(is<Updates.updateShortSentMessage>(updates, updates._ === 'updateShortSentMessage')) {\n        if(updates._ === 'updateShortSentMessage') {\n          // assumeType<Updates.updateShortSentMessage>(updates);\n\n          // * fix copying object with promise\n          const promise = message.promise;\n          delete message.promise;\n          const newMessage = copy(message);\n          defineNotNumerableProperties(message, ['promise']);\n          message.promise = promise;\n\n          newMessage.date = updates.date;\n          newMessage.id = updates.id;\n          newMessage.media = updates.media;\n          newMessage.entities = updates.entities;\n          this.wrapMessageEntities(newMessage);\n          if(updates.pFlags.out) {\n            newMessage.pFlags.out = true;\n          }\n\n          // * override with new updates\n          updates = {\n            _: 'updates',\n            users: [],\n            chats: [],\n            seq: 0,\n            date: undefined,\n            updates: [{\n              _: 'updateMessageID',\n              random_id: message.random_id,\n              id: newMessage.id\n            }, {\n              _: options.scheduleDate ? 'updateNewScheduledMessage' : (isChannel ? 'updateNewChannelMessage' : 'updateNewMessage'),\n              message: newMessage,\n              pts: updates.pts,\n              pts_count: updates.pts_count\n            }]\n          };\n        } else if((updates as Updates.updates).updates) {\n          (updates as Updates.updates).updates.forEach((update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n        // Testing bad situations\n        // var upd = angular.copy(updates)\n        // updates.updates.splice(0, 1)\n\n        this.apiUpdatesManager.processUpdateMessage(updates);\n\n        // $timeout(function () {\n        // ApiUpdatesManager.processUpdateMessage(upd)\n        // }, 5000)\n        message.promise.resolve();\n      }, (error: ApiError) => {\n        toggleError(error);\n        message.promise.reject(error);\n        throw error;\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true\n    });\n\n    const promises: ReturnType<AppMessagesManager['sendText']>[] = [message.promise];\n    for(let i = 1; i < splitted.length; ++i) {\n      promises.push(this.sendText(peerId, splitted[i], options));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public sendFile(peerId: PeerId, file: File | Blob | MyDocument, options: Partial<{\n    isRoundMessage: true,\n    isVoiceMessage: true,\n    isGroupedItem: true,\n    isMedia: true,\n\n    replyToMsgId: number,\n    sendAsPeerId: PeerId,\n    threadId: number,\n    groupId: string,\n    caption: string,\n    entities: MessageEntity[],\n    width: number,\n    height: number,\n    objectURL: string,\n    thumb: {\n      blob: Blob,\n      url: string,\n      size: MediaSize\n    },\n    duration: number,\n    background: boolean,\n    silent: boolean,\n    clearDraft: boolean,\n    scheduleDate: number,\n    noSound: boolean,\n\n    waveform: Uint8Array,\n\n    // ! only for internal use\n    processAfter?: typeof processAfter\n  }> = {}) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    // this.checkSendOptions(options);\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let attachType: 'document' | 'audio' | 'video' | 'voice' | 'photo', apiFileName: string;\n\n    const fileType = 'mime_type' in file ? file.mime_type : file.type;\n    const fileName = file instanceof File ? file.name : '';\n    const isDocument = !(file instanceof File) && !(file instanceof Blob);\n    let caption = options.caption || '';\n\n    this.log('sendFile', file, fileType);\n\n    const entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    const attributes: DocumentAttribute[] = [];\n\n    const isPhoto = getEnvironment().IMAGE_MIME_TYPES_SUPPORTED.has(fileType);\n\n    let photo: MyPhoto, document: MyDocument;\n\n    let actionName: Extract<SendMessageAction['_'], 'sendMessageUploadAudioAction' | 'sendMessageUploadDocumentAction' | 'sendMessageUploadPhotoAction' | 'sendMessageUploadVideoAction'>;\n    if(isDocument) { // maybe it's a sticker or gif\n      attachType = 'document';\n      apiFileName = '';\n    } else if(fileType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(fileType) >= 0) {\n      attachType = 'audio';\n      apiFileName = 'audio.' + (fileType.split('/')[1] === 'ogg' ? 'ogg' : 'mp3');\n      actionName = 'sendMessageUploadAudioAction';\n\n      if(options.isVoiceMessage) {\n        attachType = 'voice';\n        message.pFlags.media_unread = true;\n      }\n\n      const attribute: DocumentAttribute.documentAttributeAudio = {\n        _: 'documentAttributeAudio',\n        pFlags: {\n          voice: options.isVoiceMessage\n        },\n        waveform: options.waveform,\n        duration: options.duration || 0\n      };\n\n      attributes.push(attribute);\n    } else if(!options.isMedia) {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    } else if(isPhoto) {\n      attachType = 'photo';\n      apiFileName = 'photo.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadPhotoAction';\n\n      const photoSize = {\n        _: 'photoSize',\n        w: options.width,\n        h: options.height,\n        type: THUMB_TYPE_FULL,\n        location: null,\n        size: file.size\n      } as PhotoSize.photoSize;\n\n      photo = {\n        _: 'photo',\n        id: '' + message.id,\n        sizes: [photoSize],\n        w: options.width,\n        h: options.height\n      } as any;\n\n      const cacheContext = this.thumbsStorage.getCacheContext(photo, photoSize.type);\n      cacheContext.downloaded = file.size;\n      cacheContext.url = options.objectURL || '';\n\n      photo = this.appPhotosManager.savePhoto(photo);\n    } else if(getEnvironment().VIDEO_MIME_TYPES_SUPPORTED.has(fileType)) {\n      attachType = 'video';\n      apiFileName = 'video.mp4';\n      actionName = 'sendMessageUploadVideoAction';\n\n      const videoAttribute: DocumentAttribute.documentAttributeVideo = {\n        _: 'documentAttributeVideo',\n        pFlags: {\n          round_message: options.isRoundMessage,\n          supports_streaming: true\n        },\n        duration: options.duration,\n        w: options.width,\n        h: options.height\n      };\n\n      attributes.push(videoAttribute);\n\n      // * must follow after video attribute\n      if(options.noSound &&\n        file.size > (10 * 1024) &&\n        file.size < (10 * 1024 * 1024)) {\n        attributes.push({\n          _: 'documentAttributeAnimated'\n        });\n      }\n    } else {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    }\n\n    attributes.push({_: 'documentAttributeFilename', file_name: fileName || apiFileName});\n\n    if((['document', 'video', 'audio', 'voice'] as (typeof attachType)[]).indexOf(attachType) !== -1 && !isDocument) {\n      const thumbs: PhotoSize[] = [];\n      document = {\n        _: 'document',\n        id: '' + message.id,\n        duration: options.duration,\n        attributes,\n        w: options.width,\n        h: options.height,\n        thumbs,\n        mime_type: fileType,\n        size: file.size\n      } as any;\n\n      if(options.objectURL) {\n        const cacheContext = this.thumbsStorage.getCacheContext(document);\n        cacheContext.downloaded = file.size;\n        cacheContext.url = options.objectURL;\n      }\n\n      let thumb: PhotoSize.photoSize;\n      if(isPhoto) {\n        attributes.push({\n          _: 'documentAttributeImageSize',\n          w: options.width,\n          h: options.height\n        });\n\n        thumb = {\n          _: 'photoSize',\n          w: options.width,\n          h: options.height,\n          type: THUMB_TYPE_FULL,\n          size: file.size\n        };\n      } else if(attachType === 'video') {\n        if(options.thumb) {\n          thumb = {\n            _: 'photoSize',\n            w: options.thumb.size.width,\n            h: options.thumb.size.height,\n            type: 'local-thumb',\n            size: options.thumb.blob.size\n          };\n\n          const thumbCacheContext = this.thumbsStorage.getCacheContext(document, thumb.type);\n          thumbCacheContext.downloaded = thumb.size;\n          thumbCacheContext.url = options.thumb.url;\n        }\n      }\n\n      if(thumb) {\n        thumbs.push(thumb);\n      }\n\n      /* if(thumbs.length) {\n        const thumb = thumbs[0] as PhotoSize.photoSize;\n        const docThumb = appPhotosManager.getDocumentCachedThumb(document.id);\n        docThumb.downloaded = thumb.size;\n        docThumb.url = thumb.url;\n      } */\n\n      document = this.appDocsManager.saveDoc(document);\n    }\n\n    this.log('sendFile', attachType, apiFileName, file.type, options);\n\n    const sentDeferred = deferredPromise<InputMedia>();\n    // sentDeferred.cancel = () => {\n    //   const error = new Error('Download canceled');\n    //   error.name = 'AbortError';\n    //   sentDeferred.reject(error);\n\n    //   if(uploadPromise?.cancel) {\n    //     uploadPromise.cancel();\n    //   }\n    // };\n\n    const media: MessageMedia = isDocument ? undefined : {\n      _: photo ? 'messageMediaPhoto' : 'messageMediaDocument',\n      pFlags: {},\n      // preloader,\n      photo,\n      document\n    };\n\n    if(media) {\n      defineNotNumerableProperties(media as any, ['promise']);\n      (media as any).promise = sentDeferred;\n    }\n\n    message.entities = entities;\n    message.message = caption;\n    message.media = isDocument ? {\n      _: 'messageMediaDocument',\n      pFlags: {},\n      document: file\n    } as MessageMedia.messageMediaDocument : media;\n\n    const uploadingFileName = !isDocument ? getFileNameForUpload(file) : undefined;\n    message.uploadingFileName = uploadingFileName;\n\n    if(uploadingFileName) {\n      this.uploadFilePromises[uploadingFileName] = sentDeferred;\n    }\n\n    const toggleError = (error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    let uploaded = false,\n      uploadPromise: ReturnType<ApiFileManager['upload']> = null;\n\n    message.send = () => {\n      if(isDocument) {\n        const inputMedia: InputMedia = {\n          _: 'inputMediaDocument',\n          id: getDocumentInput(file)\n        };\n\n        sentDeferred.resolve(inputMedia);\n      } else if(file instanceof File || file instanceof Blob) {\n        const load = () => {\n          if(!uploaded || message.error) {\n            uploaded = false;\n\n            uploadPromise = this.apiFileManager.upload({file, fileName: uploadingFileName});\n            uploadPromise.catch((err) => {\n              if(!uploaded) {\n                this.log('cancelling upload', media);\n\n                this.cancelPendingMessage(message.random_id);\n                this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n                sentDeferred.reject(err);\n              }\n            });\n\n            uploadPromise.addNotifyListener((progress: Progress) => {\n              /* if(DEBUG) {\n                this.log('upload progress', progress);\n              } */\n\n              const percents = Math.max(1, Math.floor(100 * progress.done / progress.total));\n              if(actionName) {\n                this.setTyping(peerId, {_: actionName, progress: percents | 0});\n              }\n              sentDeferred.notifyAll(progress);\n            });\n\n            sentDeferred.notifyAll({done: 0, total: file.size});\n          }\n\n          let thumbUploadPromise: typeof uploadPromise;\n          if(attachType === 'video' && options.objectURL && options.thumb?.blob) {\n            thumbUploadPromise = this.apiFileManager.upload({file: options.thumb.blob});\n          }\n\n          uploadPromise && uploadPromise.then(async(inputFile) => {\n            /* if(DEBUG) {\n              this.log('appMessagesManager: sendFile uploaded:', inputFile);\n            } */\n\n            inputFile.name = apiFileName;\n            uploaded = true;\n            let inputMedia: InputMedia;\n            switch(attachType) {\n              case 'photo':\n                inputMedia = {\n                  _: 'inputMediaUploadedPhoto',\n                  file: inputFile\n                };\n                break;\n\n              default:\n                inputMedia = {\n                  _: 'inputMediaUploadedDocument',\n                  file: inputFile,\n                  mime_type: fileType,\n                  pFlags: {\n                    force_file: actionName === 'sendMessageUploadDocumentAction' ? true : undefined\n                    // nosound_video: options.noSound ? true : undefined\n                  },\n                  attributes\n                };\n            }\n\n            if(thumbUploadPromise) {\n              try {\n                const inputFile = await thumbUploadPromise;\n                (inputMedia as InputMedia.inputMediaUploadedDocument).thumb = inputFile;\n              } catch(err) {\n                this.log.error('sendFile thumb upload error:', err);\n              }\n            }\n\n            sentDeferred.resolve(inputMedia);\n          }, (error: ApiError) => {\n            toggleError(error);\n            throw error;\n          });\n\n          return sentDeferred;\n        };\n\n        if(options.isGroupedItem) {\n          load();\n        } else {\n          this.sendSmthLazyLoadQueue.push({\n            load\n          });\n        }\n      }\n\n      return sentDeferred;\n    };\n\n    this.beforeMessageSending(message, {\n      isGroupedItem: options.isGroupedItem,\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      processAfter: options.processAfter\n    });\n\n    if(!options.isGroupedItem) {\n      sentDeferred.then((inputMedia) => {\n        this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n        return this.apiManager.invokeApi('messages.sendMedia', {\n          background: options.background,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          message: caption,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          entities,\n          clear_draft: options.clearDraft,\n          send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n        }).then((updates) => {\n          this.apiUpdatesManager.processUpdateMessage(updates);\n        }, (error: ApiError) => {\n          if(attachType === 'photo' &&\n            error.code === 400 &&\n            (error.type === 'PHOTO_INVALID_DIMENSIONS' ||\n            error.type === 'PHOTO_SAVE_FILE_INVALID')) {\n            error.handled = true;\n            attachType = 'document';\n            message.send();\n            return;\n          }\n\n          toggleError(error);\n          throw error;\n        });\n      });\n\n      sentDeferred.then(message.promise.resolve, message.promise.reject);\n    }\n\n    const ret: {\n      message: typeof message,\n      promise: typeof sentDeferred\n    } = {\n      message\n    } as any;\n\n    defineNotNumerableProperties(ret, ['promise']);\n    ret.promise = sentDeferred;\n\n    return ret;\n  }\n\n  public async sendAlbum(peerId: PeerId, files: File[], options: Partial<{\n    isMedia: true,\n    entities: MessageEntity[],\n    replyToMsgId: number,\n    sendAsPeerId: PeerId,\n    threadId: number,\n    caption: string,\n    sendFileDetails: Partial<{\n      duration: number,\n      width: number,\n      height: number,\n      objectURL: string,\n      thumbBlob: Blob,\n      thumbURL: string\n    }>[],\n    silent: true,\n    clearDraft: true,\n    scheduleDate: number\n  }> = {}) {\n    // this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    if(files.length === 1) {\n      return this.sendFile(peerId, files[0], {...options, ...options.sendFileDetails[0]});\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let caption = options.caption || '';\n    let entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    this.log('sendAlbum', files, options);\n\n    const groupId = '' + ++this.groupedTempId;\n\n    const callbacks: Array<() => void> = [];\n    const processAfter = (cb: () => void) => {\n      callbacks.push(cb);\n    };\n\n    const messages = files.map((file, idx) => {\n      const details = options.sendFileDetails[idx];\n      const o: Parameters<AppMessagesManager['sendFile']>[2] = {\n        isGroupedItem: true,\n        isMedia: options.isMedia,\n        scheduleDate: options.scheduleDate,\n        silent: options.silent,\n        replyToMsgId,\n        threadId: options.threadId,\n        sendAsPeerId: options.sendAsPeerId,\n        groupId,\n        processAfter,\n        ...details\n      };\n\n      if(idx === 0) {\n        o.caption = caption;\n        o.entities = entities;\n        // o.replyToMsgId = replyToMsgId;\n      }\n\n      return this.sendFile(peerId, file, o).message;\n    });\n\n    if(options.clearDraft) {\n      callbacks.push(() => {\n        this.appDraftsManager.clearDraft(peerId, options.threadId);\n      });\n    }\n\n    callbacks.forEach((callback) => {\n      callback();\n    });\n\n    // * test pending\n    // return;\n\n    const toggleError = (message: Message.message, error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\n    const invoke = (multiMedia: InputSingleMedia[]) => {\n      this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n      const deferred = deferredPromise<void>();\n      this.sendSmthLazyLoadQueue.push({\n        load: () => {\n          return this.apiManager.invokeApi('messages.sendMultiMedia', {\n            peer: inputPeer,\n            multi_media: multiMedia,\n            reply_to_msg_id: replyToMsgId,\n            schedule_date: options.scheduleDate,\n            silent: options.silent,\n            clear_draft: options.clearDraft,\n            send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\n            update_stickersets_order: UPDATE_STICKERSET_ORDER\n          }).then((updates) => {\n            this.apiUpdatesManager.processUpdateMessage(updates);\n            deferred.resolve();\n          }, (error: ApiError) => {\n            messages.forEach((message) => toggleError(message, error));\n            deferred.reject(error);\n          });\n        }\n      });\n\n      return deferred;\n    };\n\n    const promises: Promise<InputSingleMedia>[] = messages.map((message) => {\n      return (message.send() as Promise<InputMedia>).then((inputMedia) => {\n        return this.apiManager.invokeApi('messages.uploadMedia', {\n          peer: inputPeer,\n          media: inputMedia\n        });\n      })\n      .then((messageMedia) => {\n        let inputMedia: InputMedia;\n        if(messageMedia._ === 'messageMediaPhoto') {\n          const photo = this.appPhotosManager.savePhoto(messageMedia.photo);\n          inputMedia = getPhotoMediaInput(photo);\n        } else if(messageMedia._ === 'messageMediaDocument') {\n          const doc = this.appDocsManager.saveDoc(messageMedia.document);\n          inputMedia = getDocumentMediaInput(doc);\n        }\n\n        const inputSingleMedia: InputSingleMedia = {\n          _: 'inputSingleMedia',\n          media: inputMedia,\n          random_id: message.random_id,\n          message: caption,\n          entities\n        };\n\n        // * only 1 caption for all inputs\n        if(caption) {\n          caption = '';\n          entities = [];\n        }\n\n        return inputSingleMedia;\n      }).catch((err: ApiError) => {\n        this.log.error('sendAlbum upload item error:', err, message);\n        toggleError(message, err);\n        throw err;\n      });\n    });\n\n    return Promise.all(promises).then((inputs) => {\n      return invoke(inputs.filter(Boolean));\n    });\n  }\n\n  public sendContact(peerId: PeerId, contactPeerId: PeerId) {\n    return this.sendOther(peerId, this.appUsersManager.getContactMediaInput(contactPeerId));\n  }\n\n  public sendOther(peerId: PeerId, inputMedia: InputMedia | {_: 'messageMediaPending', messageMedia: MessageMedia}, options: Partial<{\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    queryId: string\n    resultId: string,\n    scheduleDate: number,\n    silent: true,\n    geoPoint: GeoPoint,\n    sendAsPeerId: PeerId,\n  }> = {}) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    // this.checkSendOptions(options);\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let media: MessageMedia;\n    switch(inputMedia._) {\n      case 'inputMediaPoll': {\n        const pollId = '' + message.id;\n        inputMedia.poll.id = pollId;\n        this.appPollsManager.savePoll(inputMedia.poll, {\n          _: 'pollResults',\n          flags: 4,\n          total_voters: 0,\n          pFlags: {},\n          recent_voters: []\n        });\n\n        const {poll, results} = this.appPollsManager.getPoll(pollId);\n        media = {\n          _: 'messageMediaPoll',\n          poll,\n          results\n        };\n\n        break;\n      }\n\n      case 'inputMediaPhoto': {\n        media = {\n          _: 'messageMediaPhoto',\n          photo: this.appPhotosManager.getPhoto((inputMedia.id as InputPhoto.inputPhoto).id)\n        };\n        break;\n      }\n\n      case 'inputMediaDocument': {\n        const doc = this.appDocsManager.getDoc((inputMedia.id as InputDocument.inputDocument).id);\n        /* if(doc.sticker && doc.stickerSetInput) {\n          appStickersManager.pushPopularSticker(doc.id);\n        } */\n        media = {\n          _: 'messageMediaDocument',\n          document: doc\n        };\n        break;\n      }\n\n      case 'inputMediaContact': {\n        media = {\n          _: 'messageMediaContact',\n          phone_number: inputMedia.phone_number,\n          first_name: inputMedia.first_name,\n          last_name: inputMedia.last_name,\n          user_id: inputMedia.user_id ?? '0',\n          vcard: inputMedia.vcard\n        };\n        break;\n      }\n\n      case 'inputMediaGeoPoint': {\n        media = {\n          _: 'messageMediaGeo',\n          geo: options.geoPoint\n        };\n        break;\n      }\n\n      case 'inputMediaVenue': {\n        media = {\n          _: 'messageMediaVenue',\n          geo: options.geoPoint,\n          title: inputMedia.title,\n          address: inputMedia.address,\n          provider: inputMedia.provider,\n          venue_id: inputMedia.venue_id,\n          venue_type: inputMedia.venue_type\n        };\n        break;\n      }\n\n      case 'messageMediaPending': {\n        media = (inputMedia as any).messageMedia;\n        break;\n      }\n    }\n\n    message.media = media;\n\n    const toggleError = (error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined;\n      let apiPromise: Promise<any>;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMedia', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia as InputMedia,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          message: '',\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs,\n          update_stickersets_order: UPDATE_STICKERSET_ORDER\n        }, sentRequestOptions);\n      }\n\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates) => {\n        if(updates.updates) {\n          updates.updates.forEach((update: Update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      }, (error: ApiError) => {\n        toggleError(error);\n        throw error;\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true\n    });\n\n    return message.promise;\n  }\n\n  /* private checkSendOptions(options: Partial<{\n    scheduleDate: number\n  }>) {\n    if(options.scheduleDate) {\n      const minTimestamp = (Date.now() / 1000 | 0) + 10;\n      if(options.scheduleDate <= minTimestamp) {\n        delete options.scheduleDate;\n      }\n    }\n  } */\n\n  private beforeMessageSending(message: Message.message, options: Partial<{\n    isGroupedItem: boolean,\n    isScheduled: boolean,\n    threadId: number,\n    clearDraft: boolean,\n    sequential: boolean,\n    processAfter?: (cb: () => void) => void\n  }> = {}) {\n    const messageId = message.id;\n    const peerId = this.getMessagePeer(message);\n    const storage = options.isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n    message.storageKey = storage.key;\n    const callbacks: Array<() => void> = [];\n    if(options.isScheduled) {\n      // if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isScheduled: true, isOutgoing: true});\n      callbacks.push(() => {\n        this.rootScope.dispatchEvent('scheduled_new', message);\n      });\n    } else {\n      /* if(options.threadId && this.threadsStorage[peerId]) {\n        delete this.threadsStorage[peerId][options.threadId];\n      } */\n      const storages: HistoryStorage[] = [\n        this.getHistoryStorage(peerId),\n        options.threadId ? this.getHistoryStorage(peerId, options.threadId) : undefined\n      ];\n\n      for(const storage of storages) {\n        if(storage) {\n          storage.history.unshift(messageId);\n        }\n      }\n\n      this.saveMessages([message], {storage, isOutgoing: true});\n      this.setDialogTopMessage(message);\n      callbacks.push(() => {\n        this.rootScope.dispatchEvent('history_append', {storageKey: storage.key, message});\n      });\n    }\n\n    const pending: PendingMessageDetails = this.pendingByRandomId[message.random_id] = {\n      peerId,\n      tempId: messageId,\n      threadId: options.threadId,\n      storage,\n      sequential: options.sequential\n    };\n\n    this.pendingTopMsgs[peerId] = messageId;\n\n    if(!options.isGroupedItem && message.send) {\n      callbacks.push(() => {\n        if(options.clearDraft) {\n          this.appDraftsManager.clearDraft(peerId, options.threadId);\n        }\n\n        message.send();\n      });\n    }\n\n    if(callbacks.length) {\n      (options.processAfter || processAfter)(() => {\n        for(const callback of callbacks) {\n          callback();\n        }\n      });\n    }\n\n    return pending;\n  }\n\n  private generateOutgoingMessage(peerId: PeerId, options: Partial<{\n    scheduleDate: number,\n    replyToMsgId: number,\n    sendAsPeerId: PeerId,\n    threadId: number,\n    viaBotId: BotId,\n    groupId: string,\n    replyMarkup: ReplyMarkup,\n  }>) {\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    let postAuthor: string;\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\n    if(isBroadcast) {\n      const chat = this.appPeersManager.getPeer(peerId) as Chat.channel;\n      if(chat.pFlags.signatures) {\n        const user = this.appUsersManager.getSelf();\n        const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n        postAuthor = fullName;\n      }\n    }\n\n    const message: Message.message = {\n      _: 'message',\n      id: this.generateTempMessageId(peerId),\n      from_id: options.sendAsPeerId ? this.appPeersManager.getOutputPeer(options.sendAsPeerId) : this.generateFromId(peerId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      post_author: postAuthor,\n      pFlags: this.generateFlags(peerId),\n      date: options.scheduleDate || (tsNow(true) + this.timeManager.getServerTimeOffset()),\n      message: '',\n      grouped_id: options.groupId,\n      random_id: randomLong(),\n      reply_to: this.generateReplyHeader(options.replyToMsgId, options.threadId),\n      via_bot_id: options.viaBotId,\n      reply_markup: options.replyMarkup,\n      replies: this.generateReplies(peerId),\n      views: isBroadcast && 1,\n      pending: true\n    };\n\n    defineNotNumerableProperties(message, ['send', 'promise']);\n    if(options.groupId === undefined) {\n      message.promise = deferredPromise();\n    }\n\n    return message;\n  }\n\n  private generateReplyHeader(replyToMsgId: number, replyToTopId?: number) {\n    const header = {\n      _: 'messageReplyHeader',\n      reply_to_msg_id: replyToMsgId || replyToTopId\n    } as MessageReplyHeader;\n\n    if(replyToTopId && header.reply_to_msg_id !== replyToTopId) {\n      header.reply_to_top_id = replyToTopId;\n    }\n\n    return header;\n  }\n\n  private generateReplies(peerId: PeerId) {\n    let replies: MessageReplies.messageReplies;\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n      if(channelFull?.linked_chat_id) {\n        replies = {\n          _: 'messageReplies',\n          flags: 1,\n          pFlags: {\n            comments: true\n          },\n          channel_id: channelFull.linked_chat_id,\n          replies: 0,\n          replies_pts: 0\n        };\n      }\n    }\n\n    return replies;\n  }\n\n  /**\n   * Generate correct from_id according to anonymous or broadcast\n   */\n  private generateFromId(peerId: PeerId) {\n    if(this.appPeersManager.isAnyChat(peerId) && (this.appPeersManager.isBroadcast(peerId) || this.isAnonymousSending(peerId))) {\n      return undefined;\n    } else {\n      return this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId());\n    }\n  }\n\n  private generateFlags(peerId: PeerId) {\n    const pFlags: Message.message['pFlags'] = {};\n    const fromId = this.appUsersManager.getSelf().id;\n    if(peerId !== fromId) {\n      pFlags.out = true;\n\n      if(!this.appPeersManager.isChannel(peerId) && !this.appUsersManager.isBot(peerId)) {\n        pFlags.unread = true;\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      pFlags.post = true;\n    }\n\n    return pFlags;\n  }\n\n  private generateForwardHeader(peerId: PeerId, originalMessage: Message.message) {\n    const myId = this.appUsersManager.getSelf().id.toPeerId();\n    const fromId = originalMessage.fromId;\n    if(fromId === myId && originalMessage.peerId === myId && !originalMessage.fwd_from) {\n      return;\n    }\n\n    const fwdHeader: MessageFwdHeader.messageFwdHeader = {\n      _: 'messageFwdHeader',\n      flags: 0,\n      date: originalMessage.date\n    };\n\n    let isUserHidden = false;\n    if(originalMessage.fwd_from) {\n      fwdHeader.from_id = originalMessage.fwd_from.from_id;\n      fwdHeader.from_name = originalMessage.fwd_from.from_name;\n      fwdHeader.post_author = originalMessage.fwd_from.post_author;\n    } else {\n      fwdHeader.post_author = originalMessage.post_author;\n\n      if(fromId.isUser()) {\n        const userFull = this.appProfileManager.getCachedFullUser(fromId.toUserId());\n        if(userFull?.private_forward_name) {\n          fwdHeader.from_name = userFull.private_forward_name;\n          isUserHidden = true;\n        }\n      }\n\n      if(!isUserHidden) {\n        fwdHeader.from_id = this.appPeersManager.getOutputPeer(fromId);\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(originalMessage.peerId)) {\n      if(originalMessage.post_author) {\n        fwdHeader.post_author = originalMessage.post_author;\n      }\n\n      fwdHeader.channel_post = originalMessage.id;\n    }\n\n    if(peerId === myId && !isUserHidden) {\n      fwdHeader.saved_from_msg_id = originalMessage.id;\n      fwdHeader.saved_from_peer = this.appPeersManager.getOutputPeer(originalMessage.peerId);\n    }\n\n    return fwdHeader;\n  }\n\n  public generateFakeAvatarMessage(peerId: PeerId, photo: Photo) {\n    const maxId = Number.MAX_SAFE_INTEGER;\n    const message: Message.messageService = {\n      _: 'messageService',\n      pFlags: {},\n      action: {\n        _: 'messageActionChannelEditPhoto',\n        photo\n      },\n      id: maxId,\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      mid: maxId,\n      peerId,\n      date: (photo as Photo.photo).date,\n      fromId: peerId\n    };\n\n    this.getHistoryMessagesStorage(peerId).set(maxId, message);\n    return message;\n  }\n\n  public getUploadPromise(uploadFileName: string) {\n    return this.uploadFilePromises[uploadFileName];\n  }\n\n  public isAnonymousSending(peerId: PeerId): boolean {\n    return peerId.isAnyChat() && this.appPeersManager.getPeer(peerId).admin_rights?.pFlags?.anonymous;\n  }\n\n  public setDialogTopMessage(message: MyMessage, dialog: MTDialog.dialog = this.getDialogOnly(message.peerId)) {\n    if(dialog) {\n      dialog.top_message = message.mid;\n\n      const historyStorage = this.getHistoryStorage(message.peerId);\n      historyStorage.maxId = message.mid;\n\n      this.dialogsStorage.generateIndexForDialog(dialog, false, message);\n\n      this.scheduleHandleNewDialogs(message.peerId, dialog);\n    }\n  }\n\n  public cancelPendingMessage(randomId: string) {\n    const pendingData = this.pendingByRandomId[randomId];\n\n    /* if(DEBUG) {\n      this.log('cancelPendingMessage', randomId, pendingData);\n    } */\n\n    if(pendingData) {\n      const {peerId, tempId, storage} = pendingData;\n      const historyStorage = this.getHistoryStorage(peerId);\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateDeleteMessages',\n        messages: [tempId],\n        pts: undefined,\n        pts_count: undefined\n      });\n\n      historyStorage.history.delete(tempId);\n\n      delete this.pendingByRandomId[randomId];\n      storage.delete(tempId);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /* public async refreshConversations() {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(let folderId = 0; folderId < 2; ++folderId) {\n      let offsetDate = 0;\n      for(;;) {\n        const {dialogs, isEnd} = await this.getTopMessages(limit, folderId, offsetDate);\n\n        if(dialogs.length) {\n          outDialogs.push(...dialogs as Dialog[]);\n          const dialog = dialogs[dialogs.length - 1];\n\n          // * get peerId and mid manually, because dialog can be migrated peer and it won't be saved\n          const peerId = getPeerId(dialog.peer);\n          const mid = generateMessageId(dialog.top_message);\n          offsetDate = this.getMessageByPeer(peerId, mid).date;\n\n          if(!offsetDate) {\n            console.error('refreshConversations: got no offsetDate', dialog);\n            break;\n          }\n        }\n\n        if(isEnd) {\n          break;\n        }\n      }\n    }\n\n    let obj: {[peerId: string]: Dialog} = {};\n    outDialogs.forEach((dialog) => {\n      obj[dialog.peerId] = dialog;\n    });\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\n\n    return outDialogs;\n  } */\n\n  public async fillConversations(): Promise<void> {\n    const middleware = this.middleware.get();\n    while(!this.dialogsStorage.isDialogsLoaded(GLOBAL_FOLDER_ID)) {\n      const result = await this.getTopMessages(100, GLOBAL_FOLDER_ID);\n      if(!middleware() || result.isEnd) {\n        break;\n      }\n    }\n  }\n\n  /* public async getConversationsAll(query = '', folderId = 0) {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(; folderId < 2; ++folderId) {\n      let offsetIndex = 0;\n      for(;;) {\n        const {dialogs} = await appMessagesManager.getConversations(query, offsetIndex, limit, folderId).promise;\n\n        if(dialogs.length) {\n          outDialogs.push(...dialogs);\n          offsetIndex = dialogs[dialogs.length - 1].index || 0;\n        } else {\n          break;\n        }\n      }\n    }\n\n    return outDialogs;\n  } */\n\n  public getConversations(query = '', offsetIndex?: number, limit?: number, folderId = 0, skipMigrated?: boolean) {\n    return this.dialogsStorage.getDialogs(query, offsetIndex, limit, folderId, skipMigrated);\n  }\n\n  public getReadMaxIdIfUnread(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(threadId) {\n      const chatHistoryStorage = this.getHistoryStorage(peerId);\n      const readMaxId = Math.max(chatHistoryStorage.readMaxId ?? 0, historyStorage.readMaxId);\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId); // usually message is missing, so pFlags.out won't be there anyway\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    } else {\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId);\n      const readMaxId = peerId.isUser() ? Math.max(historyStorage.readMaxId, historyStorage.readOutboxMaxId) : historyStorage.readMaxId;\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    }\n  }\n\n  // public lolSet = new Set();\n  public getTopMessages(limit: number, folderId: REAL_FOLDER_ID, offsetDate?: number) {\n    // const dialogs = this.dialogsStorage.getFolder(folderId);\n    const offsetId = 0;\n    let offsetPeerId: PeerId;\n    let offsetIndex = 0;\n\n    if(offsetDate === undefined) {\n      offsetDate = this.dialogsStorage.getOffsetDate(folderId);\n    }\n\n    if(offsetDate) {\n      offsetIndex = offsetDate * 0x10000;\n      offsetDate += this.timeManager.getServerTimeOffset();\n    }\n\n    const useLimit = 100;\n    const middleware = this.middleware.get();\n\n    // ! ВНИМАНИЕ: ОЧЕНЬ СЛОЖНАЯ ЛОГИКА:\n    // ! если делать запрос сначала по папке 0, потом по папке 1, по индексу 0 в массиве будет один и тот же диалог, с dialog.pFlags.pinned, ЛОЛ???\n    // ! т.е., с запросом folder_id: 1, и exclude_pinned: 0, в результате будут ещё и закреплённые с папки 0\n    const params: MessagesGetDialogs = {\n      folder_id: folderId,\n      offset_date: offsetDate,\n      offset_id: offsetId,\n      offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n      limit: useLimit,\n      hash: '0'\n    };\n\n    return this.apiManager.invokeApiSingle('messages.getDialogs', params, {\n      // timeout: APITIMEOUT,\n      noErrorBox: true\n    }).then((dialogsResult) => {\n      if(!middleware() || dialogsResult._ === 'messages.dialogsNotModified') return null;\n\n      if(DEBUG) {\n        this.log('messages.getDialogs result:', dialogsResult.dialogs, {...dialogsResult.dialogs[0]});\n      }\n\n      // can reset pinned order here\n      if(!offsetId && !offsetDate && !offsetPeerId && folderId !== GLOBAL_FOLDER_ID) {\n        this.dialogsStorage.resetPinnedOrder(folderId);\n      }\n\n      if(!offsetDate) {\n        // telegramMeWebManager.setAuthorized(true);\n        this.appDraftsManager.addMissedDialogs();\n      }\n\n      this.appUsersManager.saveApiUsers(dialogsResult.users);\n      this.appChatsManager.saveApiChats(dialogsResult.chats);\n      this.saveMessages(dialogsResult.messages);\n\n      let maxSeenIdIncremented = offsetDate ? true : false;\n      let hasPrepend = false;\n      const noIdsDialogs: Map<PeerId, Dialog> = new Map();\n      const setFolderId: REAL_FOLDER_ID = folderId === GLOBAL_FOLDER_ID ? FOLDER_ID_ALL : folderId;\n      const saveGlobalOffset = folderId === GLOBAL_FOLDER_ID;\n      forEachReverse((dialogsResult.dialogs as Dialog[]), (dialog) => {\n        // const d = Object.assign({}, dialog);\n        // ! нужно передавать folderId, так как по папке !== 0 нет свойства folder_id\n        if(dialog.folder_id === undefined) {\n          dialog.folder_id = setFolderId;\n        }\n\n        this.dialogsStorage.saveDialog(dialog, undefined, true, saveGlobalOffset);\n\n        if(!maxSeenIdIncremented &&\n          !this.appPeersManager.isChannel(dialog.peerId || this.appPeersManager.getPeerId(dialog.peer))) {\n          this.incrementMaxSeenId(dialog.top_message);\n          maxSeenIdIncremented = true;\n        }\n\n        if(dialog.peerId === undefined) {\n          return;\n        }\n\n        // if(!folderId && !dialog.folder_id) {\n        //   this.lolSet.add(dialog.peerId);\n        // }\n\n        if(offsetIndex && getDialogIndex(dialog) > offsetIndex) {\n          this.scheduleHandleNewDialogs(dialog.peerId, dialog);\n          hasPrepend = true;\n        }\n\n        // ! это может случиться, если запрос идёт не по папке 0, а по 1. почему-то read'ов нет\n        // ! в итоге, чтобы получить 1 диалог, делается первый запрос по папке 0, потом запрос для архивных по папке 1, и потом ещё перезагрузка архивного диалога\n        if(!getServerMessageId(dialog.read_inbox_max_id) && !getServerMessageId(dialog.read_outbox_max_id)) {\n          noIdsDialogs.set(dialog.peerId, dialog);\n\n          this.log.error('noIdsDialogs', dialog, params);\n        }\n      });\n\n      if(noIdsDialogs.size) {\n        // setTimeout(() => { // test bad situation\n        const peerIds = [...noIdsDialogs.keys()];\n        const promises = peerIds.map((peerId) => this.reloadConversation(peerId));\n        Promise.all(promises).then(() => {\n          this.rootScope.dispatchEvent('dialogs_multiupdate', noIdsDialogs);\n\n          for(let i = 0; i < peerIds.length; ++i) {\n            const peerId = peerIds[i];\n            this.rootScope.dispatchEvent('dialog_unread', {\n              peerId,\n              dialog: this.getDialogOnly(peerId)\n            });\n          }\n        });\n        // }, 10e3);\n      }\n\n      const count = (dialogsResult as MessagesDialogs.messagesDialogsSlice).count;\n\n      // exclude empty draft dialogs\n      const folderDialogs = this.dialogsStorage.getFolderDialogs(folderId, false);\n      let dialogsLength = 0;\n      for(let i = 0, length = folderDialogs.length; i < length; ++i) {\n        if(getServerMessageId(folderDialogs[i].top_message)) {\n          ++dialogsLength;\n        }\n      }\n\n      const isEnd = /* limit > dialogsResult.dialogs.length || */\n        !count ||\n        dialogsLength >= count ||\n        !dialogsResult.dialogs.length;\n      if(isEnd) {\n        this.dialogsStorage.setDialogsLoaded(folderId, true);\n      }\n\n      if(hasPrepend) {\n        this.scheduleHandleNewDialogs();\n      } else {\n        this.rootScope.dispatchEvent('dialogs_multiupdate', new Map());\n      }\n\n      const dialogs = (dialogsResult as MessagesDialogs.messagesDialogsSlice).dialogs;\n      const slicedDialogs = limit === useLimit ? dialogs : dialogs.slice(0, limit);\n      return {\n        isEnd: isEnd && slicedDialogs[slicedDialogs.length - 1] === dialogs[dialogs.length - 1],\n        count,\n        dialogs: slicedDialogs\n      };\n    });\n  }\n\n  public async forwardMessages(peerId: PeerId, fromPeerId: PeerId, mids: number[], options: Partial<{\n    withMyScore: true,\n    silent: true,\n    scheduleDate: number,\n    dropAuthor: boolean,\n    dropCaptions: boolean,\n    sendAsPeerId: PeerId,\n    replyToMsgId?: number,  // will be ignored\n    threadId?: number       // will be ignored\n  }> = {}) {\n    delete options.replyToMsgId;\n    delete options.threadId;\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    mids = mids.slice().sort((a, b) => a - b);\n\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      if(originalMessage.pFlags.is_outgoing) { // this can happen when forwarding a changelog\n        this.sendText(peerId, originalMessage.message, {\n          entities: originalMessage.entities,\n          scheduleDate: options.scheduleDate,\n          silent: options.silent\n        });\n\n        mids.splice(i--, 1);\n        --length;\n      }\n    }\n\n    if(!mids.length) {\n      return Promise.resolve();\n    }\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    if(options.dropCaptions) {\n      options.dropAuthor = true;\n    }\n\n    const groups: {\n      [groupId: string]: {\n        tempId: string,\n        messages: Message.message[]\n      }\n    } = {};\n\n    const newMids: number[] = [];\n    const newMessages = mids.map((mid) => {\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      const message: Message.message = this.generateOutgoingMessage(peerId, options);\n      newMids.push(message.id);\n\n      const keys: Array<keyof Message.message> = [\n        'entities',\n        'media'\n        // 'reply_markup'\n      ];\n\n      if(!options.dropAuthor) {\n        message.fwd_from = this.generateForwardHeader(peerId, originalMessage);\n        keys.push('views', 'forwards');\n\n        if(message.fwd_from?.from_name && peerId === this.appPeersManager.peerId) {\n          delete message.from_id;\n        }\n      }\n\n      if(!options.dropCaptions || !originalMessage.media) {\n        keys.push('message');\n      }\n\n      const replyToMid = originalMessage.reply_to?.reply_to_msg_id;\n      const replyToMessageIdx = mids.indexOf(replyToMid);\n      if(replyToMid && replyToMessageIdx !== -1) {\n        const newReplyToMid = newMids[replyToMessageIdx];\n        message.reply_to = {\n          _: 'messageReplyHeader',\n          reply_to_msg_id: newReplyToMid\n        };\n\n        /* this.invokeAfterMessageIsSent(newReplyToMid, 'reply', async(originalMessage) => {\n          message.reply_to.reply_to_msg_id = originalMessage.mid;\n        }); */\n      }\n\n      keys.forEach((key) => {\n        // @ts-ignore\n        message[key] = copy(originalMessage[key]);\n      });\n\n      const document = (message.media as MessageMedia.messageMediaDocument)?.document as MyDocument;\n      if(document) {\n        const types: MyDocument['type'][] = ['round', 'voice'];\n        if(types.includes(document.type)) {\n          (message as MyMessage).pFlags.media_unread = true;\n        }\n\n        if(document.sticker && !this.rootScope.premium) {\n          const effectThumb = getStickerEffectThumb(document);\n          if(effectThumb) {\n            (message.media as MessageMedia.messageMediaDocument).pFlags.nopremium = true;\n          }\n        }\n      }\n\n      if(originalMessage.grouped_id) {\n        const group = groups[originalMessage.grouped_id] ?? (groups[originalMessage.grouped_id] = {tempId: '' + ++this.groupedTempId, messages: []});\n        group.messages.push(message);\n      }\n\n      return message;\n    });\n\n    for(const groupId in groups) {\n      const group = groups[groupId];\n      if(group.messages.length > 1) {\n        group.messages.forEach((message) => {\n          message.grouped_id = group.tempId;\n        });\n      }\n    }\n\n    newMessages.forEach((message) => {\n      this.beforeMessageSending(message, {\n        isScheduled: !!options.scheduleDate || undefined,\n        sequential: true\n      });\n    });\n\n    const sentRequestOptions: PendingAfterMsg = {};\n    if(this.pendingAfterMsgs[peerId]) {\n      sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n    }\n\n    const promise = /* true ? Promise.resolve() :  */this.apiManager.invokeApiAfter('messages.forwardMessages', {\n      from_peer: this.appPeersManager.getInputPeerById(fromPeerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      random_id: newMessages.map((message) => message.random_id),\n      to_peer: this.appPeersManager.getInputPeerById(peerId),\n      with_my_score: options.withMyScore,\n      silent: options.silent,\n      schedule_date: options.scheduleDate,\n      drop_author: options.dropAuthor,\n      drop_media_captions: options.dropCaptions,\n      send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n    }, sentRequestOptions).then((updates) => {\n      this.log('forwardMessages updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }, (error: ApiError) => {\n      this.onMessagesSendError(newMessages, error);\n      throw error;\n    }).finally(() => {\n      if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n        delete this.pendingAfterMsgs[peerId];\n      }\n    });\n\n    this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.forwardMessages(peerId, fromPeerId, overflowMids, options));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public generateEmptyMessage(mid: number): Message.message | Message.messageService {\n    return undefined;\n    // return {\n    //   _: 'messageEmpty',\n    //   id: getServerMessageId(mid),\n    //   mid,\n    //   deleted: true,\n    //   pFlags: {}\n    // };\n  }\n\n  private onMessagesSendError(messages: Message.message[], error?: ApiError) {\n    messages.forEach((message) => {\n      if(message.error === error) {\n        return;\n      }\n\n      if(error) {\n        message.error = error;\n        this.rootScope.dispatchEvent('message_error', {storageKey: message.storageKey, tempId: message.mid, error});\n\n        const dialog = this.getDialogOnly(message.peerId);\n        if(dialog) {\n          this.rootScope.dispatchEvent('dialog_unread', {peerId: message.peerId, dialog});\n        }\n      } else {\n        delete message.error;\n      }\n    });\n  }\n\n  public getMessagesStorageByKey(key: MessagesStorageKey) {\n    const s = key.split('_');\n    const peerId: PeerId = +s[0];\n    const type: MessagesStorageType = s[1] as any;\n    return type === 'scheduled' ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n  }\n\n  public getMessageFromStorage(storage: MessagesStorage | MessagesStorageKey, mid: number) {\n    if(typeof(storage) === 'string') {\n      storage = this.getMessagesStorageByKey(storage);\n    }\n\n    return storage && storage.get(mid)/*  || this.generateEmptyMessage(mid) */;\n  }\n\n  private createMessageStorage(peerId: PeerId, type: MessagesStorageType) {\n    const storage: MessagesStorage = new Map() as any;\n    storage.peerId = peerId;\n    storage.type = type;\n    storage.key = `${peerId}_${type}`;\n\n    /* let num = 0;\n    Object.defineProperty(storage, 'num', {\n      get: () => ++num,\n      set: (_num: number) => num = _num,\n      enumerable: false\n    });\n\n    Object.defineProperty(storage, 'generateIndex', {\n      value: (message: any) => {\n        if(message.index === undefined) {\n          message.index = (message.date * 0x10000) + (storage.num & 0xFFFF);\n        }\n      },\n      enumerable: false\n    }); */\n\n    return storage;\n  }\n\n  public getHistoryMessagesStorage(peerId: PeerId) {\n    return this.messagesStorageByPeerId[peerId] ?? (this.messagesStorageByPeerId[peerId] = this.createMessageStorage(peerId, 'history'));\n  }\n\n  public getMessagesStorage(key: MessagesStorageKey | MessagesStorage): MessagesStorage {\n    if(typeof(key) === 'object') {\n      return key;\n    } else {\n      return this.getMessagesStorageByKey(key);\n    }\n  }\n\n  public getMessageById(messageId: number) {\n    for(const peerId in this.messagesStorageByPeerId) {\n      if(this.appPeersManager.isChannel(peerId.toPeerId())) {\n        continue;\n      }\n\n      const message = this.messagesStorageByPeerId[peerId].get(messageId);\n      if(message) {\n        return message;\n      }\n    }\n\n    return this.getMessageFromStorage(null, messageId);\n  }\n\n  public getMessageByPeer(peerId: PeerId, messageId: number) {\n    if(!peerId) {\n      return this.getMessageById(messageId);\n    }\n\n    return this.getMessageFromStorage(this.getHistoryMessagesStorage(peerId), messageId);\n  }\n\n  public getMessagePeer(message: any): PeerId {\n    const toId = message.peer_id && this.appPeersManager.getPeerId(message.peer_id) || NULL_PEER_ID;\n\n    return toId;\n  }\n\n  public getDialogByPeerId(peerId: PeerId): [Dialog, number] | [] {\n    return this.dialogsStorage.getDialog(peerId);\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogsStorage.getDialogOnly(peerId);\n  }\n\n  public cantForwardDeleteMids(storageKey: MessagesStorageKey, mids: number[]) {\n    const storage = this.getMessagesStorage(storageKey);\n    let cantForward = !mids.length, cantDelete = !mids.length;\n    for(const mid of mids) {\n      const message = this.getMessageFromStorage(storage, mid);\n      if(!cantForward) {\n        cantForward = !this.canForward(message);\n      }\n\n      if(!cantDelete) {\n        cantDelete = !this.canDeleteMessage(message);\n      }\n\n      if(cantForward && cantDelete) break;\n    }\n\n    return {cantForward, cantDelete};\n  }\n\n  public reloadConversation(inputPeer?: PeerId | InputPeer): CancellablePromise<Dialog>;\n  public reloadConversation(inputPeer: PeerId | InputPeer) {\n    let promise: CancellablePromise<Dialog>;\n    if(inputPeer !== undefined) {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      let obj = this.reloadConversationsPeers.get(peerId);\n      if(obj) {\n        promise = obj.promise;\n      }\n\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      this.reloadConversationsPeers.set(peerId, obj = {\n        inputDialogPeer: this.appPeersManager.getInputDialogPeerById(inputPeer),\n        promise\n      });\n    }\n\n    if(this.reloadConversationsPromise) {\n      return promise || this.reloadConversationsPromise;\n    }\n\n    this.reloadConversationsPromise = pause(0).then(() => {\n      const inputDialogPeers: InputDialogPeer[] = [];\n      const promises: {[peerId: string]: typeof promise} = {};\n      for(const [peerId, {inputDialogPeer, promise}] of this.reloadConversationsPeers) {\n        inputDialogPeers.push(inputDialogPeer);\n        promises[peerId] = promise;\n      }\n\n      this.reloadConversationsPeers.clear();\n\n      const fullfillLeft = () => {\n        for(const peerId in promises) {\n          promises[peerId].resolve(undefined);\n        }\n      };\n\n      return this.apiManager.invokeApi('messages.getPeerDialogs', {peers: inputDialogPeers}).then((result) => {\n        this.dialogsStorage.applyDialogs(result);\n\n        result.dialogs.forEach((dialog) => {\n          const peerId = dialog.peerId;\n          if(peerId) {\n            promises[peerId].resolve(dialog as Dialog);\n            delete promises[peerId];\n          }\n        });\n\n        // fullfillLeft();\n        // resolve();\n      }, (err) => {\n        // fullfillLeft();\n        // resolve();\n        // reject(err);\n      }).then(() => {\n        fullfillLeft();\n\n        this.reloadConversationsPromise = null;\n        if(this.reloadConversationsPeers.size) {\n          this.reloadConversation();\n        }\n      });\n    });\n\n    return promise || this.reloadConversationsPromise;\n  }\n\n  private doFlushHistory(peer: InputPeer, just_clear?: boolean, revoke?: boolean): Promise<true> {\n    return this.apiManager.invokeApiSingle('messages.deleteHistory', {\n      just_clear,\n      revoke,\n      peer,\n      max_id: 0\n    }).then((affectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        return true;\n      }\n\n      return this.doFlushHistory(peer, just_clear, revoke);\n    });\n  }\n\n  public async flushHistory(peerId: PeerId, justClear?: boolean, revoke?: boolean) {\n    if(this.appPeersManager.isChannel(peerId)) {\n      const promise = this.getHistory(peerId, 0, 1);\n\n      const historyResult = await promise;\n\n      const channelId = peerId.toChatId();\n      const maxId = historyResult.history[0] || 0;\n      return this.apiManager.invokeApiSingle('channels.deleteHistory', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        max_id: getServerMessageId(maxId)\n      }).then((bool) => {\n        if(bool) {\n          this.apiUpdatesManager.processLocalUpdate({\n            _: 'updateChannelAvailableMessages',\n            channel_id: channelId,\n            available_min_id: maxId\n          });\n        }\n\n        return bool;\n      });\n    }\n\n    return this.doFlushHistory(this.appPeersManager.getInputPeerById(peerId), justClear, revoke).then(() => {\n      this.flushStoragesByPeerId(peerId);\n\n      if(justClear) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog: this.getDialogOnly(peerId)});\n      } else {\n        delete this.notificationsToHandle[peerId];\n        delete this.typings[peerId];\n\n        const c = this.reloadConversationsPeers.get(peerId);\n        if(c) {\n          this.reloadConversationsPeers.delete(peerId);\n          c.promise.resolve(undefined);\n        }\n\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    });\n  }\n\n  private flushStoragesByPeerId(peerId: PeerId) {\n    [\n      this.historiesStorage,\n      this.threadsStorage,\n      this.searchesStorage,\n      this.pinnedMessages,\n      this.pendingAfterMsgs,\n      this.pendingTopMsgs\n    ].forEach((s) => {\n      delete s[peerId];\n    });\n\n    const needSingleMessages = this.needSingleMessages.get(peerId);\n    if(needSingleMessages) {\n      for(const [mid, promise] of needSingleMessages) {\n        promise.resolve(this.generateEmptyMessage(mid));\n      }\n\n      needSingleMessages.clear();\n    }\n\n    [\n      this.messagesStorageByPeerId,\n      this.scheduledMessagesStorage\n    ].forEach((s) => {\n      const ss = s[peerId];\n      if(ss) {\n        ss.clear();\n      }\n    });\n  }\n\n  public hidePinnedMessages(peerId: PeerId) {\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.getPinnedMessage(peerId)\n    ])\n    .then(([state, pinned]) => {\n      state.hiddenPinnedMessages[peerId] = pinned.maxId;\n      this.rootScope.dispatchEvent('peer_pinned_hidden', {peerId, maxId: pinned.maxId});\n    });\n  }\n\n  public getPinnedMessage(peerId: PeerId) {\n    const p = this.pinnedMessages[peerId] ?? (this.pinnedMessages[peerId] = {});\n    if(p.promise) return p.promise;\n    else if(p.maxId) return Promise.resolve(p);\n\n    return p.promise = this.getSearch({\n      peerId,\n      inputFilter: {_: 'inputMessagesFilterPinned'},\n      maxId: 0,\n      limit: 1\n    }).then((result) => {\n      p.count = result.count;\n      p.maxId = result.history[0]?.mid;\n      return p;\n    }).finally(() => {\n      delete p.promise;\n    });\n  }\n\n  public getPinnedMessagesCount(peerId: PeerId) {\n    return this.pinnedMessages[peerId]?.count;\n  }\n\n  public getPinnedMessagesMaxId(peerId: PeerId) {\n    return this.pinnedMessages[peerId]?.maxId;\n  }\n\n  public updatePinnedMessage(peerId: PeerId, mid: number, unpin?: boolean, silent?: boolean, pm_oneside?: boolean) {\n    return this.apiManager.invokeApi('messages.updatePinnedMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      unpin,\n      silent,\n      pm_oneside,\n      id: getServerMessageId(mid)\n    }).then((updates) => {\n      // this.log('pinned updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public unpinAllMessages(peerId: PeerId): Promise<boolean> {\n    return this.apiManager.invokeApiSingle('messages.unpinAllMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId)\n    }).then((affectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        const storage = this.getHistoryMessagesStorage(peerId);\n        storage.forEach((message) => {\n          if((message as Message.message).pFlags.pinned) {\n            delete (message as Message.message).pFlags.pinned;\n          }\n        });\n\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, unpinAll: true});\n        delete this.pinnedMessages[peerId];\n\n        return true;\n      }\n\n      return this.unpinAllMessages(peerId);\n    });\n  }\n\n  public getAlbumText(grouped_id: string) {\n    const group = this.groupedMessagesStorage[grouped_id];\n    return getAlbumText(Array.from(group.values()) as Message.message[]);\n  }\n\n  public getGroupsFirstMessage(message: Message.message) {\n    if(!message?.grouped_id) return message;\n\n    const storage = this.groupedMessagesStorage[message.grouped_id];\n    let minMid = Number.MAX_SAFE_INTEGER;\n    for(const [mid, message] of storage) {\n      if(message.mid < minMid) {\n        minMid = message.mid;\n      }\n    }\n\n    return this.getMessageFromStorage(storage, minMid) as Message.message;\n  }\n\n  public getMidsByAlbum(groupedId: string, sort: 'asc' | 'desc' = 'asc') {\n    return getObjectKeysAndSort(this.groupedMessagesStorage[groupedId], sort);\n  }\n\n  public getMessagesByAlbum(groupedId: string) {\n    const mids = this.getMidsByAlbum(groupedId, 'asc');\n    const storage = this.groupedMessagesStorage[groupedId];\n    return mids.map((mid) => this.getMessageFromStorage(storage, mid) as Message.message);\n  }\n\n  public getMidsByMessage(message: Message) {\n    if(!message) return [];\n    else if((message as Message.message).grouped_id) return this.getMidsByAlbum((message as Message.message).grouped_id);\n    else return [message.mid];\n  }\n\n  public filterMessages(message: MyMessage, verify: (message: MyMessage) => boolean) {\n    const out: MyMessage[] = [];\n    if((message as Message.message).grouped_id) {\n      const storage = this.groupedMessagesStorage[(message as Message.message).grouped_id];\n      for(const [mid, message] of storage) {\n        if(verify(message)) {\n          out.push(message);\n        }\n      }\n    } else {\n      if(verify(message)) {\n        out.push(message);\n      }\n    }\n\n    return out;\n  }\n\n  public generateTempMessageId(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    return this.appMessagesIdsManager.generateTempMessageId(dialog?.top_message || 0);\n  }\n\n  public saveMessage(message: Message, options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    // isNew: boolean, // * new - from update\n  }> = {}) {\n    if(!message || message._ === 'messageEmpty') {\n      return;\n    }\n\n    message.pFlags ??= {};\n\n    // * exclude from state\n    // defineNotNumerableProperties(message, ['rReply', 'mid', 'savedFrom', 'fwdFromId', 'fromId', 'peerId', 'reply_to_mid', 'viaBotId']);\n\n    const peerId = this.getMessagePeer(message);\n    const storage = options.storage || this.getHistoryMessagesStorage(peerId);\n    const isChannel = message.peer_id._ === 'peerChannel';\n    const isBroadcast = isChannel && this.appChatsManager.isBroadcast(peerId.toChatId());\n    const isMessage = message._ === 'message';\n\n    if(options.isOutgoing) {\n      message.pFlags.is_outgoing = true;\n    }\n\n    const mid = generateMessageId(message.id);\n    message.mid = mid;\n\n    if(isMessage) {\n      if(options.isScheduled) {\n        message.pFlags.is_scheduled = true;\n      }\n\n      if(message.grouped_id) {\n        const storage = this.groupedMessagesStorage[message.grouped_id] ?? (this.groupedMessagesStorage[message.grouped_id] = this.createMessageStorage(peerId, 'grouped'));\n        storage.set(mid, message);\n      }\n\n      if(message.via_bot_id) {\n        // ! WARNING\n        message.viaBotId = message.via_bot_id as any;\n      }\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog && mid) {\n      if(mid > dialog[message.pFlags.out ?\n        'read_outbox_max_id' :\n        'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n      }\n    }\n    // this.log(dT(), 'msg unread', mid, apiMessage.pFlags.out, dialog && dialog[apiMessage.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'])\n\n    if(message.reply_to) {\n      if(message.reply_to.reply_to_msg_id) {\n        message.reply_to.reply_to_msg_id = message.reply_to_mid = generateMessageId(message.reply_to.reply_to_msg_id);\n      }\n\n      if(message.reply_to.reply_to_top_id) {\n        message.reply_to.reply_to_top_id = generateMessageId(message.reply_to.reply_to_top_id);\n      }\n    }\n\n    const replies = isMessage && message.replies;\n    if(replies) {\n      if(replies.max_id) replies.max_id = generateMessageId(replies.max_id);\n      if(replies.read_max_id) replies.read_max_id = generateMessageId(replies.read_max_id);\n    }\n\n    const overwriting = !!peerId;\n    if(!overwriting) {\n      message.date -= this.timeManager.getServerTimeOffset();\n    }\n\n    // storage.generateIndex(message);\n    const myId = this.appPeersManager.peerId;\n\n    const fwdHeader = isMessage && (message as Message.message).fwd_from;\n\n    message.peerId = peerId;\n    if(peerId === myId/*  && !message.from_id && !message.fwd_from */) {\n      message.fromId = fwdHeader ? (fwdHeader.from_id ? this.appPeersManager.getPeerId(fwdHeader.from_id) : NULL_PEER_ID) : myId;\n    } else {\n      // message.fromId = message.pFlags.post || (!message.pFlags.out && !message.from_id) ? peerId : appPeersManager.getPeerId(message.from_id);\n      message.fromId = message.pFlags.post || !message.from_id ? peerId : this.appPeersManager.getPeerId(message.from_id);\n    }\n\n    if(fwdHeader) {\n      // if(peerId === myID) {\n      if(fwdHeader.saved_from_msg_id) fwdHeader.saved_from_msg_id = generateMessageId(fwdHeader.saved_from_msg_id);\n      if(fwdHeader.channel_post) fwdHeader.channel_post = generateMessageId(fwdHeader.channel_post);\n\n      const peer = fwdHeader.saved_from_peer || fwdHeader.from_id;\n      const msgId = fwdHeader.saved_from_msg_id || fwdHeader.channel_post;\n      if(peer && msgId) {\n        const savedFromPeerId = this.appPeersManager.getPeerId(peer);\n        const savedFromMid = generateMessageId(msgId);\n        message.savedFrom = savedFromPeerId + '_' + savedFromMid;\n      }\n\n      /* if(peerId.isAnyChat() || peerId === myID) {\n          message.fromId = appPeersManager.getPeerID(!message.from_id || deepEqual(message.from_id, fwdHeader.from_id) ? fwdHeader.from_id : message.from_id);\n        } */\n      /* } else {\n        apiMessage.fwdPostID = fwdHeader.channel_post;\n      } */\n\n      message.fwdFromId = this.appPeersManager.getPeerId(fwdHeader.from_id);\n\n      if(!overwriting) {\n        fwdHeader.date -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    const mediaContext: ReferenceContext = {\n      type: 'message',\n      peerId,\n      messageId: mid\n    };\n\n    /* if(isMessage) {\n      const entities = message.entities;\n      if(entities && entities.find((entity) => entity._ === 'messageEntitySpoiler')) {\n        message.media = {_: 'messageMediaUnsupported'};\n      }\n    } */\n\n    let unsupported = false;\n    const media = isMessage && message.media;\n    if(media) {\n      switch(media._) {\n        case 'messageMediaEmpty': {\n          delete message.media;\n          break;\n        }\n\n        case 'messageMediaPhoto': {\n          if(media.ttl_seconds) {\n            unsupported = true;\n          } else {\n            media.photo = this.appPhotosManager.savePhoto(media.photo, mediaContext);\n          }\n\n          if(!(media as MessageMedia.messageMediaPhoto).photo) { // * found this bug on test DC\n            delete message.media;\n          }\n\n          break;\n        }\n\n        case 'messageMediaPoll': {\n          const result = this.appPollsManager.savePoll(media.poll, media.results, message);\n          media.poll = result.poll;\n          media.results = result.results;\n          break;\n        }\n\n        case 'messageMediaDocument': {\n          if(media.ttl_seconds) {\n            unsupported = true;\n          } else {\n            const originalDoc = media.document;\n            media.document = this.appDocsManager.saveDoc(originalDoc, mediaContext); // 11.04.2020 warning\n\n            if(!media.document && originalDoc._ !== 'documentEmpty') {\n              unsupported = true;\n            }\n          }\n\n          break;\n        }\n\n        case 'messageMediaWebPage': {\n          const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(peerId, mid, options.isScheduled);\n          media.webpage = this.appWebPagesManager.saveWebPage(media.webpage, messageKey, mediaContext);\n          break;\n        }\n\n        /* case 'messageMediaGame':\n          AppGamesManager.saveGame(apiMessage.media.game, apiMessage.mid, mediaContext);\n          apiMessage.media.handleMessage = true;\n          break; */\n\n        case 'messageMediaInvoice': {\n          media.photo = this.appWebDocsManager.saveWebDocument(media.photo);\n          const extendedMedia = media.extended_media;\n          if(extendedMedia?._ === 'messageExtendedMedia') {\n            const extendedMediaMedia = extendedMedia.media;\n            (extendedMediaMedia as MessageMedia.messageMediaPhoto).photo = this.appPhotosManager.savePhoto((extendedMediaMedia as MessageMedia.messageMediaPhoto).photo, mediaContext);\n            (extendedMediaMedia as MessageMedia.messageMediaDocument).document = this.appDocsManager.saveDoc((extendedMediaMedia as MessageMedia.messageMediaDocument).document, mediaContext);\n          }\n          break;\n        }\n\n        case 'messageMediaUnsupported': {\n          unsupported = true;\n          break;\n        }\n      }\n    }\n\n    // if(isMessage && !unsupported && message.entities) {\n    //   unsupported = message.entities.some((entity) => entity._ === 'messageEntityCustomEmoji');\n    // }\n\n    if(isMessage && unsupported) {\n      message.media = {_: 'messageMediaUnsupported'};\n      message.message = '';\n      delete message.entities;\n      delete message.totalEntities;\n    }\n\n    if(!isMessage && message.action) {\n      const action = message.action as MessageAction;\n      const suffix = message.fromId === this.appUsersManager.getSelf().id ? 'You' : '';\n      let migrateFrom: PeerId, migrateTo: PeerId;\n\n      if((action as MessageAction.messageActionChatEditPhoto).photo) {\n        (action as MessageAction.messageActionChatEditPhoto).photo = this.appPhotosManager.savePhoto((action as MessageAction.messageActionChatEditPhoto).photo, mediaContext);\n      }\n\n      if((action as any).document) {\n        (action as any).document = this.appDocsManager.saveDoc((action as any).photo, mediaContext);\n      }\n\n      switch(action._) {\n        // case 'messageActionChannelEditPhoto':\n        case 'messageActionChatEditPhoto':\n          // action.photo = appPhotosManager.savePhoto(action.photo, mediaContext);\n          if((action.photo as Photo.photo)?.video_sizes) {\n            // @ts-ignore\n            action._ = isBroadcast ? 'messageActionChannelEditVideo' : 'messageActionChatEditVideo';\n          } else {\n            if(isBroadcast) { // ! messageActionChannelEditPhoto не существует в принципе, это используется для перевода.\n              // @ts-ignore\n              action._ = 'messageActionChannelEditPhoto';\n            }\n          }\n          break;\n\n        case 'messageActionGroupCall': {\n          // assumeType<MessageAction.messageActionGroupCall>(action);\n\n          this.appGroupCallsManager.saveGroupCall(action.call);\n\n          let type: string;\n          if(action.duration === undefined) {\n            type = 'started';\n          } else {\n            type = 'ended'\n          }\n\n          if(!isBroadcast) {\n            type += '_by' + suffix;\n          }\n\n          // @ts-ignore\n          action.type = type;\n\n          break;\n        }\n\n        case 'messageActionChatEditTitle':\n          /* if(options.isNew) {\n            const chat = appChatsManager.getChat(peerId.toChatId());\n            chat.title = action.title;\n            appChatsManager.saveApiChat(chat, true);\n          } */\n\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelEditTitle';\n          }\n          break;\n\n        case 'messageActionChatDeletePhoto':\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelDeletePhoto';\n          }\n          break;\n\n        case 'messageActionChatAddUser':\n          if(action.users.length === 1) {\n            // @ts-ignore\n            action.user_id = action.users[0];\n            // @ts-ignore\n            if(message.fromId === action.user_id) {\n              if(isChannel) {\n                // @ts-ignore\n                action._ = 'messageActionChatJoined' + suffix;\n              } else {\n                // @ts-ignore\n                action._ = 'messageActionChatReturn' + suffix;\n              }\n            }\n          } else if(action.users.length > 1) {\n            // @ts-ignore\n            action._ = 'messageActionChatAddUsers';\n          }\n          break;\n\n        case 'messageActionChatDeleteUser':\n          if(message.fromId === action.user_id) {\n            // @ts-ignore\n            action._ = 'messageActionChatLeave' + suffix;\n          }\n          break;\n\n        case 'messageActionChannelMigrateFrom':\n          migrateFrom = action.chat_id.toPeerId(true);\n          migrateTo = peerId;\n          break\n\n        case 'messageActionChatMigrateTo':\n          migrateFrom = peerId;\n          migrateTo = action.channel_id.toPeerId(true);\n          break;\n\n        case 'messageActionHistoryClear':\n          // apiMessage.deleted = true;\n          message.clear_history = true;\n          delete message.pFlags.out;\n          delete message.pFlags.unread;\n          break;\n\n        case 'messageActionPhoneCall':\n          // @ts-ignore\n          action.type =\n            (action.pFlags.video ? 'video_' : '') +\n            (action.duration !== undefined ? (message.pFlags.out ? 'out_' : 'in_') : '') +\n            (\n              action.duration !== undefined ? 'ok' : (\n                action.reason._ === 'phoneCallDiscardReasonMissed' ?\n                  'missed' :\n                  'cancelled'\n              )\n            );\n          break;\n      }\n\n      if(migrateFrom &&\n          migrateTo &&\n          !this.migratedFromTo[migrateFrom] &&\n          !this.migratedToFrom[migrateTo]) {\n        this.migrateChecks(migrateFrom, migrateTo);\n      }\n    }\n\n    /* if(message.grouped_id) {\n      if(!groups) {\n        groups = new Set();\n      }\n\n      groups.add(message.grouped_id);\n    } else {\n      message.rReply = this.getRichReplyText(message);\n    } */\n\n    if(isMessage && message.message.length && !message.totalEntities) {\n      this.wrapMessageEntities(message);\n    }\n\n    storage.set(mid, message);\n\n    return message;\n  }\n\n  public saveMessages(messages: any[], options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    // isNew: boolean, // * new - from update\n  }> = {}): (Message.message | Message.messageService)[] {\n    if((messages as any).saved) return messages;\n    (messages as any).saved = true;\n    messages.forEach((message, idx, arr) => {\n      arr[idx] = this.saveMessage(message, options);\n    });\n\n    return messages;\n  }\n\n  public async getFirstMessageToEdit(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n      let goodMessage: Message.message | Message.messageService;\n      const myPeerId = this.appPeersManager.peerId;\n      for(const mid of slice) {\n        const message = this.getMessageByPeer(peerId, mid);\n        const good = myPeerId === peerId ? message.fromId === myPeerId : message.pFlags.out;\n\n        if(good) {\n          if(await this.canEditMessage(message, 'text')) {\n            goodMessage = message;\n            break;\n          }\n\n          // * this check will allow editing only last message\n          // break;\n        }\n      }\n\n      return goodMessage;\n    }\n  }\n\n  private wrapMessageEntities(message: Message.message) {\n    const apiEntities = message.entities ? message.entities.slice() : [];\n    message.message = fixEmoji(message.message, apiEntities);\n\n    const myEntities = parseEntities(message.message);\n    message.totalEntities = mergeEntities(apiEntities, myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\n  }\n\n  public reportMessages(peerId: PeerId, mids: number[], reason: ReportReason['_'], message?: string) {\n    return this.apiManager.invokeApiSingle('messages.report', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      reason: {\n        _: reason\n      },\n      message\n    });\n  }\n\n  public startBot(botId: BotId, chatId?: ChatId, startParam?: string) {\n    const peerId = chatId ? chatId.toPeerId(true) : botId.toPeerId();\n    if(startParam) {\n      const randomId = randomLong();\n\n      return this.apiManager.invokeApi('messages.startBot', {\n        bot: this.appUsersManager.getUserInput(botId),\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        random_id: randomId,\n        start_param: startParam\n      }).then((updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      });\n    }\n\n    const str = '/start';\n    if(chatId) {\n      let promise: Promise<void>;\n      if(this.appChatsManager.isChannel(chatId)) {\n        promise = this.appChatsManager.inviteToChannel(chatId, [botId]);\n      } else {\n        promise = this.appChatsManager.addChatUser(chatId, botId, 0);\n      }\n\n      return promise.catch((error: ApiError) => {\n        if(error?.type == 'USER_ALREADY_PARTICIPANT') {\n          error.handled = true;\n          return;\n        }\n\n        throw error;\n      }).then(() => {\n        const bot = this.appUsersManager.getUser(botId);\n        return this.sendText(peerId, str + '@' + bot.username);\n      });\n    }\n\n    return this.sendText(peerId, str);\n  }\n\n  public editPeerFolders(peerIds: PeerId[], folderId: number) {\n    this.apiManager.invokeApi('folders.editPeerFolders', {\n      folder_peers: peerIds.map((peerId) => {\n        return {\n          _: 'inputFolderPeer',\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          folder_id: folderId\n        };\n      })\n    }).then((updates) => {\n      // this.log('editPeerFolders updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates); // WARNING! возможно тут нужно добавлять channelId, и вызывать апдейт для каждого канала отдельно\n    });\n  }\n\n  public getFilter(filterId: number) {\n    return this.filtersStorage.getFilter(filterId);\n  }\n\n  public async toggleDialogPin(peerId: PeerId, filterId?: number) {\n    if(filterId > 1) {\n      return this.filtersStorage.toggleDialogPin(peerId, filterId);\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const pinned = dialog.pFlags?.pinned ? undefined : true;\n\n    if(pinned) {\n      const max = await this.apiManager.getLimit(filterId === 1 ? 'folderPin' : 'pin');\n      if(this.dialogsStorage.getPinnedOrders(filterId).length >= max) {\n        return Promise.reject(makeError('PINNED_DIALOGS_TOO_MUCH'));\n      }\n    }\n\n    return this.apiManager.invokeApi('messages.toggleDialogPin', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      pinned\n    }).then((bool) => {\n      if(bool) {\n        const pFlags: Update.updateDialogPinned['pFlags'] = pinned ? {pinned} : {};\n        this.apiUpdatesManager.saveUpdate({\n          _: 'updateDialogPinned',\n          peer: this.appPeersManager.getDialogPeer(peerId),\n          folder_id: filterId,\n          pFlags\n        });\n      }\n    });\n  }\n\n  public markDialogUnread(peerId: PeerId, read?: true) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const unread = read || dialog.pFlags?.unread_mark ? undefined : true;\n    return this.apiManager.invokeApi('messages.markDialogUnread', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      unread\n    }).then((bool) => {\n      if(bool) {\n        const pFlags: Update.updateDialogUnreadMark['pFlags'] = unread ? {unread} : {};\n        this.onUpdateDialogUnreadMark({\n          _: 'updateDialogUnreadMark',\n          peer: this.appPeersManager.getDialogPeer(peerId),\n          pFlags\n        });\n      }\n    });\n  }\n\n  public migrateChecks(migrateFrom: PeerId, migrateTo: PeerId) {\n    if(!this.migratedFromTo[migrateFrom] &&\n      !this.migratedToFrom[migrateTo] &&\n      this.appChatsManager.hasChat(migrateTo.toChatId())) {\n      const fromChat: Chat.chat = this.appChatsManager.getChat(migrateFrom.toChatId());\n      if(fromChat?.migrated_to && (fromChat.migrated_to as InputChannel.inputChannel).channel_id === migrateTo.toChatId()) {\n        this.migratedFromTo[migrateFrom] = migrateTo;\n        this.migratedToFrom[migrateTo] = migrateFrom;\n\n        this.rootScope.dispatchEvent('dialog_migrate', {migrateFrom, migrateTo});\n\n        this.dialogsStorage.dropDialogWithEvent(migrateFrom);\n      }\n    }\n  }\n\n  private canMessageBeEdited(message: Message, kind: 'text' | 'poll') {\n    if((message as Message.message)?.pFlags?.is_outgoing) {\n      return false;\n    }\n\n    const goodMedias = [\n      'messageMediaPhoto',\n      'messageMediaDocument',\n      'messageMediaWebPage'\n    ];\n\n    if(kind === 'poll') {\n      goodMedias.push('messageMediaPoll');\n    }\n\n    if(!message ||\n        message._ !== 'message' ||\n        message.deleted ||\n        message.fwd_from ||\n        message.via_bot_id ||\n        message.media && goodMedias.indexOf(message.media._) === -1 ||\n        message.fromId && this.appUsersManager.isBot(message.fromId)) {\n      return false;\n    }\n\n    if(message.media?._ === 'messageMediaDocument' &&\n        ((message.media.document as Document.document).sticker || (message.media.document as Document.document).type === 'round')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async canEditMessage(message: Message.message | Message.messageService, kind: 'text' | 'poll' = 'text') {\n    if(!message || !this.canMessageBeEdited(message, kind)) {\n      return false;\n    }\n\n    // * second rule for saved messages, because there is no 'out' flag\n    if(/* message.pFlags.out ||  */this.getMessagePeer(message) === this.appUsersManager.getSelf().id) {\n      return true;\n    }\n\n    if(!message.pFlags.out || (\n      message.peer_id._ !== 'peerChannel' &&\n        message.date < (tsNow(true) - (await this.apiManager.getConfig()).edit_time_limit) &&\n        (message as Message.message).media?._ !== 'messageMediaPoll'\n    )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canDeleteMessage(message: MyMessage) {\n    return message && (\n      message.peerId.isUser() ||\n      message.pFlags.out ||\n      this.appChatsManager.getChat(message.peerId.toChatId())._ === 'chat' ||\n      this.appChatsManager.hasRights(message.peerId.toChatId(), 'delete_messages')\n    ) && (!message.pFlags.is_outgoing || !!message.error);\n  }\n\n  public getReplyKeyboard(peerId: PeerId) {\n    return this.getHistoryStorage(peerId).replyMarkup;\n  }\n\n  public mergeReplyKeyboard(historyStorage: HistoryStorage, message: Message.messageService | Message.message) {\n    // this.log('merge', message.mid, message.reply_markup, historyStorage.reply_markup)\n    if(!message) {\n      return false;\n    }\n\n    const messageReplyMarkup = (message as Message.message).reply_markup;\n    if(!messageReplyMarkup &&\n      !message.pFlags?.out &&\n      !(message as Message.messageService).action) {\n      return false;\n    }\n\n    if(messageReplyMarkup?._ === 'replyInlineMarkup') {\n      return false;\n    }\n\n    const lastReplyMarkup = historyStorage.replyMarkup;\n    if(messageReplyMarkup) {\n      if(lastReplyMarkup && lastReplyMarkup.mid >= message.mid) {\n        return false;\n      }\n\n      if(messageReplyMarkup.pFlags.selective) {\n        return false;\n      }\n\n      if(historyStorage.maxOutId &&\n        message.mid < historyStorage.maxOutId &&\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.single_use) {\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.hidden = true;\n      }\n\n      messageReplyMarkup.mid = message.mid;\n      /* messageReplyMarkup = Object.assign({\n        mid: message.mid\n      }, messageReplyMarkup); */\n\n      if(messageReplyMarkup._ !== 'replyKeyboardHide') {\n        messageReplyMarkup.fromId = this.appPeersManager.getPeerId(message.from_id);\n      }\n\n      historyStorage.replyMarkup = messageReplyMarkup;\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    if(message.pFlags.out) {\n      if(lastReplyMarkup) {\n        assumeType<ReplyMarkup.replyKeyboardMarkup>(lastReplyMarkup);\n        if(lastReplyMarkup.pFlags.single_use &&\n          !lastReplyMarkup.pFlags.hidden &&\n          (message.mid > lastReplyMarkup.mid || message.pFlags.is_outgoing) &&\n          (message as Message.message).message) {\n          lastReplyMarkup.pFlags.hidden = true;\n          // this.log('set', historyStorage.reply_markup)\n          return true;\n        }\n      } else if(!historyStorage.maxOutId ||\n        message.mid > historyStorage.maxOutId) {\n        historyStorage.maxOutId = message.mid;\n      }\n    }\n\n    assumeType<Message.messageService>(message);\n    if(message.action?._ === 'messageActionChatDeleteUser' &&\n      (lastReplyMarkup ?\n        message.action.user_id === (lastReplyMarkup as ReplyMarkup.replyKeyboardMarkup).fromId :\n        this.appUsersManager.isBot(message.action.user_id)\n      )\n    ) {\n      historyStorage.replyMarkup = {\n        _: 'replyKeyboardHide',\n        mid: message.mid,\n        pFlags: {}\n      };\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    return false;\n  }\n\n  public getSearchStorage(peerId: PeerId, inputFilter: MyInputMessagesFilter) {\n    if(!this.searchesStorage[peerId]) this.searchesStorage[peerId] = {};\n    if(!this.searchesStorage[peerId][inputFilter]) this.searchesStorage[peerId][inputFilter] = {history: []};\n    return this.searchesStorage[peerId][inputFilter];\n  }\n\n  public getSearchCounters(peerId: PeerId, filters: MessagesFilter[], canCache = true): Promise<MessagesSearchCounter[]> {\n    if(this.appPeersManager.isRestricted(peerId)) {\n      return Promise.resolve(filters.map((filter) => {\n        return {\n          _: 'messages.searchCounter',\n          pFlags: {},\n          filter: filter,\n          count: 0\n        };\n      }));\n    }\n\n    const func = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\n    return func('messages.getSearchCounters', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      filters\n    });\n  }\n\n  public filterMessagesByInputFilterFromStorage(inputFilter: MyInputMessagesFilter, history: number[], storage: MessagesStorage | MessagesStorageKey, limit: number) {\n    const _storage = this.getMessagesStorage(storage);\n    return filterMessagesByInputFilter(inputFilter, history.map((mid) => _storage.get(mid)), limit);\n  }\n\n  public getSearch({peerId, query, inputFilter, maxId, limit, nextRate, backLimit, threadId, folderId, minDate, maxDate}: {\n    peerId?: PeerId,\n    maxId?: number,\n    limit?: number,\n    nextRate?: number,\n    backLimit?: number,\n    threadId?: number,\n    folderId?: number,\n    query?: string,\n    inputFilter?: {\n      _: MyInputMessagesFilter\n    },\n    minDate?: number,\n    maxDate?: number\n  }): Promise<{\n    count: number,\n    next_rate: number,\n    offset_id_offset: number,\n    history: MyMessage[]\n  }> {\n    if(this.appPeersManager.isRestricted(peerId)/*  || true */) {\n      return Promise.resolve({\n        count: 0,\n        offset_id_offset: 0,\n        next_rate: undefined,\n        history: []\n      });\n    }\n\n    if(!query) query = '';\n    if(!inputFilter) inputFilter = {_: 'inputMessagesFilterEmpty'};\n    if(limit === undefined) limit = 20;\n    if(!nextRate) nextRate = 0;\n    if(!backLimit) backLimit = 0;\n\n    minDate = minDate ? minDate / 1000 | 0 : 0;\n    maxDate = maxDate ? maxDate / 1000 | 0 : 0;\n\n    let foundMsgs: MyMessage[] = [];\n\n    // this.log('search', maxId);\n\n    if(backLimit) {\n      limit += backLimit;\n    }\n\n    // const beta = inputFilter._ === 'inputMessagesFilterPinned' && !backLimit;\n    const beta = false;\n\n    let storage: {\n      count?: number;\n      history: SlicedArray<number>;\n    };\n\n    // * костыль для limit 1, если нужно и получить сообщение, и узнать количество сообщений\n    if(peerId && !backLimit && !maxId && !query && limit !== 1 && !threadId/*  && inputFilter._ !== 'inputMessagesFilterPinned' */) {\n      storage = beta ?\n        this.getSearchStorage(peerId, inputFilter._) as any :\n        this.getHistoryStorage(peerId);\n      foundMsgs = this.filterMessagesByInputFilterFromStorage(inputFilter._, storage.history.slice, this.getHistoryMessagesStorage(peerId), limit);\n    }\n\n    if(foundMsgs.length) {\n      if(foundMsgs.length < limit && (beta ? storage.count !== storage.history.length : true)) {\n        maxId = foundMsgs[foundMsgs.length - 1].mid;\n        limit = limit - foundMsgs.length;\n      } else {\n        return Promise.resolve({\n          count: beta ? storage.count : 0,\n          next_rate: 0,\n          offset_id_offset: 0,\n          history: foundMsgs\n        });\n      }\n    } else if(beta && storage?.count) {\n      return Promise.resolve({\n        count: storage.count,\n        next_rate: 0,\n        offset_id_offset: 0,\n        history: []\n      });\n    }\n\n    const canCache = false && (['inputMessagesFilterChatPhotos', 'inputMessagesFilterPinned'] as MyInputMessagesFilter[]).includes(inputFilter._);\n    const method = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\n\n    let apiPromise: Promise<any>;\n    if(peerId && !nextRate && folderId === undefined/*  || !query */) {\n      apiPromise = method('messages.search', {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        q: query || '',\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        limit,\n        offset_id: getServerMessageId(maxId) || 0,\n        add_offset: backLimit ? -backLimit : 0,\n        max_id: 0,\n        min_id: 0,\n        hash: '',\n        top_msg_id: getServerMessageId(threadId) || 0\n      }, {\n        // timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    } else {\n      // var offsetDate = 0;\n      let offsetPeerId: PeerId;\n      let offsetId = 0;\n      const offsetMessage = maxId && this.getMessageByPeer(peerId, maxId);\n\n      if(offsetMessage && offsetMessage.date) {\n        // offsetDate = offsetMessage.date + timeManager.getServerTimeOffset();\n        offsetId = offsetMessage.id;\n        offsetPeerId = this.getMessagePeer(offsetMessage);\n      }\n\n      apiPromise = method('messages.searchGlobal', {\n        q: query,\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        offset_rate: nextRate,\n        offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n        offset_id: offsetId,\n        limit,\n        folder_id: folderId\n      }, {\n        // timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    }\n\n    return apiPromise.then((searchResult: any) => {\n      this.appUsersManager.saveApiUsers(searchResult.users);\n      this.appChatsManager.saveApiChats(searchResult.chats);\n      this.saveMessages(searchResult.messages);\n\n      /* if(beta && storage && (!maxId || storage.history[storage.history.length - 1] === maxId)) {\n        const storage = this.getSearchStorage(peerId, inputFilter._);\n        const add = (searchResult.messages.map((m: any) => m.mid) as number[]).filter((mid) => storage.history.indexOf(mid) === -1);\n        storage.history.push(...add);\n        storage.history.sort((a, b) => b - a);\n        storage.count = searchResult.count;\n      } */\n\n      if(DEBUG) {\n        this.log('getSearch result:', inputFilter, searchResult);\n      }\n\n      const foundCount: number = searchResult.count || (foundMsgs.length + searchResult.messages.length);\n\n      searchResult.messages.forEach((message: MyMessage) => {\n        const peerId = this.getMessagePeer(message);\n        if(peerId.isAnyChat()) {\n          const chat: Chat.chat = this.appChatsManager.getChat(peerId.toChatId());\n          if(chat.migrated_to) {\n            this.migrateChecks(peerId, (chat.migrated_to as InputChannel.inputChannel).channel_id.toPeerId(true));\n          }\n        }\n\n        foundMsgs.push(message);\n      });\n\n      return {\n        count: foundCount,\n        offset_id_offset: searchResult.offset_id_offset || 0,\n        next_rate: searchResult.next_rate,\n        history: foundMsgs\n      };\n    });\n  }\n\n  public subscribeRepliesThread(peerId: PeerId, mid: number) {\n    const repliesKey = peerId + '_' + mid;\n    for(const threadKey in this.threadsToReplies) {\n      if(this.threadsToReplies[threadKey] === repliesKey) return;\n    }\n\n    this.getDiscussionMessage(peerId, mid);\n  }\n\n  public generateThreadServiceStartMessage(message: Message.message | Message.messageService) {\n    const threadKey = message.peerId + '_' + message.mid;\n    if(this.threadsServiceMessagesIdsStorage[threadKey]) return;\n\n    const maxMessageId = getServerMessageId(Math.max(...this.getMidsByMessage(message)));\n    const serviceStartMessage: Message.messageService = {\n      _: 'messageService',\n      pFlags: {\n        is_single: true\n      },\n      id: this.appMessagesIdsManager.generateTempMessageId(maxMessageId),\n      date: message.date,\n      from_id: {_: 'peerUser', user_id: NULL_PEER_ID}/* message.from_id */,\n      peer_id: message.peer_id,\n      action: {\n        _: 'messageActionDiscussionStarted'\n      },\n      reply_to: this.generateReplyHeader(message.id)\n    };\n\n    this.saveMessages([serviceStartMessage], {isOutgoing: true});\n    this.threadsServiceMessagesIdsStorage[threadKey] = serviceStartMessage.mid;\n  }\n\n  public getThreadServiceMessageId(peerId: PeerId, threadId: number) {\n    return this.threadsServiceMessagesIdsStorage[peerId + '_' + threadId];\n  }\n\n  public getDiscussionMessage(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApiSingle('messages.getDiscussionMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((result) => {\n      this.appChatsManager.saveApiChats(result.chats);\n      this.appUsersManager.saveApiUsers(result.users);\n      this.saveMessages(result.messages);\n\n      const message = this.getMessageWithReplies(result.messages[0] as Message.message);\n      const threadKey = message.peerId + '_' + message.mid;\n\n      this.generateThreadServiceStartMessage(message);\n\n      const historyStorage = this.getHistoryStorage(message.peerId, message.mid);\n      result.max_id = historyStorage.maxId = generateMessageId(result.max_id) || 0;\n      result.read_inbox_max_id = historyStorage.readMaxId = generateMessageId(result.read_inbox_max_id ?? message.mid);\n      result.read_outbox_max_id = historyStorage.readOutboxMaxId = generateMessageId(result.read_outbox_max_id) || 0;\n\n      this.threadsToReplies[threadKey] = peerId + '_' + mid;\n\n      return message;\n    });\n  }\n\n  private handleNewMessage(message: MyMessage) {\n    this.rootScope.dispatchEvent('history_multiappend', message);\n  }\n\n  private handleNewDialogs = () => {\n    let newMaxSeenId = 0;\n    const map = this.newDialogsToHandle;\n    for(const [peerId, dialog] of map) {\n      let good = false;\n      if(!dialog) {\n        this.reloadConversation(peerId.toPeerId());\n      } else if(this.dialogsStorage.getDialogOnly(peerId)) { // * dialog can be already dropped\n        this.dialogsStorage.pushDialog(dialog);\n        if(!this.appPeersManager.isChannel(peerId)) {\n          newMaxSeenId = Math.max(newMaxSeenId, dialog.top_message || 0);\n        }\n\n        good = true;\n      }\n\n      if(!good) {\n        map.delete(peerId);\n      }\n    }\n\n    // this.log('after order:', this.dialogsStorage[0].map((d) => d.peerId));\n\n    if(newMaxSeenId !== 0) {\n      this.incrementMaxSeenId(newMaxSeenId);\n    }\n\n    this.rootScope.dispatchEvent('dialogs_multiupdate', map);\n    this.newDialogsToHandle.clear();\n  };\n\n  public scheduleHandleNewDialogs(peerId?: PeerId, dialog?: Dialog) {\n    if(peerId !== undefined) {\n      this.newDialogsToHandle.set(peerId, dialog);\n    }\n\n    if(this.newDialogsHandlePromise) return this.newDialogsHandlePromise;\n    return this.newDialogsHandlePromise = pause(0).then(() => {\n      this.newDialogsHandlePromise = undefined;\n      this.handleNewDialogs();\n    });\n  }\n\n  public async deleteMessages(peerId: PeerId, mids: number[], revoke?: boolean) {\n    let promise: Promise<any>;\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    const localMessageIds = mids.map((mid) => getServerMessageId(mid));\n\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n      const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n      if(!channel.pFlags.creator && !channel.admin_rights?.pFlags?.delete_messages) {\n        mids = mids.filter((mid) => {\n          const message = this.getMessageByPeer(peerId, mid);\n          return !!message.pFlags.out;\n        });\n\n        if(!mids.length) {\n          return;\n        }\n      }\n\n      promise = this.apiManager.invokeApi('channels.deleteMessages', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteChannelMessages',\n          channel_id: channelId,\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.deleteMessages', {\n        revoke,\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteMessages',\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    }\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.deleteMessages(peerId, overflowMids, revoke));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public readHistory(peerId: PeerId, maxId = 0, threadId?: number, force = false) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    // console.trace('start read')\n    this.log('readHistory:', peerId, maxId, threadId);\n    if(!this.getReadMaxIdIfUnread(peerId, threadId)) {\n      if(!force && !threadId) {\n        const dialog = this.getDialogOnly(peerId);\n        if(dialog && this.isDialogUnread(dialog)) {\n          force = true;\n        }\n      }\n\n      if(!force) {\n        this.log('readHistory: isn\\'t unread');\n        return Promise.resolve();\n      }\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(historyStorage.triedToReadMaxId >= maxId) {\n      return Promise.resolve();\n    }\n\n    let apiPromise: Promise<any>;\n    if(threadId) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readDiscussion', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          msg_id: getServerMessageId(threadId),\n          read_max_id: getServerMessageId(maxId)\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelDiscussionInbox',\n        channel_id: peerId.toChatId(),\n        top_msg_id: threadId,\n        read_max_id: maxId\n      });\n    } else if(this.appPeersManager.isChannel(peerId)) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('channels.readHistory', {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          max_id: getServerMessageId(maxId)\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelInbox',\n        max_id: maxId,\n        channel_id: peerId.toChatId(),\n        still_unread_count: undefined,\n        pts: undefined\n      });\n    } else {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readHistory', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          max_id: getServerMessageId(maxId)\n        }).then((affectedMessages) => {\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updateShort',\n            update: {\n              _: 'updatePts',\n              pts: affectedMessages.pts,\n              pts_count: affectedMessages.pts_count\n            }\n          });\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadHistoryInbox',\n        max_id: maxId,\n        peer: this.appPeersManager.getOutputPeer(peerId),\n        still_unread_count: undefined,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n\n    this.rootScope.dispatchEvent('notification_reset', this.appPeersManager.getPeerString(peerId));\n\n    if(historyStorage.readPromise) {\n      return historyStorage.readPromise;\n    }\n\n    historyStorage.triedToReadMaxId = maxId;\n\n    apiPromise.finally(() => {\n      delete historyStorage.readPromise;\n\n      const {readMaxId} = historyStorage;\n      this.log('readHistory: promise finally', maxId, readMaxId);\n\n      if(readMaxId > maxId) {\n        this.readHistory(peerId, readMaxId, threadId, true);\n      }\n    });\n\n    return historyStorage.readPromise = apiPromise;\n  }\n\n  public readAllHistory(peerId: PeerId, threadId?: number, force = false) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(historyStorage.maxId) {\n      this.readHistory(peerId, historyStorage.maxId, threadId, force); // lol\n    }\n  }\n\n  public fixDialogUnreadMentionsIfNoMessage(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog?.unread_mentions_count) {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public modifyCachedMentions(peerId: PeerId, mid: number, add: boolean) {\n    const slicedArray = this.unreadMentions[peerId];\n    if(!slicedArray) return;\n\n    if(add) {\n      if(slicedArray.first.isEnd(SliceEnd.Top)) {\n        slicedArray.insertSlice([mid]);\n      }\n    } else {\n      slicedArray.delete(mid);\n    }\n  }\n\n  private fixUnreadMentionsCountIfNeeded(peerId: PeerId, slicedArray: SlicedArray<number>) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!slicedArray.length && dialog?.unread_mentions_count) {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public goToNextMention(peerId: PeerId) {\n    /* this.getUnreadMentions(peerId, 1, 2, 0).then((messages) => {\n      console.log(messages);\n    }); */\n\n    const promise = this.goToNextMentionPromises[peerId];\n    if(promise) {\n      return promise;\n    }\n\n    const slicedArray = this.unreadMentions[peerId] ?? (this.unreadMentions[peerId] = new SlicedArray());\n    const length = slicedArray.length;\n    const isTopEnd = slicedArray.first.isEnd(SliceEnd.Top);\n    if(!length && isTopEnd) {\n      this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray);\n      return Promise.resolve();\n    }\n\n    let loadNextPromise = Promise.resolve();\n    if(!isTopEnd && length < 25) {\n      loadNextPromise = this.loadNextMentions(peerId);\n    }\n\n    return this.goToNextMentionPromises[peerId] = loadNextPromise.then(() => {\n      const last = slicedArray.last;\n      const mid = last && last[last.length - 1];\n      if(mid) {\n        slicedArray.delete(mid);\n        return mid;\n      } else {\n        this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray);\n      }\n    }).finally(() => {\n      delete this.goToNextMentionPromises[peerId];\n    });\n  }\n\n  public loadNextMentions(peerId: PeerId) {\n    const slicedArray = this.unreadMentions[peerId];\n    const maxId = slicedArray.first[0] || 1;\n\n    const backLimit = 50;\n    const add_offset = -backLimit;\n    const limit = backLimit;\n    return this.getUnreadMentions(peerId, maxId, add_offset, limit).then((messages) => {\n      this.mergeHistoryResult(slicedArray, messages, maxId === 1 ? 0 : maxId, limit, add_offset);\n    });\n  }\n\n  public getUnreadMentions(peerId: PeerId, offsetId: number, add_offset: number, limit: number, maxId = 0, minId = 0) {\n    return this.apiManager.invokeApiSingle('messages.getUnreadMentions', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      offset_id: getServerMessageId(offsetId),\n      add_offset,\n      limit,\n      max_id: getServerMessageId(maxId),\n      min_id: getServerMessageId(minId)\n    }).then((messagesMessages) => {\n      assumeType<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>(messagesMessages);\n      this.appUsersManager.saveApiUsers(messagesMessages.users);\n      this.appChatsManager.saveApiChats(messagesMessages.chats);\n      this.saveMessages(messagesMessages.messages);\n\n      return messagesMessages;\n    });\n  }\n\n  public readMessages(peerId: PeerId, msgIds: number[]) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    if(!msgIds.length) {\n      return Promise.resolve();\n    }\n\n    msgIds = msgIds.map((mid) => getServerMessageId(mid));\n    let promise: Promise<any>, update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents;\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n\n      update = {\n        _: 'updateChannelReadMessagesContents',\n        channel_id: channelId,\n        messages: msgIds\n      };\n\n      promise = this.apiManager.invokeApi('channels.readMessageContents', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: msgIds\n      });\n    } else {\n      update = {\n        _: 'updateReadMessagesContents',\n        messages: msgIds,\n        pts: undefined,\n        pts_count: undefined\n      };\n\n      promise = this.apiManager.invokeApi('messages.readMessageContents', {\n        id: msgIds\n      }).then((affectedMessages) => {\n        (update as Update.updateReadMessagesContents).pts = affectedMessages.pts;\n        (update as Update.updateReadMessagesContents).pts_count = affectedMessages.pts_count;\n        this.apiUpdatesManager.processLocalUpdate(update);\n      });\n    }\n\n    this.apiUpdatesManager.processLocalUpdate(update);\n\n    return promise;\n  }\n\n  public getHistoryStorage(peerId: PeerId, threadId?: number) {\n    if(threadId) {\n      // threadId = this.getLocalMessageId(threadId);\n      if(!this.threadsStorage[peerId]) this.threadsStorage[peerId] = {};\n      return this.threadsStorage[peerId][threadId] ?? (this.threadsStorage[peerId][threadId] = {count: null, history: new SlicedArray()});\n    }\n\n    return this.historiesStorage[peerId] ?? (this.historiesStorage[peerId] = {count: null, history: new SlicedArray()});\n  }\n\n  public getHistoryStorageTransferable(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const {\n      count,\n      history,\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    } = historyStorage;\n\n    return {\n      count,\n      history: undefined as HistoryStorage,\n      historySerialized: history.toJSON(),\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    };\n  }\n\n  private getNotifyPeerSettings(peerId: PeerId) {\n    return Promise.all([\n      this.appNotificationsManager.getNotifyPeerTypeSettings(),\n      this.appNotificationsManager.getNotifySettings(this.appPeersManager.getInputNotifyPeerById(peerId, true))\n    ]).then(([_, peerTypeNotifySettings]) => {\n      return {\n        muted: this.appNotificationsManager.isPeerLocalMuted(peerId, true),\n        peerTypeNotifySettings\n      };\n    });\n  }\n\n  private handleNotifications = () => {\n    ctx.clearTimeout(this.notificationsHandlePromise);\n    this.notificationsHandlePromise = 0;\n\n    // var timeout = $rootScope.idle.isIDLE && StatusManager.isOtherDeviceActive() ? 30000 : 1000;\n    // const timeout = 1000;\n\n    for(const _peerId in this.notificationsToHandle) {\n      const peerId = _peerId.toPeerId();\n      // if(rootScope.peerId === peerId && !rootScope.idle.isIDLE) {\n      // continue;\n      // }\n\n      const notifyPeerToHandle = this.notificationsToHandle[peerId];\n      this.getNotifyPeerSettings(peerId).then(({muted, peerTypeNotifySettings}) => {\n        const topMessage = notifyPeerToHandle.topMessage;\n        if((muted && !topMessage.pFlags.mentioned) || !topMessage.pFlags.unread) {\n          return;\n        }\n\n        // setTimeout(() => {\n        if(topMessage.pFlags.unread) {\n          this.notifyAboutMessage(topMessage, {\n            fwdCount: notifyPeerToHandle.fwdCount,\n            peerTypeNotifySettings\n          });\n        }\n        // }, timeout);\n      });\n    }\n\n    this.notificationsToHandle = {};\n  };\n\n  private onUpdateMessageId = (update: Update.updateMessageID) => {\n    const randomId = update.random_id;\n    const pendingData = this.pendingByRandomId[randomId];\n    // this.log('AMM updateMessageID:', update, pendingData);\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n      const mid = generateMessageId(update.id);\n      const message = this.getMessageFromStorage(storage, mid);\n      if(message) {\n        [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n        .filter(Boolean)\n        .forEach((storage) => {\n          storage.history.delete(tempId);\n        });\n\n        this.finalizePendingMessageCallbacks(storage, tempId, message);\n      } else {\n        this.pendingByMessageId[mid] = randomId;\n      }\n    }\n  };\n\n  private onUpdateNewMessage = (update: Update.updateNewDiscussionMessage | Update.updateNewMessage | Update.updateNewChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const dialog = this.getDialogOnly(peerId);\n\n    // * local update\n    const isLocalThreadUpdate = update._ === 'updateNewDiscussionMessage';\n\n    // * temporary save the message for info (peerId, reply mids...)\n    this.saveMessages([message], {storage: this.createMessageStorage(peerId, 'history')});\n\n    const threadKey = this.getThreadKey(message);\n    const threadId = threadKey ? +threadKey.split('_')[1] : undefined;\n    if(threadId && !isLocalThreadUpdate && this.threadsStorage[peerId] && this.threadsStorage[peerId][threadId]) {\n      const update = {\n        _: 'updateNewDiscussionMessage',\n        message\n      } as Update.updateNewDiscussionMessage;\n\n      this.onUpdateNewMessage(update);\n    }\n\n    if(message._ === 'messageService' && message.action._ === 'messageActionPaymentSent' && message.reply_to) {\n      this.rootScope.dispatchEvent('payment_sent', {\n        peerId: message.reply_to.reply_to_peer_id ? this.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) : message.peerId,\n        mid: message.reply_to_mid,\n        receiptMessage: message\n      });\n    }\n\n    if(!dialog && !isLocalThreadUpdate) {\n      let good = true;\n      if(peerId.isAnyChat()) {\n        good = this.appChatsManager.isInChat(peerId.toChatId());\n      }\n\n      if(good) {\n        const set = this.newUpdatesAfterReloadToHandle[peerId] ?? (this.newUpdatesAfterReloadToHandle[peerId] = new Set());\n        if(set.has(update)) {\n          this.log.error('here we go again', peerId);\n          return;\n        }\n\n        (update as any).ignoreExisting = true;\n        set.add(update);\n        this.scheduleHandleNewDialogs(peerId);\n      }\n\n      return;\n    }\n\n    /* if(update._ === 'updateNewChannelMessage') {\n      const chat = appChatsManager.getChat(peerId.toChatId());\n      if(chat.pFlags && (chat.pFlags.left || chat.pFlags.kicked)) {\n        return;\n      }\n    } */\n\n    this.saveMessages([message], {storage});\n    // this.log.warn(dT(), 'message unread', message.mid, message.pFlags.unread)\n\n    /* if((message as Message.message).grouped_id) {\n      this.log('updateNewMessage', message);\n    } */\n\n    const pendingMessage = this.checkPendingMessage(message);\n    const historyStorage = this.getHistoryStorage(peerId, isLocalThreadUpdate ? threadId : undefined);\n\n    if(!isLocalThreadUpdate) {\n      this.updateMessageRepliesIfNeeded(message);\n    }\n\n    // * so message can exist if reloadConversation came back earlier with mid\n    const ignoreExisting: boolean = (update as any).ignoreExisting;\n    const isExisting = !!historyStorage.history.findSlice(message.mid);\n    if(isExisting) {\n      if(!ignoreExisting) {\n        return false;\n      }\n    } else {\n      // * catch situation with disconnect. if message's id is lower than we already have (in bottom end slice), will sort it\n      const firstSlice = historyStorage.history.first;\n      if(firstSlice.isEnd(SliceEnd.Bottom)) {\n        let i = 0;\n        for(const length = firstSlice.length; i < length; ++i) {\n          if(message.mid > firstSlice[i]) {\n            break;\n          }\n        }\n\n        firstSlice.splice(i, 0, message.mid);\n      } else {\n        historyStorage.history.unshift(message.mid);\n      }\n\n      if(historyStorage.count !== null) {\n        historyStorage.count++;\n      }\n    }\n\n    if(this.mergeReplyKeyboard(historyStorage, message)) {\n      this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n    }\n\n    const fromId = message.fromId;\n    if(fromId.isUser() && !message.pFlags.out && message.from_id) {\n      this.appUsersManager.forceUserOnline(fromId, message.date);\n\n      const action: SendMessageAction = {\n        _: 'sendMessageCancelAction'\n      };\n\n      let update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping;\n      if(peerId.isUser()) {\n        update = {\n          _: 'updateUserTyping',\n          action,\n          user_id: fromId\n        };\n      } else if(this.appPeersManager.isChannel(peerId)) {\n        update = {\n          _: 'updateChannelUserTyping',\n          action,\n          channel_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId),\n          top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n        };\n      } else {\n        update = {\n          _: 'updateChatUserTyping',\n          action,\n          chat_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId)\n        };\n      }\n\n      this.apiUpdatesManager.processLocalUpdate(update);\n    }\n\n    // commented to render the message if it's been sent faster than history_append came to main thread\n    // if(!pendingMessage) {\n    this.handleNewMessage(message);\n    // }\n\n    if(isLocalThreadUpdate) {\n      return;\n    }\n\n    const inboxUnread = !message.pFlags.out && message.pFlags.unread;\n    if(dialog) {\n      if(inboxUnread && message.mid > dialog.top_message) {\n        const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n        ++dialog.unread_count;\n        if(message.pFlags.mentioned) {\n          ++dialog.unread_mentions_count;\n          this.modifyCachedMentions(peerId, message.mid, true);\n        }\n\n        releaseUnreadCount();\n      }\n\n      if(message.mid >= dialog.top_message) {\n        this.setDialogTopMessage(message, dialog);\n      }\n    }\n\n    if(inboxUnread/*  && ($rootScope.selectedPeerID != peerID || $rootScope.idle.isIDLE) */) {\n      const notifyPeer = peerId;\n      let notifyPeerToHandle = this.notificationsToHandle[notifyPeer];\n      if(notifyPeerToHandle === undefined) {\n        notifyPeerToHandle = this.notificationsToHandle[notifyPeer] = {\n          fwdCount: 0,\n          fromId: NULL_PEER_ID\n        };\n      }\n\n      if(notifyPeerToHandle.fromId !== fromId) {\n        notifyPeerToHandle.fromId = fromId;\n        notifyPeerToHandle.fwdCount = 0;\n      }\n\n      if((message as Message.message).fwd_from) {\n        ++notifyPeerToHandle.fwdCount;\n      }\n\n      notifyPeerToHandle.topMessage = message;\n\n      if(!this.notificationsHandlePromise) {\n        this.notificationsHandlePromise = ctx.setTimeout(this.handleNotifications, 0);\n      }\n    }\n  };\n\n  private onUpdateMessageReactions = (update: Update.updateMessageReactions) => {\n    const {peer, msg_id, reactions} = update;\n    const mid = generateMessageId(msg_id);\n    const peerId = this.appPeersManager.getPeerId(peer);\n    const message: MyMessage = this.getMessageByPeer(peerId, mid);\n\n    if(message?._ !== 'message') {\n      return;\n    }\n\n    const recentReactions = reactions?.recent_reactions;\n    if(recentReactions?.length && message.pFlags.out) {\n      const recentReaction = recentReactions[recentReactions.length - 1];\n      const previousReactions = message.reactions;\n      const previousRecentReactions = previousReactions?.recent_reactions;\n      if(\n        this.appPeersManager.getPeerId(recentReaction.peer_id) !== this.appPeersManager.peerId && (\n          !previousRecentReactions ||\n          previousRecentReactions.length <= recentReactions.length\n        ) && (\n          !previousRecentReactions ||\n          !deepEqual(recentReaction, previousRecentReactions[previousRecentReactions.length - 1])\n        )\n      ) {\n        this.getNotifyPeerSettings(peerId).then(({muted, peerTypeNotifySettings}) => {\n          if(/* muted ||  */!peerTypeNotifySettings.show_previews) return;\n          this.notifyAboutMessage(message, {\n            peerReaction: recentReaction,\n            peerTypeNotifySettings\n          });\n        });\n      }\n    }\n\n    const key = message.peerId + '_' + message.mid;\n    this.pushBatchUpdate('messages_reactions', this.batchUpdateReactions, key, () => copy(message.reactions));\n\n    message.reactions = reactions;\n\n    if(!update.local) {\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateDialogUnreadMark = (update: Update.updateDialogUnreadMark) => {\n    // this.log('updateDialogUnreadMark', update);\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    if(!dialog) {\n      this.scheduleHandleNewDialogs(peerId);\n    } else {\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n      if(!update.pFlags.unread) {\n        delete dialog.pFlags.unread_mark;\n      } else {\n        dialog.pFlags.unread_mark = true;\n      }\n\n      releaseUnreadCount();\n      this.dialogsStorage.setDialogToState(dialog);\n      this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, dialog]]));\n    }\n  };\n\n  private onUpdateEditMessage = (update: Update.updateEditMessage | Update.updateEditChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const mid = generateMessageId(message.id);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    if(!storage.has(mid)) {\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      return;\n    }\n\n    // console.trace(dT(), 'edit message', message)\n\n    const oldMessage: Message = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage});\n    const newMessage: Message = this.getMessageFromStorage(storage, mid);\n\n    this.handleEditedMessage(oldMessage, newMessage, storage);\n\n    const dialog = this.getDialogOnly(peerId);\n\n    // if sender erased mention\n    /* if(dialog.unread_mentions_count && (oldMessage as Message.message)?.pFlags?.mentioned && !message.pFlags.mentioned) {\n      --dialog.unread_mentions_count;\n      this.modifyCachedMentions(peerId, mid, false);\n    } */\n\n    const isTopMessage = dialog && dialog.top_message === mid;\n    if((message as Message.messageService).clear_history) {\n      if(isTopMessage) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog});\n      }\n    } else {\n      let dispatchEditEvent = true;\n      // no sense in dispatching message_edit since only reactions have changed\n      if(oldMessage?._ === 'message' && !deepEqual(oldMessage.reactions, (newMessage as Message.message).reactions)) {\n        const newReactions = (newMessage as Message.message).reactions;\n        (newMessage as Message.message).reactions = oldMessage.reactions;\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateMessageReactions',\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          msg_id: message.id,\n          reactions: newReactions\n        });\n\n        dispatchEditEvent = false;\n      }\n\n      dispatchEditEvent && this.rootScope.dispatchEvent('message_edit', {\n        storageKey: storage.key,\n        peerId,\n        mid,\n        message\n      });\n\n      if(isTopMessage) {\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n\n      if((isTopMessage || (message as Message.message).grouped_id) && dialog) {\n        this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, dialog]]));\n      }\n    }\n  };\n\n  private onUpdateReadHistory = (update: Update.updateReadChannelDiscussionInbox | Update.updateReadChannelDiscussionOutbox\n    | Update.updateReadHistoryInbox | Update.updateReadHistoryOutbox\n    | Update.updateReadChannelInbox | Update.updateReadChannelOutbox) => {\n    const channelId = (update as Update.updateReadChannelInbox).channel_id;\n    const maxId = generateMessageId((update as Update.updateReadChannelInbox).max_id || (update as Update.updateReadChannelDiscussionInbox).read_max_id);\n    const threadId = generateMessageId((update as Update.updateReadChannelDiscussionInbox).top_msg_id);\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updateReadHistoryInbox).peer);\n\n    const isOut = update._ === 'updateReadHistoryOutbox' || update._ === 'updateReadChannelOutbox' || update._ === 'updateReadChannelDiscussionOutbox' ? true : undefined;\n\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const history = getObjectKeysAndSort(storage, 'desc');\n    const foundDialog = this.getDialogOnly(peerId);\n    const stillUnreadCount = (update as Update.updateReadChannelInbox).still_unread_count;\n    let newUnreadCount = 0;\n    let newUnreadMentionsCount = 0;\n    let foundAffected = false;\n\n    // this.log.warn(dT(), 'read', peerId, isOut ? 'out' : 'in', maxId)\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(peerId.isUser() && isOut) {\n      this.appUsersManager.forceUserOnline(peerId);\n    }\n\n    if(threadId) {\n      const repliesKey = this.threadsToReplies[peerId + '_' + threadId];\n      if(repliesKey) {\n        const [peerId, mid] = repliesKey.split('_');\n        this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n      }\n    }\n\n    const releaseUnreadCount = !threadId && foundDialog && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n\n    for(let i = 0, length = history.length; i < length; i++) {\n      const mid = history[i];\n      if(mid > maxId) {\n        continue;\n      }\n\n      const message: MyMessage = storage.get(mid);\n\n      if(message.pFlags.out !== isOut) {\n        continue;\n      }\n\n      if(!message.pFlags.unread) {\n        break;\n      }\n\n      if(threadId) {\n        const replyTo = message.reply_to;\n        if(!replyTo || (replyTo.reply_to_top_id || replyTo.reply_to_msg_id) !== threadId) {\n          continue;\n        }\n      }\n\n      // this.log.warn('read', messageId, message.pFlags.unread, message)\n      if(message.pFlags.unread) {\n        delete message.pFlags.unread;\n        if(!foundAffected) {\n          foundAffected = true;\n        }\n\n        if(!message.pFlags.out && !threadId && foundDialog) {\n          if(stillUnreadCount === undefined) {\n            newUnreadCount = --foundDialog.unread_count;\n          }\n\n          if(message.pFlags.mentioned) {\n            newUnreadMentionsCount = --foundDialog.unread_mentions_count;\n            this.modifyCachedMentions(peerId, message.mid, false);\n          }\n        }\n\n        this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n      }\n    }\n\n    if(isOut) historyStorage.readOutboxMaxId = maxId;\n    else historyStorage.readMaxId = maxId;\n\n    if(!threadId && foundDialog) {\n      if(isOut) foundDialog.read_outbox_max_id = maxId;\n      else foundDialog.read_inbox_max_id = maxId;\n\n      if(!isOut) {\n        let setCount: number;\n        if(stillUnreadCount !== undefined) {\n          setCount = stillUnreadCount;\n        } else if(newUnreadCount < 0 || !this.getReadMaxIdIfUnread(peerId)) {\n          setCount = 0;\n        } else if(newUnreadCount && foundDialog.top_message > maxId) {\n          setCount = newUnreadCount;\n        }\n\n        if(setCount !== undefined) {\n          foundDialog.unread_count = setCount;\n        }\n\n        if(newUnreadMentionsCount < 0 || !foundDialog.unread_count) {\n          foundDialog.unread_mentions_count = 0;\n        }\n      }\n\n      if(releaseUnreadCount) {\n        releaseUnreadCount();\n      }\n\n      this.dialogsStorage.processDialogForFilters(foundDialog);\n\n      this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog: foundDialog});\n      this.dialogsStorage.setDialogToState(foundDialog);\n    }\n\n    if(foundAffected) {\n      this.rootScope.dispatchEvent('messages_read');\n    }\n\n    if(!threadId && channelId) {\n      const threadKeyPart = peerId + '_';\n      for(const threadKey in this.threadsToReplies) {\n        if(threadKey.indexOf(threadKeyPart) === 0) {\n          const [peerId, mid] = this.threadsToReplies[threadKey].split('_');\n          this.rootScope.dispatchEvent('replies_updated', this.getMessageByPeer(peerId.toPeerId(), +mid) as Message.message);\n        }\n      }\n    }\n  };\n\n  private onUpdateReadMessagesContents = (update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents) => {\n    const channelId = (update as Update.updateChannelReadMessagesContents).channel_id;\n    const mids = (update as Update.updateReadMessagesContents).messages.map((id) => generateMessageId(id));\n    const peerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(mids);\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const message: MyMessage = this.getMessageByPeer(peerId, mid);\n      if(message) {\n        if(message.pFlags.media_unread) {\n          delete message.pFlags.media_unread;\n          this.setDialogToStateIfMessageIsTop(message);\n\n          if(!message.pFlags.out && message.pFlags.mentioned) {\n            this.modifyCachedMentions(peerId, mid, false);\n          }\n        }\n      } else {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('messages_media_read', {peerId, mids});\n  };\n\n  private onUpdateChannelAvailableMessages = (update: Update.updateChannelAvailableMessages) => {\n    const peerId = update.channel_id.toPeerId(true);\n    const history = this.getHistoryStorage(peerId).history.slice;\n    const availableMinId = generateMessageId(update.available_min_id);\n    const messages = history.filter((mid) => mid <= availableMinId);\n\n    (update as any as Update.updateDeleteChannelMessages).messages = messages;\n    this.onUpdateDeleteMessages(update as any as Update.updateDeleteChannelMessages);\n  };\n\n  private onUpdateDeleteMessages = (update: Update.updateDeleteMessages | Update.updateDeleteChannelMessages) => {\n    const channelId = (update as Update.updateDeleteChannelMessages).channel_id;\n    // const messages = (update as any as Update.updateDeleteChannelMessages).messages;\n    const messages = (update as any as Update.updateDeleteChannelMessages).messages.map((id) => generateMessageId(id));\n    const peerId: PeerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(messages);\n\n    if(!peerId) {\n      return;\n    }\n\n    this.apiManager.clearCache('messages.getSearchCounters', (params) => {\n      return this.appPeersManager.getPeerId(params.peer) === peerId;\n    });\n\n    const threadKeys: Set<string> = new Set();\n    for(const mid of messages) {\n      const message = this.getMessageByPeer(peerId, mid);\n      const threadKey = this.getThreadKey(message);\n      if(threadKey && this.threadsStorage[peerId] && this.threadsStorage[peerId][+threadKey.split('_')[1]]) {\n        threadKeys.add(threadKey);\n      }\n    }\n\n    const historyUpdated = this.handleDeletedMessages(peerId, this.getHistoryMessagesStorage(peerId), messages);\n\n    const threadsStorages = Array.from(threadKeys).map((threadKey) => {\n      const [peerId, mid] = threadKey.split('_');\n      return this.getHistoryStorage(peerId.toPeerId(), +mid);\n    });\n\n    const historyStorage = this.getHistoryStorage(peerId);\n    [historyStorage].concat(threadsStorages).forEach((historyStorage) => {\n      for(const mid of historyUpdated.msgs) {\n        historyStorage.history.delete(mid);\n      }\n\n      if(historyUpdated.count && historyStorage.count) {\n        historyStorage.count = Math.max(0, historyStorage.count - historyUpdated.count);\n      }\n    });\n\n    this.rootScope.dispatchEvent('history_delete', {peerId, msgs: historyUpdated.msgs});\n\n    const foundDialog = this.getDialogOnly(peerId);\n    if(foundDialog) {\n      const affected = historyUpdated.unreadMentions || historyUpdated.unread;\n      const releaseUnreadCount = affected && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n\n      if(historyUpdated.unread) {\n        foundDialog.unread_count = Math.max(0, foundDialog.unread_count - historyUpdated.unread);\n      }\n\n      if(historyUpdated.unreadMentions) {\n        foundDialog.unread_mentions_count = !foundDialog.unread_count ? 0 : Math.max(0, foundDialog.unread_mentions_count - historyUpdated.unreadMentions);\n      }\n\n      if(affected) {\n        releaseUnreadCount();\n        this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog: foundDialog});\n      }\n\n      if(historyUpdated.msgs.has(foundDialog.top_message)) {\n        const slice = historyStorage.history.first;\n        if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n          const mid = slice[0];\n          const message = this.getMessageByPeer(peerId, mid);\n          this.setDialogTopMessage(message, foundDialog);\n        } else {\n          this.reloadConversation(peerId);\n        }\n      }\n    }\n  };\n\n  private onUpdateChannel = (update: Update.updateChannel) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n\n    const needDialog = this.appChatsManager.isInChat(channelId);\n\n    const canViewHistory = !!channel.username || !channel.pFlags.left;\n    const hasHistory = this.historiesStorage[peerId] !== undefined;\n\n    if(canViewHistory !== hasHistory) {\n      delete this.historiesStorage[peerId];\n      this.rootScope.dispatchEvent('history_forbidden', peerId);\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(!!dialog !== needDialog) {\n      if(needDialog) {\n        this.reloadConversation(peerId);\n      } else {\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('channel_update', channelId);\n  };\n\n  private onUpdateChannelReload = (update: Update.updateChannelReload) => {\n    const peerId = update.channel_id.toPeerId(true);\n\n    this.flushStoragesByPeerId(peerId);\n    this.reloadConversation(peerId).then(() => {\n      this.rootScope.dispatchEvent('history_reload', peerId);\n    });\n  };\n\n  private onUpdateChannelMessageViews = (update: Update.updateChannelMessageViews) => {\n    const views = update.views;\n    const peerId = update.channel_id.toPeerId(true);\n    const mid = generateMessageId(update.id);\n    const message = this.getMessageByPeer(peerId, mid) as Message.message;\n    if(message?.views !== undefined && message.views < views) {\n      message.views = views;\n      this.pushBatchUpdate('messages_views', this.batchUpdateViews, message.peerId + '_' + message.mid);\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateServiceNotification = (update: Update.updateServiceNotification) => {\n    // this.log('updateServiceNotification', update);\n    if(update.pFlags?.popup) {\n      this.rootScope.dispatchEvent('service_notification', update);\n      return;\n    }\n\n    const fromId = SERVICE_PEER_ID;\n    const peerId = fromId;\n    const messageId = this.generateTempMessageId(peerId);\n    const message: Message.message = {\n      _: 'message',\n      id: messageId,\n      from_id: this.appPeersManager.getOutputPeer(fromId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      pFlags: {unread: true},\n      date: (update.inbox_date || tsNow(true)) + this.timeManager.getServerTimeOffset(),\n      message: update.message,\n      media: update.media,\n      entities: update.entities\n    };\n    if(!this.appUsersManager.hasUser(fromId)) {\n      this.appUsersManager.saveApiUsers([{\n        _: 'user',\n        id: fromId,\n        pFlags: {verified: true},\n        access_hash: '0',\n        first_name: 'Telegram',\n        phone: '42777'\n      }]);\n    }\n    this.saveMessages([message], {isOutgoing: true});\n\n    if(update.inbox_date) {\n      this.pendingTopMsgs[peerId] = messageId;\n      this.onUpdateNewMessage({\n        _: 'updateNewMessage',\n        message,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n  };\n\n  private onUpdatePinnedMessages = (update: Update.updatePinnedMessages | Update.updatePinnedChannelMessages) => {\n    const channelId = update._ === 'updatePinnedChannelMessages' ? update.channel_id : undefined;\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updatePinnedMessages).peer);\n\n    /* const storage = this.getSearchStorage(peerId, 'inputMessagesFilterPinned');\n    if(storage.count !== storage.history.length) {\n      if(storage.count !== undefined) {\n        delete this.searchesStorage[peerId]['inputMessagesFilterPinned'];\n      }\n\n      rootScope.broadcast('peer_pinned_messages', peerId);\n      break;\n    } */\n\n    const messages = update.messages.map((id) => generateMessageId(id));\n\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const missingMessages = messages.filter((mid) => !storage.has(mid));\n    const getMissingPromise = missingMessages.length ? Promise.all(missingMessages.map((mid) => this.reloadMessages(peerId, mid))) : Promise.resolve();\n    getMissingPromise.finally(() => {\n      const werePinned = update.pFlags?.pinned;\n      if(werePinned) {\n        for(const mid of messages) {\n          // storage.history.push(mid);\n          const message = storage.get(mid) as Message.message;\n          message.pFlags.pinned = true;\n        }\n\n        /* if(this.pinnedMessages[peerId]?.maxId) {\n          const maxMid = Math.max(...messages);\n          this.pinnedMessages\n        } */\n\n        // storage.history.sort((a, b) => b - a);\n      } else {\n        for(const mid of messages) {\n          // storage.history.findAndSplice((_mid) => _mid === mid);\n          const message = storage.get(mid) as Message.message;\n          delete message.pFlags.pinned;\n        }\n      }\n\n      /* const info = this.pinnedMessages[peerId];\n      if(info) {\n        info.count += messages.length * (werePinned ? 1 : -1);\n      } */\n\n      delete this.pinnedMessages[peerId];\n      this.appStateManager.getState().then((state) => {\n        delete state.hiddenPinnedMessages[peerId];\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, mids: messages, pinned: werePinned});\n      });\n    });\n  };\n\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\n    const {peer, notify_settings} = update;\n    if(peer._ === 'notifyPeer') {\n      const peerId = this.appPeersManager.getPeerId((peer as NotifyPeer.notifyPeer).peer);\n\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        dialog.notify_settings = notify_settings;\n        this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n    }\n  };\n\n  private onUpdateNewScheduledMessage = (update: Update.updateNewScheduledMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(!storage) {\n      return;\n    }\n\n    const mid = generateMessageId(message.id);\n\n    const oldMessage = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage, isScheduled: true});\n    const newMessage = this.getMessageFromStorage(storage, mid);\n\n    if(oldMessage) {\n      this.handleEditedMessage(oldMessage, newMessage, storage);\n      this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId, mid: message.mid, message});\n    } else {\n      const pendingMessage = this.checkPendingMessage(message);\n      if(!pendingMessage) {\n        this.rootScope.dispatchEvent('scheduled_new', message as Message.message);\n      }\n    }\n  };\n\n  private onUpdateDeleteScheduledMessages = (update: Update.updateDeleteScheduledMessages) => {\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(storage) {\n      const mids = update.messages.map((id) => generateMessageId(id));\n      this.handleDeletedMessages(peerId, storage, mids);\n\n      this.rootScope.dispatchEvent('scheduled_delete', {peerId, mids});\n    }\n  };\n\n  private onUpdateMessageExtendedMedia = (update: Update.updateMessageExtendedMedia) => {\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n    const mid = generateMessageId(update.msg_id);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    if(!storage.has(mid)) {\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      return;\n    }\n\n    const message = this.getMessageFromStorage(storage, mid) as Message.message;\n    const messageMedia = message.media as MessageMedia.messageMediaInvoice;\n    if(messageMedia.extended_media?._ === 'messageExtendedMedia') {\n      return;\n    }\n\n    messageMedia.extended_media = update.extended_media;\n    this.onUpdateEditMessage({\n      _: 'updateEditMessage',\n      message,\n      pts: 0,\n      pts_count: 0\n    });\n  };\n\n  public setDialogToStateIfMessageIsTop(message: MyMessage) {\n    if(this.isMessageIsTopMessage(message)) {\n      this.dialogsStorage.setDialogToState(this.getDialogOnly(message.peerId));\n    }\n  }\n\n  public isMessageIsTopMessage(message: MyMessage) {\n    const dialog = this.getDialogOnly(message.peerId);\n    return dialog && dialog.top_message === message.mid;\n  }\n\n  private updateMessageRepliesIfNeeded(threadMessage: MyMessage) {\n    try { // * на всякий случай, скорее всего это не понадобится\n      const threadKey = this.getThreadKey(threadMessage);\n      if(threadKey) {\n        const repliesKey = this.threadsToReplies[threadKey];\n        if(repliesKey) {\n          const [peerId, mid] = repliesKey.split('_');\n\n          this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n        }\n      }\n    } catch(err) {\n      this.log.error('incrementMessageReplies err', err, threadMessage);\n    }\n  }\n\n  private getThreadKey(threadMessage: MyMessage) {\n    let threadKey = '';\n    if(threadMessage?.reply_to && threadMessage.peerId?.isAnyChat()) {\n      const threadId = threadMessage.reply_to.reply_to_top_id || threadMessage.reply_to.reply_to_msg_id;\n      threadKey = threadMessage.peerId + '_' + threadId;\n    }\n\n    return threadKey;\n  }\n\n  public updateMessage(peerId: PeerId, mid: number, broadcastEventName?: 'replies_updated'): Promise<Message.message> {\n    const promise: Promise<Message.message> = this.reloadMessages(peerId, mid, true).then(() => {\n      const message = this.getMessageByPeer(peerId, mid) as Message.message;\n      if(!message) {\n        return;\n      }\n\n      if(broadcastEventName) {\n        this.rootScope.dispatchEvent(broadcastEventName, message);\n      }\n\n      return message;\n    });\n\n    return promise;\n  }\n\n  private checkPendingMessage(message: MyMessage) {\n    const randomId = this.pendingByMessageId[message.mid];\n    let pendingMessage: ReturnType<AppMessagesManager['finalizePendingMessage']>;\n    if(randomId) {\n      const pendingData = this.pendingByRandomId[randomId];\n      if(pendingMessage = this.finalizePendingMessage(randomId, message)) {\n        this.rootScope.dispatchEvent('history_update', {storageKey: pendingData.storage.key, message, sequential: pendingData.sequential});\n      }\n\n      delete this.pendingByMessageId[message.mid];\n    }\n\n    return pendingMessage;\n  }\n\n  public mutePeer(peerId: PeerId, muteUntil: number) {\n    const settings: InputPeerNotifySettings = {\n      _: 'inputPeerNotifySettings'\n    };\n\n    settings.mute_until = muteUntil;\n\n    return this.appNotificationsManager.updateNotifySettings({\n      _: 'inputNotifyPeer',\n      peer: this.appPeersManager.getInputPeerById(peerId)\n    }, settings);\n  }\n\n  public togglePeerMute(peerId: PeerId, mute?: boolean) {\n    if(mute === undefined) {\n      mute = !this.appNotificationsManager.isPeerLocalMuted(peerId, false);\n    }\n\n    return this.mutePeer(peerId, mute ? MUTE_UNTIL : 0);\n  }\n\n  private findPeerIdByMids(mids: number[]) {\n    for(let length = mids.length, i = length - 1; i >= 0; --i) {\n      const mid = mids[i];\n      const message = this.getMessageById(mid);\n      if(message) {\n        return message.peerId;\n      }\n    }\n  }\n\n  public canSendToPeer(peerId: PeerId, threadId?: number, action: ChatRights = 'send_messages') {\n    if(this.appPeersManager.isRestricted(peerId)) {\n      return false;\n    }\n\n    if(peerId.isAnyChat()) {\n      // const isChannel = appPeersManager.isChannel(peerId);\n      const chat: Chat.chat = this.appChatsManager.getChat(peerId.toChatId());\n      const hasRights = /* isChannel &&  */this.appChatsManager.hasRights(peerId.toChatId(), action, undefined, !!threadId);\n      return /* !isChannel ||  */hasRights && (!chat.pFlags.left || !!threadId);\n    } else {\n      return this.appUsersManager.canSendToUser(peerId);\n    }\n  }\n\n  public finalizePendingMessage(randomId: Long, finalMessage: MyMessage) {\n    const pendingData = this.pendingByRandomId[randomId];\n    // this.log('pdata', randomID, pendingData)\n\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n\n      [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n      .filter(Boolean)\n      .forEach((storage) => {\n        storage.history.delete(tempId);\n      });\n\n      // this.log('pending', randomID, historyStorage.pending)\n\n      const tempMessage: MyMessage = this.getMessageFromStorage(storage, tempId);\n      if(tempMessage) {\n        delete finalMessage.pFlags.is_outgoing;\n        delete finalMessage.pending;\n        delete finalMessage.error;\n        delete finalMessage.random_id;\n        delete finalMessage.send;\n      }\n\n      this.rootScope.dispatchEvent('messages_pending');\n\n      delete this.pendingByRandomId[randomId];\n\n      this.finalizePendingMessageCallbacks(storage, tempId, finalMessage);\n\n      return tempMessage;\n    }\n  }\n\n  public finalizePendingMessageCallbacks(storage: MessagesStorage, tempId: number, message: MyMessage) {\n    const callbacks = this.tempFinalizeCallbacks[tempId];\n    // this.log.warn(callbacks, tempId);\n    if(callbacks !== undefined) {\n      for(const name in callbacks) {\n        const {deferred, callback} = callbacks[name];\n        // this.log(`finalizePendingMessageCallbacks: will invoke ${name} callback`);\n        callback(message).then(deferred.resolve, deferred.reject);\n      }\n\n      delete this.tempFinalizeCallbacks[tempId];\n    }\n\n    // set cached url to media\n    if((message as Message.message).media) {\n      assumeType<Message.message>(message);\n      const {photo: newPhoto, document: newDoc} = message.media as any;\n      if(newPhoto) {\n        const photo = this.appPhotosManager.getPhoto('' + tempId);\n        if(/* photo._ !== 'photoEmpty' */photo) {\n          const newPhotoSize = newPhoto.sizes[newPhoto.sizes.length - 1];\n          const cacheContext = this.thumbsStorage.getCacheContext(newPhoto, newPhotoSize.type);\n          const oldCacheContext = this.thumbsStorage.getCacheContext(photo, THUMB_TYPE_FULL);\n          Object.assign(cacheContext, oldCacheContext);\n\n          const photoSize = newPhoto.sizes[newPhoto.sizes.length - 1] as PhotoSize.photoSize;\n\n          const downloadOptions = getPhotoDownloadOptions(newPhoto, photoSize);\n          const fileName = getFileNameByLocation(downloadOptions.location);\n          // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n        }\n      } else if(newDoc) {\n        const oldDoc = this.appDocsManager.getDoc('' + tempId);\n        if(oldDoc) {\n          const oldCacheContext = this.thumbsStorage.getCacheContext(oldDoc);\n          if(\n            /* doc._ !== 'documentEmpty' &&  */\n            oldDoc.type &&\n            oldDoc.type !== 'sticker' &&\n            oldDoc.mime_type !== 'image/gif' &&\n            oldCacheContext.url\n          ) {\n            const cacheContext = this.thumbsStorage.getCacheContext(newDoc);\n            Object.assign(cacheContext, oldCacheContext);\n\n            const fileName = getDocumentInputFileName(newDoc);\n            // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n          }\n        }\n      } else if((message.media as MessageMedia.messageMediaPoll).poll) {\n        delete this.appPollsManager.polls[tempId];\n        delete this.appPollsManager.results[tempId];\n      }\n    }\n\n    const tempMessage = this.getMessageFromStorage(storage, tempId);\n    storage.delete(tempId);\n\n    if(!(tempMessage as Message.message).reply_markup && (message as Message.message).reply_markup) {\n      setTimeout(() => { // TODO: refactor it to normal buttons adding\n        if(!this.getMessageFromStorage(storage, message.mid)) {\n          return;\n        }\n\n        this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId: message.peerId, mid: message.mid, message});\n      }, 0);\n    }\n\n    this.handleReleasingMessage(tempMessage, storage);\n\n    this.rootScope.dispatchEvent('message_sent', {storageKey: storage.key, tempId, tempMessage, mid: message.mid, message});\n  }\n\n  public incrementMaxSeenId(maxId: number) {\n    if(!maxId || !(!this.maxSeenId || maxId > this.maxSeenId)) {\n      return false;\n    }\n\n    this.maxSeenId = maxId;\n    this.appStateManager.pushToState('maxSeenMsgId', maxId);\n\n    this.apiManager.invokeApi('messages.receivedMessages', {\n      max_id: getServerMessageId(maxId)\n    });\n  }\n\n  public async getMessageReactionsListAndReadParticipants(\n    message: Message.message,\n    limit?: number,\n    reaction?: Reaction,\n    offset?: string,\n    skipReadParticipants?: boolean,\n    skipReactionsList?: boolean\n  ) {\n    const emptyMessageReactionsList = {\n      reactions: [] as MessagePeerReaction[],\n      count: 0,\n      next_offset: undefined as string\n    };\n\n    const canViewMessageReadParticipants = await this.canViewMessageReadParticipants(message);\n    if(canViewMessageReadParticipants && limit === undefined) {\n      limit = 100;\n    } else if(limit === undefined) {\n      limit = 50;\n    }\n\n    return Promise.all([\n      canViewMessageReadParticipants && !reaction && !skipReadParticipants ? this.getMessageReadParticipants(message.peerId, message.mid).catch(() => [] as UserId[]) : [] as UserId[],\n\n      message.reactions?.recent_reactions?.length && !skipReactionsList ? this.appReactionsManager.getMessageReactionsList(message.peerId, message.mid, limit, reaction, offset).catch((err) => emptyMessageReactionsList) : emptyMessageReactionsList\n    ]).then(([userIds, messageReactionsList]) => {\n      const readParticipantsPeerIds = userIds.map((userId) => userId.toPeerId());\n\n      const filteredReadParticipants = readParticipantsPeerIds.slice();\n      forEachReverse(filteredReadParticipants, (peerId, idx, arr) => {\n        if(messageReactionsList.reactions.some((reaction) => this.appPeersManager.getPeerId(reaction.peer_id) === peerId)) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      let combined: {peerId: PeerId, reaction?: Reaction}[] = messageReactionsList.reactions.map((reaction) => ({peerId: this.appPeersManager.getPeerId(reaction.peer_id), reaction: reaction.reaction}));\n      combined = combined.concat(filteredReadParticipants.map((readPeerId) => ({peerId: readPeerId})));\n\n      return {\n        reactions: messageReactionsList.reactions,\n        reactionsCount: messageReactionsList.count,\n        readParticipants: readParticipantsPeerIds,\n        combined: combined,\n        nextOffset: messageReactionsList.next_offset\n      };\n    });\n  }\n\n  public getMessageReadParticipants(peerId: PeerId, mid: number): Promise<UserId[]> {\n    return this.apiManager.invokeApiSingle('messages.getMessageReadParticipants', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((userIds) => { // ! convert long to number\n      return userIds.map((userId) => userId.toUserId());\n    });\n  }\n\n  public async canViewMessageReadParticipants(message: Message) {\n    if(\n      message?._ !== 'message' ||\n      message.pFlags.is_outgoing ||\n      !message.pFlags.out ||\n      !this.appPeersManager.isAnyGroup(message.peerId)\n    ) {\n      return false;\n    }\n\n    const chat: Chat.chat | Chat.channel = this.appChatsManager.getChat(message.peerId.toChatId());\n    const appConfig = await this.apiManager.getAppConfig();\n    return chat.participants_count <= appConfig.chat_read_mark_size_threshold &&\n      (tsNow(true) - message.date) < appConfig.chat_read_mark_expire_period;\n  }\n\n  public incrementMessageViews(peerId: PeerId, mids: number[]) {\n    if(!mids.length) {\n      return;\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getMessagesViews', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      increment: true\n    }).then((views) => {\n      const updates: Update[] = new Array(mids.length);\n      const channelId = peerId.toChatId();\n      for(let i = 0, length = mids.length; i < length; ++i) {\n        updates[i] = {\n          _: 'updateChannelMessageViews',\n          channel_id: channelId,\n          id: mids[i],\n          views: views.views[i].views\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updates',\n        updates,\n        chats: views.chats,\n        users: views.users\n      });\n    });\n  }\n\n  private notifyAboutMessage(message: MyMessage, options: Partial<{\n    fwdCount: number,\n    peerReaction: MessagePeerReaction,\n    peerTypeNotifySettings: PeerNotifySettings\n  }> = {}) {\n    const peerId = this.getMessagePeer(message);\n\n    if(this.appPeersManager.isRestricted(peerId)) {\n      return;\n    }\n\n    const tabs = appTabsManager.getTabs();\n    let tab = tabs.find((tab) => {\n      const {chatPeerIds} = tab.state;\n      return chatPeerIds[chatPeerIds.length - 1] === peerId;\n    });\n\n    if(!tab) {\n      tabs.sort((a, b) => a.state.idleStartTime - b.state.idleStartTime);\n      tab = !tabs[0].state.idleStartTime ? tabs[0] : tabs[tabs.length - 1];\n    }\n\n    const port = MTProtoMessagePort.getInstance<false>();\n    port.invokeVoid('notificationBuild', {\n      message,\n      ...options\n    }, tab.source);\n  }\n\n  public getScheduledMessagesStorage(peerId: PeerId) {\n    return this.scheduledMessagesStorage[peerId] ?? (this.scheduledMessagesStorage[peerId] = this.createMessageStorage(peerId, 'scheduled'));\n  }\n\n  public getScheduledMessageByPeer(peerId: PeerId, mid: number) {\n    return this.getMessageFromStorage(this.getScheduledMessagesStorage(peerId), mid);\n  }\n\n  public getScheduledMessages(peerId: PeerId) {\n    if(!this.canSendToPeer(peerId)) return;\n\n    const storage = this.getScheduledMessagesStorage(peerId);\n    if(storage.size) {\n      return [...storage.keys()];\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getScheduledHistory', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      hash: ''\n    }).then((historyResult) => {\n      if(historyResult._ !== 'messages.messagesNotModified') {\n        this.appUsersManager.saveApiUsers(historyResult.users);\n        this.appChatsManager.saveApiChats(historyResult.chats);\n\n        const storage = this.getScheduledMessagesStorage(peerId);\n        this.saveMessages(historyResult.messages, {storage, isScheduled: true});\n        return [...storage.keys()];\n      }\n\n      return [];\n    });\n  }\n\n  public sendScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.sendScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public deleteScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.deleteScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getMessageWithReplies(message: Message.message) {\n    return this.filterMessages(message, (message) => !!(message as Message.message).replies)[0] as any;\n  }\n\n  public getMessageWithCommentReplies(message: Message.message) {\n    if(message.peerId !== REPLIES_PEER_ID) {\n      message = this.getMessageWithReplies(message);\n      const replies = message?.replies;\n      if(!(replies && replies.pFlags.comments && replies.channel_id.toChatId() !== REPLIES_HIDDEN_CHANNEL_ID)) {\n        return;\n      }\n    }\n\n    return message;\n  }\n\n  public isFetchIntervalNeeded(peerId: PeerId) {\n    return peerId.isAnyChat() && !this.appChatsManager.isInChat(peerId.toChatId());\n  }\n\n  public async getNewHistory(peerId: PeerId, threadId?: number) {\n    if(!this.isFetchIntervalNeeded(peerId)) {\n      return;\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(!slice.isEnd(SliceEnd.Bottom)) {\n      return;\n    }\n\n    delete historyStorage.maxId;\n    slice.unsetEnd(SliceEnd.Bottom);\n\n    // if there is no id - then request by first id because cannot request by id 0 with backLimit\n    const historyResult = await this.getHistory(peerId, slice[0] ?? 1, 0, 50, threadId);\n    for(let i = 0, length = historyResult.history.length; i < length; ++i) {\n      this.handleNewMessage(this.getMessageByPeer(peerId, historyResult.history[i]));\n    }\n\n    return {isBottomEnd: historyStorage.history.slice.isEnd(SliceEnd.Bottom)};\n  }\n\n  /**\n   * * https://core.telegram.org/api/offsets, offset_id is inclusive\n   */\n  // public getHistory(peerId: PeerId, maxId?: number, limit?: number, backLimit?: number, threadId?: number, onlyCache?: false): Promise<HistoryResult> | HistoryResult;\n  // public getHistory(peerId: PeerId, maxId?: number, limit?: number, backLimit?: number, threadId?: number, onlyCache?: true): HistoryResult;\n  public getHistory(peerId: PeerId, maxId: number = 0, limit?: number, backLimit?: number, threadId?: number/* , onlyCache?: boolean */): Promise<HistoryResult> | HistoryResult {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(this.appPeersManager.isRestricted(peerId)) {\n      const first = historyStorage.history.first;\n      first.setEnd(SliceEnd.Both);\n\n      const slice = first.slice(0, 0);\n      slice.setEnd(SliceEnd.Both);\n\n      return {\n        count: 0,\n        history: Array.from(slice),\n        isEnd: slice.getEnds(),\n        offsetIdOffset: 0\n      };\n    }\n\n    let offset = 0;\n    /*\n    let offsetFound = true;\n\n    if(maxId) {\n      offsetFound = false;\n      for(; offset < historyStorage.history.length; offset++) {\n        if(maxId > historyStorage.history.slice[offset]) {\n          offsetFound = true;\n          break;\n        }\n      }\n    }\n\n    if(offsetFound && (\n      historyStorage.count !== null && historyStorage.history.length === historyStorage.count ||\n      historyStorage.history.length >= offset + limit\n      )) {\n      if(backLimit) {\n        backLimit = Math.min(offset, backLimit);\n        offset = Math.max(0, offset - backLimit);\n        limit += backLimit;\n      } else {\n        limit = limit;\n      }\n\n      const history = historyStorage.history.slice.slice(offset, offset + limit);\n      return {\n        count: historyStorage.count,\n        history: history,\n        offsetIdOffset: offset\n      };\n    }\n\n    if(offsetFound) {\n      offset = 0;\n    } */\n\n    if(backLimit) {\n      offset = -backLimit;\n      limit += backLimit;\n\n      /* return this.requestHistory(reqPeerId, maxId, limit, offset, undefined, threadId).then((historyResult) => {\n        historyStorage.count = (historyResult as MessagesMessages.messagesMessagesSlice).count || historyResult.messages.length;\n\n        const history = (historyResult.messages as MyMessage[]).map((message) => message.mid);\n        return {\n          count: historyStorage.count,\n          history,\n          offsetIdOffset: (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0\n        };\n      }); */\n    }\n\n    const haveSlice = historyStorage.history.sliceMe(maxId, offset, limit);\n    if(haveSlice && (haveSlice.slice.length === limit || (haveSlice.fulfilled & SliceEnd.Both) === SliceEnd.Both)) {\n      return {\n        count: historyStorage.count,\n        history: Array.from(haveSlice.slice),\n        isEnd: haveSlice.slice.getEnds(),\n        offsetIdOffset: haveSlice.offsetIdOffset\n      };\n    }\n\n    // if(onlyCache) {\n    //   return;\n    // }\n\n    return this.fillHistoryStorage(peerId, maxId, limit, offset, historyStorage, threadId).then(() => {\n      const slice = historyStorage.history.sliceMe(maxId, offset, limit);\n      const f = slice?.slice || historyStorage.history.constructSlice();\n      return {\n        count: historyStorage.count,\n        history: Array.from(f),\n        isEnd: f.getEnds(),\n        offsetIdOffset: slice?.offsetIdOffset || historyStorage.count\n      };\n    });\n  }\n\n  public isHistoryResultEnd(historyResult: Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>, limit: number, add_offset: number) {\n    const {offset_id_offset, messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n\n    const count = (historyResult as MessagesMessages.messagesMessagesSlice).count || messages.length;\n    const offsetIdOffset = offset_id_offset || 0;\n\n    const topWasMeantToLoad = add_offset < 0 ? limit + add_offset : limit;\n\n    const isTopEnd = offsetIdOffset >= (count - topWasMeantToLoad) || count < topWasMeantToLoad;\n    const isBottomEnd = !offsetIdOffset || (add_offset < 0 && (offsetIdOffset + add_offset) <= 0);\n\n    return {count, offsetIdOffset, isTopEnd, isBottomEnd};\n  }\n\n  public mergeHistoryResult(slicedArray: SlicedArray<number>,\n    historyResult: Parameters<AppMessagesManager['isHistoryResultEnd']>[0],\n    offset_id: number,\n    limit: number,\n    add_offset: number) {\n    const {messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n    const isEnd = this.isHistoryResultEnd(historyResult, limit, add_offset);\n    const {count, offsetIdOffset, isTopEnd, isBottomEnd} = isEnd;\n    const mids = messages.map((message) => {\n      return (message as MyMessage).mid;\n    });\n\n    // * add bound manually.\n    // * offset_id will be inclusive only if there is 'add_offset' <= -1 (-1 - will only include the 'offset_id')\n    // * check that offset_id is not 0\n    if(offset_id && getServerMessageId(offset_id) && !mids.includes(offset_id) && offsetIdOffset < count) {\n      let i = 0;\n      for(const length = mids.length; i < length; ++i) {\n        if(offset_id > mids[i]) {\n          break;\n        }\n      }\n\n      mids.splice(i, 0, offset_id);\n    }\n\n    const slice = slicedArray.insertSlice(mids) || slicedArray.slice;\n    if(isTopEnd) {\n      slice.setEnd(SliceEnd.Top);\n    }\n\n    if(isBottomEnd) {\n      slice.setEnd(SliceEnd.Bottom);\n    }\n\n    return {slice, mids, messages, ...isEnd};\n  }\n\n  public fillHistoryStorage(peerId: PeerId, offset_id: number, limit: number, add_offset: number, historyStorage: HistoryStorage, threadId?: number): Promise<void> {\n    const wasMaxId = historyStorage.maxId;\n    return this.requestHistory(peerId, offset_id, limit, add_offset, undefined, threadId).then((historyResult) => {\n      const {count, isBottomEnd, slice, messages} = this.mergeHistoryResult(historyStorage.history, historyResult, offset_id, limit, add_offset);\n\n      historyStorage.count = count;\n\n      /* if(!maxId && historyResult.messages.length) {\n        maxId = this.incrementMessageId((historyResult.messages[0] as MyMessage).mid, 1);\n      }\n\n      const wasTotalCount = historyStorage.history.length; */\n\n      for(let i = 0, length = messages.length; i < length; ++i) {\n        const message = messages[i] as MyMessage;\n        if(this.mergeReplyKeyboard(historyStorage, message)) {\n          this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n        }\n      }\n\n      if(isBottomEnd) {\n        const newMaxId = slice[0];\n\n        if(historyStorage.maxId === wasMaxId) {\n          const first = historyStorage.history.first;\n          if(first !== slice) {\n            historyStorage.history.deleteSlice(first);\n          }\n\n          if(historyStorage.maxId !== newMaxId) {\n            historyStorage.maxId = slice[0]; // ! WARNING\n\n            this.reloadConversation(peerId); // when top_message is deleted but cached\n          }\n        }\n      }\n\n      /* const isBackLimit = offset < 0 && -offset !== fullLimit;\n      if(isBackLimit) {\n        return;\n      }\n\n      const totalCount = historyStorage.history.length;\n      fullLimit -= (totalCount - wasTotalCount);\n\n      const migratedNextPeer = this.migratedFromTo[peerId];\n      const migratedPrevPeer = this.migratedToFrom[peerId]\n      const isMigrated = migratedNextPeer !== undefined || migratedPrevPeer !== undefined;\n\n      if(isMigrated) {\n        historyStorage.count = Math.max(historyStorage.count, totalCount) + 1;\n      }\n\n      if(fullLimit > 0) {\n        maxId = historyStorage.history.slice[totalCount - 1];\n        if(isMigrated) {\n          if(!historyResult.messages.length) {\n            if(migratedPrevPeer) {\n              maxId = 0;\n              peerId = migratedPrevPeer;\n            } else {\n              historyStorage.count = totalCount;\n              return true;\n            }\n          }\n\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, historyStorage, threadId);\n        } else if(totalCount < historyStorage.count) {\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, offset, historyStorage, threadId);\n        }\n      } */\n    });\n  }\n\n  public requestHistory(peerId: PeerId, maxId: number, limit = 0, offset = 0, offsetDate = 0, threadId = 0): Promise<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>> {\n    // console.trace('requestHistory', peerId, maxId, limit, offset);\n\n    // rootScope.broadcast('history_request');\n\n    const options: any = {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      offset_id: getServerMessageId(maxId) || 0,\n      offset_date: offsetDate,\n      add_offset: offset,\n      limit,\n      max_id: 0,\n      min_id: 0,\n      hash: 0\n    };\n\n    if(threadId) {\n      options.msg_id = getServerMessageId(threadId) || 0;\n    }\n\n    const promise: ReturnType<AppMessagesManager['requestHistory']> = this.apiManager.invokeApiSingle(threadId ? 'messages.getReplies' : 'messages.getHistory', options, {\n      // timeout: APITIMEOUT,\n      noErrorBox: true\n    }) as any;\n\n    return promise.then((historyResult) => {\n      if(DEBUG) {\n        this.log('requestHistory result:', peerId, historyResult, maxId, limit, offset);\n      }\n\n      this.appUsersManager.saveApiUsers(historyResult.users);\n      this.appChatsManager.saveApiChats(historyResult.chats);\n      this.saveMessages(historyResult.messages);\n\n      if(this.appPeersManager.isChannel(peerId)) {\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), (historyResult as MessagesMessages.messagesChannelMessages).pts);\n      }\n\n      let length = historyResult.messages.length, count = (historyResult as MessagesMessages.messagesMessagesSlice).count;\n      if(length && !historyResult.messages[length - 1]) {\n        historyResult.messages.splice(length - 1, 1);\n        length--;\n        count--;\n      }\n\n      // will load more history if last message is album grouped (because it can be not last item)\n      // historyResult.messages: desc sorted\n      const historyStorage = this.getHistoryStorage(peerId, threadId);\n      const oldestMessage: Message.message = historyResult.messages[length - 1] as any;\n      if(length && oldestMessage.grouped_id) {\n        const foundSlice = historyStorage.history.findSlice(oldestMessage.mid);\n        if(foundSlice && (foundSlice.slice.length + historyResult.messages.length) < count) {\n          return this.requestHistory(peerId, oldestMessage.mid, 10, 0, offsetDate, threadId).then((_historyResult) => {\n            return historyResult;\n          });\n        }\n      }\n\n      return historyResult;\n    }, (error) => {\n      switch(error.type) {\n        case 'CHANNEL_PRIVATE':\n          let channel = this.appChatsManager.getChat(peerId.toChatId());\n          channel = {_: 'channelForbidden', access_hash: channel.access_hash, title: channel.title};\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updates',\n            updates: [{\n              _: 'updateChannel',\n              channel_id: peerId.toChatId()\n            }],\n            chats: [channel],\n            users: []\n          });\n          break;\n      }\n\n      throw error;\n    });\n  }\n\n  public fetchSingleMessages() {\n    if(this.fetchSingleMessagesPromise) {\n      return this.fetchSingleMessagesPromise;\n    }\n\n    return this.fetchSingleMessagesPromise = pause(0).then(() => {\n      const requestPromises: Promise<void>[] = [];\n\n      for(const [peerId, map] of this.needSingleMessages) {\n        const mids = [...map.keys()];\n        const msgIds: InputMessage[] = mids.map((mid) => {\n          return {\n            _: 'inputMessageID',\n            id: getServerMessageId(mid)\n          };\n        });\n\n        let promise: Promise<MethodDeclMap['channels.getMessages']['res'] | MethodDeclMap['messages.getMessages']['res']>;\n        if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n          promise = this.apiManager.invokeApiSingle('channels.getMessages', {\n            channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n            id: msgIds\n          });\n        } else {\n          promise = this.apiManager.invokeApiSingle('messages.getMessages', {\n            id: msgIds\n          });\n        }\n\n        const after = promise.then((getMessagesResult) => {\n          assumeType<Exclude<MessagesMessages.messagesMessages, MessagesMessages.messagesMessagesNotModified>>(getMessagesResult);\n\n          this.appUsersManager.saveApiUsers(getMessagesResult.users);\n          this.appChatsManager.saveApiChats(getMessagesResult.chats);\n          const messages = this.saveMessages(getMessagesResult.messages);\n\n          for(let i = 0; i < messages.length; ++i) {\n            const message = messages[i];\n            if(!message) {\n              continue;\n            }\n\n            const mid = generateMessageId(message.id);\n            const promise = map.get(mid);\n            promise.resolve(message);\n            map.delete(mid);\n          }\n\n          if(map.size) {\n            for(const [mid, promise] of map) {\n              promise.resolve(this.generateEmptyMessage(mid));\n            }\n          }\n        }).finally(() => {\n          this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids});\n        });\n\n        requestPromises.push(after);\n      }\n\n      this.needSingleMessages.clear();\n\n      return Promise.all(requestPromises).then(noop, noop).then(() => {\n        this.fetchSingleMessagesPromise = null;\n        if(this.needSingleMessages.size) this.fetchSingleMessages();\n      });\n    });\n  }\n\n  public reloadMessages(peerId: PeerId, mid: number, overwrite?: boolean): Promise<MyMessage>;\n  public reloadMessages(peerId: PeerId, mid: number[], overwrite?: boolean): Promise<MyMessage[]>;\n  public reloadMessages(peerId: PeerId, mid: number | number[], overwrite?: boolean): Promise<MyMessage | MyMessage[]> {\n    if(Array.isArray(mid)) {\n      return Promise.all(mid.map((mid) => {\n        return this.reloadMessages(peerId, mid, overwrite);\n      }));\n    }\n\n    const message = this.getMessageByPeer(peerId, mid);\n    if(message && !overwrite) {\n      this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids: [mid]});\n      return Promise.resolve(message);\n    } else {\n      let map = this.needSingleMessages.get(peerId);\n      if(!map) {\n        this.needSingleMessages.set(peerId, map = new Map());\n      }\n\n      let promise = map.get(mid);\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      map.set(mid, promise);\n      this.fetchSingleMessages();\n      return promise;\n    }\n  }\n\n  public getExtendedMedia(peerId: PeerId, mids: number[]) {\n    let map = this.extendedMedia.get(peerId);\n    if(!map) {\n      this.extendedMedia.set(peerId, map = new Map());\n    }\n\n    const deferred = deferredPromise<void>();\n    const toRequest: number[] = [];\n    const promises = mids.map((mid) => {\n      let promise = map.get(mid);\n      if(!promise) {\n        map.set(mid, promise = deferred);\n        toRequest.push(mid);\n\n        promise.then(() => {\n          map.delete(mid);\n          if(!map.size && this.extendedMedia.get(peerId) === map) {\n            this.extendedMedia.delete(peerId);\n          }\n        });\n      }\n\n      return promise;\n    });\n\n    if(!toRequest.length) {\n      deferred.resolve();\n    } else {\n      this.apiManager.invokeApi('messages.getExtendedMedia', {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: toRequest.map((mid) => getServerMessageId(mid))\n      }).then((updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n        deferred.resolve();\n      });\n    }\n\n    return Promise.all(promises);\n  }\n\n  public fetchMessageReplyTo(message: MyMessage) {\n    if(!message.reply_to_mid) return Promise.resolve(this.generateEmptyMessage(0));\n    const replyToPeerId = message.reply_to.reply_to_peer_id ? this.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) : message.peerId;\n    return this.reloadMessages(replyToPeerId, message.reply_to_mid).then((originalMessage) => {\n      if(!originalMessage) { // ! break the infinite loop\n        message = this.getMessageByPeer(message.peerId, message.mid); // message can come from other thread\n        delete message.reply_to_mid; // ! WARNING!\n      }\n\n      if(message._ === 'messageService') {\n        const peerId = message.peerId;\n        this.rootScope.dispatchEvent('message_edit', {\n          storageKey: `${peerId}_history`,\n          peerId: peerId,\n          mid: message.mid,\n          message\n        });\n\n        if(this.isMessageIsTopMessage(message)) {\n          this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, this.getDialogOnly(peerId)]]));\n        }\n      }\n\n      return originalMessage;\n    });\n  }\n\n  public setTyping(peerId: PeerId, action: SendMessageAction, force?: boolean): Promise<boolean> {\n    let typing = this.typings[peerId];\n    if(\n      !peerId ||\n      !this.canSendToPeer(peerId) ||\n      peerId === this.appPeersManager.peerId ||\n      // (!force && deepEqual(typing?.action, action))\n      (!force && typing?.action?._ === action._)\n    ) {\n      return Promise.resolve(false);\n    }\n\n    if(typing?.timeout) {\n      clearTimeout(typing.timeout);\n    }\n\n    typing = this.typings[peerId] = {\n      action\n    };\n\n    return this.apiManager.invokeApi('messages.setTyping', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      action\n    }).finally(() => {\n      if(typing === this.typings[peerId]) {\n        typing.timeout = ctx.setTimeout(() => {\n          delete this.typings[peerId];\n        }, 6000);\n      }\n    });\n  }\n\n  private handleReleasingMessage(message: MyMessage, storage: MessagesStorage) {\n    const media = (message as Message.message).media;\n    if(media) {\n      const c = (media as MessageMedia.messageMediaWebPage).webpage as WebPage.webPage || media as MessageMedia.messageMediaPhoto | MessageMedia.messageMediaDocument;\n      const smth: Photo.photo | MyDocument = (c as MessageMedia.messageMediaPhoto).photo as any || (c as MessageMedia.messageMediaDocument).document as any;\n\n      if(smth?.file_reference) {\n        this.referenceDatabase.deleteContext(smth.file_reference, {type: 'message', peerId: message.peerId, messageId: message.mid});\n      }\n\n      if('webpage' in media && media.webpage) {\n        const isScheduled = this.getScheduledMessagesStorage(message.peerId) === storage;\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled);\n        this.appWebPagesManager.deleteWebPageFromPending(media.webpage, messageKey);\n      }\n\n      if((media as MessageMedia.messageMediaPoll).poll) {\n        this.appPollsManager.updatePollToMessage(message as Message.message, false);\n      }\n    }\n  }\n\n  private handleDeletedMessages(peerId: PeerId, storage: MessagesStorage, messages: number[]) {\n    const history: {\n      count: number,\n      unread: number,\n      unreadMentions: number,\n      msgs: Set<number>,\n      albums?: {[groupId: string]: Set<number>},\n    } = {\n      count: 0,\n      unread: 0,\n      unreadMentions: 0,\n      msgs: new Set()\n    };\n\n    for(const mid of messages) {\n      const message: MyMessage = this.getMessageFromStorage(storage, mid);\n      if(!message) {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n        continue;\n      }\n\n      this.handleReleasingMessage(message, storage);\n\n      this.updateMessageRepliesIfNeeded(message);\n\n      if(!message.pFlags.out && !message.pFlags.is_outgoing && message.pFlags.unread) {\n        ++history.unread;\n        this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n\n        if(message.pFlags.mentioned) {\n          ++history.unreadMentions;\n          this.modifyCachedMentions(peerId, mid, false);\n        }\n      }\n\n      ++history.count;\n      history.msgs.add(mid);\n\n      message.deleted = true;\n\n      const groupedId = (message as Message.message).grouped_id;\n      if(groupedId) {\n        const groupedStorage = this.groupedMessagesStorage[groupedId];\n        if(groupedStorage) {\n          groupedStorage.delete(mid);\n\n          if(!history.albums) history.albums = {};\n          (history.albums[groupedId] || (history.albums[groupedId] = new Set())).add(mid);\n\n          if(!groupedStorage.size) {\n            delete history.albums;\n            delete this.groupedMessagesStorage[groupedId];\n          }\n        }\n      }\n\n      storage.delete(mid);\n    }\n\n    if(history.albums) {\n      for(const groupedId in history.albums) {\n        this.dispatchAlbumEdit(groupedId, storage, [...history.albums[groupedId]]);\n        /* const mids = this.getMidsByAlbum(groupId);\n        if(mids.length) {\n          const mid = Math.max(...mids);\n          rootScope.$broadcast('message_edit', {peerId, mid, justMedia: false});\n        } */\n      }\n    }\n\n    return history;\n  }\n\n  private handleEditedMessage(oldMessage: Message, newMessage: Message, storage: MessagesStorage) {\n    if(oldMessage._ === 'message') {\n      if((oldMessage.media as MessageMedia.messageMediaWebPage)?.webpage) {\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(oldMessage.peerId, oldMessage.mid, !!oldMessage.pFlags.is_scheduled);\n        this.appWebPagesManager.deleteWebPageFromPending((oldMessage.media as MessageMedia.messageMediaWebPage).webpage, messageKey);\n      }\n\n      const groupedId = oldMessage.grouped_id;\n      if(groupedId) {\n        this.dispatchAlbumEdit(groupedId, storage, []);\n      }\n    }\n  }\n\n  private dispatchAlbumEdit(groupedId: string, storage: MessagesStorage, deletedMids?: number[]) {\n    const mids = this.getMidsByAlbum(groupedId);\n    const messages = mids.map((mid) => this.getMessageFromStorage(storage, mid)) as Message.message[];\n    this.rootScope.dispatchEvent('album_edit', {peerId: messages[0].peerId, groupId: groupedId, deletedMids: deletedMids || [], messages});\n  }\n\n  public getDialogUnreadCount(dialog: Dialog) {\n    return dialog.unread_count || +!!dialog.pFlags.unread_mark;\n  }\n\n  public isDialogUnread(dialog: Dialog) {\n    return !!this.getDialogUnreadCount(dialog);\n  }\n\n  public canForward(message: Message.message | Message.messageService) {\n    return message?._ === 'message' && !(message as Message.message).pFlags.noforwards && !this.appPeersManager.noForwards(message.peerId);\n  }\n\n  private pushBatchUpdate<E extends keyof BatchUpdates, C extends BatchUpdates[E]>(\n    event: E,\n    callback: C,\n    key: string,\n    getElementCallback?: () => MapValueType<ArgumentTypes<C>[0]>\n  ) {\n    let details = this.batchUpdates[event];\n    if(!details) {\n      // @ts-ignore\n      details = this.batchUpdates[event] = {\n        callback,\n        batch: new Map()\n      };\n    }\n\n    if(!details.batch.has(key)) {\n      // @ts-ignore\n      details.batch.set(key, getElementCallback ? getElementCallback() : undefined);\n      this.batchUpdatesDebounced();\n    }\n  }\n\n  private getMessagesFromMap<T extends Map<any, any>>(map: T) {\n    const newMap: Map<Message.message, MapValueType<T>> = new Map();\n    for(const [key, value] of map) {\n      const [peerIdStr, mid] = key.split('_');\n      const message = this.getMessageByPeer(peerIdStr.toPeerId(), +mid) as Message.message;\n      if(!message) {\n        continue;\n      }\n\n      newMap.set(message, value);\n    }\n\n    return newMap;\n  }\n\n  private batchUpdateViews = (batch: Map<string, undefined>) => {\n    const toDispatch: {peerId: PeerId, mid: number, views: number}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message] of map) {\n      toDispatch.push({\n        peerId: message.peerId,\n        mid: message.mid,\n        views: message.views\n      })\n    }\n\n    return toDispatch;\n  };\n\n  private batchUpdateReactions = (batch: Map<string, MessageReactions>) => {\n    const toDispatch: {message: Message.message, changedResults: ReactionCount.reactionCount[]}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message, previousReactions] of map) {\n      const results = message.reactions?.results ?? [];\n      const previousResults = previousReactions?.results ?? [];\n      const changedResults = results.filter((reactionCount) => {\n        const previousReactionCount = previousResults.find((_reactionCount) => reactionsEqual(_reactionCount.reaction, reactionCount.reaction));\n        return (\n          message.pFlags.out && (\n            !previousReactionCount ||\n            reactionCount.count > previousReactionCount.count\n          )\n        ) || (\n          reactionCount.chosen_order !== undefined && (\n            !previousReactionCount ||\n            previousReactionCount.chosen_order === undefined\n          )\n        );\n      });\n\n      toDispatch.push({message, changedResults});\n    }\n\n    return toDispatch;\n  };\n\n  public saveDefaultSendAs(peerId: PeerId, sendAsPeerId: PeerId) {\n    const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n    channelFull.default_send_as = this.appPeersManager.getOutputPeer(sendAsPeerId);\n    return this.apiManager.invokeApi('messages.saveDefaultSendAs', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      send_as: this.appPeersManager.getInputPeerById(sendAsPeerId)\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {getFileNameByLocation} from '../../../../helpers/fileName';\r\nimport {Document} from '../../../../layer';\r\nimport getDocumentInputFileLocation from './getDocumentInputFileLocation';\r\n\r\nexport default function getDocumentInputFileName(doc: Document.document, thumbSize?: string) {\r\n  return getFileNameByLocation(getDocumentInputFileLocation(doc, thumbSize), {fileName: doc.file_name});\r\n}\r\n","export default function convertInputKeyToKey<T extends string>(inputKey: string) {\n  const str = inputKey.replace('input', '');\n  return (str[0].toLowerCase() + str.slice(1)) as T;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport tsNow from '../../helpers/tsNow';\r\nimport {\r\n  InputNotifyPeer,\r\n  InputPeerNotifySettings,\r\n  NotificationSound,\r\n  NotifyPeer,\r\n  PeerNotifySettings,\r\n  Update\r\n} from '../../layer';\r\nimport { MUTE_UNTIL } from '../mtproto/mtproto_config';\r\nimport throttle from '../../helpers/schedulers/throttle';\r\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\r\nimport {AppManager} from './manager';\r\nimport ctx from '../../environment/ctx';\r\nimport assumeType from '../../helpers/assumeType';\r\n\r\n// mute\r\nconst MUTE_HIDE_MESSAGES_TITLE = 'HIDE_MESSAGES';\r\nconst MUTE_HIDE_MESSAGES_DATA = 'hide-all-messages';\r\n// -/mute\r\n\r\ntype ImSadAboutIt = Promise<PeerNotifySettings> | PeerNotifySettings;\r\nexport class AppNotificationsManager extends AppManager {\r\n  private peerSettings = {\r\n    notifyPeer: {} as {[peerId: PeerId]: ImSadAboutIt},\r\n    notifyUsers: null as ImSadAboutIt,\r\n    notifyChats: null as ImSadAboutIt,\r\n    notifyBroadcasts: null as ImSadAboutIt\r\n  };\r\n  // private exceptions: {[peerId: string]: PeerNotifySettings} = {};\r\n\r\n  private getNotifyPeerTypePromise: Promise<any>;\r\n\r\n  private checkMuteUntilTimeout: number;\r\n  private checkMuteUntilThrottled: () => void;\r\n\r\n  private notifyContactsSignUp: Promise<boolean>;\r\n\r\n  protected after() {\r\n    this.checkMuteUntilThrottled = throttle(this.checkMuteUntil, 1000, false);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateNotifySettings: (update) => {\r\n        const peerId = update.peer._ === 'notifyPeer' && this.appPeersManager.getPeerId(update.peer.peer);\r\n        const key = update.peer._ !== 'notifyPeer' ? update.peer._ : undefined;\r\n        this.savePeerSettings({\r\n          key,\r\n          peerId,\r\n          settings: update.notify_settings\r\n        });\r\n        this.rootScope.dispatchEvent('notify_settings', update);\r\n      }\r\n    });\r\n\r\n    return this.appStateManager.getState().then((state) => {\r\n      if(state.notifySettings) {\r\n        for(const key in state.notifySettings) {\r\n          assumeType<Exclude<NotifyPeer['_'], 'notifyPeer'>>(key);\r\n          this.savePeerSettings({\r\n            key,\r\n            settings: state.notifySettings[key]\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getNotifySettings(peer: InputNotifyPeer): ImSadAboutIt {\r\n    let key: any = convertInputKeyToKey(peer._);\r\n    let obj: any = this.peerSettings[key as NotifyPeer['_']];\r\n\r\n    let peerId: PeerId;\r\n    if(peer._ === 'inputNotifyPeer') {\r\n      peerId = key = this.appPeersManager.getPeerId(peer.peer);\r\n      obj = obj[key];\r\n    }\r\n\r\n    if(obj) {\r\n      return obj;\r\n    }\r\n\r\n    return (obj || this.peerSettings)[key] = this.apiManager.invokeApi('account.getNotifySettings', {peer})\r\n    .then((settings) => {\r\n      this.savePeerSettings({\r\n        key,\r\n        peerId,\r\n        settings\r\n      });\r\n\r\n      return settings;\r\n    });\r\n  }\r\n\r\n  public getNotifyPeerTypeSettings() {\r\n    if(this.getNotifyPeerTypePromise) return this.getNotifyPeerTypePromise;\r\n\r\n    const promises = (['inputNotifyBroadcasts', 'inputNotifyUsers', 'inputNotifyChats'] as Exclude<InputNotifyPeer['_'], 'inputNotifyPeer'>[])\r\n    .map((inputKey) => {\r\n      return this.getNotifySettings({_: inputKey});\r\n    });\r\n\r\n    return this.getNotifyPeerTypePromise = Promise.all(promises);\r\n  }\r\n\r\n  public updateNotifySettings(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\r\n    // this.savePeerSettings(peerId, settings);\r\n\r\n    /* const inputSettings: InputPeerNotifySettings = copy(settings) as any;\r\n    inputSettings._ = 'inputPeerNotifySettings'; */\r\n\r\n    return this.apiManager.invokeApi('account.updateNotifySettings', {\r\n      peer,\r\n      settings\r\n    }).then((value) => {\r\n      if(value) {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateNotifySettings',\r\n          peer: {\r\n            ...peer as any,\r\n            _: convertInputKeyToKey(peer._)\r\n          },\r\n          notify_settings: { // ! WOW, IT WORKS !\r\n            ...settings,\r\n            _: 'peerNotifySettings'\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // public getNotifyExceptions() {\r\n  //   apiManager.invokeApi('account.getNotifyExceptions', {compare_sound: true})\r\n  //   .then((updates) => {\r\n  //     apiUpdatesManager.processUpdateMessage(updates);\r\n  //   });\r\n  // }\r\n\r\n  public getContactSignUpNotification() {\r\n    if(this.notifyContactsSignUp) return this.notifyContactsSignUp;\r\n    return this.notifyContactsSignUp = this.apiManager.invokeApi('account.getContactSignUpNotification');\r\n  }\r\n\r\n  public setContactSignUpNotification(silent: boolean) {\r\n    this.apiManager.invokeApi('account.setContactSignUpNotification', {silent})\r\n    .then((value) => {\r\n      this.notifyContactsSignUp = Promise.resolve(!silent);\r\n    });\r\n  }\r\n\r\n  public checkSoundStateIsMute(sound?: { title?: string | undefined }): boolean {\r\n    return (sound\r\n      && sound.title === MUTE_HIDE_MESSAGES_TITLE\r\n    )\r\n  }\r\n\r\n  public async isMuteLevelHideMessages(peerId: PeerId): Promise<boolean> {\r\n    const peerNotifySettings = await this.getNotifySettings({\r\n      _: 'inputNotifyPeer',\r\n      peer: await this.appPeersManager.getInputPeerById(peerId),\r\n    });\r\n    // idk why it sometimes comes not as api describes it\r\n    if (\r\n      this.checkSoundStateIsMute(peerNotifySettings.other_sound as any)\r\n      || this.checkSoundStateIsMute((peerNotifySettings as any).sound as any)\r\n    ) {\r\n      return true;\r\n    }\r\n    //\r\n    return false;\r\n  }\r\n\r\n  public mutePeerHideMessages(peerId: PeerId) {\r\n    const hideMessagesSound: NotificationSound.notificationSoundLocal = {\r\n      _: 'notificationSoundLocal',\r\n      title: MUTE_HIDE_MESSAGES_TITLE,\r\n      data: MUTE_HIDE_MESSAGES_DATA,\r\n    }\r\n    const settings: InputPeerNotifySettings = {\r\n      _: 'inputPeerNotifySettings',\r\n      sound: hideMessagesSound,\r\n      mute_until: MUTE_UNTIL,\r\n    }\r\n\r\n    return this.updateNotifySettings({\r\n      _: 'inputNotifyPeer',\r\n      peer: this.appPeersManager.getInputPeerById(peerId)\r\n    }, settings);\r\n  }\r\n\r\n  public togglePeerMuteHideMessages(peerId: PeerId, mute: boolean) {\r\n    // if (mute === undefined) {\r\n    //   mute = this.appNotificationsManager.isMuteLevelHideMessages()\r\n    // }\r\n    if (mute) {\r\n      return this.mutePeerHideMessages(peerId);\r\n    }\r\n    // return this.togglePeerMute(peerId, true);\r\n    // return this.mutePeer(peerId, MUTE_UNTIL);\r\n    const settings: InputPeerNotifySettings = {\r\n      _: 'inputPeerNotifySettings'\r\n    };\r\n\r\n    return this.updateNotifySettings({\r\n      _: 'inputNotifyPeer',\r\n      peer: this.appPeersManager.getInputPeerById(peerId)\r\n    }, settings);\r\n  }\r\n\r\n  private checkMuteUntil = () => {\r\n    if(this.checkMuteUntilTimeout !== undefined) {\r\n      clearTimeout(this.checkMuteUntilTimeout);\r\n      this.checkMuteUntilTimeout = undefined;\r\n    }\r\n\r\n    const timestamp = tsNow(true);\r\n    let closestMuteUntil = MUTE_UNTIL;\r\n    for(const peerId in this.peerSettings.notifyPeer) {\r\n      const peerNotifySettings = this.peerSettings.notifyPeer[peerId];\r\n      if(peerNotifySettings instanceof Promise) {\r\n        continue;\r\n      }\r\n\r\n      const muteUntil = peerNotifySettings.mute_until;\r\n      if(!muteUntil) {\r\n        continue;\r\n      }\r\n\r\n      if(muteUntil <= timestamp) {\r\n        // ! do not delete it because peer's unique settings will be overwritten in getPeerLocalSettings with type's settings\r\n        peerNotifySettings.mute_until = 0;\r\n\r\n        this.apiUpdatesManager.saveUpdate({\r\n          _: 'updateNotifySettings',\r\n          peer: {\r\n            _: 'notifyPeer',\r\n            peer: this.appPeersManager.getOutputPeer(peerId.toPeerId())\r\n          },\r\n          notify_settings: peerNotifySettings\r\n        });\r\n      } else if(muteUntil < closestMuteUntil) {\r\n        closestMuteUntil = muteUntil;\r\n      }\r\n    }\r\n\r\n    const timeout = Math.min(1800e3, (closestMuteUntil - timestamp) * 1000);\r\n    this.checkMuteUntilTimeout = ctx.setTimeout(this.checkMuteUntil, timeout);\r\n  };\r\n\r\n  public savePeerSettings({key, peerId, settings}: {\r\n    key?: Exclude<NotifyPeer['_'], 'notifyPeer'>,\r\n    peerId?: PeerId,\r\n    settings: PeerNotifySettings\r\n  }) {\r\n    let obj: any;\r\n    if(peerId) {\r\n      key = peerId as any;\r\n      obj = this.peerSettings['notifyPeer'];\r\n    }\r\n\r\n    (obj || this.peerSettings)[key] = settings;\r\n\r\n    if(!peerId) {\r\n      this.rootScope.dispatchEvent('notify_peer_type_settings', {key, settings});\r\n      this.appStateManager.getState().then((state) => {\r\n        const notifySettings = state.notifySettings;\r\n        notifySettings[key] = settings;\r\n        this.appStateManager.pushToState('notifySettings', notifySettings);\r\n      });\r\n    } else {\r\n      this.checkMuteUntilThrottled();\r\n    }\r\n\r\n    // rootScope.broadcast('notify_settings', {peerId: peerId});\r\n  }\r\n\r\n  public isMuted(peerNotifySettings: PeerNotifySettings) {\r\n    return peerNotifySettings._ === 'peerNotifySettings' &&\r\n      (peerNotifySettings.silent || (peerNotifySettings.mute_until !== undefined && (peerNotifySettings.mute_until * 1000) > tsNow()));\r\n  }\r\n\r\n  public getPeerMuted(peerId: PeerId): Promise<boolean> {\r\n    const ret = this.getNotifySettings({_: 'inputNotifyPeer', peer: this.appPeersManager.getInputPeerById(peerId)});\r\n    return (ret instanceof Promise ? ret : Promise.resolve(ret))\r\n    .then((peerNotifySettings) => this.isMuted(peerNotifySettings));\r\n  }\r\n\r\n  private getPeerLocalSettings(peerId: PeerId, respectType = true): PeerNotifySettings {\r\n    const n: PeerNotifySettings = {\r\n      _: 'peerNotifySettings'\r\n    };\r\n\r\n    const notifySettings = this.peerSettings['notifyPeer'][peerId];\r\n    // if(!notifySettings || (notifySettings instanceof Promise)) return false;\r\n    if(notifySettings && !(notifySettings instanceof Promise)) {\r\n      Object.assign(n, notifySettings);\r\n    }\r\n\r\n    if(respectType) {\r\n      const inputNotify = this.appPeersManager.getInputNotifyPeerById(peerId, true);\r\n      const key = convertInputKeyToKey(inputNotify._);\r\n      const typeNotifySettings = this.peerSettings[key as NotifyPeer['_']];\r\n      if(typeNotifySettings && !(typeNotifySettings instanceof Promise)) {\r\n        for(const i in typeNotifySettings) {\r\n          // @ts-ignore\r\n          if(n[i] === undefined) {\r\n            // @ts-ignore\r\n            n[i] = typeNotifySettings[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n  public isPeerLocalMuted(peerId: PeerId, respectType = true) {\r\n    if(peerId === this.appPeersManager.peerId) return false;\r\n\r\n    const notifySettings = this.getPeerLocalSettings(peerId, respectType);\r\n    return this.isMuted(notifySettings);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {Chat, ChatPhoto, DialogPeer, InputChannel, InputDialogPeer, InputNotifyPeer, InputPeer, Peer, Update, User, UserProfilePhoto} from '../../layer';\r\nimport type {LangPackKey} from '../langPack';\r\nimport {getRestrictionReason} from '../../helpers/restrictions';\r\nimport isObject from '../../helpers/object/isObject';\r\nimport {AppManager} from './manager';\r\nimport getPeerId from './utils/peers/getPeerId';\r\nimport isUser from './utils/peers/isUser';\r\nimport isAnyChat from './utils/peers/isAnyChat';\r\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\r\n\r\nexport type PeerType = 'channel' | 'chat' | 'megagroup' | 'group' | 'saved';\r\nexport class AppPeersManager extends AppManager {\r\n  public get peerId() {\r\n    return this.appUsersManager.userId.toPeerId();\r\n  }\r\n  /* public savePeerInstance(peerId: PeerId, instance: any) {\r\n    if(peerId < 0) appChatsManager.saveApiChat(instance);\r\n    else appUsersManager.saveApiUser(instance);\r\n  } */\r\n\r\n  public canPinMessage(peerId: PeerId) {\r\n    return peerId.isUser() || this.appChatsManager.hasRights(peerId.toChatId(), 'pin_messages');\r\n  }\r\n\r\n  public getPeerPhoto(peerId: PeerId): UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto {\r\n    if(this.isRestricted(peerId)) {\r\n      return;\r\n    }\r\n\r\n    const photo = peerId.isUser() ?\r\n      this.appUsersManager.getUserPhoto(peerId.toUserId()) :\r\n      this.appChatsManager.getChatPhoto(peerId.toChatId());\r\n\r\n    return photo._ !== 'chatPhotoEmpty' && photo._ !== 'userProfilePhotoEmpty' ? photo : undefined;\r\n  }\r\n\r\n  public getPeerMigratedTo(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return false;\r\n    }\r\n\r\n    const chat: Chat.chat = this.appChatsManager.getChat(peerId.toChatId());\r\n    if(chat && chat.migrated_to && chat.pFlags.deactivated) {\r\n      return getPeerId(chat.migrated_to as InputChannel.inputChannel);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public getOutputPeer(peerId: PeerId): Peer {\r\n    if(peerId.isUser()) {\r\n      return {_: 'peerUser', user_id: peerId.toUserId()};\r\n    }\r\n\r\n    const chatId = peerId.toChatId();\r\n    if(this.appChatsManager.isChannel(chatId)) {\r\n      return {_: 'peerChannel', channel_id: chatId};\r\n    }\r\n\r\n    return {_: 'peerChat', chat_id: chatId};\r\n  }\r\n\r\n  public getPeerString(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return this.appUsersManager.getUserString(peerId.toUserId());\r\n    }\r\n    return this.appChatsManager.getChatString(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerUsername(peerId: PeerId): string {\r\n    return this.getPeer(peerId).username || '';\r\n  }\r\n\r\n  public getPeer(peerId: PeerId) {\r\n    return peerId.isUser() ?\r\n      this.appUsersManager.getUser(peerId.toUserId()) :\r\n      this.appChatsManager.getChat(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerId(peerId: Parameters<typeof getPeerId>[0]) {\r\n    return getPeerId(peerId) || (isObject<InputPeer>(peerId) && peerId._ === 'inputPeerSelf' && this.peerId) || NULL_PEER_ID;\r\n  }\r\n\r\n  public getDialogPeer(peerId: PeerId): DialogPeer {\r\n    return {\r\n      _: 'dialogPeer',\r\n      peer: this.getOutputPeer(peerId)\r\n    };\r\n  }\r\n\r\n  public isChannel(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && this.appChatsManager.isChannel(peerId.toChatId());\r\n  }\r\n\r\n  public isMegagroup(peerId: PeerId) {\r\n    return !peerId.isUser() && this.appChatsManager.isMegagroup(peerId.toChatId());\r\n  }\r\n\r\n  public isAnyGroup(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && !this.appChatsManager.isBroadcast(peerId.toChatId());\r\n  }\r\n\r\n  public isBroadcast(peerId: PeerId): boolean {\r\n    return this.isChannel(peerId) && !this.isMegagroup(peerId);\r\n  }\r\n\r\n  public isBot(peerId: PeerId): boolean {\r\n    return peerId.isUser() && this.appUsersManager.isBot(peerId.toUserId());\r\n  }\r\n\r\n  public isContact(peerId: PeerId): boolean {\r\n    return peerId.isUser() && this.appUsersManager.isContact(peerId.toUserId());\r\n  }\r\n\r\n  public isUser(peerId: PeerId)/* : peerId is UserId */ {\r\n    return isUser(peerId);\r\n  }\r\n\r\n  public isAnyChat(peerId: PeerId) {\r\n    return isAnyChat(peerId);\r\n  }\r\n\r\n  public isRestricted(peerId: PeerId) {\r\n    return peerId.isUser() ? this.appUsersManager.isRestricted(peerId.toUserId()) : this.appChatsManager.isRestricted(peerId.toChatId());\r\n  }\r\n\r\n  public getRestrictionReasonText(peerId: PeerId) {\r\n    const peer: Chat.channel | User.user = this.getPeer(peerId);\r\n    const reason = peer.restriction_reason ? getRestrictionReason(peer.restriction_reason) : undefined;\r\n    if(reason) {\r\n      return reason.text;\r\n    } else {\r\n      return peerId.isUser() ? 'This user is restricted' : 'This chat is restricted';\r\n    }\r\n  }\r\n\r\n  /* public getInputPeer(peerString: string): InputPeer {\r\n    var firstChar = peerString.charAt(0);\r\n    var peerParams = peerString.substr(1).split('_');\r\n    let id = +peerParams[0];\r\n\r\n    if(firstChar === 'u') {\r\n      //appUsersManager.saveUserAccess(id, peerParams[1]);\r\n\r\n      return {\r\n        _: 'inputPeerUser',\r\n        user_id: id,\r\n        access_hash: peerParams[1]\r\n      };\r\n    } else if(firstChar === 'c' || firstChar === 's') {\r\n      //appChatsManager.saveChannelAccess(id, peerParams[1]);\r\n      if(firstChar === 's') {\r\n        appChatsManager.saveIsMegagroup(id);\r\n      }\r\n\r\n      return {\r\n        _: 'inputPeerChannel',\r\n        channel_id: id,\r\n        access_hash: peerParams[1] || '0'\r\n      };\r\n    } else {\r\n      return {\r\n        _: 'inputPeerChat',\r\n        chat_id: id\r\n      };\r\n    }\r\n  } */\r\n\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId: true): Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer>;\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: false): InputNotifyPeer.inputNotifyPeer;\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: boolean): InputNotifyPeer {\r\n    if(ignorePeerId) {\r\n      if(peerId.isUser()) {\r\n        return {_: 'inputNotifyUsers'};\r\n      } else {\r\n        if(this.isBroadcast(peerId)) {\r\n          return {_: 'inputNotifyBroadcasts'};\r\n        } else {\r\n          return {_: 'inputNotifyChats'};\r\n        }\r\n      }\r\n    } else {\r\n      return {\r\n        _: 'inputNotifyPeer',\r\n        peer: this.getInputPeerById(peerId)\r\n      };\r\n    }\r\n  }\r\n\r\n  public getInputPeerById(peerId: PeerId): InputPeer {\r\n    if(!peerId) {\r\n      return {_: 'inputPeerEmpty'};\r\n    }\r\n\r\n    if(!peerId.isUser()) {\r\n      const chatId = peerId.toChatId();\r\n      return this.appChatsManager.getInputPeer(chatId);\r\n    }\r\n\r\n    const userId = peerId.toUserId();\r\n    return this.appUsersManager.getUserInputPeer(userId);\r\n  }\r\n\r\n  /**\r\n   * ! use it only in safe places like requests\r\n   */\r\n  public getInputPeerSelf(): InputPeer.inputPeerSelf {\r\n    return {_: 'inputPeerSelf'};\r\n  }\r\n\r\n  public getInputDialogPeerById(peerId: PeerId | InputPeer): InputDialogPeer {\r\n    return {\r\n      _: 'inputDialogPeer',\r\n      peer: isObject<InputPeer>(peerId) ? peerId : this.getInputPeerById(peerId)\r\n    };\r\n  }\r\n\r\n  public getPeerSearchText(peerId: PeerId) {\r\n    let text: string;\r\n    if(this.isUser(peerId)) {\r\n      text = '%pu ' + this.appUsersManager.getUserSearchText(peerId.toUserId());\r\n    } else {\r\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\r\n      text = '%pg ' + (chat.title || '');\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  public getDialogType(peerId: PeerId): PeerType {\r\n    if(this.isMegagroup(peerId)) {\r\n      return 'megagroup';\r\n    } else if(this.isChannel(peerId)) {\r\n      return 'channel';\r\n    } else if(!this.isUser(peerId)) {\r\n      return 'group';\r\n    } else {\r\n      return peerId === this.peerId ? 'saved' : 'chat';\r\n    }\r\n  }\r\n\r\n  public getDeleteButtonText(peerId: PeerId): Extract<LangPackKey, 'ChannelDelete' | 'ChatList.Context.LeaveChannel' | 'DeleteMega' | 'ChatList.Context.LeaveGroup' | 'ChatList.Context.DeleteChat'> {\r\n    switch(this.getDialogType(peerId)) {\r\n      case 'channel':\r\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'ChannelDelete' : 'ChatList.Context.LeaveChannel';\r\n\r\n      case 'megagroup':\r\n      case 'group':\r\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'DeleteMega' : 'ChatList.Context.LeaveGroup';\r\n\r\n      default:\r\n        return 'ChatList.Context.DeleteChat';\r\n    }\r\n  }\r\n\r\n  public noForwards(peerId: PeerId) {\r\n    if(peerId.isUser()) return false;\r\n    else {\r\n      const chat = this.appChatsManager.getChatTyped(peerId.toChatId());\r\n      return !!(chat as Chat.chat).pFlags?.noforwards;\r\n    }\r\n  }\r\n}\r\n\r\nexport type IsPeerType = 'isChannel' | 'isMegagroup' | 'isAnyGroup' | 'isBroadcast' | 'isBot' | 'isContact' | 'isUser' | 'isAnyChat';\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {Photo, PhotoSize, PhotosPhotos} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\nimport {AppManager} from './manager';\n\nexport type MyPhoto = Photo.photo;\n\n// TIMES = 2 DUE TO SIDEBAR AND CHAT\n// let TEST_FILE_REFERENCE = \"5440692274120994569\", TEST_FILE_REFERENCE_TIMES = 2;\n\nexport class AppPhotosManager extends AppManager {\n  private photos: {\n    [id: string]: MyPhoto\n  } = {};\n\n  public savePhoto(photo: Photo, context?: ReferenceContext) {\n    if(!photo || photo._ === 'photoEmpty') return;\n\n    /* if(photo.id === TEST_FILE_REFERENCE) {\n      console.warn('Testing FILE_REFERENCE_EXPIRED');\n      const bytes = [2, 67, 175, 43, 190, 0, 0, 20, 62, 95, 111, 33, 45, 99, 220, 116, 218, 11, 167, 127, 213, 18, 127, 32, 243, 202, 117, 80, 30];\n      //photo.file_reference = new Uint8Array(bytes);\n      photo.file_reference = bytes;\n      if(!--TEST_FILE_REFERENCE_TIMES) {\n        TEST_FILE_REFERENCE = '';\n      }\n    } */\n\n    const oldPhoto = this.photos[photo.id];\n    if(photo.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldPhoto, photo);\n      this.referenceDatabase.saveContext(photo.file_reference, context);\n    }\n\n    if(photo.sizes?.length) {\n      // * sometimes photoStrippedSize can be the last item\n      photo.sizes.sort((a, b) => {\n        return ((a as PhotoSize.photoSize).size || ((a as PhotoSize.photoSizeProgressive).sizes ? Infinity : 0)) - ((b as PhotoSize.photoSize).size || ((b as PhotoSize.photoSizeProgressive).sizes ? Infinity : 0));\n      });\n\n      const size = photo.sizes[photo.sizes.length - 1];\n      if(size._ === 'photoSizeProgressive') {\n        size.size = size.sizes[size.sizes.length - 1];\n      }\n    }\n\n    if(oldPhoto) {\n      return Object.assign(oldPhoto, photo);\n    }\n\n    return this.photos[photo.id] = photo;\n  }\n\n  public getUserPhotos(userId: UserId, maxId: Photo.photo['id'] = '0', limit: number = 20) {\n    const inputUser = this.appUsersManager.getUserInput(userId);\n    return this.apiManager.invokeApiCacheable('photos.getUserPhotos', {\n      user_id: inputUser,\n      offset: 0,\n      limit,\n      max_id: maxId\n    }, {cacheSeconds: 60}).then((photosResult) => {\n      this.appUsersManager.saveApiUsers(photosResult.users);\n      const photoIds = photosResult.photos.map((photo, idx) => {\n        photosResult.photos[idx] = this.savePhoto(photo, {type: 'profilePhoto', peerId: userId.toPeerId()});\n        return photo.id;\n      });\n\n      // ! WARNING !\n      if(maxId !== '0' && maxId) {\n        const idx = photoIds.indexOf(maxId);\n        if(idx !== -1) {\n          photoIds.splice(idx, 1);\n        }\n      }\n\n      return {\n        count: (photosResult as PhotosPhotos.photosPhotosSlice).count || photoIds.length,\n        photos: photoIds\n      };\n    });\n  }\n\n  /* public getPhotoURL(photo: MTPhoto | MTMyDocument, photoSize: MTPhotoSize) {\n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize);\n\n    return {url: getFileURL('photo', downloadOptions), location: downloadOptions.location};\n  } */\n\n  /* public isDownloaded(media: any) {\n    const isPhoto = media._ === 'photo';\n    const photo = isPhoto ? this.getPhoto(media.id) : null;\n    let isDownloaded: boolean;\n    if(photo) {\n      isDownloaded = photo.downloaded > 0;\n    } else {\n      const cachedThumb = this.getDocumentCachedThumb(media.id);\n      isDownloaded = cachedThumb?.downloaded > 0;\n    }\n\n    return isDownloaded;\n  } */\n\n  public getPhoto(photoId: any/* MyPhoto | string */): MyPhoto {\n    return isObject(photoId) ? photoId as MyPhoto : this.photos[photoId as any as string];\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport copy from '../../helpers/object/copy';\r\nimport {InputMedia, Message, MessageEntity, MessageMedia, Poll, PollResults} from '../../layer';\r\nimport {logger, LogTypes} from '../logger';\r\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\r\nimport {AppManager} from './manager';\r\nimport getServerMessageId from './utils/messageId/getServerMessageId';\r\n\r\ntype PollId = Poll['id'];\r\n\r\nexport class AppPollsManager extends AppManager {\r\n  public polls: {[id: PollId]: Poll} = {};\r\n  public results: {[id: PollId]: PollResults} = {};\r\n  public pollToMessages: {[id: PollId]: Set<string>} = {};\r\n\r\n  private log = logger('POLLS', LogTypes.Error);\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateMessagePoll: (update) => {\r\n        this.log('updateMessagePoll:', update);\r\n\r\n        let poll: Poll = update.poll || this.polls[update.poll_id];\r\n        if(!poll) {\r\n          return;\r\n        }\r\n\r\n        let results = update.results;\r\n        const ret = this.savePoll(poll, results as any);\r\n        poll = ret.poll;\r\n        results = ret.results;\r\n\r\n        this.rootScope.dispatchEvent('poll_update', {poll, results: results as any});\r\n      }\r\n    });\r\n  }\r\n\r\n  public savePoll(poll: Poll, results: PollResults, message?: Message.message) {\r\n    if(message) {\r\n      this.updatePollToMessage(message, true);\r\n    }\r\n\r\n    const id = poll.id;\r\n    if(this.polls[id]) {\r\n      poll = Object.assign(this.polls[id], poll);\r\n      results = this.saveResults(poll, results);\r\n    } else {\r\n      this.polls[id] = poll;\r\n\r\n      poll.chosenIndexes = [];\r\n      results = this.saveResults(poll, results);\r\n    }\r\n\r\n    return {poll, results};\r\n  }\r\n\r\n  public saveResults(poll: Poll, results: PollResults) {\r\n    if(this.results[poll.id]) {\r\n      results = Object.assign(this.results[poll.id], results);\r\n    } else {\r\n      this.results[poll.id] = results;\r\n    }\r\n\r\n    if(!results.pFlags.min) { // ! https://core.telegram.org/constructor/pollResults - min\r\n      poll.chosenIndexes.length = 0;\r\n      if(results?.results?.length) {\r\n        results.results.forEach((answer, idx) => {\r\n          if(answer.pFlags?.chosen) {\r\n            poll.chosenIndexes.push(idx);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  public getPoll(pollId: PollId): {poll: Poll, results: PollResults} {\r\n    return {\r\n      poll: this.polls[pollId],\r\n      results: this.results[pollId]\r\n    };\r\n  }\r\n\r\n  public getInputMediaPoll(poll: Poll, correctAnswers?: Uint8Array[], solution?: string, solutionEntities?: MessageEntity[]): InputMedia.inputMediaPoll {\r\n    if(solution) {\r\n      if(!solutionEntities) {\r\n        solutionEntities = [];\r\n      }\r\n\r\n      solution = parseMarkdown(solution, solutionEntities);\r\n    } else {\r\n      solution = undefined; // can be string here\r\n    }\r\n\r\n    return {\r\n      _: 'inputMediaPoll',\r\n      poll,\r\n      correct_answers: correctAnswers,\r\n      solution,\r\n      solution_entities: solution ? solutionEntities : undefined\r\n    };\r\n  }\r\n\r\n  public updatePollToMessage(message: Message.message, add: boolean) {\r\n    const {id} = (message.media as MessageMedia.messageMediaPoll).poll;\r\n    let set = this.pollToMessages[id];\r\n\r\n    if(!add && !set) {\r\n      return;\r\n    }\r\n\r\n    if(!set) {\r\n      set = this.pollToMessages[id] = new Set();\r\n    }\r\n\r\n    const key = message.peerId + '_' + message.mid;\r\n    if(add) set.add(key);\r\n    else set.delete(key);\r\n\r\n    if(!add && !set.size) {\r\n      delete this.polls[id];\r\n      delete this.results[id];\r\n      delete this.pollToMessages[id];\r\n    }\r\n  }\r\n\r\n  public sendVote(message: Message.message, optionIds: number[]): Promise<void> {\r\n    const poll: Poll = (message.media as MessageMedia.messageMediaPoll).poll;\r\n\r\n    const options: Uint8Array[] = optionIds.map((index) => {\r\n      return poll.answers[index].option;\r\n    });\r\n\r\n    const messageId = message.mid;\r\n    const peerId = message.peerId;\r\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\r\n\r\n    if(message.pFlags.is_outgoing) {\r\n      return this.appMessagesManager.invokeAfterMessageIsSent(messageId, 'sendVote', (message) => {\r\n        this.log('invoke sendVote callback');\r\n        return this.sendVote(message as Message.message, optionIds);\r\n      });\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.sendVote', {\r\n      peer: inputPeer,\r\n      msg_id: getServerMessageId(message.mid),\r\n      options\r\n    }).then((updates) => {\r\n      this.log('sendVote updates:', updates);\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getResults(message: Message.message) {\r\n    const inputPeer = this.appPeersManager.getInputPeerById(message.peerId);\r\n\r\n    return this.apiManager.invokeApi('messages.getPollResults', {\r\n      peer: inputPeer,\r\n      msg_id: getServerMessageId(message.mid)\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n      this.log('getResults updates:', updates);\r\n    });\r\n  }\r\n\r\n  public getVotes(message: Message.message, option?: Uint8Array, offset?: string, limit = 20) {\r\n    return this.apiManager.invokeApi('messages.getPollVotes', {\r\n      peer: this.appPeersManager.getInputPeerById(message.peerId),\r\n      id: getServerMessageId(message.mid),\r\n      option,\r\n      offset,\r\n      limit\r\n    }).then((votesList) => {\r\n      this.log('getPollVotes messages:', votesList);\r\n\r\n      this.appUsersManager.saveApiUsers(votesList.users);\r\n\r\n      return votesList;\r\n    });\r\n  }\r\n\r\n  public stopPoll(message: Message.message) {\r\n    const poll: Poll = (message.media as MessageMedia.messageMediaPoll).poll;\r\n\r\n    if(poll.pFlags.closed) return Promise.resolve();\r\n\r\n    const newPoll = copy(poll);\r\n    newPoll.pFlags.closed = true;\r\n    return this.appMessagesManager.editMessage(message, undefined, {\r\n      newMedia: this.getInputMediaPoll(newPoll)\r\n    }).then(() => {\r\n      // console.log('stopped poll');\r\n    }, err => {\r\n      this.log.error('stopPoll error:', err);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport {InputPrivacyKey, InputPrivacyRule, PrivacyRule, PrivacyKey, GlobalPrivacySettings} from '../../layer';\r\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\r\nimport {AppManager} from './manager';\r\n\r\nexport class AppPrivacyManager extends AppManager {\r\n  private privacy: Partial<{\r\n    [key in PrivacyKey['_']]: PrivacyRule[] | Promise<PrivacyRule[]>\r\n  }> = {};\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updatePrivacy: (update) => {\r\n        const key = update.key._;\r\n        this.privacy[key] = update.rules;\r\n        this.rootScope.dispatchEvent('privacy_update', update);\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPrivacy(inputKey: InputPrivacyKey['_'], rules: InputPrivacyRule[]) {\r\n    return this.apiManager.invokeApi('account.setPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      },\r\n      rules\r\n    }).then((privacyRules) => {\r\n      this.appUsersManager.saveApiUsers(privacyRules.users);\r\n      this.appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updatePrivacy',\r\n        key: {\r\n          _: convertInputKeyToKey(inputKey)\r\n        },\r\n        rules: rules.map((inputRule) => {\r\n          const rule: PrivacyRule = {} as any;\r\n          Object.assign(rule, inputRule);\r\n          rule._ = convertInputKeyToKey(rule._) as any;\r\n          return rule;\r\n        })\r\n      });\r\n\r\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getPrivacy(inputKey: InputPrivacyKey['_']) {\r\n    const privacyKey: PrivacyKey['_'] = convertInputKeyToKey(inputKey) as any;\r\n    const rules = this.privacy[privacyKey];\r\n    if(rules) {\r\n      return Promise.resolve(rules);\r\n    }\r\n\r\n    return this.privacy[privacyKey] = this.apiManager.invokeApi('account.getPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      }\r\n    }).then((privacyRules) => {\r\n      this.appUsersManager.saveApiUsers(privacyRules.users);\r\n      this.appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return this.privacy[privacyKey] = privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getGlobalPrivacySettings() {\r\n    return this.apiManager.invokeApi('account.getGlobalPrivacySettings');\r\n  }\r\n\r\n  public setGlobalPrivacySettings(settings: GlobalPrivacySettings) {\r\n    return this.apiManager.invokeApi('account.setGlobalPrivacySettings', {settings});\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {MyTopPeer} from './appUsersManager';\nimport tsNow from '../../helpers/tsNow';\nimport {ChannelParticipantsFilter, ChannelsChannelParticipants, ChannelParticipant, Chat, ChatFull, ChatParticipants, ChatPhoto, ExportedChatInvite, InputChannel, InputFile, SendMessageAction, Update, UserFull, Photo, PhotoSize, Updates} from '../../layer';\nimport SearchIndex from '../searchIndex';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport getPhotoInput from './utils/photos/getPhotoInput';\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\nimport ctx from '../../environment/ctx';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\n\nexport type UserTyping = Partial<{userId: UserId, action: SendMessageAction, timeout: number}>;\n\nconst PEER_FULL_TTL = 3 * 60e3;\n\nexport class AppProfileManager extends AppManager {\n  // private botInfos: any = {};\n  private usersFull: {[id: UserId]: UserFull.userFull} = {};\n  private chatsFull: {[id: ChatId]: ChatFull} = {};\n  private fullExpiration: {[peerId: PeerId]: number} = {};\n  private typingsInPeer: {[peerId: PeerId]: UserTyping[]};\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateChatParticipants: (update) => {\n        const participants = update.participants;\n        if(participants._ === 'chatParticipants') {\n          const chatId = participants.chat_id;\n          const chatFull = this.chatsFull[chatId] as ChatFull.chatFull;\n          if(chatFull !== undefined) {\n            chatFull.participants = participants;\n            this.rootScope.dispatchEvent('chat_full_update', chatId);\n          }\n        }\n      },\n\n      updateChatParticipantAdd: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              return;\n            }\n          }\n\n          participants.push({\n            _: 'chatParticipant',\n            user_id: update.user_id,\n            inviter_id: update.inviter_id,\n            date: tsNow(true)\n          });\n\n          _participants.version = update.version;\n          this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n        }\n      },\n\n      updateChatParticipantDelete: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              participants.splice(i, 1);\n              _participants.version = update.version;\n              this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n              return;\n            }\n          }\n        }\n      },\n\n      updateUserTyping: this.onUpdateUserTyping,\n      updateChatUserTyping: this.onUpdateUserTyping,\n      updateChannelUserTyping: this.onUpdateUserTyping,\n\n      updatePeerBlocked: this.onUpdatePeerBlocked\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const fullChat = this.chatsFull[chatId];\n      const chat: Chat.chat | Chat.channel | Chat.chatForbidden | Chat.channelForbidden = this.appChatsManager.getChat(chatId);\n      if(!fullChat || !chat) {\n        return;\n      }\n\n      let updated = false;\n      if(!!fullChat.call !== !!(chat as Chat.chat).pFlags?.call_active) {\n        updated = true;\n      }\n\n      const {photo} = chat as Chat.chat;\n      if(photo) {\n        const hasChatPhoto = photo._ !== 'chatPhotoEmpty';\n        const hasFullChatPhoto = !!(fullChat.chat_photo && fullChat.chat_photo._ !== 'photoEmpty'); // chat_photo can be missing\n        if(\n          hasChatPhoto !== hasFullChatPhoto || (\n            hasChatPhoto &&\n            photo.photo_id !== fullChat.chat_photo?.id\n          )\n        ) {\n          updated = true;\n        }\n      }\n\n      if(updated) {\n        this.refreshFullPeer(chatId.toPeerId(true));\n      }\n    });\n\n    this.rootScope.addEventListener('channel_update', (chatId) => {\n      this.refreshFullPeer(chatId.toPeerId(true));\n    });\n\n    // * genius\n    this.rootScope.addEventListener('chat_full_update', (chatId) => {\n      this.rootScope.dispatchEvent('peer_full_update', chatId.toPeerId(true));\n    });\n\n    // * genius\n    this.rootScope.addEventListener('user_full_update', (userId) => {\n      this.rootScope.dispatchEvent('peer_full_update', userId.toPeerId(false));\n    });\n\n    this.rootScope.addEventListener('invalidate_participants', (chatId) => {\n      this.invalidateChannelParticipants(chatId);\n    });\n\n    this.typingsInPeer = {};\n  }\n\n  /* public saveBotInfo(botInfo: any) {\n    const botId = botInfo && botInfo.user_id;\n    if(!botId) {\n      return null;\n    }\n\n    const commands: any = {};\n    botInfo.commands.forEach((botCommand: any) => {\n      commands[botCommand.command] = botCommand.description;\n    });\n\n    return this.botInfos[botId] = {\n      id: botId,\n      version: botInfo.version,\n      shareText: botInfo.share_text,\n      description: botInfo.description,\n      commands: commands\n    };\n  } */\n\n  public getProfile(id: UserId, override?: true) {\n    if(this.usersFull[id] && !override && Date.now() < this.fullExpiration[id.toPeerId()]) {\n      return this.usersFull[id];\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'users.getFullUser',\n      params: {\n        id: this.appUsersManager.getUserInput(id)\n      },\n      processResult: (usersUserFull) => {\n        this.appChatsManager.saveApiChats(usersUserFull.chats, true);\n        this.appUsersManager.saveApiUsers(usersUserFull.users);\n\n        const userFull = usersUserFull.full_user;\n        const peerId = id.toPeerId(false);\n        if(userFull.profile_photo) {\n          userFull.profile_photo = this.appPhotosManager.savePhoto(userFull.profile_photo, {type: 'profilePhoto', peerId});\n        }\n\n        const botInfo = userFull.bot_info;\n        if(botInfo) {\n          const referenceContext: ReferenceContext = {type: 'userFull', userId: id};\n          botInfo.description_document = this.appDocsManager.saveDoc(botInfo.description_document, referenceContext);\n          botInfo.description_photo = this.appPhotosManager.savePhoto(botInfo.description_photo, referenceContext);\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: userFull.notify_settings\n        });\n\n        this.usersFull[id] = userFull;\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\n\n        /* if(userFull.bot_info) {\n          userFull.bot_info = this.saveBotInfo(userFull.bot_info) as any;\n        } */\n\n        // appMessagesManager.savePinnedMessage(id, userFull.pinned_msg_id);\n\n        this.rootScope.dispatchEvent('user_full_update', id);\n        return userFull;\n      }\n    });\n  }\n\n  public getProfileByPeerId(peerId: PeerId, override?: true) {\n    if(this.appPeersManager.isAnyChat(peerId)) return this.getChatFull(peerId.toChatId(), override);\n    else return this.getProfile(peerId.toUserId(), override);\n  }\n\n  public getCachedFullChat(chatId: ChatId) {\n    return this.chatsFull[chatId];\n  }\n\n  public getCachedFullUser(userId: UserId) {\n    return this.usersFull[userId];\n  }\n\n  public getCachedProfileByPeerId(peerId: PeerId) {\n    return peerId.isUser() ? this.getCachedFullUser(peerId.toUserId()) : this.getCachedFullChat(peerId.toChatId());\n  }\n\n  public async getFullPhoto(peerId: PeerId) {\n    const profile = await this.getProfileByPeerId(peerId);\n    switch(profile._) {\n      case 'userFull':\n        return profile.profile_photo;\n      case 'channelFull':\n      case 'chatFull':\n        return profile.chat_photo;\n    }\n  }\n\n  /* public getPeerBots(peerId: PeerId) {\n    var peerBots: any[] = [];\n    if(peerId >= 0 && !appUsersManager.isBot(peerId) ||\n      (appPeersManager.isChannel(peerId) && !appPeersManager.isMegagroup(peerId))) {\n      return Promise.resolve(peerBots);\n    }\n    if(peerId >= 0) {\n      return this.getProfile(peerId).then((userFull: any) => {\n        var botInfo = userFull.bot_info;\n        if(botInfo && botInfo._ !== 'botInfoEmpty') {\n          peerBots.push(botInfo);\n        }\n        return peerBots;\n      });\n    }\n\n    return this.getChatFull(peerId.toChatId()).then((chatFull: any) => {\n      chatFull.bot_info.forEach((botInfo: any) => {\n        peerBots.push(this.saveBotInfo(botInfo))\n      });\n      return peerBots;\n    });\n  } */\n\n  public getChatFull(id: ChatId, override?: true) {\n    if(this.appChatsManager.isChannel(id)) {\n      return this.getChannelFull(id, override);\n    }\n\n    const peerId = id.toPeerId(true);\n    const fullChat = this.chatsFull[id] as ChatFull.chatFull;\n    if(fullChat && !override && Date.now() < this.fullExpiration[peerId]) {\n      const chat: Chat.chat = this.appChatsManager.getChat(id);\n      if(\n        chat.pFlags.left ||\n        chat.pFlags.deactivated ||\n        chat.version === (fullChat.participants as ChatParticipants.chatParticipants).version\n      ) {\n        return fullChat as ChatFull;\n      }\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getFullChat',\n      params: {\n        chat_id: id\n      },\n      processResult: (result) => {\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const chatFull = result.full_chat as ChatFull.chatFull;\n        if(chatFull && chatFull.chat_photo && chatFull.chat_photo.id) {\n          chatFull.chat_photo = this.appPhotosManager.savePhoto(chatFull.chat_photo, {type: 'profilePhoto', peerId});\n        }\n\n        if(chatFull.call) {\n          this.appGroupCallsManager.saveGroupCall(chatFull.call, id);\n        }\n\n        // appMessagesManager.savePinnedMessage(peerId, fullChat.pinned_msg_id);\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: chatFull.notify_settings\n        });\n\n        this.chatsFull[id] = chatFull;\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return chatFull;\n      }\n    });\n  }\n\n  public async getChatInviteLink(id: ChatId, force?: boolean) {\n    const chatFull = await this.getChatFull(id);\n    if(!force &&\n      chatFull.exported_invite &&\n      chatFull.exported_invite._ == 'chatInviteExported') {\n      return chatFull.exported_invite.link;\n    }\n\n    return this.apiManager.invokeApi('messages.exportChatInvite', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true))\n    }).then((exportedInvite) => {\n      if(this.chatsFull[id] !== undefined) {\n        this.chatsFull[id].exported_invite = exportedInvite;\n      }\n\n      return (exportedInvite as ExportedChatInvite.chatInviteExported).link;\n    });\n  }\n\n  public getChannelParticipants(id: ChatId, filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'}, limit = 200, offset = 0) {\n    if(filter._ === 'channelParticipantsRecent') {\n      const chat = this.appChatsManager.getChat(id);\n      if(chat &&\n          chat.pFlags && (\n      // chat.pFlags.kicked ||\n        chat.pFlags.broadcast && !chat.pFlags.creator && !chat.admin_rights\n      )) {\n        return Promise.reject();\n      }\n    }\n\n    return this.apiManager.invokeApiCacheable('channels.getParticipants', {\n      channel: this.appChatsManager.getChannelInput(id),\n      filter,\n      offset,\n      limit,\n      hash: '0'\n    }, {cacheSeconds: 60}).then((result) => {\n      this.appUsersManager.saveApiUsers((result as ChannelsChannelParticipants.channelsChannelParticipants).users);\n      return result as ChannelsChannelParticipants.channelsChannelParticipants;\n    });\n    /* let maybeAddSelf = (participants: any[]) => {\n      let chat = appChatsManager.getChat(id);\n      let selfMustBeFirst = filter._ === 'channelParticipantsRecent' &&\n                            !offset &&\n                            !chat.pFlags.kicked &&\n                            !chat.pFlags.left;\n\n      if(selfMustBeFirst) {\n        participants = copy(participants);\n        let myID = appUsersManager.getSelf().id;\n        let myIndex = participants.findIndex((p) => p.user_id === myID);\n        let myParticipant;\n\n        if(myIndex !== -1) {\n          myParticipant = participants[myIndex];\n          participants.splice(myIndex, 1);\n        } else {\n          myParticipant = {_: 'channelParticipantSelf', user_id: myID};\n        }\n\n        participants.unshift(myParticipant);\n      }\n\n      return participants;\n    } */\n  }\n\n  public getChannelParticipant(id: ChatId, peerId: PeerId) {\n    return this.apiManager.invokeApiSingle('channels.getParticipant', {\n      channel: this.appChatsManager.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId)\n    }).then((channelParticipant) => {\n      this.appUsersManager.saveApiUsers(channelParticipant.users);\n      return channelParticipant.participant;\n    });\n  }\n\n  public getChannelFull(id: ChatId, override?: true) {\n    const peerId = id.toPeerId(true);\n    if(this.chatsFull[id] !== undefined && !override && Date.now() < this.fullExpiration[peerId]) {\n      return this.chatsFull[id] as ChatFull.channelFull;\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getFullChannel',\n      params: {\n        channel: this.appChatsManager.getChannelInput(id)\n      },\n      processResult: (result) => {\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const fullChannel = result.full_chat as ChatFull.channelFull;\n        if(fullChannel && fullChannel.chat_photo.id) {\n          fullChannel.chat_photo = this.appPhotosManager.savePhoto(fullChannel.chat_photo, {type: 'profilePhoto', peerId});\n          // appPhotosManager.savePhoto(fullChannel.chat_photo);\n        }\n\n        if(fullChannel.call) {\n          this.appGroupCallsManager.saveGroupCall(fullChannel.call, id);\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: fullChannel.notify_settings\n        });\n\n        this.chatsFull[id] = fullChannel;\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return fullChannel;\n      },\n      processError: (error) => {\n        switch(error.type) {\n          case 'CHANNEL_PRIVATE':\n            const channel: Chat.channel | Chat.channelForbidden = this.appChatsManager.getChat(id);\n            this.apiUpdatesManager.processUpdateMessage({\n              _: 'updates',\n              updates: [{\n                _: 'updateChannel',\n                channel_id: id\n              }],\n              chats: [{\n                _: 'channelForbidden',\n                id,\n                access_hash: channel.access_hash,\n                title: channel.title,\n                pFlags: channel.pFlags\n              }],\n              users: []\n            } as Updates.updates);\n            break;\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  public getMentions(chatId: ChatId, query: string, threadId?: number): Promise<PeerId[]> {\n    const processUserIds = (topPeers: MyTopPeer[]) => {\n      const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n      /* const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n\n      const index = new SearchIndex<number>(!startsWithAt, !startsWithAt); */\n      const index = new SearchIndex<PeerId>({\n        ignoreCase: true\n      });\n\n      const ratingMap: Map<PeerId, number> = new Map();\n      topPeers.forEach((peer) => {\n        index.indexObject(peer.id, this.appUsersManager.getUserSearchText(peer.id));\n        ratingMap.set(peer.id, peer.rating);\n      });\n\n      const peerIds = Array.from(index.search(query));\n      peerIds.sort((a, b) => ratingMap.get(b) - ratingMap.get(a));\n      return peerIds;\n    };\n\n    let promise: Promise<PeerId[]>;\n    if(this.appChatsManager.isChannel(chatId)) {\n      promise = this.getChannelParticipants(chatId, {\n        _: 'channelParticipantsMentions',\n        q: query,\n        top_msg_id: getServerMessageId(threadId)\n      }, 50, 0).then((cP) => {\n        return cP.participants.map((p) => getParticipantPeerId(p));\n      });\n    } else if(chatId) {\n      promise = Promise.resolve(this.getChatFull(chatId)).then((chatFull) => {\n        return ((chatFull as ChatFull.chatFull).participants as ChatParticipants.chatParticipants).participants.map((p) => p.user_id.toPeerId());\n      });\n    } else {\n      promise = Promise.resolve([]);\n    }\n\n    return Promise.all([\n      // [],\n      this.appUsersManager.getTopPeers('bots_inline').catch(() => [] as MyTopPeer[]),\n      promise\n    ]).then((results) => {\n      const peers = results[0].concat(results[1].map((peerId) => ({id: peerId, rating: 0})));\n\n      return processUserIds(peers);\n    });\n  }\n\n  private invalidateChannelParticipants(id: ChatId) {\n    this.apiManager.clearCache('channels.getParticipants', (params) => (params.channel as InputChannel.inputChannel).channel_id === id);\n    this.refreshFullPeer(id.toPeerId(true));\n  }\n\n  private refreshFullPeer(peerId: PeerId) {\n    if(peerId.isUser()) {\n      const userId = peerId.toUserId();\n      delete this.usersFull[userId];\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    } else {\n      const chatId = peerId.toChatId();\n      delete this.chatsFull[chatId];\n      this.rootScope.dispatchEvent('chat_full_update', chatId);\n    }\n\n    // ! эта строчка будет создавать race condition:\n    // ! запрос вернёт chat с установленным флагом call_not_empty, хотя сам апдейт уже будет применён\n    // this.getProfileByPeerId(peerId, true);\n  }\n\n  public updateProfile(first_name?: string, last_name?: string, about?: string) {\n    return this.apiManager.invokeApi('account.updateProfile', {\n      first_name,\n      last_name,\n      about\n    }).then((user) => {\n      this.appUsersManager.saveApiUser(user);\n\n      if(about !== undefined) {\n        const peerId = user.id.toPeerId();\n        const userFull = this.usersFull[user.id];\n        if(userFull) {\n          userFull.about = about;\n        }\n\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return this.getProfile(user.id, true);\n    });\n  }\n\n  public uploadProfilePhoto(inputFile: InputFile) {\n    return this.apiManager.invokeApi('photos.uploadProfilePhoto', {\n      file: inputFile\n    }).then((updateResult) => {\n      // ! sometimes can have no user in users\n      const photo = updateResult.photo as Photo.photo;\n      if(!updateResult.users.length) {\n        const strippedThumb = photo.sizes.find((size) => size._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n        updateResult.users.push({\n          ...this.appUsersManager.getSelf(),\n          photo: {\n            _: 'userProfilePhoto',\n            dc_id: photo.dc_id,\n            photo_id: photo.id,\n            stripped_thumb: strippedThumb?.bytes,\n            pFlags: {\n\n            }\n          }\n        });\n      }\n      this.appUsersManager.saveApiUsers(updateResult.users);\n\n      const myId = this.appPeersManager.peerId;\n      this.appPhotosManager.savePhoto(updateResult.photo, {\n        type: 'profilePhoto',\n        peerId: myId\n      });\n\n      const userId = myId.toUserId();\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateUserPhoto',\n        user_id: userId,\n        date: tsNow(true),\n        photo: this.appUsersManager.getUser(userId).photo,\n        previous: true\n      });\n    });\n  }\n\n  public deletePhotos(photoIds: string[]) {\n    return this.apiManager.invokeApiSingle('photos.deletePhotos', {\n      id: photoIds.map((photoId) => {\n        const photo = this.appPhotosManager.getPhoto(photoId);\n        return getPhotoInput(photo);\n      })\n    }).then((deletedList) => {\n\n    });\n  }\n\n  private verifyParticipantForOnlineCount(participant: {user_id: UserId}) {\n    const user = this.appUsersManager.getUser(participant.user_id);\n    return !!(user && user.status && user.status._ === 'userStatusOnline');\n  }\n\n  private reduceParticipantsForOnlineCount(participants: {user_id: UserId}[]) {\n    return participants.reduce((acc, participant) => {\n      return acc + +this.verifyParticipantForOnlineCount(participant);\n    }, 0);\n  }\n\n  public async getOnlines(id: ChatId): Promise<number> {\n    const minOnline = 1;\n    if(this.appChatsManager.isBroadcast(id)) {\n      return minOnline;\n    }\n\n    const chatInfo = await this.getChatFull(id);\n    if(this.appChatsManager.isMegagroup(id)) {\n      if((chatInfo as ChatFull.channelFull).participants_count <= 100) {\n        const channelParticipants = await this.getChannelParticipants(id, {_: 'channelParticipantsRecent'}, 100);\n        return this.reduceParticipantsForOnlineCount(channelParticipants.participants as ChannelParticipant.channelParticipant[]);\n      }\n\n      const res = await this.apiManager.invokeApiCacheable('messages.getOnlines', {\n        peer: this.appChatsManager.getChannelInputPeer(id)\n      }, {cacheSeconds: 60});\n\n      const onlines = res.onlines ?? minOnline;\n      return onlines;\n    }\n\n    const _participants = (chatInfo as ChatFull.chatFull).participants as ChatParticipants.chatParticipants;\n    if(_participants?.participants) {\n      return this.reduceParticipantsForOnlineCount(_participants.participants);\n    } else {\n      return minOnline;\n    }\n  }\n\n  private onUpdateUserTyping = (update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping) => {\n    const fromId = (update as Update.updateUserTyping).user_id ?\n      (update as Update.updateUserTyping).user_id.toPeerId() :\n      this.appPeersManager.getPeerId((update as Update.updateChatUserTyping).from_id);\n    if(this.appPeersManager.peerId === fromId || update.action._ === 'speakingInGroupCallAction') {\n      return;\n    }\n\n    const peerId = this.appPeersManager.getPeerId(update);\n    const typings = this.typingsInPeer[peerId] ?? (this.typingsInPeer[peerId] = []);\n    let typing = typings.find((t) => t.userId === fromId);\n\n    const cancelAction = () => {\n      delete typing.timeout;\n      // typings.findAndSplice((t) => t === typing);\n      const idx = typings.indexOf(typing);\n      if(idx !== -1) {\n        typings.splice(idx, 1);\n      }\n\n      this.rootScope.dispatchEvent('peer_typings', {peerId, typings});\n\n      if(!typings.length) {\n        delete this.typingsInPeer[peerId];\n      }\n    };\n\n    if(typing && typing.timeout !== undefined) {\n      clearTimeout(typing.timeout);\n    }\n\n    if(update.action._ === 'sendMessageCancelAction') {\n      if(!typing) {\n        return;\n      }\n\n      cancelAction();\n      return;\n    }\n\n    if(!typing) {\n      typing = {\n        userId: fromId\n      };\n\n      typings.push(typing);\n    }\n\n    // console.log('updateChatUserTyping', update, typings);\n\n    typing.action = update.action;\n\n    const hasUser = this.appUsersManager.hasUser(fromId);\n    if(!hasUser) {\n      // let's load user here\n      if(update._ === 'updateChatUserTyping') {\n        if(update.chat_id && this.appChatsManager.hasChat(update.chat_id) && !this.appChatsManager.isChannel(update.chat_id)) {\n          Promise.resolve(this.getChatFull(update.chat_id)).then(() => {\n            if(typing.timeout !== undefined && this.appUsersManager.hasUser(fromId)) {\n              this.rootScope.dispatchEvent('peer_typings', {peerId, typings});\n            }\n          });\n        }\n      }\n\n      // return;\n    } else {\n      this.appUsersManager.forceUserOnline(fromId);\n    }\n\n    typing.timeout = ctx.setTimeout(cancelAction, 6000);\n    if(hasUser) {\n      this.rootScope.dispatchEvent('peer_typings', {peerId, typings});\n    }\n  };\n\n  private onUpdatePeerBlocked = (update: Update.updatePeerBlocked) => {\n    const peerId = this.appPeersManager.getPeerId(update.peer_id);\n    if(this.appPeersManager.isUser(peerId)) {\n      const userId = peerId.toUserId();\n      const userFull = this.usersFull[userId];\n      if(userFull) {\n        if(update.blocked) userFull.pFlags.blocked = true;\n        else delete userFull.pFlags.blocked;\n      }\n\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    }\n\n    this.rootScope.dispatchEvent('peer_block', {peerId, blocked: update.blocked});\n  };\n\n  public getPeerTypings(peerId: PeerId) {\n    return this.typingsInPeer[peerId];\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Awaited} from '../types';\n\nexport default function callbackifyAll<T extends readonly unknown[] | [], R extends any>(\n  values: T,\n  callback: (result: { -readonly [P in keyof T]: Awaited<T[P]> }) => R\n): Promise<Awaited<R>> | R {\n  if(values.some((value) => value instanceof Promise)) {\n    return Promise.all(values).then(callback as any);\n  } else {\n    return callback(values as any);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport assumeType from '../../helpers/assumeType';\nimport callbackify from '../../helpers/callbackify';\nimport callbackifyAll from '../../helpers/callbackifyAll';\nimport copy from '../../helpers/object/copy';\nimport pause from '../../helpers/schedulers/pause';\nimport {AvailableReaction, Message, MessagePeerReaction, MessagesAvailableReactions, Reaction, ReactionCount, Update, Updates} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport reactionsEqual from './utils/reactions/reactionsEqual';\n\nconst SAVE_DOC_KEYS = [\n  'static_icon' as const,\n  'appear_animation' as const,\n  'select_animation' as const,\n  'activate_animation' as const,\n  'effect_animation' as const,\n  'around_animation' as const,\n  'center_icon' as const\n];\n\nconst REFERENCE_CONTEXT: ReferenceContext = {\n  type: 'reactions'\n};\n\nexport class AppReactionsManager extends AppManager {\n  private availableReactions: AvailableReaction[];\n  private sendReactionPromises: Map<string, Promise<any>>;\n  private lastSendingTimes: Map<string, number>;\n\n  protected after() {\n    this.rootScope.addEventListener('language_change', () => {\n      this.availableReactions = undefined;\n      this.getAvailableReactions();\n    });\n\n    this.sendReactionPromises = new Map();\n    this.lastSendingTimes = new Map();\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        Promise.resolve(this.getAvailableReactions()).then(async(availableReactions) => {\n          for(const availableReaction of availableReactions) {\n            await Promise.all([\n              availableReaction.around_animation && this.apiFileManager.downloadMedia({media: availableReaction.around_animation}),\n              availableReaction.static_icon && this.apiFileManager.downloadMedia({media: availableReaction.static_icon}),\n              availableReaction.appear_animation && this.apiFileManager.downloadMedia({media: availableReaction.appear_animation}),\n              availableReaction.center_icon && this.apiFileManager.downloadMedia({media: availableReaction.center_icon})\n            ]);\n\n            await pause(1000);\n          }\n        });\n      }, 7.5e3);\n    });\n  }\n\n  public getAvailableReactions() {\n    if(this.availableReactions) return this.availableReactions;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getAvailableReactions',\n      processResult: (messagesAvailableReactions) => {\n        assumeType<MessagesAvailableReactions.messagesAvailableReactions>(messagesAvailableReactions);\n\n        const availableReactions = this.availableReactions = messagesAvailableReactions.reactions;\n        for(const reaction of availableReactions) {\n          for(const key of SAVE_DOC_KEYS) {\n            if(!reaction[key]) {\n              continue;\n            }\n\n            reaction[key] = this.appDocsManager.saveDoc(reaction[key], REFERENCE_CONTEXT);\n          }\n        }\n\n        return availableReactions;\n      },\n      params: {\n        hash: 0\n      }\n    });\n  }\n\n  public getActiveAvailableReactions() {\n    return callbackify(this.getAvailableReactions(), (availableReactions) => {\n      return availableReactions.filter((availableReaction) => !availableReaction.pFlags.inactive);\n    });\n  }\n\n  public getAvailableReactionsForPeer(peerId: PeerId) {\n    const activeAvailableReactions = this.getActiveAvailableReactions();\n    if(peerId.isUser()) {\n      return this.unshiftQuickReaction(activeAvailableReactions);\n    }\n\n    const chatFull = this.appProfileManager.getChatFull(peerId.toChatId());\n    return callbackifyAll([activeAvailableReactions, chatFull, this.getQuickReaction()], ([activeAvailableReactions, chatFull, quickReaction]) => {\n      const chatAvailableReactions = chatFull.available_reactions ?? {_: 'chatReactionsNone'};\n\n      let filteredChatAvailableReactions: AvailableReaction[] = [];\n      if(chatAvailableReactions._ === 'chatReactionsAll') {\n        filteredChatAvailableReactions = activeAvailableReactions;\n      } else if(chatAvailableReactions._ === 'chatReactionsSome') {\n        filteredChatAvailableReactions = chatAvailableReactions.reactions.map((reaction) => {\n          return activeAvailableReactions.find((availableReaction) => availableReaction.reaction === (reaction as Reaction.reactionEmoji).emoticon);\n        }).filter(Boolean);\n      }\n\n      return this.unshiftQuickReactionInner(filteredChatAvailableReactions, quickReaction);\n    });\n  }\n\n  private unshiftQuickReactionInner(availableReactions: AvailableReaction[], quickReaction: Reaction | AvailableReaction) {\n    if(quickReaction && quickReaction._ !== 'reactionEmoji' && quickReaction._ !== 'availableReaction') return availableReactions;\n    const emoticon = (quickReaction as Reaction.reactionEmoji).emoticon || (quickReaction as AvailableReaction).reaction;\n    const availableReaction = findAndSplice(availableReactions, (availableReaction) => availableReaction.reaction === emoticon);\n    if(availableReaction) {\n      availableReactions.unshift(availableReaction);\n    }\n\n    return availableReactions;\n  }\n\n  private unshiftQuickReaction(\n    availableReactions: AvailableReaction[] | PromiseLike<AvailableReaction.availableReaction[]>,\n    quickReaction: ReturnType<AppReactionsManager['getQuickReaction']> = this.getQuickReaction()\n  ) {\n    return callbackifyAll([\n      availableReactions,\n      quickReaction\n    ], ([availableReactions, quickReaction]) => {\n      return this.unshiftQuickReactionInner(availableReactions, quickReaction);\n    });\n  }\n\n  public getAvailableReactionsByMessage(message: Message.message) {\n    if(!message) return [];\n    const peerId = (message.fwd_from?.channel_post && this.appPeersManager.isMegagroup(message.peerId) && message.fwdFromId) || message.peerId;\n    return this.getAvailableReactionsForPeer(peerId);\n  }\n\n  public isReactionActive(reaction: string) {\n    if(!this.availableReactions) return false;\n    return !!this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n  }\n\n  public getQuickReaction() {\n    return callbackifyAll([\n      this.apiManager.getConfig(),\n      this.getAvailableReactions()\n    ], ([config, availableReactions]) => {\n      const reaction = config.reactions_default;\n      if(reaction?._ === 'reactionEmoji') {\n        return availableReactions.find((availableReaction) => availableReaction.reaction === reaction.emoticon);\n      }\n\n      return reaction as Reaction.reactionCustomEmoji;\n    });\n  }\n\n  public getReactionCached(reaction: string) {\n    return this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n  }\n\n  public getReaction(reaction: string) {\n    return callbackify(this.getAvailableReactions(), () => {\n      return this.getReactionCached(reaction);\n    });\n  }\n\n  public getMessagesReactions(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessagesReactions',\n      params: {\n        id: mids.map((mid) => getServerMessageId(mid)),\n        peer: this.appPeersManager.getInputPeerById(peerId)\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n\n        // const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateMessageReactions') as Update.updateMessageReactions;\n        // return update.reactions;\n      }\n    });\n  }\n\n  public getMessageReactionsList(peerId: PeerId, mid: number, limit: number, reaction?: Reaction, offset?: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessageReactionsList',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: getServerMessageId(mid),\n        limit,\n        reaction,\n        offset\n      },\n      processResult: (messageReactionsList) => {\n        this.appUsersManager.saveApiUsers(messageReactionsList.users);\n        return messageReactionsList;\n      }\n    });\n  }\n\n  public setDefaultReaction(reaction: Reaction) {\n    return this.apiManager.invokeApi('messages.setDefaultReaction', {reaction}).then(async(value) => {\n      if(value) {\n        const appConfig = await this.apiManager.getConfig();\n        if(appConfig) {\n          appConfig.reactions_default = reaction;\n        }/*  else { // if no config or loading it - overwrite\n          this.apiManager.getAppConfig(true);\n        } */\n\n        this.rootScope.dispatchEvent('quick_reaction', reaction);\n      }\n\n      return value;\n    });\n  }\n\n  public async sendReaction(message: Message.message, reaction?: Reaction | AvailableReaction, onlyLocal?: boolean) {\n    if(reaction._ === 'availableReaction') {\n      reaction = {\n        _: 'reactionEmoji',\n        emoticon: reaction.reaction\n      };\n    }\n\n    const limit = await this.apiManager.getLimit('reactions');\n\n    const lastSendingTimeKey = message.peerId + '_' + message.mid;\n    const lastSendingTime = this.lastSendingTimes.get(lastSendingTimeKey);\n    if(lastSendingTime) {\n      return;\n    } else {\n      this.lastSendingTimes.set(lastSendingTimeKey, Date.now());\n      setTimeout(() => {\n        this.lastSendingTimes.delete(lastSendingTimeKey);\n      }, 333);\n    }\n\n    const {peerId, mid} = message;\n    const myPeerId = this.appPeersManager.peerId;\n\n    const unsetReactionCount = (reactionCount: ReactionCount) => {\n      --reactionCount.count;\n      delete reactionCount.chosen_order;\n\n      if(reactionsEqual(reaction as Reaction, reactionCount.reaction)) {\n        reaction = undefined as Reaction;\n      }\n\n      if(!reactionCount.count) {\n        indexOfAndSplice(reactions.results, reactionCount);\n      }/*  else {\n        insertInDescendSortedArray(reactions.results, chosenReaction, 'count', chosenReactionIdx);\n      } */\n\n      if(reactions.recent_reactions) {\n        findAndSplice(reactions.recent_reactions, (recentReaction) => reactionsEqual(recentReaction.reaction, reactionCount.reaction) && this.appPeersManager.getPeerId(recentReaction.peer_id) === myPeerId);\n      }\n\n      if(!reactions.results.length) {\n        reactions = undefined;\n      }\n    };\n\n    const canSeeList = message.reactions?.pFlags?.can_see_list || !this.appPeersManager.isBroadcast(message.peerId) || message.peerId.isUser();\n    if(!message.reactions) {\n      message.reactions = {\n        _: 'messageReactions',\n        results: [],\n        recent_reactions: canSeeList ? [] : undefined,\n        pFlags: {\n          can_see_list: canSeeList || undefined\n        }\n      };\n    }\n\n    let reactions = onlyLocal ? message.reactions : copy(message.reactions);\n    const chosenReactions = reactions.results.filter((reactionCount) => reactionCount.chosen_order !== undefined);\n    chosenReactions.sort((a, b) => b.chosen_order - a.chosen_order);\n    const unsetReactions: ReactionCount[] = [];\n    const chosenReactionIdx = chosenReactions.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, reaction as Reaction));\n    if(chosenReactionIdx !== -1) unsetReactions.push(...chosenReactions.splice(chosenReactionIdx, 1));\n    unsetReactions.push(...chosenReactions.splice(limit - +(chosenReactionIdx === -1)));\n    unsetReactions.forEach((reactionCount) => {\n      chosenReactions.forEach((chosenReactionCount) => {\n        if(chosenReactionCount.chosen_order > reactionCount.chosen_order) {\n          --chosenReactionCount.chosen_order;\n        }\n      });\n\n      unsetReactionCount(reactionCount);\n    });\n\n    const chosenReactionsLength = chosenReactions.length;\n    chosenReactions.forEach((reactionCount, idx) => {\n      reactionCount.chosen_order = chosenReactionsLength - 1 - idx;\n    });\n\n    if(reaction) {\n      if(!reactions) {\n        reactions/*  = message.reactions */ = {\n          _: 'messageReactions',\n          results: [],\n          pFlags: {}\n        };\n\n        if(canSeeList) {\n          reactions.pFlags.can_see_list = true;\n        }\n      }\n\n      let reactionCountIdx = reactions.results.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, reaction as Reaction));\n      let reactionCount = reactionCountIdx !== -1 && reactions.results[reactionCountIdx];\n      if(!reactionCount) {\n        reactionCount = {\n          _: 'reactionCount',\n          count: 0,\n          reaction\n        };\n\n        reactionCountIdx = reactions.results.push(reactionCount) - 1;\n      }\n\n      ++reactionCount.count;\n      reactionCount.chosen_order = chosenReactions.length ? chosenReactions[0].chosen_order + 1 : 0;\n      chosenReactions.unshift(reactionCount);\n\n      if(!reactions.recent_reactions && canSeeList) {\n        reactions.recent_reactions = [];\n      }\n\n      if(reactions.recent_reactions) {\n        const peerReaction: MessagePeerReaction = {\n          _: 'messagePeerReaction',\n          reaction,\n          peer_id: this.appPeersManager.getOutputPeer(myPeerId)\n        };\n\n        if(!this.appPeersManager.isMegagroup(peerId) && false) {\n          reactions.recent_reactions.push(peerReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(-3);\n        } else {\n          reactions.recent_reactions.unshift(peerReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(0, 3);\n        }\n      }\n\n      // insertInDescendSortedArray(reactions.results, reactionCount, 'count', reactionCountIdx);\n    }\n\n    const availableReactions = this.availableReactions;\n    if(reactions && availableReactions?.length) {\n      const indexes: Map<DocId | string, number> = new Map();\n      availableReactions.forEach((availableReaction, idx) => {\n        indexes.set(availableReaction.reaction, idx);\n      });\n\n      reactions.results.sort((a, b) => {\n        const id1 = (a.reaction as Reaction.reactionCustomEmoji).document_id || (a.reaction as Reaction.reactionEmoji).emoticon;\n        const id2 = (b.reaction as Reaction.reactionCustomEmoji).document_id || (b.reaction as Reaction.reactionEmoji).emoticon;\n        return (b.count - a.count) || ((indexes.get(id1) ?? 0) - (indexes.get(id2) ?? 0));\n      });\n    }\n\n    if(onlyLocal) {\n      message.reactions = reactions;\n      this.rootScope.dispatchEvent('messages_reactions', [{message, changedResults: []}]);\n      return Promise.resolve();\n    }\n\n    this.apiUpdatesManager.processLocalUpdate({\n      _: 'updateMessageReactions',\n      peer: message.peer_id,\n      msg_id: message.id,\n      reactions: reactions,\n      local: true\n    });\n\n    const promiseKey = [peerId, mid].join('-');\n    const msgId = getServerMessageId(mid);\n    const promise = this.apiManager.invokeApi('messages.sendReaction', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: msgId,\n      reaction: chosenReactions.map((reactionCount) => reactionCount.reaction)\n    }).then((updates) => {\n      assumeType<Updates.updates>(updates);\n\n      const editMessageUpdateIdx = updates.updates.findIndex((update) => update._ === 'updateEditMessage' || update._ === 'updateEditChannelMessage');\n      if(editMessageUpdateIdx !== -1) {\n        const editMessageUpdate = updates.updates[editMessageUpdateIdx] as Update.updateEditMessage | Update.updateEditChannelMessage;\n        updates.updates[editMessageUpdateIdx] = {\n          _: 'updateMessageReactions',\n          msg_id: msgId,\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          reactions: (editMessageUpdate.message as Message.message).reactions,\n          pts: editMessageUpdate.pts,\n          pts_count: editMessageUpdate.pts_count\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }).catch((err) => {\n      if(err.type === 'REACTION_INVALID' && this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReaction(message, chosenReactions[0]?.reaction, true);\n      }\n    }).finally(() => {\n      if(this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReactionPromises.delete(promiseKey);\n      }\n    });\n\n    this.sendReactionPromises.set(promiseKey, promise);\n    return promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MyDocument} from './appDocsManager';\nimport type {DownloadOptions} from '../mtproto/apiFileManager';\nimport {Document, InputFileLocation, InputStickerSet, MessagesAllStickers, MessagesFavedStickers, MessagesFeaturedStickers, MessagesFoundStickerSets, MessagesRecentStickers, MessagesStickers, MessagesStickerSet, PhotoSize, StickerPack, StickerSet, StickerSetCovered, Update} from '../../layer';\nimport {Modify} from '../../types';\nimport AppStorage from '../storage';\nimport DATABASE_STATE from '../../config/databases/state';\nimport assumeType from '../../helpers/assumeType';\nimport fixBase64String from '../../helpers/fixBase64String';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport {AppManager} from './manager';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport ctx from '../../environment/ctx';\nimport {getEnvironment} from '../../environment/utils';\nimport getDocumentInput from './utils/docs/getDocumentInput';\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\n\nconst CACHE_TIME = 3600e3;\n\nconst EMOJI_SET_LOCAL_ID = 'emoji';\nconst EMOJI_ANIMATIONS_SET_LOCAL_ID = 'emojiAnimations';\nconst LOCAL_IDS_SET = new Set([\n  EMOJI_SET_LOCAL_ID,\n  EMOJI_ANIMATIONS_SET_LOCAL_ID\n]);\n\n// let TEST_FILE_REFERENCE_REFRESH = true;\n\nexport type MyStickerSetInput = {\n  id: StickerSet.stickerSet['id'],\n  access_hash?: StickerSet.stickerSet['access_hash']\n};\n\nexport type MyMessagesStickerSet = MessagesStickerSet.messagesStickerSet;\n\nexport class AppStickersManager extends AppManager {\n  private storage = new AppStorage<Record<Long, MyMessagesStickerSet>, typeof DATABASE_STATE>(DATABASE_STATE, 'stickerSets');\n\n  private getStickerSetPromises: {[setId: Long]: Promise<MyMessagesStickerSet>};\n  private getStickersByEmoticonsPromises: {[emoticon: string]: Promise<MyDocument[]>};\n\n  private greetingStickers: MyDocument[];\n  private getGreetingStickersTimeout: number;\n  private getGreetingStickersPromise: Promise<void>;\n\n  private sounds: Record<string, MyDocument>;\n  private getAnimatedEmojiSoundsPromise: Promise<void>;\n\n  private favedStickers: MyDocument[];\n  private recentStickers: MyDocument[];\n\n  private names: Record<string, InputStickerSet.inputStickerSetID>;\n\n  protected after() {\n    this.getStickerSetPromises = {};\n    this.getStickersByEmoticonsPromises = {};\n    this.sounds = {};\n    this.names = {};\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        this.getAnimatedEmojiStickerSet();\n        // this.getFavedStickersStickers();\n      }, 1000);\n\n      if(!this.getGreetingStickersPromise && this.getGreetingStickersTimeout === undefined) {\n        this.getGreetingStickersTimeout = ctx.setTimeout(() => {\n          this.getGreetingStickersTimeout = undefined;\n          this.getGreetingSticker(true);\n        }, 5000);\n      }\n    });\n\n    this.rootScope.addEventListener('app_config', () => this.onStickersUpdated('faved', true));\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateNewStickerSet: (update) => {\n        const stickerSet = update.stickerset as MyMessagesStickerSet;\n        this.saveStickerSet(stickerSet, stickerSet.set.id);\n        this.rootScope.dispatchEvent('stickers_installed', stickerSet.set);\n      },\n\n      updateRecentStickers: () => this.onStickersUpdated('recent', true),\n\n      updateFavedStickers: () => this.onStickersUpdated('faved', true),\n\n      updateMoveStickerSetToTop: (update) => {\n        this.rootScope.dispatchEvent('stickers_top', update.stickerset);\n      }\n    });\n  }\n\n  private async onStickersUpdated(type: 'faved' | 'recent', overwrite: boolean) {\n    const stickers = await (type === 'faved' ? this.getFavedStickersStickers(overwrite) : this.getRecentStickersStickers(overwrite));\n    this.rootScope.dispatchEvent('stickers_updated', {\n      type,\n      stickers\n    });\n  }\n\n  public getGreetingSticker(justPreload = false) {\n    if(this.getGreetingStickersTimeout) {\n      clearTimeout(this.getGreetingStickersTimeout);\n      this.getGreetingStickersTimeout = undefined;\n    }\n\n    if(!this.getGreetingStickersPromise) {\n      this.getGreetingStickersPromise = this.getStickersByEmoticon('👋⭐️', false).then((docs) => {\n        if(!docs.length) throw 'NO_STICKERS';\n        this.greetingStickers = docs.slice() as Document.document[];\n        this.greetingStickers.sort((a, b) => Math.random() - Math.random());\n      });\n    }\n\n    return this.getGreetingStickersPromise.then(() => {\n      let doc: Document.document;\n      if(!justPreload) {\n        doc = this.greetingStickers.shift();\n        this.greetingStickers.push(doc);\n      }\n\n      this.apiFileManager.downloadMedia({media: this.greetingStickers[0]}); // preload next sticker\n\n      return doc;\n    });\n  }\n\n  private saveStickers(docs: Document[]) {\n    forEachReverse(docs, (doc, idx) => {\n      doc = this.appDocsManager.saveDoc(doc);\n\n      if(!doc) docs.splice(idx, 1);\n      else docs[idx] = doc;\n    });\n  }\n\n  private canUseStickerSetCache(set: MyMessagesStickerSet, useCache?: boolean) {\n    return set && set.documents?.length && ((Date.now() - set.refreshTime) < CACHE_TIME || useCache);\n  }\n\n  public getStickerSet(set: MyStickerSetInput, params: Partial<{\n    overwrite: boolean,\n    useCache: boolean,\n    saveById: boolean\n  }> = {}): Promise<MyMessagesStickerSet> | MyMessagesStickerSet {\n    let {id} = set;\n    if(!set.access_hash) {\n      set = this.names[id] || set;\n      id = set.id;\n    }\n\n    if(this.getStickerSetPromises[id]) {\n      return this.getStickerSetPromises[id];\n    }\n\n    if(!params.overwrite) {\n      const cachedSet = this.storage.getFromCache(id);\n      if(this.canUseStickerSetCache(cachedSet, params.useCache)) {\n        return cachedSet;\n      }\n    }\n\n    const promise = this.getStickerSetPromises[id] = new Promise(async(resolve) => {\n      if(!params.overwrite) {\n        const cachedSet = await this.storage.get(id);\n        if(this.canUseStickerSetCache(cachedSet, params.useCache)) {\n          this.saveStickers(cachedSet.documents);\n          resolve(cachedSet);\n\n          if(this.getStickerSetPromises[id] === promise) {\n            delete this.getStickerSetPromises[id];\n          }\n\n          return;\n        }\n      }\n\n      try {\n        const stickerSet = await this.apiManager.invokeApi('messages.getStickerSet', {\n          stickerset: this.getStickerSetInput(set),\n          hash: 0\n        }) as MyMessagesStickerSet;\n\n        const saveById = params.saveById ? id : stickerSet.set.id;\n        this.saveStickerSet(stickerSet, saveById);\n\n        resolve(stickerSet);\n      } catch(err) {\n        resolve(null);\n      }\n\n      if(this.getStickerSetPromises[id] === promise) {\n        delete this.getStickerSetPromises[id];\n      }\n    });\n\n    return promise;\n  }\n\n  public getAnimatedEmojiStickerSet() {\n    return Promise.all([\n      this.getStickerSet({id: EMOJI_SET_LOCAL_ID}, {saveById: true}),\n      this.getStickerSet({id: EMOJI_ANIMATIONS_SET_LOCAL_ID}, {saveById: true}),\n      this.getAnimatedEmojiSounds()\n    ]).then(([emoji, animations]) => {\n      return {emoji, animations};\n    });\n  }\n\n  public getAnimatedEmojiSounds(overwrite?: boolean) {\n    if(this.getAnimatedEmojiSoundsPromise && !overwrite) return this.getAnimatedEmojiSoundsPromise;\n    const promise = this.getAnimatedEmojiSoundsPromise = Promise.all([\n      this.apiManager.getAppConfig(overwrite),\n      this.apiManager.getConfig()\n    ]).then(([appConfig, config]) => {\n      if(this.getAnimatedEmojiSoundsPromise !== promise) {\n        return;\n      }\n\n      for(const emoji in appConfig.emojies_sounds) {\n        const sound = appConfig.emojies_sounds[emoji];\n        const bytesStr = atob(fixBase64String(sound.file_reference_base64, false));\n        const bytes = new Uint8Array(bytesStr.length);\n        for(let i = 0, length = bytes.length; i < length; ++i) {\n          bytes[i] = bytesStr[i].charCodeAt(0);\n        }\n\n        // if(TEST_FILE_REFERENCE_REFRESH) {\n        //   bytes[0] = bytes[1] = bytes[2] = bytes[3] = bytes[4] = 0;\n        //   sound.access_hash += '999';\n        // }\n\n        const doc = this.appDocsManager.saveDoc({\n          _: 'document',\n          pFlags: {},\n          flags: 0,\n          id: sound.id,\n          access_hash: sound.access_hash,\n          attributes: [{\n            _: 'documentAttributeAudio',\n            duration: 1,\n            pFlags: {\n              voice: true\n            }\n          }],\n          date: 0,\n          dc_id: config.this_dc,\n          file_reference: bytes,\n          mime_type: 'audio/ogg'\n          // size: 101010 // test loading everytime\n        }, {\n          type: 'emojiesSounds'\n        });\n\n        this.sounds[emoji] = doc;\n      }\n\n      // if(TEST_FILE_REFERENCE_REFRESH) {\n      //   TEST_FILE_REFERENCE_REFRESH = false;\n      // }\n    });\n\n    return promise;\n  }\n\n  public async getRecentStickers(overwrite?: boolean): Promise<Modify<MessagesRecentStickers.messagesRecentStickers, {\n    stickers: Document[]\n  }>> {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getRecentStickers',\n      processResult: (res) => {\n        assumeType<MessagesRecentStickers.messagesRecentStickers>(res);\n\n        this.recentStickers = res.stickers as MyDocument[];\n        this.saveStickers(res.stickers);\n        return res;\n      },\n      overwrite\n    });\n\n    return res;\n  }\n\n  public getRecentStickersStickers(overwrite?: boolean) {\n    if(overwrite) this.recentStickers = undefined;\n    else if(this.recentStickers) return this.recentStickers;\n    return this.getRecentStickers(overwrite).then(() => this.recentStickers);\n  }\n\n  public saveRecentSticker(docId: DocId, unsave?: boolean, attached?: boolean) {\n    const doc = this.appDocsManager.getDoc(docId);\n\n    findAndSplice(this.recentStickers, (_doc) => _doc.id === docId);\n    if(!unsave) {\n      this.recentStickers.unshift(doc);\n\n      const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n      for(const emoticon in this.getStickersByEmoticonsPromises) {\n        const promise = this.getStickersByEmoticonsPromises[emoticon];\n        promise.then((stickers) => {\n          const _doc = findAndSplice(stickers, (_doc) => _doc.id === doc.id);\n          if(_doc) {\n            stickers.unshift(_doc);\n          } else if(emoticon.includes(docEmoticon)) {\n            stickers.unshift(doc);\n          }\n        });\n      }\n    }\n\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'recent', faved: !unsave, document: doc});\n\n    if(unsave) {\n      this.onStickersUpdated('recent', false);\n    }\n\n    return this.apiManager.invokeApi('messages.saveRecentSticker', {\n      id: getDocumentInput(doc),\n      unsave,\n      attached\n    });\n  }\n\n  private cleanEmoji(emoji: string) {\n    return emoji.replace(/\\ufe0f/g, '').replace(/🏻|🏼|🏽|🏾|🏿/g, '');\n  }\n\n  public getAnimatedEmojiSticker(emoji: string, isAnimation?: boolean) {\n    const id = isAnimation ? EMOJI_ANIMATIONS_SET_LOCAL_ID : EMOJI_SET_LOCAL_ID;\n    const stickerSet = this.storage.getFromCache(id);\n    // const stickerSet = await this.getStickerSet({id});\n    if(!stickerSet?.documents) return;\n\n    if(isAnimation) {\n      if(['🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '🤎'].includes(emoji)) {\n        emoji = '❤️';\n      }\n    }\n\n    emoji = this.cleanEmoji(emoji);\n    const pack = stickerSet.packs.find((p) => p.emoticon === emoji);\n    return pack ? this.appDocsManager.getDoc(pack.documents[0]) : undefined;\n  }\n\n  public getAnimatedEmojiSoundDocument(emoji: string) {\n    return this.sounds[this.cleanEmoji(emoji)];\n  }\n\n  public preloadAnimatedEmojiSticker(emoji: string) {\n    const preloadEmojiPromise = this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji);\n    });\n\n    return Promise.all([\n      preloadEmojiPromise,\n      this.preloadAnimatedEmojiStickerAnimation(emoji)\n    ]).then(([doc, a]) => {\n      return {\n        doc: doc,\n        animation: a?.doc,\n        sound: a?.sound\n      };\n    });\n  }\n\n  public preloadAnimatedEmojiStickerAnimation(emoji: string) {\n    return this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji, true);\n    }).then((doc) => {\n      if(!doc) {\n        return;\n      }\n\n      const sound = this.getAnimatedEmojiSoundDocument(emoji);\n      return Promise.all([\n        this.preloadSticker(doc.id),\n        sound ? this.preloadSticker(sound.id) : undefined\n      ]).then(() => {\n        return {doc, sound};\n      });\n    });\n  }\n\n  public preloadSticker(docId: DocId, isPremiumEffect?: boolean) {\n    const doc = this.appDocsManager.getDoc(docId);\n    return this.apiFileManager.downloadMedia({media: doc, thumb: isPremiumEffect ? doc.video_thumbs?.[0] : undefined});\n  }\n\n  private saveStickerSet(res: Omit<MessagesStickerSet.messagesStickerSet, '_'>, id: DocId) {\n    const newSet: MessagesStickerSet = {\n      _: 'messages.stickerSet',\n      set: res.set,\n      packs: res.packs,\n      documents: res.documents as Document[],\n      keywords: res.keywords\n    };\n\n    let stickerSet = this.storage.getFromCache(id);\n    if(stickerSet) {\n      Object.assign(stickerSet, newSet);\n    } else {\n      stickerSet = this.storage.setToCache(id, newSet);\n    }\n\n    if(stickerSet.set.short_name) {\n      this.names[stickerSet.set.short_name] = this.getStickerSetInput(newSet.set) as any;\n    }\n\n    this.saveStickers(res.documents);\n\n    // console.log('stickers wrote', this.stickerSets);\n    const needSave = stickerSet.set.installed_date || LOCAL_IDS_SET.has(id as any);\n    stickerSet.refreshTime = Date.now();\n    this.storage.set({[id]: stickerSet}, !needSave);\n  }\n\n  public getStickerSetThumbDownloadOptions(stickerSet: StickerSet.stickerSet): DownloadOptions {\n    const thumb = stickerSet.thumbs.find((thumb) => thumb._ === 'photoSize') as PhotoSize.photoSize;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: InputFileLocation.inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      thumb_version: stickerSet.thumb_version\n    };\n\n    return {dcId, location: input, size: thumb.size, mimeType: isAnimated ? 'application/x-tgsticker' : 'image/webp'};\n  }\n\n  /* public getStickerSetThumbURL(stickerSet: MTStickerSet) {\n    const thumb = stickerSet.thumb;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      volume_id: thumb.location.volume_id,\n      local_id: thumb.location.local_id\n    };\n\n    const url = getFileURL('document', this.getStickerSetThumbDownloadOptions(stickerSet));\n    return url;\n\n    //return promise;\n  } */\n\n  public getStickerSetInput(set: MyStickerSetInput): InputStickerSet {\n    if(set.id === EMOJI_SET_LOCAL_ID) {\n      return {\n        _: 'inputStickerSetAnimatedEmoji'\n      };\n    } else if(set.id === EMOJI_ANIMATIONS_SET_LOCAL_ID) {\n      return {\n        _: 'inputStickerSetAnimatedEmojiAnimations'\n      };\n    } else if(!set.access_hash) {\n      return {\n        _: 'inputStickerSetShortName',\n        short_name: '' + set.id\n      };\n    } else {\n      return {\n        _: 'inputStickerSetID',\n        id: set.id,\n        access_hash: set.access_hash\n      };\n    }\n  }\n\n  public async getFeaturedStickers() {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getFeaturedStickers',\n      processResult: (res) => {\n        assumeType<MessagesFeaturedStickers.messagesFeaturedStickers>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: [], keywords: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    return res.sets;\n  }\n\n  public getPromoPremiumStickers() {\n    return this.getStickersByEmoticon('⭐️⭐️', false);\n  }\n\n  public getPremiumStickers() {\n    return this.getStickersByEmoticon('📂⭐️', false);\n  }\n\n  public getFavedStickers(overwrite?: boolean) {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getFavedStickers',\n      processResult: (favedStickers) => {\n        assumeType<MessagesFavedStickers.messagesFavedStickers>(favedStickers);\n        this.saveStickers(favedStickers.stickers);\n        this.favedStickers = favedStickers.stickers as MyDocument[];\n        return favedStickers;\n      },\n      overwrite\n    });\n  }\n\n  public getFavedStickersStickers(overwrite?: boolean) {\n    if(overwrite) this.favedStickers = undefined;\n    else if(this.favedStickers) return this.favedStickers;\n    return this.getFavedStickers(overwrite).then(() => this.favedStickers);\n  }\n\n  public getFavedStickersLimit() {\n    return this.apiManager.getLimit('favedStickers');\n  }\n\n  public async faveSticker(docId: DocId, unfave?: boolean) {\n    if(!this.favedStickers) {\n      await this.getFavedStickersStickers();\n    }\n\n    const limit = await this.getFavedStickersLimit();\n\n    const doc = this.appDocsManager.getDoc(docId);\n    findAndSplice(this.favedStickers, (_doc) => _doc.id === doc.id);\n\n    if(!unfave) {\n      this.favedStickers.unshift(doc);\n      const spliced = this.favedStickers.splice(limit, this.favedStickers.length - limit);\n    }\n\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'faved', faved: !unfave, document: doc});\n\n    return this.apiManager.invokeApi('messages.faveSticker', {\n      id: getDocumentInput(doc),\n      unfave\n    }).then(() => {\n      if(unfave) {\n        this.onStickersUpdated('faved', true);\n      }\n    });\n  }\n\n  public async toggleStickerSet(set: StickerSet.stickerSet) {\n    set = this.storage.getFromCache(set.id).set;\n\n    if(set.installed_date) {\n      const res = await this.apiManager.invokeApi('messages.uninstallStickerSet', {\n        stickerset: this.getStickerSetInput(set)\n      });\n\n      if(res) {\n        delete set.installed_date;\n        this.rootScope.dispatchEvent('stickers_deleted', set);\n        this.storage.delete(set.id, true);\n        return true;\n      }\n    } else {\n      const res = await this.apiManager.invokeApi('messages.installStickerSet', {\n        stickerset: this.getStickerSetInput(set),\n        archived: false\n      });\n\n      if(res) {\n        set.installed_date = Date.now() / 1000 | 0;\n        this.rootScope.dispatchEvent('stickers_installed', set);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public toggleStickerSets(sets: StickerSet.stickerSet[]) {\n    return Promise.all(sets.map((set) => this.toggleStickerSet(set)));\n  }\n\n  public async searchStickerSets(query: string, excludeFeatured = true) {\n    const flags = excludeFeatured ? 1 : 0;\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.searchStickerSets',\n      params: {\n        flags,\n        exclude_featured: excludeFeatured || undefined,\n        q: query\n      },\n      processResult: (res) => {\n        assumeType<MessagesFoundStickerSets.messagesFoundStickerSets>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: [], keywords: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    const foundSaved: StickerSetCovered[] = [];\n    const cache = this.storage.getCache();\n    for(const id in cache) {\n      const {set} = cache[id];\n\n      if(set.title.toLowerCase().includes(query.toLowerCase()) && !res.sets.find((c) => c.set.id === set.id)) {\n        foundSaved.push({_: 'stickerSetCovered', set, cover: null});\n      }\n    }\n\n    return res.sets.concat(foundSaved);\n  }\n\n  private processAllStickersResult = (allStickers: MessagesAllStickers) => {\n    assumeType<MessagesAllStickers.messagesAllStickers>(allStickers);\n\n    forEachReverse(allStickers.sets, (stickerSet, idx, arr) => {\n      if(stickerSet.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n        arr.splice(idx, 1);\n      }\n    });\n\n    return allStickers;\n  };\n\n  public getAllStickers() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getAllStickers',\n      processResult: this.processAllStickersResult\n    });\n  }\n\n  public getEmojiStickers() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getEmojiStickers',\n      processResult: this.processAllStickersResult\n    });\n  }\n\n  public preloadStickerSets() {\n    return this.getAllStickers().then((allStickers) => {\n      return Promise.all((allStickers as MessagesAllStickers.messagesAllStickers).sets.map((set) => this.getStickerSet(set, {useCache: true})));\n    });\n  }\n\n  // TODO: detect \"🤷\" by \"🤷‍♂️\"\n  public getStickersByEmoticon(emoticon: string, includeOurStickers = true) {\n    emoticon = fixEmoji(emoticon);\n    if(this.getStickersByEmoticonsPromises[emoticon]) return this.getStickersByEmoticonsPromises[emoticon];\n\n    return this.getStickersByEmoticonsPromises[emoticon] = Promise.all([\n      this.apiManager.invokeApiHashable({\n        method: 'messages.getStickers',\n        params: {\n          emoticon\n        },\n        processResult: (stickers) => stickers\n      }),\n      includeOurStickers ? this.preloadStickerSets() : [],\n      includeOurStickers ? this.getRecentStickers() : undefined\n    ]).then(([messagesStickers, installedSets, recentStickers]) => {\n      const foundStickers = (messagesStickers as MessagesStickers.messagesStickers).stickers.map((sticker) => this.appDocsManager.saveDoc(sticker));\n      const cachedStickersAnimated: Document.document[] = [], cachedStickersStatic: Document.document[] = [];\n\n      // console.log('getStickersByEmoticon', messagesStickers, installedSets, recentStickers);\n\n      const iteratePacks = (packs: StickerPack.stickerPack[]) => {\n        for(const pack of packs) {\n          const packEmoticon = fixEmoji(pack.emoticon);\n          if(packEmoticon.includes(emoticon)) {\n            for(const docId of pack.documents) {\n              const doc = this.appDocsManager.getDoc(docId);\n              (doc.animated ? cachedStickersAnimated : cachedStickersStatic).push(doc);\n            }\n          }\n        }\n      };\n\n      if(recentStickers) {\n        iteratePacks(recentStickers.packs);\n        const stickers = recentStickers.stickers;\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          s.sort((a, b) => stickers.indexOf(a) - stickers.indexOf(b));\n        });\n      }\n\n      for(const set of installedSets) {\n        iteratePacks(set.packs);\n      }\n\n      /* const entities = parseEntities(emoticon);\n      if(entities.length === 1) {\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          forEachReverse(s, (doc, idx) => {\n            const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n            if(docEmoticon !== emoticon) {\n              s.splice(idx, 1);\n            }\n          });\n        });\n      } */\n\n      const stickers = [...new Set(cachedStickersAnimated.concat(cachedStickersStatic, foundStickers))]/* .filter((doc) => !doc.animated) */;\n\n      forEachReverse(stickers, (sticker, idx, arr) => {\n        if((sticker.sticker === 3 && !getEnvironment().IS_WEBM_SUPPORTED) ||\n          (!this.rootScope.premium && getStickerEffectThumb(sticker))) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      return stickers;\n    });\n  }\n\n  public clearRecentStickers() {\n    if(this.recentStickers) {\n      this.recentStickers.length = 0;\n      this.onStickersUpdated('recent', false);\n    }\n\n    return this.apiManager.invokeApi('messages.clearRecentStickers');\n  }\n}\n","export default function fixBase64String(str: string, toUrl: boolean) {\n  if(toUrl) {\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\n  } else {\n    return str.replace(/-/g, '+').replace(/_/g, '/');\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport default function cleanUsername(username: string) {\r\n  return username && username.toLowerCase() || '';\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport filterUnique from '../../helpers/array/filterUnique';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport cleanSearchText from '../../helpers/cleanSearchText';\nimport cleanUsername from '../../helpers/cleanUsername';\nimport tsNow from '../../helpers/tsNow';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {isRestricted} from '../../helpers/restrictions';\nimport {Chat, ContactsResolvedPeer, InputContact, InputGeoPoint, InputMedia, InputPeer, InputUser, User as MTUser, UserProfilePhoto, UserStatus} from '../../layer';\nimport parseEntities from '../richTextProcessor/parseEntities';\nimport wrapUrl from '../richTextProcessor/wrapUrl';\nimport SearchIndex from '../searchIndex';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\nimport canSendToUser from './utils/users/canSendToUser';\nimport {AppStoragesManager} from './appStoragesManager';\n\nexport type User = MTUser.user;\nexport type TopPeerType = 'correspondents' | 'bots_inline';\nexport type MyTopPeer = {id: PeerId, rating: number};\n\nexport class AppUsersManager extends AppManager {\n  private storage: AppStoragesManager['storages']['users'];\n\n  private users: {[userId: UserId]: User};\n  private usernames: {[username: string]: UserId};\n  private contactsIndex: SearchIndex<UserId>;\n  private contactsFillPromise: CancellablePromise<AppUsersManager['contactsList']>;\n  private contactsList: Set<UserId>;\n  private updatedContactsList: boolean;\n\n  private getTopPeersPromises: {[type in TopPeerType]?: Promise<MyTopPeer[]>};\n\n  protected after() {\n    this.clear(true);\n\n    setInterval(this.updateUsersStatuses, 60000);\n\n    this.rootScope.addEventListener('state_synchronized', this.updateUsersStatuses);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateUserStatus: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          user.status = update.status;\n          if(user.status) {\n            if('expires' in user.status) {\n              user.status.expires -= this.timeManager.getServerTimeOffset();\n            }\n\n            if('was_online' in user.status) {\n              user.status.was_online -= this.timeManager.getServerTimeOffset();\n            }\n          }\n\n          // user.sortStatus = this.getUserStatusForSort(user.status);\n          this.rootScope.dispatchEvent('user_update', userId);\n          this.setUserToStateIfNeeded(user);\n        } // ////else console.warn('No user by id:', userId);\n      },\n\n      updateUserPhoto: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          if((user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id === (update.photo as UserProfilePhoto.userProfilePhoto)?.photo_id) {\n            return;\n          }\n\n          this.forceUserOnline(userId, update.date);\n\n          if(update.photo._ === 'userProfilePhotoEmpty') {\n            delete user.photo;\n          } else {\n            user.photo = safeReplaceObject(user.photo, update.photo);\n          }\n\n          this.setUserToStateIfNeeded(user);\n\n          this.rootScope.dispatchEvent('user_update', userId);\n          this.rootScope.dispatchEvent('avatar_update', userId.toPeerId());\n        } else console.warn('No user by id:', userId);\n      },\n\n      updateUserName: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          this.forceUserOnline(userId);\n\n          this.saveApiUser({\n            ...user,\n            first_name: update.first_name,\n            last_name: update.last_name,\n            username: update.username\n          }, true);\n        }\n      }\n    });\n\n    /* case 'updateContactLink':\n    this.onContactUpdated(update.user_id, update.my_link._ === 'contactLinkContact');\n    break; */\n\n    this.rootScope.addEventListener('language_change', (e) => {\n      const userId = this.getSelf().id;\n      this.contactsIndex.indexObject(userId, this.getUserSearchText(userId));\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('users')\n    ]).then(([state, {results: users, storage}]) => {\n      this.storage = storage;\n\n      if(users.length) {\n        for(let i = 0, length = users.length; i < length; ++i) {\n          const user = users[i];\n          if(user) {\n            this.users[user.id] = user;\n            this.setUserNameToCache(user);\n\n            this.checkPremium(user);\n\n            if(state.contactsListCachedTime && (user.pFlags.contact || user.pFlags.mutual_contact)) {\n              this.pushContact(user.id);\n\n              if(!this.contactsFillPromise) {\n                this.contactsFillPromise = deferredPromise();\n                this.contactsFillPromise.resolve(this.contactsList);\n              }\n            }\n          }\n        }\n      }\n\n      // const contactsList = state.contactsList;\n      // if(Array.isArray(contactsList)) {\n      //   contactsList.forEach((userId) => {\n      //     this.pushContact(userId);\n      //   });\n\n      //   if(contactsList.length) {\n      //     this.contactsFillPromise = deferredPromise();\n      //     this.contactsFillPromise.resolve(this.contactsList);\n      //   }\n      // }\n\n      const recentSearch = state.recentSearch || [];\n      for(let i = 0, length = recentSearch.length; i < length; ++i) {\n        this.peersStorage.requestPeer(recentSearch[i], 'recentSearch');\n      }\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(!this.storage.getFromCache(userId)) {\n          this.storage.set({\n            [userId]: this.getUser(userId)\n          });\n        }\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(this.storage.getFromCache(userId)) {\n          this.storage.delete(userId);\n        }\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const userId in this.users) {\n        // const userId = +userId;\n        if(!userId) continue;\n        const peerId = userId.toPeerId();\n        if(!this.peersStorage.isPeerNeeded(peerId)) {\n          const user = this.users[userId];\n          if(user.username) {\n            delete this.usernames[cleanUsername(user.username)];\n          }\n\n          this.storage.delete(userId);\n          delete this.users[userId];\n        }\n      }\n    } else {\n      this.users = {};\n      this.usernames = {};\n    }\n\n    this.getTopPeersPromises = {};\n    this.contactsIndex = this.createSearchIndex();\n    this.contactsFillPromise = undefined;\n    this.contactsList = new Set();\n    this.updatedContactsList = false;\n  };\n\n  public get userId() {\n    return this.rootScope.myId.toUserId();\n  }\n\n  private onContactsModified(fromServer?: boolean) {\n    // const contactsList = [...this.contactsList];\n    // this.appStateManager.pushToState('contactsList', contactsList);\n\n    if(fromServer) {\n      this.appStateManager.pushToState('contactsListCachedTime', tsNow(true));\n    }\n  }\n\n  public pushRecentSearch(peerId: PeerId) {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      if(recentSearch[0] !== peerId) {\n        indexOfAndSplice(recentSearch, peerId);\n        recentSearch.unshift(peerId);\n        if(recentSearch.length > 20) {\n          recentSearch.length = 20;\n        }\n\n        this.appStateManager.pushToState('recentSearch', recentSearch);\n        for(const peerId of recentSearch) {\n          this.peersStorage.requestPeer(peerId, 'recentSearch');\n        }\n      }\n    });\n  }\n\n  public clearRecentSearch() {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      for(const peerId of recentSearch) {\n        this.peersStorage.releasePeer(peerId, 'recentSearch');\n      }\n\n      recentSearch.length = 0;\n      this.appStateManager.pushToState('recentSearch', recentSearch);\n    });\n  }\n\n  public fillContacts() {\n    if(this.contactsFillPromise && this.updatedContactsList) {\n      return {\n        cached: this.contactsFillPromise.isFulfilled,\n        promise: this.contactsFillPromise\n      };\n    }\n\n    this.updatedContactsList = true;\n\n    const promise = deferredPromise<Set<UserId>>();\n    this.apiManager.invokeApi('contacts.getContacts').then((result) => {\n      if(result._ === 'contacts.contacts') {\n        this.contactsList.clear();\n\n        this.saveApiUsers(result.users);\n\n        result.contacts.forEach((contact) => {\n          this.pushContact(contact.user_id);\n        });\n\n        this.onContactsModified(true);\n\n        this.contactsFillPromise = promise;\n      }\n\n      promise.resolve(this.contactsList);\n    }, () => {\n      this.updatedContactsList = false;\n    });\n\n    return {\n      cached: this.contactsFillPromise?.isFulfilled,\n      promise: this.contactsFillPromise || (this.contactsFillPromise = promise)\n    };\n  }\n\n  public resolveUsername(username: string): Promise<Chat | User> | Chat | User {\n    if(username[0] === '@') {\n      username = username.slice(1);\n    }\n\n    username = username.toLowerCase();\n    const userId = this.usernames[username];\n    if(userId) {\n      return this.users[userId];\n    }\n\n    return this.apiManager.invokeApi('contacts.resolveUsername', {username}).then((resolvedPeer) => {\n      return this.processResolvedPeer(resolvedPeer);\n    });\n  }\n\n  private processResolvedPeer(resolvedPeer: ContactsResolvedPeer.contactsResolvedPeer) {\n    this.saveApiUsers(resolvedPeer.users);\n    this.appChatsManager.saveApiChats(resolvedPeer.chats);\n\n    return this.appPeersManager.getPeer(getPeerId(resolvedPeer.peer)) as Chat | User;\n  }\n\n  public resolvePhone(phone: string) {\n    return this.apiManager.invokeApi('contacts.resolvePhone', {phone}).then((resolvedPeer) => {\n      return this.processResolvedPeer(resolvedPeer) as User;\n    });\n  }\n\n  private pushContact(id: UserId) {\n    this.contactsList.add(id);\n    this.contactsIndex.indexObject(id, this.getUserSearchText(id));\n    this.peersStorage.requestPeer(id.toPeerId(), 'contact');\n  }\n\n  private popContact(id: UserId) {\n    this.contactsList.delete(id);\n    this.contactsIndex.indexObject(id, ''); // delete search index\n    this.peersStorage.releasePeer(id.toPeerId(), 'contact');\n  }\n\n  public getUserSearchText(id: UserId) {\n    const user = this.users[id];\n    if(!user) {\n      return '';\n    }\n\n    const arr: string[] = [\n      user.first_name,\n      user.last_name,\n      user.phone,\n      user.username,\n      // user.pFlags.self ? I18n.format('SavedMessages', true) : '',\n      user.pFlags.self ? 'Saved Messages' : ''\n    ];\n\n    return arr.filter(Boolean).join(' ');\n  }\n\n  public getContacts(query?: string, includeSaved = false, sortBy: 'name' | 'online' | 'none' = 'name') {\n    return this.fillContacts().promise.then((_contactsList) => {\n      let contactsList = [..._contactsList];\n      if(query) {\n        const results = this.contactsIndex.search(query);\n        const filteredContactsList = [...contactsList].filter((id) => results.has(id));\n\n        contactsList = filteredContactsList;\n      }\n\n      if(sortBy === 'name') {\n        contactsList.sort((userId1, userId2) => {\n          const sortName1 = (this.users[userId1] || {}).sortName || '';\n          const sortName2 = (this.users[userId2] || {}).sortName || '';\n          return sortName1.localeCompare(sortName2);\n        });\n      } else if(sortBy === 'online') {\n        contactsList.sort((userId1, userId2) => {\n          const status1 = this.getUserStatusForSort(this.getUser(userId1).status);\n          const status2 = this.getUserStatusForSort(this.getUser(userId2).status);\n          return status2 - status1;\n        });\n      }\n\n      const myUserId = this.userId;\n      indexOfAndSplice(contactsList, myUserId);\n      if(includeSaved) {\n        if(this.testSelfSearch(query)) {\n          contactsList.unshift(myUserId);\n        }\n      }\n\n      return contactsList;\n    });\n  }\n\n  public getContactsPeerIds(\n    query?: Parameters<AppUsersManager['getContacts']>[0],\n    includeSaved?: Parameters<AppUsersManager['getContacts']>[1],\n    sortBy?: Parameters<AppUsersManager['getContacts']>[2],\n    limit?: number\n  ) {\n    return this.getContacts(query, includeSaved, sortBy).then((userIds) => {\n      const peerIds = userIds.map((userId) => userId.toPeerId(false));\n      if(limit) {\n        return peerIds.slice(0, limit);\n      }\n\n      return peerIds;\n    });\n  }\n\n  public toggleBlock(peerId: PeerId, block: boolean) {\n    return this.apiManager.invokeApiSingle(block ? 'contacts.block' : 'contacts.unblock', {\n      id: this.appPeersManager.getInputPeerById(peerId)\n    }).then((value) => {\n      if(value) {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updatePeerBlocked',\n          peer_id: this.appPeersManager.getOutputPeer(peerId),\n          blocked: block\n        });\n      }\n\n      return value;\n    });\n  }\n\n  public testSelfSearch(query: string) {\n    const user = this.getSelf();\n    const index = this.createSearchIndex();\n    index.indexObject(user.id, this.getUserSearchText(user.id));\n    return index.search(query).has(user.id);\n  }\n\n  private createSearchIndex() {\n    return new SearchIndex<UserId>({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n  }\n\n  public saveApiUsers(apiUsers: MTUser[], override?: boolean) {\n    if((apiUsers as any).saved) return;\n    (apiUsers as any).saved = true;\n    apiUsers.forEach((user) => this.saveApiUser(user, override));\n  }\n\n  private setUserNameToCache(user: MTUser.user, oldUser?: MTUser.user) {\n    if(!oldUser || oldUser.username !== user.username) {\n      if(oldUser?.username) {\n        const oldSearchUsername = cleanUsername(oldUser.username);\n        delete this.usernames[oldSearchUsername];\n      }\n\n      if(user.username) {\n        const searchUsername = cleanUsername(user.username);\n        this.usernames[searchUsername] = user.id;\n      }\n    }\n  }\n\n  public saveApiUser(user: MTUser, override?: boolean) {\n    if(user._ === 'userEmpty') return;\n\n    const userId = user.id;\n    const oldUser = this.users[userId];\n\n    // ! commented block can affect performance !\n    // if(oldUser && !override) {\n    //   console.log('saveApiUser same');\n    //   return;\n    // }\n\n    if(user.pFlags === undefined) {\n      user.pFlags = {};\n    }\n\n    if(user.pFlags.min && oldUser !== undefined) {\n      return;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(user, ['initials', 'num', 'rFirstName', 'rFullName', 'rPhone', 'sortName', 'sortStatus']);\n\n    this.setUserNameToCache(user, oldUser);\n\n    if(!oldUser ||\n      oldUser.sortName === undefined ||\n      oldUser.first_name !== user.first_name ||\n      oldUser.last_name !== user.last_name) {\n      const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n\n      user.sortName = user.pFlags.deleted ? '' : cleanSearchText(fullName, false);\n    } else {\n      user.sortName = oldUser.sortName;\n    }\n\n    if(user.status) {\n      if((user.status as UserStatus.userStatusOnline).expires) {\n        (user.status as UserStatus.userStatusOnline).expires -= this.timeManager.getServerTimeOffset();\n      }\n\n      if((user.status as UserStatus.userStatusOffline).was_online) {\n        (user.status as UserStatus.userStatusOffline).was_online -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    // user.sortStatus = user.pFlags.bot ? -1 : this.getUserStatusForSort(user.status);\n\n    if(oldUser === undefined) {\n      this.users[userId] = user;\n    } else {\n      const changedTitle = user.first_name !== oldUser.first_name ||\n        user.last_name !== oldUser.last_name ||\n        user.username !== oldUser.username;\n\n      const oldPhotoId = (oldUser.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const newPhotoId = (user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const changedPhoto = oldPhotoId !== newPhotoId;\n\n      const changedAnyBadge = oldUser.pFlags.premium !== user.pFlags.premium ||\n        oldUser.pFlags.verified !== user.pFlags.verified ||\n        oldUser.pFlags.scam !== user.pFlags.scam ||\n        oldUser.pFlags.fake !== user.pFlags.fake;\n\n      /* if(user.pFlags.bot && user.bot_info_version !== oldUser.bot_info_version) {\n\n      } */\n\n      const wasContact = !!oldUser.pFlags.contact;\n      const newContact = !!user.pFlags.contact;\n\n      safeReplaceObject(oldUser, user);\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      if(wasContact !== newContact) {\n        this.onContactUpdated(userId, newContact, wasContact);\n      }\n\n      if(changedPhoto) {\n        this.rootScope.dispatchEvent('avatar_update', user.id.toPeerId());\n      }\n\n      if(changedTitle || changedAnyBadge) {\n        this.rootScope.dispatchEvent('peer_title_edit', user.id.toPeerId());\n      }\n    }\n\n    this.checkPremium(user);\n    this.setUserToStateIfNeeded(user);\n  }\n\n  private checkPremium(user: User) {\n    if(user.pFlags.self) {\n      const isPremium = !!user.pFlags.premium;\n      if(this.rootScope.premium !== isPremium) {\n        this.rootScope.dispatchEvent('premium_toggle', isPremium);\n      }\n    }\n  }\n\n  private setUserToStateIfNeeded(user: User) {\n    if(this.peersStorage.isPeerNeeded(user.id.toPeerId())) {\n      this.storage.set({\n        [user.id]: user\n      });\n    }\n  }\n\n  public isUserOnlineVisible(id: UserId) {\n    return this.getUserStatusForSort(id) > 3;\n  }\n\n  public getUserStatusForSort(status: User['status'] | UserId) {\n    if(typeof(status) !== 'object') {\n      status = this.getUser(status).status;\n    }\n\n    if(status) {\n      const expires = status._ === 'userStatusOnline' ? status.expires : (status._ === 'userStatusOffline' ? status.was_online : 0);\n      if(expires) {\n        return expires;\n      }\n\n      /* const timeNow = tsNow(true);\n      switch(status._) {\n        case 'userStatusRecently':\n          return timeNow - 86400 * 3;\n        case 'userStatusLastWeek':\n          return timeNow - 86400 * 7;\n        case 'userStatusLastMonth':\n          return timeNow - 86400 * 30;\n      } */\n      switch(status._) {\n        case 'userStatusRecently':\n          return 3;\n        case 'userStatusLastWeek':\n          return 2;\n        case 'userStatusLastMonth':\n          return 1;\n      }\n    }\n\n    return 0;\n  }\n\n  public getUser(id: User | UserId) {\n    if(isObject<User>(id)) {\n      return id;\n    }\n\n    return this.users[id] || {_: 'userEmpty', id, pFlags: {deleted: true}, access_hash: ''} as any as User;\n  }\n\n  public getSelf() {\n    return this.getUser(this.userId);\n  }\n\n  public isBot(id: UserId) {\n    return this.users[id] && !!this.users[id].pFlags.bot;\n  }\n\n  public isContact(id: UserId) {\n    return this.contactsList.has(id) || !!(this.users[id] && this.users[id].pFlags.contact);\n  }\n\n  public isRegularUser(id: UserId) {\n    const user = this.users[id];\n    return user && !this.isBot(id) && !user.pFlags.deleted && !user.pFlags.support;\n  }\n\n  public isNonContactUser(id: UserId) {\n    return this.isRegularUser(id) && !this.isContact(id) && id !== this.userId;\n  }\n\n  public hasUser(id: UserId, allowMin?: boolean) {\n    const user = this.users[id];\n    return isObject(user) && (allowMin || !user.pFlags.min);\n  }\n\n  public getUserPhoto(id: UserId) {\n    const user = this.getUser(id);\n\n    return user && user.photo || {\n      _: 'userProfilePhotoEmpty'\n    };\n  }\n\n  public getUserString(id: UserId) {\n    const user = this.getUser(id);\n    return 'u' + id + (user.access_hash ? '_' + user.access_hash : '');\n  }\n\n  public getUserInput(id: UserId): InputUser {\n    const user = this.getUser(id);\n    if(user.pFlags && user.pFlags.self) {\n      return {_: 'inputUserSelf'};\n    }\n\n    return {\n      _: 'inputUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getUserInputPeer(id: UserId): InputPeer.inputPeerSelf | InputPeer.inputPeerUser {\n    const user = this.getUser(id);\n    // ! do not use it, there are places that don't support it. need explicit peer id\n    // if(user.pFlags?.self) {\n    //   return {_: 'inputPeerSelf'};\n    // }\n\n    return {\n      _: 'inputPeerUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getContactMediaInput(id: UserId): InputMedia.inputMediaContact {\n    const user = this.getUser(id);\n\n    return {\n      _: 'inputMediaContact',\n      first_name: user.first_name,\n      last_name: user.last_name,\n      phone_number: user.phone,\n      vcard: '',\n      user_id: id\n    };\n  }\n\n  private updateUsersStatuses = () => {\n    const timestampNow = tsNow(true);\n    for(const i in this.users) {\n      const user = this.users[i];\n      this.updateUserStatus(user, timestampNow);\n    }\n  };\n\n  private updateUserStatus(user: MTUser.user, timestampNow = tsNow(true)) {\n    if(user.status &&\n      user.status._ === 'userStatusOnline' &&\n      user.status.expires < timestampNow) {\n      user.status = {_: 'userStatusOffline', was_online: user.status.expires};\n      this.rootScope.dispatchEvent('user_update', user.id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public forceUserOnline(id: UserId, eventTimestamp?: number) {\n    if(this.isBot(id)) {\n      return;\n    }\n\n    const timestamp = tsNow(true);\n    const onlineTimeFor = 60;\n    if(eventTimestamp) {\n      if((timestamp - eventTimestamp) >= onlineTimeFor) {\n        return;\n      }\n    } else if(this.apiUpdatesManager.updatesState.syncLoading) {\n      return;\n    }\n\n    const user = this.getUser(id);\n    if(user?.status &&\n      user.status._ !== 'userStatusOnline' &&\n      user.status._ !== 'userStatusEmpty' &&\n      !user.pFlags.support &&\n      !user.pFlags.deleted) {\n      user.status = {\n        _: 'userStatusOnline',\n        expires: timestamp + onlineTimeFor\n      };\n\n      // user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public importContact(first_name: string, last_name: string, phone: string) {\n    return this.importContacts([{\n      first_name,\n      last_name,\n      phones: [phone]\n    }]).then((userIds) => {\n      if(!userIds.length) {\n        const error = new Error();\n        (error as any).type = 'NO_USER';\n        throw error;\n      }\n\n      return userIds[0];\n    });\n  }\n\n  public importContacts(contacts: {phones: string[], first_name: string, last_name: string}[]) {\n    const inputContacts: InputContact[] = [];\n\n    for(let i = 0; i < contacts.length; ++i) {\n      for(let j = 0; j < contacts[i].phones.length; ++j) {\n        inputContacts.push({\n          _: 'inputPhoneContact',\n          client_id: (i << 16 | j).toString(10),\n          phone: contacts[i].phones[j],\n          first_name: contacts[i].first_name,\n          last_name: contacts[i].last_name\n        });\n      }\n    }\n\n    return this.apiManager.invokeApi('contacts.importContacts', {\n      contacts: inputContacts\n    }).then((importedContactsResult) => {\n      this.saveApiUsers(importedContactsResult.users);\n\n      const userIds = importedContactsResult.imported.map((importedContact) => {\n        this.onContactUpdated(importedContact.user_id, true);\n        return importedContact.user_id;\n      });\n\n      return userIds;\n    });\n  }\n\n  public getTopPeers(type: TopPeerType) {\n    if(this.getTopPeersPromises[type]) return this.getTopPeersPromises[type];\n\n    return this.getTopPeersPromises[type] = this.appStateManager.getState().then((state) => {\n      const cached = state.topPeersCache[type];\n      if(cached && (cached.cachedTime + 86400e3) > Date.now() && cached.peers) {\n        return cached.peers;\n      }\n\n      return this.apiManager.invokeApi('contacts.getTopPeers', {\n        [type]: true,\n        offset: 0,\n        limit: 15,\n        hash: '0'\n      }).then((result) => {\n        let topPeers: MyTopPeer[] = [];\n        if(result._ === 'contacts.topPeers') {\n          // console.log(result);\n          this.saveApiUsers(result.users);\n          this.appChatsManager.saveApiChats(result.chats);\n\n          if(result.categories.length) {\n            topPeers = result.categories[0].peers.map((topPeer) => {\n              const peerId = getPeerId(topPeer.peer);\n              this.peersStorage.requestPeer(peerId, 'topPeer');\n              return {id: peerId, rating: topPeer.rating};\n            });\n          }\n        }\n\n        state.topPeersCache[type] = {\n          peers: topPeers,\n          cachedTime: Date.now()\n        };\n        this.appStateManager.pushToState('topPeersCache', state.topPeersCache);\n\n        return topPeers;\n      });\n    });\n  }\n\n  public getBlocked(offset = 0, limit = 0) {\n    return this.apiManager.invokeApiSingle('contacts.getBlocked', {offset, limit}).then((contactsBlocked) => {\n      this.saveApiUsers(contactsBlocked.users);\n      this.appChatsManager.saveApiChats(contactsBlocked.chats);\n      const count = contactsBlocked._ === 'contacts.blocked' ? contactsBlocked.users.length + contactsBlocked.chats.length : contactsBlocked.count;\n\n      const peerIds: PeerId[] = contactsBlocked.users.map((u) => u.id.toPeerId()).concat(contactsBlocked.chats.map((c) => c.id.toPeerId(true)));\n\n      return {count, peerIds};\n    });\n  }\n\n  public getLocated(\n    lat: number,\n    long: number,\n    accuracy_radius: number,\n    background: boolean = false,\n    self_expires: number = 0\n  ) {\n    const geo_point: InputGeoPoint = {\n      _: 'inputGeoPoint',\n      lat,\n      long,\n      accuracy_radius\n    };\n\n    return this.apiManager.invokeApi('contacts.getLocated', {\n      geo_point,\n      background\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      return updates;\n    });\n  }\n\n  /* public searchContacts(query: string, limit = 20) {\n    return Promise.all([\n      this.getContacts(query),\n      apiManager.invokeApi('contacts.search', {\n        q: query,\n        limit\n      })\n    ]).then((results) => {\n      const [myContacts, peers] = results;\n\n      this.saveApiUsers(peers.users);\n      appChatsManager.saveApiChats(peers.chats);\n\n      // * contacts.search returns duplicates in my_results\n      const myResults = new Set(myContacts.concat(peers.my_results.map((p) => appPeersManager.getPeerID(p))));\n\n      const out = {\n        my_results: [...myResults].slice(0, limit),\n        results: peers.results.map((p) => appPeersManager.getPeerID(p))\n      };\n\n      return out;\n    });\n  } */\n  public searchContacts(query: string, limit = 20) {\n    // handle 't.me/username' as 'username'\n    const entities = parseEntities(query);\n    if(entities.length && entities[0].length === query.trim().length && entities[0]._ === 'messageEntityUrl') {\n      try {\n        const url = new URL(wrapUrl(query).url);\n        const path = url.pathname.slice(1);\n        if(path) {\n          query = path;\n        }\n      } catch(err) {}\n    }\n\n    return this.apiManager.invokeApiCacheable('contacts.search', {\n      q: query,\n      limit\n    }, {cacheSeconds: 60}).then((peers) => {\n      this.saveApiUsers(peers.users);\n      this.appChatsManager.saveApiChats(peers.chats);\n\n      const out = {\n        my_results: filterUnique(peers.my_results.map((p) => getPeerId(p))), // ! contacts.search returns duplicates in my_results\n        results: peers.results.map((p) => getPeerId(p))\n      };\n\n      return out;\n    });\n  }\n\n  private onContactUpdated(userId: UserId, isContact: boolean, curIsContact = this.isContact(userId)) {\n    if(isContact !== curIsContact) {\n      if(isContact) {\n        this.pushContact(userId);\n      } else {\n        this.popContact(userId);\n      }\n\n      this.onContactsModified();\n\n      this.rootScope.dispatchEvent('contacts_update', userId);\n    }\n  }\n\n  public updateUsername(username: string) {\n    return this.apiManager.invokeApi('account.updateUsername', {\n      username\n    }).then((user) => {\n      this.saveApiUser(user);\n    });\n  }\n\n  public setUserStatus(userId: UserId, offline: boolean) {\n    if(this.isBot(userId)) {\n      return;\n    }\n\n    const user = this.users[userId];\n    if(user) {\n      const status: UserStatus = offline ? {\n        _: 'userStatusOffline',\n        was_online: tsNow(true)\n      } : {\n        _: 'userStatusOnline',\n        expires: tsNow(true) + 50\n      };\n\n      user.status = status;\n      // user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public updateMyOnlineStatus(offline: boolean) {\n    this.setUserStatus(this.getSelf().id, offline);\n    return this.apiManager.invokeApiSingle('account.updateStatus', {offline});\n  }\n\n  public addContact(userId: UserId, first_name: string, last_name: string, phone: string, showPhone?: true) {\n    /* if(!userId) {\n      return this.importContacts([{\n        first_name,\n        last_name,\n        phones: [phone]\n      }]);\n    } */\n\n    return this.apiManager.invokeApi('contacts.addContact', {\n      id: this.getUserInput(userId),\n      first_name,\n      last_name,\n      phone,\n      add_phone_privacy_exception: showPhone\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      this.onContactUpdated(userId, true);\n    });\n  }\n\n  public deleteContacts(userIds: UserId[]) {\n    return this.apiManager.invokeApi('contacts.deleteContacts', {\n      id: userIds.map((userId) => this.getUserInput(userId))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      userIds.forEach((userId) => {\n        this.onContactUpdated(userId, false);\n      });\n    });\n  }\n\n  public isRestricted(userId: UserId) {\n    const user: MTUser.user = this.getUser(userId);\n    const restrictionReasons = user.restriction_reason;\n\n    return !!(user.pFlags.restricted && restrictionReasons && isRestricted(restrictionReasons));\n  }\n\n  public checkUsername(username: string) {\n    return this.apiManager.invokeApi('account.checkUsername', {username});\n  }\n\n  public canSendToUser(userId: UserId) {\n    return canSendToUser(this.getUser(userId));\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\r\nimport {WebPage} from '../../layer';\r\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\r\nimport {AppManager} from './manager';\r\n\r\nconst photoTypeSet = new Set(['photo', 'video', 'gif', 'document']);\r\n\r\ntype WebPageMessageKey = `${PeerId}_${number}`;\r\n\r\nexport class AppWebPagesManager extends AppManager {\r\n  private webpages: {\r\n    [webPageId: string]: WebPage\r\n  } = {};\r\n  private pendingWebPages: {\r\n    [webPageId: string]: Set<WebPageMessageKey>\r\n  } = {};\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateWebPage: (update) => {\r\n        this.saveWebPage(update.webpage);\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveWebPage(apiWebPage: WebPage, messageKey?: WebPageMessageKey, mediaContext?: ReferenceContext) {\r\n    if(apiWebPage._ === 'webPageNotModified') return;\r\n    const {id} = apiWebPage;\r\n\r\n    const oldWebPage = this.webpages[id];\r\n    const isUpdated = oldWebPage &&\r\n      oldWebPage._ === apiWebPage._ &&\r\n      (oldWebPage as WebPage.webPage).hash === (oldWebPage as WebPage.webPage).hash;\r\n\r\n    if(apiWebPage._ === 'webPage') {\r\n      if(apiWebPage.photo?._ === 'photo') {\r\n        apiWebPage.photo = this.appPhotosManager.savePhoto(apiWebPage.photo, mediaContext);\r\n      } else {\r\n        delete apiWebPage.photo;\r\n      }\r\n\r\n      if(apiWebPage.document?._ === 'document') {\r\n        apiWebPage.document = this.appDocsManager.saveDoc(apiWebPage.document, mediaContext);\r\n      } else {\r\n        if(apiWebPage.type === 'document') {\r\n          delete apiWebPage.type;\r\n        }\r\n\r\n        delete apiWebPage.document;\r\n      }\r\n\r\n      const siteName = apiWebPage.site_name;\r\n      const shortTitle = apiWebPage.title || apiWebPage.author || siteName || '';\r\n      if(siteName && shortTitle === siteName) {\r\n        delete apiWebPage.site_name;\r\n      }\r\n\r\n      // delete apiWebPage.description\r\n\r\n      if(!photoTypeSet.has(apiWebPage.type) &&\r\n        !apiWebPage.description &&\r\n        apiWebPage.photo) {\r\n        apiWebPage.type = 'photo';\r\n      }\r\n    }\r\n\r\n    let pendingSet = this.pendingWebPages[id];\r\n    if(messageKey) {\r\n      if(!pendingSet) pendingSet = this.pendingWebPages[id] = new Set();\r\n      pendingSet.add(messageKey);\r\n    }\r\n\r\n    if(oldWebPage === undefined) {\r\n      this.webpages[id] = apiWebPage;\r\n    } else {\r\n      safeReplaceObject(oldWebPage, apiWebPage);\r\n    }\r\n\r\n    if(!messageKey && pendingSet !== undefined && isUpdated) {\r\n      const msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[] = [];\r\n      pendingSet.forEach((value) => {\r\n        const [peerId, mid, isScheduled] = value.split('_');\r\n        msgs.push({\r\n          peerId: peerId.toPeerId(),\r\n          mid: +mid,\r\n          isScheduled: !!isScheduled\r\n        });\r\n      });\r\n\r\n      this.rootScope.dispatchEvent('webpage_updated', {\r\n        id,\r\n        msgs\r\n      });\r\n    }\r\n\r\n    return apiWebPage;\r\n  }\r\n\r\n  public getMessageKeyForPendingWebPage(peerId: PeerId, mid: number, isScheduled?: boolean): WebPageMessageKey {\r\n    return peerId + '_' + mid + (isScheduled ? '_s' : '') as any;\r\n  }\r\n\r\n  public deleteWebPageFromPending(webPage: WebPage, messageKey: WebPageMessageKey) {\r\n    const id = (webPage as WebPage.webPage).id;\r\n    if(!id) return;\r\n\r\n    const set = this.pendingWebPages[id];\r\n    if(set && set.has(messageKey)) {\r\n      set.delete(messageKey);\r\n\r\n      if(!set.size) {\r\n        delete this.pendingWebPages[id];\r\n      }\r\n    }\r\n  }\r\n\r\n  public getCachedWebPage(id: WebPage.webPage['id']) {\r\n    return this.webpages[id];\r\n  }\r\n\r\n  public getWebPage(url: string) {\r\n    return this.apiManager.invokeApiHashable({\r\n      method: 'messages.getWebPage',\r\n      processResult: (webPage) => {\r\n        return this.saveWebPage(webPage);\r\n      },\r\n      params: {\r\n        url\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAs from './readBlobAs';\n\nexport default function readBlobAsArrayBuffer(blob: Blob) {\n  return readBlobAs(blob, 'readAsArrayBuffer');\n}\n","export default function fileNameRFC(fileName: string) {\n  // Make filename RFC5987 compatible\n  return encodeURIComponent(fileName).replace(/['()]/g, escape).replace(/\\*/g, '%2A');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {getServiceMessagePort} from '../mtproto/mtproto.worker';\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\nimport StreamWriter from './streamWriter';\n\nexport default class DownloadWriter implements StreamWriter {\n  constructor(\n    private serviceMessagePort: ServiceMessagePort<true>,\n    private downloadId: string\n  ) {\n    this.serviceMessagePort = getServiceMessagePort();\n  }\n\n  public async write(part: Uint8Array, offset?: number) {\n    return this.serviceMessagePort.invoke('downloadChunk', {\n      id: this.downloadId,\n      chunk: part\n    });\n  }\n\n  public finalize(saveToStorage?: boolean): Promise<Blob> {\n    return this.serviceMessagePort.invoke('downloadFinalize', this.downloadId).then(() => undefined);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport deferredPromise from '../../helpers/cancellablePromise';\nimport makeError from '../../helpers/makeError';\nimport fileNameRFC from '../../helpers/string/fileNameRFC';\nimport {getServiceMessagePort} from '../mtproto/mtproto.worker';\nimport DownloadWriter from './downloadWriter';\nimport FileStorage from './fileStorage';\n\nexport default class DownloadStorage implements FileStorage {\n  public getFile(fileName: string): Promise<any> {\n    return Promise.reject(makeError('NO_ENTRY_FOUND'));\n  }\n\n  public prepareWriting({fileName, downloadId, size}: {\n    fileName: string,\n    downloadId: string,\n    size: number\n  }) {\n    const headers = {\n      'Content-Type': 'application/octet-stream; charset=utf-8',\n      'Content-Disposition': 'attachment; filename*=UTF-8\\'\\'' + fileNameRFC(fileName),\n      ...(size ? {'Content-Length': size} : {})\n    };\n\n    const serviceMessagePort = getServiceMessagePort();\n    const promise = serviceMessagePort.invoke('download', {\n      headers,\n      id: downloadId\n    });\n\n    const deferred = deferredPromise<void>();\n    deferred.cancel = () => {\n      deferred.reject(makeError('DOWNLOAD_CANCELED'));\n    };\n\n    deferred.catch(() => {\n      getServiceMessagePort().invoke('downloadCancel', downloadId);\n    });\n\n    promise.then(deferred.resolve, deferred.reject);\n\n    return {\n      deferred,\n      getWriter: () => {\n        return new DownloadWriter(serviceMessagePort, downloadId);\n      }\n    };\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {ReferenceBytes} from './referenceDatabase';\r\nimport Modes from '../../config/modes';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport {randomLong} from '../../helpers/random';\r\nimport {Document, InputFile, InputFileLocation, InputWebFileLocation, Photo, PhotoSize, UploadFile, UploadWebFile, VideoSize, WebDocument} from '../../layer';\r\nimport {DcId} from '../../types';\r\nimport CacheStorageController from '../files/cacheStorage';\r\nimport {logger, LogTypes} from '../logger';\r\nimport assumeType from '../../helpers/assumeType';\r\nimport noop from '../../helpers/noop';\r\nimport readBlobAsArrayBuffer from '../../helpers/blob/readBlobAsArrayBuffer';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport findAndSplice from '../../helpers/array/findAndSplice';\r\nimport fixFirefoxSvg from '../../helpers/fixFirefoxSvg';\r\nimport {AppManager} from '../appManagers/manager';\r\nimport {getEnvironment} from '../../environment/utils';\r\nimport MTProtoMessagePort from './mtprotoMessagePort';\r\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\r\nimport type {Progress} from '../appManagers/appDownloadManager';\r\nimport getDownloadMediaDetails from '../appManagers/utils/download/getDownloadMediaDetails';\r\n// import networkStats from './networkStats';\r\nimport getDownloadFileNameFromOptions from '../appManagers/utils/download/getDownloadFileNameFromOptions';\r\nimport StreamWriter from '../files/streamWriter';\r\nimport FileStorage from '../files/fileStorage';\r\nimport {MAX_FILE_SAVE_SIZE} from './mtproto_config';\r\nimport throttle from '../../helpers/schedulers/throttle';\r\nimport makeError from '../../helpers/makeError';\r\nimport readBlobAsUint8Array from '../../helpers/blob/readBlobAsUint8Array';\r\nimport DownloadStorage from '../files/downloadStorage';\r\nimport copy from '../../helpers/object/copy';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport {MIME_TYPE_EXTENSION_MAP} from '../../environment/mimeTypeMap';\r\nimport {getServiceMessagePort} from './mtproto.worker';\r\n\r\ntype Delayed = {\r\n  offset: number,\r\n  writePromise: CancellablePromise<void>,\r\n  writeDeferred: CancellablePromise<void>\r\n};\r\n\r\nexport type DownloadOptions = {\r\n  dcId: DcId,\r\n  location: InputFileLocation | InputWebFileLocation,\r\n  size?: number,\r\n  fileName?: string,\r\n  mimeType?: MTMimeType,\r\n  limitPart?: number,\r\n  queueId?: number,\r\n  onlyCache?: boolean,\r\n  downloadId?: string\r\n  // getFileMethod: Parameters<CacheStorageController['getFile']>[1]\r\n};\r\n\r\nexport type DownloadMediaOptions = {\r\n  media: Photo.photo | Document.document | WebDocument,\r\n  thumb?: PhotoSize | VideoSize,\r\n  queueId?: number,\r\n  onlyCache?: boolean,\r\n  downloadId?: string\r\n};\r\n\r\ntype DownloadPromise = CancellablePromise<Blob>;\r\n\r\nexport type MyUploadFile = UploadFile.uploadFile | UploadWebFile.uploadWebFile;\r\n\r\n// export interface RefreshReferenceTask extends WorkerTaskVoidTemplate {\r\n//   type: 'refreshReference',\r\n//   payload: ReferenceBytes,\r\n// };\r\n\r\n// export interface RefreshReferenceTaskResponse extends WorkerTaskVoidTemplate {\r\n//   type: 'refreshReference',\r\n//   payload: ReferenceBytes,\r\n//   originalPayload: ReferenceBytes\r\n// };\r\n\r\nconst MAX_DOWNLOAD_FILE_PART_SIZE = 1 * 1024 * 1024;\r\nconst MAX_UPLOAD_FILE_PART_SIZE = 512 * 1024;\r\nconst MIN_PART_SIZE = 128 * 1024;\r\nconst AVG_PART_SIZE = 512 * 1024;\r\n\r\nconst REGULAR_DOWNLOAD_DELTA = (9 * 512 * 1024) / MIN_PART_SIZE;\r\n// const PREMIUM_DOWNLOAD_DELTA = REGULAR_DOWNLOAD_DELTA * 2;\r\nconst PREMIUM_DOWNLOAD_DELTA = (56 * 512 * 1024) / MIN_PART_SIZE;\r\n\r\nconst IGNORE_ERRORS: Set<ErrorType> = new Set([\r\n  'DOWNLOAD_CANCELED',\r\n  'UPLOAD_CANCELED',\r\n  'UNKNOWN',\r\n  'NO_NEW_CONTEXT'\r\n]);\r\n\r\nexport class ApiFileManager extends AppManager {\r\n  private cacheStorage = new CacheStorageController('cachedFiles');\r\n  private downloadStorage = new DownloadStorage();\r\n\r\n  private downloadPromises: {\r\n    [fileName: string]: DownloadPromise\r\n  } = {};\r\n\r\n  // private downloadToDiscPromises: {\r\n  //   [fileName: string]: DownloadPromise\r\n  // } = {};\r\n\r\n  private uploadPromises: {\r\n    [fileName: string]: CancellablePromise<InputFile>\r\n  } = {};\r\n\r\n  private downloadPulls: {\r\n    [dcId: string]: Array<{\r\n      id: number,\r\n      queueId: number,\r\n      cb: () => Promise<MyUploadFile | void>,\r\n      deferred: {\r\n        resolve: (...args: any[]) => void,\r\n        reject: (...args: any[]) => void\r\n      },\r\n      activeDelta: number\r\n    }>\r\n  } = {};\r\n  private downloadActives: {[dcId: string]: number} = {};\r\n\r\n  public refreshReferencePromises: {\r\n    [referenceHex: string]: {\r\n      deferred: CancellablePromise<ReferenceBytes>,\r\n      timeout?: number\r\n    }\r\n  } = {};\r\n\r\n  private log: ReturnType<typeof logger> = logger('AFM', LogTypes.Error | LogTypes.Log);\r\n  private tempId = 0;\r\n  private queueId = 0;\r\n  private debug = Modes.debug;\r\n\r\n  private maxUploadParts = 4000;\r\n  private maxDownloadParts = 8000;\r\n  private webFileDcId: DcId;\r\n\r\n  protected after() {\r\n    setInterval(() => { // clear old promises\r\n      for(const hex in this.refreshReferencePromises) {\r\n        const {deferred} = this.refreshReferencePromises[hex];\r\n        if(deferred.isFulfilled || deferred.isRejected) {\r\n          delete this.refreshReferencePromises[hex];\r\n        }\r\n      }\r\n    }, 1800e3);\r\n\r\n    this.rootScope.addEventListener('config', (config) => {\r\n      this.webFileDcId = config.webfile_dc_id;\r\n    });\r\n\r\n    this.rootScope.addEventListener('app_config', (appConfig) => {\r\n      this.maxUploadParts = this.rootScope.premium ? appConfig.upload_max_fileparts_premium : appConfig.upload_max_fileparts_default;\r\n      this.maxDownloadParts = appConfig.upload_max_fileparts_premium;\r\n    });\r\n  }\r\n\r\n  private downloadRequest(dcId: 'upload', id: number, cb: () => Promise<void>, activeDelta: number, queueId?: number): Promise<void>;\r\n  private downloadRequest(dcId: number, id: number, cb: () => Promise<MyUploadFile>, activeDelta: number, queueId?: number): Promise<MyUploadFile>;\r\n  private downloadRequest(dcId: number | string, id: number, cb: () => Promise<MyUploadFile | void>, activeDelta: number, queueId: number = 0) {\r\n    if(this.downloadPulls[dcId] === undefined) {\r\n      this.downloadPulls[dcId] = [];\r\n      this.downloadActives[dcId] = 0;\r\n    }\r\n\r\n    const downloadPull = this.downloadPulls[dcId];\r\n\r\n    const promise = new Promise<MyUploadFile | void>((resolve, reject) => {\r\n      downloadPull.push({id, queueId, cb, deferred: {resolve, reject}, activeDelta});\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.downloadCheck(dcId);\r\n    }, 0);\r\n\r\n    return promise;\r\n  }\r\n\r\n  private downloadCheck(dcId: string | number) {\r\n    const downloadPull = this.downloadPulls[dcId];\r\n    const downloadLimit = /* dcId === 'upload' ? 24 :  */(this.rootScope.premium ? PREMIUM_DOWNLOAD_DELTA : REGULAR_DOWNLOAD_DELTA);\r\n    // const downloadLimit = Infinity;\r\n\r\n    if(this.downloadActives[dcId] >= downloadLimit || !downloadPull?.length) {\r\n      return false;\r\n    }\r\n\r\n    // const data = downloadPull.shift();\r\n    const data = findAndSplice(downloadPull, (d) => d.queueId === 0) || findAndSplice(downloadPull, (d) => d.queueId === this.queueId) || downloadPull.shift();\r\n    const activeDelta = data.activeDelta || 1;\r\n\r\n    this.downloadActives[dcId] += activeDelta;\r\n\r\n    const promise = data.cb();\r\n    // const networkPromise = networkStats.waitForChunk(dcId as DcId, activeDelta * MIN_PART_SIZE);\r\n    /* Promise.race([\r\n      promise\r\n      // networkPromise\r\n    ]) */promise.then(() => {\r\n      this.downloadActives[dcId] -= activeDelta;\r\n      this.downloadCheck(dcId);\r\n\r\n      // networkPromise.resolve();\r\n    }, (error: ApiError) => {\r\n      if(!error?.type || !IGNORE_ERRORS.has(error.type)) {\r\n        this.log.error('downloadCheck error:', error);\r\n      }\r\n\r\n      this.downloadActives[dcId] -= activeDelta;\r\n      this.downloadCheck(dcId);\r\n\r\n      // networkPromise.reject(error);\r\n    }).finally(() => {\r\n      promise.then(data.deferred.resolve, data.deferred.reject);\r\n    });\r\n  }\r\n\r\n  public setQueueId(queueId: number) {\r\n    // this.log.error('setQueueId', queueId);\r\n    this.queueId = queueId;\r\n  }\r\n\r\n  private getFileStorage() {\r\n    return this.cacheStorage;\r\n  }\r\n\r\n  public cancelDownload(fileName: string) {\r\n    const promises = [this.downloadPromises[fileName], this.uploadPromises[fileName]].filter(Boolean);\r\n    let canceled = false;\r\n    for(let i = 0, length = promises.length; i < length; ++i) {\r\n      const promise = promises[i];\r\n      if(promise && !promise.isRejected && !promise.isFulfilled) {\r\n        promise.cancel();\r\n        canceled = true;\r\n      }\r\n    }\r\n\r\n    return canceled;\r\n  }\r\n\r\n  public requestWebFilePart(dcId: DcId, location: InputWebFileLocation, offset: number, limit: number, id = 0, queueId = 0, checkCancel?: () => void) {\r\n    return this.downloadRequest(dcId, id, async() => { // do not remove async, because checkCancel will throw an error\r\n      checkCancel?.();\r\n\r\n      return this.apiManager.invokeApi('upload.getWebFile', {\r\n        location,\r\n        offset,\r\n        limit\r\n      }, {\r\n        dcId,\r\n        fileDownload: true\r\n      });\r\n    }, this.getDelta(limit), queueId);\r\n  }\r\n\r\n  public requestFilePart(\r\n    dcId: DcId,\r\n    location: InputFileLocation,\r\n    offset: number,\r\n    limit: number,\r\n    id = 0,\r\n    queueId = 0,\r\n    checkCancel?: () => void\r\n  ) {\r\n    return this.downloadRequest(dcId, id, async() => { // do not remove async, because checkCancel will throw an error\r\n      checkCancel?.();\r\n\r\n      const invoke = async(): Promise<MyUploadFile> => {\r\n        checkCancel?.(); // do not remove async, because checkCancel will throw an error\r\n\r\n        // * IMPORTANT: reference can be changed in previous request\r\n        const reference = (location as InputFileLocation.inputDocumentFileLocation).file_reference?.slice();\r\n\r\n        const promise = // pause(offset > (100 * 1024 * 1024) ? 10000000 : 0).then(() =>\r\n        this.apiManager.invokeApi('upload.getFile', {\r\n          location,\r\n          offset,\r\n          limit\r\n        }, {\r\n          dcId,\r\n          fileDownload: true\r\n        }) as Promise<MyUploadFile>/* ) */;\r\n\r\n        return promise.catch((err: ApiError) => {\r\n          checkCancel?.();\r\n\r\n          if(err.type === 'FILE_REFERENCE_EXPIRED') {\r\n            return this.refreshReference(location as InputFileLocation.inputDocumentFileLocation, reference).then(invoke);\r\n          }\r\n\r\n          throw err;\r\n        });\r\n      };\r\n\r\n      assumeType<InputFileLocation.inputDocumentFileLocation>(location);\r\n      const reference = location.file_reference;\r\n      if(reference && !location.checkedReference) { // check stream's location because it's new every call\r\n        location.checkedReference = true;\r\n        const hex = bytesToHex(reference);\r\n        if(this.refreshReferencePromises[hex]) {\r\n          return this.refreshReference(location, reference).then(invoke);\r\n        }\r\n      }\r\n\r\n      return invoke();\r\n    }, this.getDelta(limit), queueId);\r\n  }\r\n\r\n  /* private convertBlobToBytes(blob: Blob) {\r\n    return blob.arrayBuffer().then((buffer) => new Uint8Array(buffer));\r\n  } */\r\n\r\n  private getDelta(bytes: number) {\r\n    return bytes / MIN_PART_SIZE;\r\n  }\r\n\r\n  private getLimitPart(size: number, isUpload: boolean): number {\r\n    if(!size) { // * sometimes size can be 0 (e.g. avatars, webDocuments)\r\n      return AVG_PART_SIZE;\r\n    }\r\n\r\n    // return 1 * 1024 * 1024;\r\n\r\n    let bytes = MIN_PART_SIZE;\r\n\r\n    const maxParts = isUpload ? this.maxUploadParts : this.maxDownloadParts;\r\n    const maxPartSize = isUpload ? MAX_UPLOAD_FILE_PART_SIZE : MAX_DOWNLOAD_FILE_PART_SIZE;\r\n    // usually it will stick to 512Kb size if the file is too big\r\n    while((size / bytes) > maxParts && bytes < maxPartSize) {\r\n      bytes *= 2;\r\n    }\r\n    /* if(size < 1e6 || !size) bytes = 512;\r\n    else if(size < 3e6) bytes = 256;\r\n    else bytes = 128; */\r\n\r\n    return bytes;\r\n  }\r\n\r\n  private uncompressTGS = (bytes: Uint8Array, fileName: string) => {\r\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\r\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\r\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', bytes.slice().buffer, false) as Promise<Uint8Array>;\r\n  };\r\n\r\n  private uncompressTGV = (bytes: Uint8Array, fileName: string) => {\r\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\r\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\r\n    const buffer = bytes.slice().buffer;\r\n    if(getEnvironment().IS_FIREFOX) {\r\n      return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, true).then((text) => {\r\n        return fixFirefoxSvg(text as string);\r\n      }).then((text) => {\r\n        const textEncoder = new TextEncoder();\r\n        return textEncoder.encode(text);\r\n      });\r\n    }\r\n\r\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, false) as Promise<Uint8Array>;\r\n  };\r\n\r\n  private convertWebp = (bytes: Uint8Array, fileName: string) => {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    return instance.invoke('convertWebp', {fileName, bytes});\r\n  };\r\n\r\n  private convertOpus = (bytes: Uint8Array, fileName: string) => {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    return instance.invoke('convertOpus', {fileName, bytes});\r\n  };\r\n\r\n  private refreshReference(\r\n    inputFileLocation: InputFileLocation.inputDocumentFileLocation,\r\n    reference: typeof inputFileLocation['file_reference'],\r\n    hex = bytesToHex(reference)\r\n  ) {\r\n    let r = this.refreshReferencePromises[hex];\r\n    if(!r) {\r\n      const deferred = deferredPromise<ReferenceBytes>();\r\n\r\n      r = this.refreshReferencePromises[hex] = {\r\n        deferred\r\n\r\n        // ! I don't remember what it was for...\r\n        // timeout: ctx.setTimeout(() => {\r\n        //   this.log.error('Didn\\'t refresh the reference:', inputFileLocation);\r\n        //   deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\r\n        // }, 60000)\r\n      };\r\n\r\n      // deferred.catch(noop).finally(() => {\r\n      //   clearTimeout(r.timeout);\r\n      // });\r\n\r\n      this.referenceDatabase.refreshReference(reference).then((reference) => {\r\n        if(hex === bytesToHex(reference)) {\r\n          deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\r\n        }\r\n\r\n        deferred.resolve(reference);\r\n      }, deferred.reject);\r\n    }\r\n\r\n    // have to replace file_reference in any way, because location can be different everytime if it's stream\r\n    return r.deferred.then((reference) => {\r\n      inputFileLocation.file_reference = reference;\r\n    });\r\n  }\r\n\r\n  public isDownloading(fileName: string) {\r\n    return !!this.downloadPromises[fileName];\r\n  }\r\n\r\n  public getDownload(fileName: string) {\r\n    return this.downloadPromises[fileName];\r\n  }\r\n\r\n  public getUpload(fileName: string) {\r\n    return this.uploadPromises[fileName];\r\n  }\r\n\r\n  private getConvertMethod(mimeType: MTMimeType) {\r\n    let process: ApiFileManager['uncompressTGS'] | ApiFileManager['convertWebp'];\r\n    if(mimeType === 'application/x-tgwallpattern') {\r\n      process = this.uncompressTGV;\r\n      mimeType = 'image/svg+xml';\r\n    } else if(mimeType === 'image/webp' && !getEnvironment().IS_WEBP_SUPPORTED) {\r\n      process = this.convertWebp;\r\n      mimeType = 'image/png';\r\n    } else if(mimeType === 'application/x-tgsticker') {\r\n      process = this.uncompressTGS;\r\n      mimeType = 'application/json';\r\n    } else if(mimeType === 'audio/ogg' && !getEnvironment().IS_OPUS_SUPPORTED) {\r\n      process = this.convertOpus;\r\n      mimeType = 'audio/wav';\r\n    }\r\n\r\n    return {mimeType, process};\r\n  }\r\n\r\n  private allocateDeferredPromises(startOffset: number, size: number, limitPart: number) {\r\n    const delayed: Delayed[] = [];\r\n    let offset = startOffset;\r\n    let writePromise: CancellablePromise<void> = Promise.resolve(),\r\n      writeDeferred: CancellablePromise<void>;\r\n    do {\r\n      writeDeferred = deferredPromise<void>();\r\n      delayed.push({offset, writePromise, writeDeferred});\r\n      writePromise = writeDeferred;\r\n      offset += limitPart;\r\n    } while(offset < size);\r\n\r\n    return delayed;\r\n  }\r\n\r\n  public download(options: DownloadOptions): DownloadPromise {\r\n    const size = options.size ?? 0;\r\n    const {dcId, location} = options;\r\n    let {downloadId} = options;\r\n    if(downloadId && !getServiceMessagePort()) {\r\n      this.log.error('download fallback to blob', options);\r\n      downloadId = undefined;\r\n    }\r\n\r\n    const originalMimeType = options.mimeType;\r\n    const convertMethod = this.getConvertMethod(originalMimeType);\r\n    const {process} = convertMethod;\r\n    options.mimeType = convertMethod.mimeType || 'image/jpeg';\r\n\r\n    const fileName = getDownloadFileNameFromOptions(options);\r\n    const cacheFileName = downloadId ? getDownloadFileNameFromOptions({...copy(options), downloadId: undefined}) : fileName;\r\n    const cacheStorage: FileStorage = this.getFileStorage();\r\n    const downloadStorage: FileStorage = downloadId ? this.downloadStorage : undefined;\r\n    let deferred: DownloadPromise = downloadId ? undefined : this.downloadPromises[fileName];\r\n\r\n    this.debug && this.log('downloadFile', fileName, options);\r\n\r\n    if(deferred) {\r\n      return deferred;\r\n    }\r\n\r\n    // if(deferred) {\r\n    //   if(size) {\r\n    //     return deferred.then(async(blob) => {\r\n    //       if(blob instanceof Blob && blob.size < size) {\r\n    //         this.debug && this.log('downloadFile need to deleteFile, wrong size:', blob.size, size);\r\n\r\n    //         try {\r\n    //           await this.delete(fileName);\r\n    //         } finally {\r\n    //           return this.download(options);\r\n    //         }\r\n    //       } else {\r\n    //         return blob;\r\n    //       }\r\n    //     });\r\n    //   } else {\r\n    //     return deferred;\r\n    //   }\r\n    // }\r\n\r\n    const errorHandler = (item: typeof cachePrepared, error: ApiError) => {\r\n      if(item?.error) {\r\n        return;\r\n      }\r\n\r\n      for(const p of prepared) {\r\n        if(item && item !== p) {\r\n          continue;\r\n        }\r\n\r\n        p.error = error;\r\n        p.deferred.reject(error);\r\n      }\r\n    };\r\n\r\n    const id = this.tempId++;\r\n    const limitPart = options.limitPart || this.getLimitPart(size, false);\r\n\r\n    let getFile: FileStorage['getFile'] = cacheStorage.getFile.bind(cacheStorage);\r\n\r\n    let cachePrepared: ReturnType<FileStorage['prepareWriting']> & {writer?: StreamWriter, error?: ApiError},\r\n      downloadPrepared: typeof cachePrepared;\r\n    const prepared: (typeof cachePrepared)[] = [];\r\n    const possibleSize = size || limitPart;\r\n\r\n    const getErrorsCount = () => prepared.reduce((acc, item) => acc + +!!item.error, 0);\r\n\r\n    const attach = (item: typeof cachePrepared, fileName: string) => {\r\n      const {deferred} = item;\r\n      const _errorHandler = errorHandler.bind(null, item);\r\n\r\n      deferred.cancel = () => deferred.reject(makeError('DOWNLOAD_CANCELED'));\r\n      deferred.catch((error) => {\r\n        _errorHandler(error);\r\n        item.writer?.truncate?.();\r\n      }).finally(() => {\r\n        if(this.downloadPromises[fileName] === deferred) {\r\n          delete this.downloadPromises[fileName];\r\n        }\r\n\r\n        delete item.writer;\r\n        // indexOfAndSplice(prepared, item);\r\n      });\r\n\r\n      this.downloadPromises[fileName] = deferred;\r\n\r\n      prepared.push(item);\r\n    };\r\n\r\n    if(cacheStorage && (!downloadStorage || possibleSize <= MAX_FILE_SAVE_SIZE)) {\r\n      cachePrepared = cacheStorage.prepareWriting(cacheFileName, possibleSize, options.mimeType)\r\n      attach(cachePrepared, cacheFileName);\r\n    }\r\n\r\n    if(downloadStorage) {\r\n      let downloadFileName = options.fileName; // it's doc file_name\r\n      if(!downloadFileName) {\r\n        downloadFileName = cacheFileName;\r\n        const ext = MIME_TYPE_EXTENSION_MAP[options.mimeType];\r\n        if(ext) {\r\n          downloadFileName += '.' + ext;\r\n        }\r\n      }\r\n\r\n      downloadPrepared = downloadStorage.prepareWriting({\r\n        fileName: downloadFileName,\r\n        downloadId,\r\n        size: possibleSize\r\n      });\r\n      attach(downloadPrepared, fileName);\r\n\r\n      if(cachePrepared) { // cancel cache too\r\n        downloadPrepared.deferred.catch((err) => cachePrepared.deferred.reject(err));\r\n      }\r\n\r\n      // this.downloadToDiscPromises[cacheFileName] = deferred;\r\n      // deferred.catch(noop).finally(() => {\r\n      //   if(this.downloadToDiscPromises[cacheFileName] === deferred) {\r\n      //     delete this.downloadToDiscPromises[cacheFileName];\r\n      //   }\r\n      // });\r\n    }\r\n\r\n    deferred = downloadPrepared?.deferred ?? cachePrepared.deferred;\r\n\r\n    if(downloadStorage && process) { // then have to load file again\r\n      getFile = downloadStorage.getFile.bind(downloadStorage);\r\n    }\r\n\r\n    getFile(cacheFileName).then(async(blob: Blob) => {\r\n      checkCancel();\r\n\r\n      // if(blob.size < size) {\r\n      //   if(!options.onlyCache) {\r\n      //     await this.delete(cacheFileName);\r\n      //     checkCancel();\r\n      //   }\r\n\r\n      //   throw makeError('NO_ENTRY_FOUND');\r\n      // }\r\n\r\n      if(downloadPrepared) {\r\n        const writer = downloadPrepared.writer = downloadPrepared.getWriter();\r\n        checkCancel();\r\n\r\n        const arr = await readBlobAsUint8Array(blob);\r\n        checkCancel();\r\n        await writer.write(arr);\r\n        checkCancel();\r\n\r\n        downloadPrepared.deferred.resolve(await writer.finalize());\r\n      }\r\n\r\n      if(cachePrepared) {\r\n        cachePrepared.deferred.resolve(blob);\r\n      }\r\n    }).catch(async(err: ApiError) => {\r\n      if(options.onlyCache) {\r\n        errorHandler(null, err);\r\n        return;\r\n      }\r\n\r\n      prepared.forEach((p) => {\r\n        p.writer = p.getWriter();\r\n      });\r\n\r\n      const maxRequests = Infinity;\r\n\r\n      const isWebFile = location._ === 'inputWebFileLocation';\r\n      const requestPart = (isWebFile ? this.requestWebFilePart : this.requestFilePart).bind(this);\r\n\r\n      if(isWebFile && this.webFileDcId === undefined) {\r\n        await this.apiManager.getConfig();\r\n        checkCancel();\r\n      }\r\n\r\n      const delayed = this.allocateDeferredPromises(0, size, limitPart);\r\n\r\n      const progress: Progress = {done: 0, offset: 0, total: size, fileName};\r\n      const dispatchProgress = () => {\r\n        try {\r\n          checkCancel();\r\n          progress.done = done;\r\n          this.rootScope.dispatchEvent('download_progress', progress);\r\n        } catch(err) {}\r\n      };\r\n\r\n      const throttledDispatchProgress = throttle(dispatchProgress, 50, true);\r\n\r\n      let done = 0;\r\n      const superpuper = async() => {\r\n        const {offset, writePromise, writeDeferred} = delayed.shift();\r\n        try {\r\n          checkCancel();\r\n\r\n          const requestPerf = performance.now();\r\n          const result = await requestPart(dcId, location as any, offset, limitPart, id, options.queueId, checkCancel);\r\n          const requestTime = performance.now() - requestPerf;\r\n\r\n          const bytes = result.bytes;\r\n\r\n          if(delayed.length) {\r\n            superpuper();\r\n          }\r\n\r\n          const byteLength = bytes.byteLength;\r\n          this.debug && this.log('downloadFile requestFilePart result:', fileName, result);\r\n          const isFinal = (offset + limitPart) >= size || !byteLength;\r\n          if(byteLength) {\r\n            done += byteLength;\r\n\r\n            if(isFinal) {\r\n              dispatchProgress();\r\n            } else {\r\n              throttledDispatchProgress();\r\n            }\r\n\r\n            const writeQueuePerf = performance.now();\r\n            await writePromise;\r\n            checkCancel();\r\n            const writeQueueTime = performance.now() - writeQueuePerf;\r\n\r\n            const perf = performance.now();\r\n            await Promise.all(prepared.map(({writer}) => writer?.write(bytes, offset)));\r\n            checkCancel();\r\n            // downloadId && this.log('write time', performance.now() - perf, 'request time', requestTime, 'queue time', writeQueueTime);\r\n          }\r\n\r\n          if(isFinal) {\r\n            if(!size || done < size) {\r\n              prepared.forEach(({writer}) => writer?.trim?.(done));\r\n            }\r\n          }\r\n\r\n          if(isFinal && process) {\r\n            const promises = prepared\r\n            .filter(({writer}) => writer?.getParts && writer.replaceParts)\r\n            .map(async({writer}) => {\r\n              const bytes = writer.getParts();\r\n              const processedResult = await process(bytes, cacheFileName);\r\n              writer.replaceParts(processedResult);\r\n            });\r\n\r\n            await Promise.all(promises);\r\n            checkCancel();\r\n          }\r\n\r\n          writeDeferred.resolve();\r\n\r\n          if(isFinal) {\r\n            const saveToStorage = done <= MAX_FILE_SAVE_SIZE;\r\n            prepared.forEach((item) => {\r\n              const {deferred, writer} = item;\r\n              if(deferred.isFulfilled || deferred.isRejected || !writer) {\r\n                return;\r\n              }\r\n\r\n              const result = writer.finalize(saveToStorage);\r\n              deferred.resolve(result);\r\n            });\r\n          }\r\n        } catch(err) {\r\n          errorHandler(null, err as ApiError);\r\n        }\r\n      };\r\n\r\n      for(let i = 0, length = Math.min(maxRequests, delayed.length); i < length; ++i) {\r\n        superpuper();\r\n      }\r\n    }).catch(noop);\r\n\r\n    const checkCancel = () => {\r\n      if(getErrorsCount() === prepared.length) {\r\n        throw prepared[0].error;\r\n      }\r\n    };\r\n\r\n    return deferred;\r\n  }\r\n\r\n  public downloadMedia(options: DownloadMediaOptions): DownloadPromise {\r\n    let {media, thumb} = options;\r\n    const isPhoto = media._ === 'photo';\r\n    if(isPhoto && !thumb) {\r\n      return Promise.reject('preloadPhoto photoEmpty!');\r\n    }\r\n\r\n    // get original instance with correct file_reference instead of using copies\r\n    const isDocument = media._ === 'document';\r\n    // const isWebDocument = media._ === 'webDocument';\r\n    if(isDocument) media = this.appDocsManager.getDoc((media as Document.document).id);\r\n    else if(isPhoto) media = this.appPhotosManager.getPhoto((media as Photo.photo).id);\r\n\r\n    const {fileName, downloadOptions} = getDownloadMediaDetails(options);\r\n\r\n    let promise = this.getDownload(fileName);\r\n    if(!promise) {\r\n      promise = this.download(downloadOptions);\r\n\r\n      if(isDocument && !thumb) {\r\n        this.rootScope.dispatchEvent('document_downloading', (media as Document.document).id);\r\n        promise.catch(noop).finally(() => {\r\n          this.rootScope.dispatchEvent('document_downloaded', (media as Document.document).id);\r\n        });\r\n      }\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public downloadMediaURL(options: DownloadMediaOptions): Promise<string> {\r\n    const {media, thumb} = options;\r\n\r\n    let cacheContext = this.thumbsStorage.getCacheContext(media as any, thumb?.type);\r\n    if((thumb ? (cacheContext.downloaded >= ('size' in thumb ? thumb.size : 0)) : true) && cacheContext.url) {\r\n      return Promise.resolve(cacheContext.url);\r\n    }\r\n\r\n    return this.downloadMedia(options).then((blob) => {\r\n      if(!cacheContext.downloaded || cacheContext.downloaded < blob.size) {\r\n        const url = URL.createObjectURL(blob);\r\n        cacheContext = this.thumbsStorage.setCacheContextURL(media as any, cacheContext.type, url, blob.size);\r\n      }\r\n\r\n      return cacheContext.url;\r\n    });\r\n  }\r\n\r\n  public downloadMediaVoid(options: DownloadMediaOptions) {\r\n    return this.downloadMedia(options).then(noop);\r\n  }\r\n\r\n  private delete(fileName: string) {\r\n    delete this.downloadPromises[fileName];\r\n    return this.getFileStorage().delete(fileName);\r\n  }\r\n\r\n  public upload({file, fileName}: {file: Blob | File, fileName?: string}) {\r\n    fileName ||= getFileNameForUpload(file);\r\n\r\n    const fileSize = file.size;\r\n    const isBigFile = fileSize >= 10485760;\r\n    const partSize = this.getLimitPart(fileSize, true);\r\n    const activeDelta = this.getDelta(partSize);\r\n    const totalParts = Math.ceil(fileSize / partSize);\r\n    const fileId = randomLong();\r\n    const resultInputFile: InputFile = {\r\n      _: isBigFile ? 'inputFileBig' : 'inputFile',\r\n      id: fileId as any,\r\n      parts: totalParts,\r\n      name: fileName,\r\n      md5_checksum: ''\r\n    };\r\n\r\n    const deferred = deferredPromise<typeof resultInputFile>();\r\n    if(totalParts > this.maxUploadParts) {\r\n      deferred.reject(makeError('FILE_TOO_BIG'));\r\n      return deferred;\r\n    }\r\n\r\n    let canceled = false, resolved = false;\r\n    let errorHandler = (error: ApiError) => {\r\n      if(error?.type !== 'UPLOAD_CANCELED') {\r\n        this.log.error('Up Error', error);\r\n      }\r\n\r\n      deferred.reject(error);\r\n      canceled = true;\r\n      errorHandler = noop;\r\n    };\r\n\r\n    const method = isBigFile ? 'upload.saveBigFilePart' : 'upload.saveFilePart';\r\n    const id = this.tempId++;\r\n\r\n    const self = this;\r\n    function* generator() {\r\n      let _part = 0, doneParts = 0;\r\n      for(let offset = 0; offset < fileSize; offset += partSize) {\r\n        const part = _part++; // 0, 1\r\n        yield self.downloadRequest('upload', id, async() => {\r\n          checkCancel();\r\n\r\n          const blob = file.slice(offset, offset + partSize);\r\n          const buffer = await readBlobAsArrayBuffer(blob);\r\n          checkCancel();\r\n\r\n          self.debug && self.log('Upload file part, isBig:', isBigFile, part, buffer.byteLength, new Uint8Array(buffer).length, new Uint8Array(buffer).slice().length);\r\n\r\n          return self.apiManager.invokeApi(method, {\r\n            file_id: fileId,\r\n            file_part: part,\r\n            file_total_parts: totalParts,\r\n            bytes: buffer\r\n          } as any, {\r\n            fileUpload: true\r\n          }).then(() => {\r\n            if(canceled) {\r\n              return;\r\n            }\r\n\r\n            ++doneParts;\r\n            const progress: Progress = {done: doneParts * partSize, offset, total: fileSize, fileName};\r\n            deferred.notify(progress);\r\n\r\n            if(doneParts >= totalParts) {\r\n              deferred.resolve(resultInputFile);\r\n              resolved = true;\r\n            }\r\n          }, errorHandler);\r\n        }, activeDelta).catch(errorHandler);\r\n      }\r\n    }\r\n\r\n    const it = generator();\r\n    const process = () => {\r\n      if(canceled) return;\r\n      const r = it.next();\r\n      if(r.done || canceled) return;\r\n      (r.value as Promise<void>).then(process);\r\n    };\r\n\r\n    const maxRequests = Infinity;\r\n    for(let i = 0, length = Math.min(maxRequests, totalParts); i < length; ++i) {\r\n      process();\r\n    }\r\n\r\n    const checkCancel = () => {\r\n      if(canceled) {\r\n        throw makeError('UPLOAD_CANCELED');\r\n      }\r\n    };\r\n\r\n    deferred.cancel = () => {\r\n      if(!canceled && !resolved) {\r\n        canceled = true;\r\n        errorHandler(makeError('UPLOAD_CANCELED'));\r\n      }\r\n    };\r\n\r\n    deferred.notify = (progress: Progress) => {\r\n      this.rootScope.dispatchEvent('download_progress', progress);\r\n    };\r\n\r\n    deferred.finally(() => {\r\n      if(this.uploadPromises[fileName] === deferred) {\r\n        delete this.uploadPromises[fileName];\r\n      }\r\n    });\r\n\r\n    return this.uploadPromises[fileName] = deferred;\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function fixFirefoxSvg(text: string) {\n  const svgIndex = text.indexOf('<svg');\n  if(svgIndex !== 0) {\n    text = text.slice(svgIndex);\n  }\n\n  const [_, __, width, height] = text.match(/viewBox=\"(.+?)\"/)[1].split(' ');\n  text = text.replace(/>/, ` width=\"${width}\" height=\"${height}\">`).replace(/[^\\x00-\\x7F]/g, '');\n  return text;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAsArrayBuffer from './readBlobAsArrayBuffer';\n\nexport default function readBlobAsUint8Array(blob: Blob) {\n  return readBlobAsArrayBuffer(blob).then((buffer) => new Uint8Array(buffer));\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from '../../environment/ctx';\nimport callbackify from '../../helpers/callbackify';\nimport {ignoreRestrictionReasons} from '../../helpers/restrictions';\nimport {Config, MethodDeclMap, User} from '../../layer';\nimport {InvokeApiOptions} from '../../types';\nimport {AppManager} from '../appManagers/manager';\nimport {MTAppConfig} from './appConfig';\nimport {UserAuth} from './mtproto_config';\nimport {MTMessage} from './networker';\n\ntype HashResult = {\n  hash: number,\n  result: any\n};\n\ntype HashOptions = {\n  [queryJSON: string]: HashResult\n};\n\nexport type ApiLimitType = 'pin' | 'folderPin' | 'folders' | 'favedStickers' | 'reactions' | 'bio';\n\nexport default abstract class ApiManagerMethods extends AppManager {\n  private afterMessageIdTemp: number;\n  private hashes: {[method: string]: HashOptions} = {};\n  private apiPromisesSingleProcess: {\n    [q: string]: Map<any, Promise<any>>\n  } = {};\n  private apiPromisesSingle: {\n    [q: string]: Promise<any>\n  } = {};\n  private apiPromisesCacheable: {\n    [method: string]: {\n      [queryJSON: string]: {\n        timestamp: number,\n        promise: Promise<any>,\n        fulfilled: boolean,\n        timeout?: number,\n        params: any\n      }\n    }\n  } = {};\n\n  protected config: Config;\n  protected appConfig: MTAppConfig;\n\n  constructor() {\n    super();\n    this.afterMessageIdTemp = 0;\n  }\n\n  abstract setUserAuth(userAuth: UserAuth | UserId): Promise<void>;\n\n  public setUser(user: User) {\n    // appUsersManager.saveApiUser(user);\n    return this.setUserAuth(user.id);\n  }\n\n  abstract invokeApi<T extends keyof MethodDeclMap>(method: T, params?: MethodDeclMap[T]['req'], options?: InvokeApiOptions): Promise<MethodDeclMap[T]['res']>;\n\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    let o = options;\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\n\n    o = {...options};\n    (options as MTMessage).messageId = o.prepareTempMessageId;\n\n    // console.log('will invokeApi:', method, params, options);\n    return this.invokeApi(method, params, o);\n  }\n\n  public invokeApiHashable<T extends keyof MethodDeclMap, R>(o: {\n    method: T,\n    processResult?: (response: MethodDeclMap[T]['res']) => R,\n    processError?: (error: ApiError) => any,\n    params?: Omit<MethodDeclMap[T]['req'], 'hash'>,\n    options?: InvokeApiOptions & {cacheKey?: string},\n    overwrite?: boolean\n  }) {\n    // @ts-ignore\n    o.params ??= {};\n    o.options ??= {};\n    // console.log('will invokeApi:', method, params, options);\n\n    const {params, options, method, overwrite} = o;\n\n    const queryJSON = JSON.stringify(params);\n    let cached: HashResult;\n    if(this.hashes[method]) {\n      cached = this.hashes[method][queryJSON];\n      if(cached) {\n        if(overwrite) {\n          delete this.hashes[method][queryJSON];\n          cached = undefined;\n        } else {\n          (params as any).hash = cached.hash;\n        }\n      }\n    }\n\n    return this.invokeApiSingleProcess<T, R>({\n      method,\n      processResult: (result) => {\n        if(result._.includes('NotModified')) {\n          // this.debug && this.log.warn('NotModified saved!', method, queryJSON);\n          return cached.result;\n        }\n\n        if(result.hash/*  || result.messages */) {\n          const hash = result.hash/*  || this.computeHash(result.messages) */;\n\n          if(!this.hashes[method]) this.hashes[method] = {};\n          this.hashes[method][queryJSON] = {\n            hash,\n            result\n          };\n        }\n\n        if(o.processResult) {\n          return o.processResult(result);\n        }\n\n        return result;\n      },\n      params,\n      options\n    });\n  }\n\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    const q = method + '-' + JSON.stringify(params);\n    const cache = this.apiPromisesSingle;\n    if(cache[q]) {\n      return cache[q];\n    }\n\n    return cache[q] = this.invokeApi(method, params, options).finally(() => {\n      delete cache[q];\n    });\n  }\n\n  public invokeApiSingleProcess<T extends keyof MethodDeclMap, R>(o: {\n    method: T,\n    processResult: (response: MethodDeclMap[T]['res']) => R,\n    processError?: (error: ApiError) => any,\n    params?: MethodDeclMap[T]['req'],\n    options?: InvokeApiOptions & {cacheKey?: string, overwrite?: boolean}\n  }): Promise<Awaited<R>> {\n    o.params ??= {};\n    o.options ??= {};\n\n    const {method, processResult, processError, params, options} = o;\n    const cache = this.apiPromisesSingleProcess;\n    const cacheKey = options.cacheKey || JSON.stringify(params);\n    const map = cache[method] ?? (cache[method] = new Map());\n    const oldPromise = map.get(cacheKey);\n    if(oldPromise) {\n      return oldPromise;\n    }\n\n    const getNewPromise = () => {\n      const promise = map.get(cacheKey);\n      return promise === p ? undefined : promise;\n    }\n\n    const originalPromise = this.invokeApi(method, params, options);\n    const newPromise: Promise<Awaited<R>> = originalPromise.then((result) => {\n      return getNewPromise() || processResult(result);\n    }, (error) => {\n      const promise = getNewPromise();\n      if(promise) {\n        return promise;\n      }\n\n      if(!processError) {\n        throw error;\n      }\n\n      return processError(error);\n    });\n\n    const p = newPromise.finally(() => {\n      if(map.get(cacheKey) !== p) {\n        return;\n      }\n\n      map.delete(cacheKey);\n      if(!map.size) {\n        delete cache[method];\n      }\n    });\n\n    map.set(cacheKey, p);\n    return p;\n  }\n\n  public invokeApiCacheable<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean}> = {}): Promise<MethodDeclMap[T]['res']> {\n    const cache = this.apiPromisesCacheable[method] ?? (this.apiPromisesCacheable[method] = {});\n    const queryJSON = JSON.stringify(params);\n    const item = cache[queryJSON];\n    if(item && (!options.override || !item.fulfilled)) {\n      return item.promise;\n    }\n\n    if(options.override) {\n      if(item && item.timeout) {\n        clearTimeout(item.timeout);\n        delete item.timeout;\n      }\n\n      delete options.override;\n    }\n\n    let timeout: number;\n    if(options.cacheSeconds) {\n      timeout = ctx.setTimeout(() => {\n        delete cache[queryJSON];\n      }, options.cacheSeconds * 1000);\n      delete options.cacheSeconds;\n    }\n\n    const promise = this.invokeApi(method, params, options);\n\n    cache[queryJSON] = {\n      timestamp: Date.now(),\n      fulfilled: false,\n      timeout,\n      promise,\n      params\n    };\n\n    return promise;\n  }\n\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\n    const cache = this.apiPromisesCacheable[method];\n    if(cache) {\n      for(const queryJSON in cache) {\n        const item = cache[queryJSON];\n        try {\n          if(verify(item.params)) {\n            if(item.timeout) {\n              clearTimeout(item.timeout);\n            }\n\n            delete cache[queryJSON];\n          }\n        } catch(err) {\n          // this.log.error('clearCache error:', err, queryJSON, item);\n        }\n      }\n    }\n  }\n\n  public getConfig(overwrite?: boolean) {\n    if(this.config && !overwrite) {\n      return this.config;\n    }\n\n    return this.invokeApiSingleProcess({\n      method: 'help.getConfig',\n      params: {},\n      processResult: (config) => {\n        this.config = config;\n        this.rootScope.dispatchEvent('config', config);\n        return config;\n      },\n      options: {overwrite}\n    });\n  }\n\n  public getAppConfig(overwrite?: boolean) {\n    if(this.appConfig && !overwrite) {\n      return this.appConfig;\n    }\n\n    return this.invokeApiSingleProcess({\n      method: 'help.getAppConfig',\n      params: {},\n      processResult: (config: MTAppConfig) => {\n        this.appConfig = config;\n        ignoreRestrictionReasons(config.ignore_restriction_reasons ?? []);\n        this.rootScope.dispatchEvent('app_config', config);\n        return config;\n      },\n      options: {overwrite}\n    });\n  }\n\n  public getLimit(type: ApiLimitType, isPremium?: boolean) {\n    return callbackify(this.getAppConfig(), (appConfig) => {\n      const map: {[type in ApiLimitType]: [keyof MTAppConfig, keyof MTAppConfig]} = {\n        pin: ['dialogs_pinned_limit_default', 'dialogs_pinned_limit_premium'],\n        folderPin: ['dialogs_folder_pinned_limit_default', 'dialogs_folder_pinned_limit_premium'],\n        folders: ['dialog_filters_limit_default', 'dialog_filters_limit_premium'],\n        favedStickers: ['stickers_faved_limit_default', 'stickers_faved_limit_premium'],\n        reactions: ['reactions_user_max_default', 'reactions_user_max_premium'],\n        bio: ['about_length_limit_default', 'about_length_limit_premium']\n      };\n\n      isPremium ??= this.rootScope.premium;\n\n      const key = map[type][isPremium ? 1 : 0];\n      return appConfig[key] as number;\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n                   \nimport transportController from './transports/controller';\nimport MTTransport from './transports/transport';\n         \n\nimport type {UserAuth} from './mtproto_config';\nimport type {DcAuthKey, DcId, DcServerSalt, InvokeApiOptions} from '../../types';\nimport type {MethodDeclMap} from '../../layer';\nimport type TcpObfuscated from './transports/tcpObfuscated';\nimport sessionStorage from '../sessionStorage';\nimport MTPNetworker, {MTMessage} from './networker';\nimport {ConnectionType, constructTelegramWebSocketUrl, DcConfigurator, TransportType} from './dcConfigurator';\nimport {logger} from '../logger';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport App from '../../config/app';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport {IDB} from '../files/idb';\nimport CryptoWorker from '../crypto/cryptoMessagePort';\nimport ctx from '../../environment/ctx';\nimport noop from '../../helpers/noop';\nimport Modes from '../../config/modes';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport pause from '../../helpers/schedulers/pause';\nimport ApiManagerMethods from './api_methods';\nimport {getEnvironment} from '../../environment/utils';\nimport toggleStorages from '../../helpers/toggleStorages';\n\n/* class RotatableArray<T> {\n  public array: Array<T> = [];\n  private lastIndex = -1;\n\n  public get() {\n    this.lastIndex = clamp(this.lastIndex + 1, 0, this.array.length - 1);\n    return this.array[this.lastIndex];\n  }\n} */\n\nconst PREMIUM_FILE_NETWORKERS_COUNT = 6;\nconst REGULAR_FILE_NETWORKERS_COUNT = 3;\n\nexport class ApiManager extends ApiManagerMethods {\n  private cachedNetworkers: {\n    [transportType in TransportType]: {\n      [connectionType in ConnectionType]: {\n        [dcId: DcId]: MTPNetworker[]\n      }\n    }\n  };\n\n  private cachedExportPromise: {[x: number]: Promise<unknown>};\n  private gettingNetworkers: {[dcIdAndType: string]: Promise<MTPNetworker>};\n  private baseDcId: DcId;\n\n  // public telegramMeNotified = false;\n\n  private log: ReturnType<typeof logger>;\n\n  private afterMessageTempIds: {\n    [tempId: string]: {\n      messageId: string,\n      promise: Promise<any>\n    }\n  };\n\n  private transportType: TransportType;\n\n  private updatesProcessor: (obj: any) => void;\n\n  private loggingOut: boolean;\n\n  constructor() {\n    super();\n    this.log = logger('API');\n\n    this.cachedNetworkers = {} as any;\n    this.cachedExportPromise = {};\n    this.gettingNetworkers = {};\n    this.baseDcId = 0;\n    this.afterMessageTempIds = {};\n\n    this.transportType = Modes.transport;\n\n                       \n    transportController.addEventListener('transport', (transportType) => {\n      this.changeTransportType(transportType);\n    });\n             \n  }\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateConfig: () => {\n        this.getConfig(true);\n        this.getAppConfig(true);\n      }\n    });\n\n    this.rootScope.addEventListener('user_auth', () => {\n      if(this.config) { // refresh configs if had a config during authorization\n        this.apiUpdatesManager.processLocalUpdate({_: 'updateConfig'});\n      }\n    });\n\n    this.rootScope.addEventListener('premium_toggle', (isPremium) => {\n      this.iterateNetworkers(({networker, connectionType, dcId, transportType}) => {\n        if(connectionType === 'client' || transportType !== 'websocket') {\n          return;\n        }\n\n        const transport = networker.transport;\n        if(!transport) {\n          this.log.error('wow what, no transport?', networker);\n          return;\n        }\n\n        if((transport as TcpObfuscated).connection) {\n          const url = constructTelegramWebSocketUrl(dcId, connectionType, isPremium);\n          (transport as TcpObfuscated).changeUrl(url);\n        }\n      });\n    });\n  }\n\n  // private lol = false;\n\n  // constructor() {\n  // MtpSingleInstanceService.start();\n\n  /* AppStorage.get<number>('dc').then((dcId) => {\n      if(dcId) {\n        this.baseDcId = dcId;\n      }\n    }); */\n  // }\n\n  /* public telegramMeNotify(newValue: boolean) {\n    if(this.telegramMeNotified !== newValue) {\n      this.telegramMeNotified = newValue;\n      //telegramMeWebService.setAuthorized(this.telegramMeNotified);\n    }\n  } */\n\n  private getTransportType(connectionType: ConnectionType) {\n                              \n                 \n                                                                                                                           \n                                                                                                \n            \n    // @ts-ignore\n    const transportType: TransportType = this.transportType;\n             \n\n    return transportType;\n  }\n\n  private iterateNetworkers(callback: (o: {networker: MTPNetworker, dcId: DcId, connectionType: ConnectionType, transportType: TransportType, index: number, array: MTPNetworker[]}) => void) {\n    for(const transportType in this.cachedNetworkers) {\n      const connections = this.cachedNetworkers[transportType as TransportType];\n      for(const connectionType in connections) {\n        const dcs = connections[connectionType as ConnectionType];\n        for(const dcId in dcs) {\n          const networkers = dcs[dcId as any as DcId];\n          networkers.forEach((networker, idx, arr) => {\n            callback({\n              networker,\n              dcId: +dcId as DcId,\n              connectionType: connectionType as ConnectionType,\n              transportType: transportType as TransportType,\n              index: idx,\n              array: arr\n            });\n          });\n        }\n      }\n    }\n  }\n\n  private chooseServer(dcId: DcId, connectionType: ConnectionType, transportType: TransportType) {\n    return this.dcConfigurator.chooseServer(dcId, connectionType, transportType, connectionType === 'client', this.rootScope.premium);\n  }\n\n  public changeTransportType(transportType: TransportType) {\n    const oldTransportType = this.transportType;\n    if(oldTransportType === transportType) {\n      return;\n    }\n\n    this.log('changing transport from', oldTransportType, 'to', transportType);\n\n    const oldObject = this.cachedNetworkers[oldTransportType];\n    const newObject = this.cachedNetworkers[transportType];\n    this.cachedNetworkers[transportType] = oldObject;\n    this.cachedNetworkers[oldTransportType] = newObject;\n\n    this.transportType = transportType;\n\n    for(const oldGetKey in this.gettingNetworkers) {\n      const promise = this.gettingNetworkers[oldGetKey];\n      delete this.gettingNetworkers[oldGetKey];\n\n      const newGetKey = oldGetKey.replace(oldTransportType, transportType);\n      this.gettingNetworkers[newGetKey] = promise;\n\n      this.log('changed networker getKey from', oldGetKey, 'to', newGetKey)\n    }\n\n    this.iterateNetworkers((info) => {\n      const transportType = this.getTransportType(info.connectionType);\n      const transport = this.chooseServer(info.dcId, info.connectionType, transportType);\n      this.changeNetworkerTransport(info.networker, transport);\n    });\n  }\n\n  public async getBaseDcId() {\n    if(this.baseDcId) {\n      return this.baseDcId;\n    }\n\n    const baseDcId = await sessionStorage.get('dc');\n    if(!this.baseDcId) {\n      if(!baseDcId) {\n        this.setBaseDcId(App.baseDcId);\n      } else {\n        this.baseDcId = baseDcId;\n      }\n    }\n\n    return this.baseDcId;\n  }\n\n  public async setUserAuth(userAuth: UserAuth | UserId) {\n    if(typeof(userAuth) === 'string' || typeof(userAuth) === 'number') {\n      userAuth = {dcID: 0, date: Date.now() / 1000 | 0, id: userAuth.toPeerId(false)};\n    }\n\n    this.rootScope.dispatchEvent('user_auth', userAuth);\n\n    if(!userAuth.dcID) {\n      const baseDcId = await this.getBaseDcId();\n      userAuth.dcID = baseDcId;\n    }\n\n    sessionStorage.set({\n      user_auth: userAuth\n    });\n\n    // this.telegramMeNotify(true);\n  }\n\n  public setBaseDcId(dcId: DcId) {\n    const wasDcId = this.baseDcId;\n    if(wasDcId) { // if migrated set ondrain\n      this.getNetworker(wasDcId).then((networker) => {\n        this.setOnDrainIfNeeded(networker);\n      });\n    }\n\n    this.baseDcId = dcId;\n\n    sessionStorage.set({\n      dc: this.baseDcId\n    });\n  }\n\n  public async logOut() {\n    if(this.loggingOut) {\n      return;\n    }\n\n    this.loggingOut = true;\n    const storageKeys: Array<DcAuthKey> = [];\n\n    const prefix = 'dc';\n    for(let dcId = 1; dcId <= 5; dcId++) {\n      storageKeys.push(prefix + dcId + '_auth_key' as any);\n    }\n\n    // WebPushApiManager.forceUnsubscribe(); // WARNING // moved to worker's master\n    const storageResult = await Promise.all(storageKeys.map((key) => sessionStorage.get(key)));\n\n    const logoutPromises: Promise<any>[] = [];\n    for(let i = 0; i < storageResult.length; i++) {\n      if(storageResult[i]) {\n        logoutPromises.push(this.invokeApi('auth.logOut', {}, {dcId: (i + 1) as DcId, ignoreErrors: true}));\n      }\n    }\n\n    const clear = async() => {\n      this.baseDcId = undefined;\n      // this.telegramMeNotify(false);\n      await toggleStorages(false, true);\n      IDB.closeDatabases();\n      this.rootScope.dispatchEvent('logging_out');\n    };\n\n    setTimeout(clear, 1e3);\n\n    // return;\n\n    return Promise.all(logoutPromises).catch((error) => {\n      error.handled = true;\n    }).finally(clear)/* .then(() => {\n      location.pathname = '/';\n    }) */;\n  }\n\n  private generateNetworkerGetKey(dcId: DcId, transportType: TransportType, connectionType: ConnectionType) {\n    return [dcId, transportType, connectionType].join('-');\n  }\n\n  public getNetworker(dcId: DcId, options: InvokeApiOptions = {}): Promise<MTPNetworker> {\n    const connectionType: ConnectionType = options.fileDownload ? 'download' : (options.fileUpload ? 'upload' : 'client');\n    // const connectionType: ConnectionType = 'client';\n\n    const transportType = this.getTransportType(connectionType);\n    if(!this.cachedNetworkers[transportType]) {\n      this.cachedNetworkers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const cache = this.cachedNetworkers[transportType][connectionType];\n    if(!(dcId in cache)) {\n      cache[dcId] = [];\n    }\n\n    const networkers = cache[dcId];\n    // @ts-ignore\n    const maxNetworkers = connectionType === 'client' || transportType === 'https' ? 1 : (this.rootScope.premium ? PREMIUM_FILE_NETWORKERS_COUNT : REGULAR_FILE_NETWORKERS_COUNT);\n    if(networkers.length >= maxNetworkers) {\n      let i = maxNetworkers - 1, found = false;\n      for(; i >= 0; --i) {\n        if(networkers[i].isOnline) {\n          found = true;\n          break;\n        }\n      }\n\n      const networker = networkers.splice(found ? i : maxNetworkers - 1, 1)[0];\n      networkers.unshift(networker);\n      return Promise.resolve(networker);\n    }\n\n    let getKey = this.generateNetworkerGetKey(dcId, transportType, connectionType);\n    if(this.gettingNetworkers[getKey]) {\n      return this.gettingNetworkers[getKey];\n    }\n\n    const ak: DcAuthKey = `dc${dcId}_auth_key` as any;\n    const ss: DcServerSalt = `dc${dcId}_server_salt` as any;\n\n    let transport = this.chooseServer(dcId, connectionType, transportType);\n    return this.gettingNetworkers[getKey] = Promise.all([ak, ss].map((key) => sessionStorage.get(key)))\n    .then(async([authKeyHex, serverSaltHex]) => {\n      let networker: MTPNetworker, error: any;\n      if(authKeyHex && authKeyHex.length === 512) {\n        if(!serverSaltHex || serverSaltHex.length !== 16) {\n          serverSaltHex = 'AAAAAAAAAAAAAAAA';\n        }\n\n        const authKey = bytesFromHex(authKeyHex);\n        const authKeyId = (await CryptoWorker.invokeCrypto('sha1', authKey)).slice(-8);\n        const serverSalt = bytesFromHex(serverSaltHex);\n\n        networker = this.networkerFactory.getNetworker(dcId, authKey, authKeyId, serverSalt, options);\n      } else {\n        try { // if no saved state\n          const auth = await this.authorizer.auth(dcId);\n\n          sessionStorage.set({\n            [ak]: bytesToHex(auth.authKey),\n            [ss]: bytesToHex(auth.serverSalt)\n          });\n\n          networker = this.networkerFactory.getNetworker(dcId, auth.authKey, auth.authKeyId, auth.serverSalt, options);\n        } catch(_error) {\n          error = _error;\n        }\n      }\n\n      // ! cannot get it before this promise because simultaneous changeTransport will change nothing\n      const newTransportType = this.getTransportType(connectionType);\n      if(newTransportType !== transportType) {\n        getKey = this.generateNetworkerGetKey(dcId, newTransportType, connectionType);\n        transport.destroy();\n        DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, transport);\n\n        if(networker) {\n          transport = this.chooseServer(dcId, connectionType, newTransportType);\n        }\n\n        this.log('transport has been changed during authorization from', transportType, 'to', newTransportType);\n      }\n\n      /* networker.onConnectionStatusChange = (online) => {\n        console.log('status:', online);\n      }; */\n\n      delete this.gettingNetworkers[getKey];\n\n      if(error) {\n        this.log('get networker error', error, (error as Error).stack);\n        throw error;\n      }\n\n      this.changeNetworkerTransport(networker, transport);\n      networkers.unshift(networker);\n      this.setOnDrainIfNeeded(networker);\n      return networker;\n    });\n  }\n\n  public getNetworkerVoid(dcId: DcId) {\n    return this.getNetworker(dcId).then(noop, noop);\n  }\n\n  private changeNetworkerTransport(networker: MTPNetworker, transport?: MTTransport) {\n    const oldTransport = networker.transport;\n    if(oldTransport) {\n      DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, oldTransport);\n    }\n\n    networker.changeTransport(transport);\n  }\n\n  private onNetworkerDrain(networker: MTPNetworker) {\n    this.log('networker drain', networker.dcId);\n    networker.onDrain = undefined;\n    this.changeNetworkerTransport(networker);\n    networker.destroy();\n    this.networkerFactory.removeNetworker(networker);\n    DcConfigurator.removeTransport(this.cachedNetworkers, networker);\n  }\n\n  public setOnDrainIfNeeded(networker: MTPNetworker) {\n    if(networker.onDrain) {\n      return;\n    }\n\n    const checkPromise: Promise<boolean> = networker.isFileNetworker ?\n      Promise.resolve(true) :\n      this.getBaseDcId().then((baseDcId) => networker.dcId !== baseDcId);\n    checkPromise.then((canRelease) => {\n      if(networker.onDrain) {\n        return;\n      }\n\n      if(canRelease) {\n        networker.onDrain = () => this.onNetworkerDrain(networker);\n        networker.setDrainTimeout();\n      }\n    });\n  }\n\n  public setUpdatesProcessor(callback: (obj: any) => void) {\n    this.updatesProcessor = callback;\n    this.networkerFactory.setUpdatesProcessor(callback);\n  }\n\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): CancellablePromise<MethodDeclMap[T]['res']> {\n    // /////this.log('Invoke api', method, params, options);\n\n    /* if(!this.lol) {\n      networkerFactory.updatesProcessor({_: 'new_session_created'}, true);\n      this.lol = true;\n    } */\n\n    const deferred = deferredPromise<MethodDeclMap[T]['res']>();\n\n    let {afterMessageId, prepareTempMessageId} = options;\n    if(prepareTempMessageId) {\n      deferred.then(() => {\n        delete this.afterMessageTempIds[prepareTempMessageId];\n      });\n    }\n\n    if(MOUNT_CLASS_TO) {\n      const startTime = Date.now();\n      const interval = ctx.setInterval(() => {\n        if(!cachedNetworker || !cachedNetworker.isStopped()) {\n          this.log.error('Request is still processing:', method, params, options, 'time:', (Date.now() - startTime) / 1000);\n        }\n        // this.cachedUploadNetworkers[2].requestMessageStatus();\n      }, 5e3);\n\n      deferred.catch(noop).finally(() => {\n        clearInterval(interval);\n      });\n    }\n\n    const rejectPromise = async(error: ApiError) => {\n      if(!error) {\n        error = {type: 'ERROR_EMPTY'};\n      } else if(!isObject(error)) {\n        error = {message: error};\n      }\n\n      if((error.code === 401 && error.type === 'SESSION_REVOKED') ||\n        (error.code === 406 && error.type === 'AUTH_KEY_DUPLICATED')) {\n        this.logOut();\n      }\n\n      if(options.ignoreErrors) {\n        throw error;\n      }\n\n      if(error.code === 406) {\n        error.handled = true;\n      }\n\n      if(!options.noErrorBox) {\n        error.input = method;\n        error.stack = stack || (error.originalError && error.originalError.stack) || error.stack || (new Error()).stack;\n        setTimeout(() => {\n          if(!error.handled) {\n            if(error.code === 401) {\n              this.logOut();\n            } else {\n              // ErrorService.show({error: error}); // WARNING\n            }\n\n            error.handled = true;\n          }\n        }, 100);\n      }\n\n      throw error;\n    };\n\n    let dcId: DcId;\n\n    let cachedNetworker: MTPNetworker;\n    const stack = (new Error()).stack || 'empty stack';\n    const performRequest = (): Promise<any> => {\n      if(afterMessageId) {\n        const after = this.afterMessageTempIds[afterMessageId];\n        if(after) {\n          options.afterMessageId = after.messageId;\n        }\n      }\n\n      const promise = cachedNetworker.wrapApiCall(method, params, options);\n\n      if(prepareTempMessageId) {\n        this.afterMessageTempIds[prepareTempMessageId] = {\n          messageId: (options as MTMessage).messageId,\n          promise: deferred\n        };\n      }\n\n      return promise.catch((error: ApiError) => {\n        // if(!options.ignoreErrors) {\n        if(error.type !== 'FILE_REFERENCE_EXPIRED'/*  && error.type !== 'MSG_WAIT_FAILED' */) {\n          this.log.error('Error', error.code, error.type, this.baseDcId, dcId, method, params);\n        }\n\n        if(error.code === 401 && this.baseDcId === dcId) {\n          if(error.type !== 'SESSION_PASSWORD_NEEDED') {\n            sessionStorage.delete('dc')\n            sessionStorage.delete('user_auth'); // ! возможно тут вообще не нужно это делать, но нужно проверить случай с USER_DEACTIVATED (https://core.telegram.org/api/errors)\n            // this.telegramMeNotify(false);\n          }\n\n          throw error;\n        } else if(error.code === 401 && this.baseDcId && dcId !== this.baseDcId) {\n          if(this.cachedExportPromise[dcId] === undefined) {\n            const promise = new Promise((exportResolve, exportReject) => {\n              this.invokeApi('auth.exportAuthorization', {dc_id: dcId}, {noErrorBox: true}).then((exportedAuth) => {\n                this.invokeApi('auth.importAuthorization', {\n                  id: exportedAuth.id,\n                  bytes: exportedAuth.bytes\n                }, {dcId, noErrorBox: true}).then(exportResolve, exportReject);\n              }, exportReject);\n            });\n\n            this.cachedExportPromise[dcId] = promise;\n          }\n\n          return this.cachedExportPromise[dcId].then(() => performRequest());\n        } else if(error.code === 303) {\n          const newDcId = +error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            if(options.dcId) {\n              options.dcId = newDcId;\n            } else {\n              this.setBaseDcId(newDcId);\n            }\n\n            return this.invokeApi(method, params, options);\n          }\n        } else if(error.code === 400 && error.type.indexOf('FILE_MIGRATE') === 0) {\n          const newDcId = +error.type.match(/^(FILE_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            options.dcId = newDcId;\n            return this.invokeApi(method, params, options);\n          } else {\n            throw error;\n          }\n        } else if(error.code === 400 && error.type === 'CONNECTION_NOT_INITED') {\n          this.networkerFactory.unsetConnectionInited();\n          return performRequest();\n        } else if(!options.rawError && error.code === 420) {\n          const waitTime = +error.type.match(/^FLOOD_WAIT_(\\d+)/)[1] || 1;\n\n          if(waitTime > (options.floodMaxTimeout ?? 60) && !options.prepareTempMessageId) {\n            throw error;\n          }\n\n          return pause(waitTime/* (waitTime + 5) */ * 1000).then(() => performRequest());\n        } else if(!options.rawError && ['MSG_WAIT_FAILED', 'MSG_WAIT_TIMEOUT'].includes(error.type)) {\n          const after = this.afterMessageTempIds[afterMessageId];\n\n          afterMessageId = undefined;\n          delete options.afterMessageId;\n\n          if(after) return after.promise.then(() => performRequest());\n          else return performRequest();\n        } else if(!options.rawError && error.code === 500) {\n          const now = Date.now();\n          if(options.stopTime) {\n            if(now >= options.stopTime) {\n              throw error;\n            }\n          }\n\n          options.waitTime = options.waitTime ? Math.min(60, options.waitTime * 1.5) : 1;\n          return pause(options.waitTime * 1000).then(() => performRequest());\n        } else if(error.type === 'UNKNOWN' || error.type === 'MTPROTO_CLUSTER_INVALID') { // cluster invalid - request from regular user to premium endpoint\n          return pause(1000).then(() => performRequest());\n        } else {\n          throw error;\n        }\n      });\n    }\n\n    let p: Promise<MTPNetworker>;\n    if(dcId = (options.dcId || this.baseDcId)) {\n      p = this.getNetworker(dcId, options);\n    } else {\n      p = this.getBaseDcId().then((baseDcId) => this.getNetworker(dcId = baseDcId, options));\n    }\n\n    p.then((networker) => {\n      cachedNetworker = networker;\n      const promise = performRequest();\n      cachedNetworker.attachPromise(deferred, options as MTMessage);\n      return promise;\n    })\n    .then(deferred.resolve)\n    .catch(rejectPromise)\n    .catch(deferred.reject);\n\n    return deferred;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport applyMixins from '../../helpers/applyMixins';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport {AppManager} from '../appManagers/manager';\n\nexport type StatePeerType = 'recentSearch' | 'topPeer' | 'dialog' | 'contact' | 'topMessage' | 'self';\n\ntype PeersStorageKey = `${StatePeerType}_${string | PeerId}` | StatePeerType;\n\nclass PeersStorage {\n  private neededPeers: Map<PeerId, Set<PeersStorageKey>> = new Map();\n  private singlePeerMap: Map<PeersStorageKey, Set<PeerId>> = new Map();\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  protected after() {\n    this.rootScope.addEventListener('user_auth', () => {\n      this.requestPeer(this.appPeersManager.peerId, 'self');\n    });\n  }\n\n  public requestPeer(peerId: PeerId, key: PeersStorageKey) {\n    let set = this.neededPeers.get(peerId);\n    if(set && set.has(key)) {\n      return;\n    }\n\n    if(!set) {\n      set = new Set();\n      this.neededPeers.set(peerId, set);\n    }\n\n    set.add(key);\n\n    this.dispatchEvent('peerNeeded', peerId);\n  }\n\n  public releasePeer(peerId: PeerId, key: PeersStorageKey) {\n    const set = this.neededPeers.get(peerId);\n    if(!set) {\n      return;\n    }\n\n    set.delete(key);\n\n    if(!set.size) {\n      this.neededPeers.delete(peerId);\n      this.dispatchEvent('peerUnneeded', peerId);\n    }\n  }\n\n  public requestPeersForKey(peerIds: Set<PeerId> | number[], key: PeersStorageKey) {\n    if(Array.isArray(peerIds)) {\n      peerIds = new Set(peerIds);\n    }\n\n    let set = this.singlePeerMap.get(key);\n    if(set) {\n      for(const peerId of set) {\n        if(peerIds.has(peerId)) {\n          continue;\n        }\n\n        this.releasePeer(peerId, key);\n        set.delete(peerId);\n      }\n\n      if(!set.size && !peerIds.size) {\n        this.singlePeerMap.delete(key);\n        return;\n      }\n    }\n\n    if(peerIds.size) {\n      if(!set) {\n        set = new Set();\n        this.singlePeerMap.set(key, set);\n      }\n\n      for(const peerId of peerIds) {\n        if(set.has(peerId)) {\n          continue;\n        }\n\n        this.requestPeer(peerId, key);\n        set.add(peerId);\n      }\n    }\n  }\n\n  public isPeerNeeded(peerId: PeerId) {\n    return this.neededPeers.has(peerId);\n  }\n}\n\ninterface PeersStorage extends EventListenerBase<{\n  peerNeeded: (peerId: PeerId) => void,\n  peerUnneeded: (peerId: PeerId) => void,\n}>, AppManager {}\napplyMixins(PeersStorage, [EventListenerBase, AppManager]);\n\nexport default PeersStorage;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {WebDocument} from '../../layer';\nimport type {MyDocument} from '../appManagers/appDocsManager';\nimport type {MyPhoto} from '../appManagers/appPhotosManager';\nimport {THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\n\nexport type ThumbCache = {\n  downloaded: number,\n  url: string,\n  type: string\n};\n\nexport type ThumbsCache = {\n  [key: string]: {\n    [size: string]: ThumbCache\n  }\n};\n\nconst thumbFullSize = THUMB_TYPE_FULL;\n\nexport type ThumbStorageMedia = MyPhoto | MyDocument | WebDocument;\n\nexport default class ThumbsStorage {\n  private thumbsCache: ThumbsCache = {};\n\n  private getKey(media: ThumbStorageMedia) {\n    return media._ + ((media as MyPhoto).id ?? (media as WebDocument).url);\n  }\n\n  public getCacheContext(media: ThumbStorageMedia, thumbSize: string = thumbFullSize): ThumbCache {\n    /* if(media._ === 'photo' && thumbSize !== 'i') {\n      thumbSize = thumbFullSize;\n    } */\n\n    const cache = this.thumbsCache[this.getKey(media)] ??= {};\n    return cache[thumbSize] ??= {downloaded: 0, url: '', type: thumbSize};\n  }\n\n  public setCacheContextURL(media: ThumbStorageMedia, thumbSize: string = thumbFullSize, url: string, downloaded: number = 0) {\n    const cacheContext = this.getCacheContext(media, thumbSize);\n    cacheContext.url = url;\n    cacheContext.downloaded = downloaded;\n    return cacheContext;\n  }\n\n  public deleteCacheContext(media: ThumbStorageMedia, thumbSize: string = thumbFullSize) {\n    const cache = this.thumbsCache[this.getKey(media)];\n    if(cache) {\n      delete cache[thumbSize];\n    }\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type MTProtoConstructor = {\r\n  id: number,\r\n  predicate: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\nexport type MTProtoMethod = {\r\n  id: number,\r\n  method: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\n// eslint-disable-next-line quotes, comma-spacing\r\nexport default {\"MTProto\":{\"constructors\":[{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":85337187,\"predicate\":\"resPQ\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"server_public_key_fingerprints\",\"type\":\"Vector<long>\"}],\"type\":\"ResPQ\"},{\"id\":-1443537003,\"predicate\":\"p_q_inner_data_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":1459478408,\"predicate\":\"p_q_inner_data_temp_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"},{\"name\":\"expires_in\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":-790100132,\"predicate\":\"server_DH_params_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_answer\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-1249309254,\"predicate\":\"server_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"dh_prime\",\"type\":\"bytes\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"server_time\",\"type\":\"int\"}],\"type\":\"Server_DH_inner_data\"},{\"id\":1715713620,\"predicate\":\"client_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"retry_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"}],\"type\":\"Client_DH_Inner_Data\"},{\"id\":1003222836,\"predicate\":\"dh_gen_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash1\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1188831161,\"predicate\":\"dh_gen_retry\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash2\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":-1499615742,\"predicate\":\"dh_gen_fail\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash3\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1973679973,\"predicate\":\"bind_auth_key_inner\",\"params\":[{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"temp_auth_key_id\",\"type\":\"long\"},{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"temp_session_id\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"}],\"type\":\"BindAuthKeyInner\"},{\"id\":-212046591,\"predicate\":\"rpc_result\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"result\",\"type\":\"Object\"}],\"type\":\"RpcResult\"},{\"id\":558156313,\"predicate\":\"rpc_error\",\"params\":[{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"error_message\",\"type\":\"string\"}],\"type\":\"RpcError\"},{\"id\":1579864942,\"predicate\":\"rpc_answer_unknown\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-847714938,\"predicate\":\"rpc_answer_dropped_running\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-1539647305,\"predicate\":\"rpc_answer_dropped\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seq_no\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"}],\"type\":\"RpcDropAnswer\"},{\"id\":155834844,\"predicate\":\"future_salt\",\"params\":[{\"name\":\"valid_since\",\"type\":\"int\"},{\"name\":\"valid_until\",\"type\":\"int\"},{\"name\":\"salt\",\"type\":\"long\"}],\"type\":\"FutureSalt\"},{\"id\":-1370486635,\"predicate\":\"future_salts\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"now\",\"type\":\"int\"},{\"name\":\"salts\",\"type\":\"vector<future_salt>\"}],\"type\":\"FutureSalts\"},{\"id\":880243653,\"predicate\":\"pong\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-501201412,\"predicate\":\"destroy_session_ok\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":1658015945,\"predicate\":\"destroy_session_none\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1631450872,\"predicate\":\"new_session_created\",\"params\":[{\"name\":\"first_msg_id\",\"type\":\"long\"},{\"name\":\"unique_id\",\"type\":\"long\"},{\"name\":\"server_salt\",\"type\":\"long\"}],\"type\":\"NewSession\"},{\"id\":1945237724,\"predicate\":\"msg_container\",\"params\":[{\"name\":\"messages\",\"type\":\"vector<%Message>\"}],\"type\":\"MessageContainer\"},{\"id\":1538843921,\"predicate\":\"message\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seqno\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"body\",\"type\":\"Object\"}],\"type\":\"Message\"},{\"id\":-530561358,\"predicate\":\"msg_copy\",\"params\":[{\"name\":\"orig_message\",\"type\":\"Message\"}],\"type\":\"MessageCopy\"},{\"id\":812830625,\"predicate\":\"gzip_packed\",\"params\":[{\"name\":\"packed_data\",\"type\":\"bytes\"}],\"type\":\"Object\"},{\"id\":1658238041,\"predicate\":\"msgs_ack\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsAck\"},{\"id\":-1477445615,\"predicate\":\"bad_msg_notification\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"}],\"type\":\"BadMsgNotification\"},{\"id\":-307542917,\"predicate\":\"bad_server_salt\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"new_server_salt\",\"type\":\"long\"}],\"type\":\"BadMsgNotification\"},{\"id\":2105940488,\"predicate\":\"msg_resend_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgResendReq\"},{\"id\":-630588590,\"predicate\":\"msgs_state_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsStateReq\"},{\"id\":81704317,\"predicate\":\"msgs_state_info\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsStateInfo\"},{\"id\":-1933520591,\"predicate\":\"msgs_all_info\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsAllInfo\"},{\"id\":661470918,\"predicate\":\"msg_detailed_info\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-2137147681,\"predicate\":\"msg_new_detailed_info\",\"params\":[{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-161422892,\"predicate\":\"destroy_auth_key_ok\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":178201177,\"predicate\":\"destroy_auth_key_none\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":-368010477,\"predicate\":\"destroy_auth_key_fail\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}],\"methods\":[{\"id\":-1099002127,\"method\":\"req_pq_multi\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"}],\"type\":\"ResPQ\"},{\"id\":-686627650,\"method\":\"req_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"public_key_fingerprint\",\"type\":\"long\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-184262881,\"method\":\"set_client_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1491380032,\"method\":\"rpc_drop_answer\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"}],\"type\":\"RpcDropAnswer\"},{\"id\":-1188971260,\"method\":\"get_future_salts\",\"params\":[{\"name\":\"num\",\"type\":\"int\"}],\"type\":\"FutureSalts\"},{\"id\":2059302892,\"method\":\"ping\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-213746804,\"method\":\"ping_delay_disconnect\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"},{\"name\":\"disconnect_delay\",\"type\":\"int\"}],\"type\":\"Pong\"},{\"id\":-414113498,\"method\":\"destroy_session\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1835453025,\"method\":\"http_wait\",\"params\":[{\"name\":\"max_delay\",\"type\":\"int\"},{\"name\":\"wait_after\",\"type\":\"int\"},{\"name\":\"max_wait\",\"type\":\"int\"}],\"type\":\"HttpWait\"},{\"id\":-784117408,\"method\":\"destroy_auth_key\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}]},\"API\":{\"constructors\":[{\"id\":-1132882121,\"predicate\":\"boolFalse\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1720552011,\"predicate\":\"boolTrue\",\"params\":[],\"type\":\"Bool\"},{\"id\":1072550713,\"predicate\":\"true\",\"params\":[],\"type\":\"True\"},{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":-994444869,\"predicate\":\"error\",\"params\":[{\"name\":\"code\",\"type\":\"int\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Error\"},{\"id\":1450380236,\"predicate\":\"null\",\"params\":[],\"type\":\"Null\"},{\"id\":2134579434,\"predicate\":\"inputPeerEmpty\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":2107670217,\"predicate\":\"inputPeerSelf\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":900291769,\"predicate\":\"inputPeerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1182234929,\"predicate\":\"inputUserEmpty\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-138301121,\"predicate\":\"inputUserSelf\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-208488460,\"predicate\":\"inputPhoneContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"InputContact\"},{\"id\":-181407105,\"predicate\":\"inputFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"md5_checksum\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":-1771768449,\"predicate\":\"inputMediaEmpty\",\"params\":[],\"type\":\"InputMedia\"},{\"id\":505969924,\"predicate\":\"inputMediaUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":-1279654347,\"predicate\":\"inputMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"InputPhoto\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-104578748,\"predicate\":\"inputMediaGeoPoint\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"}],\"type\":\"InputMedia\"},{\"id\":-122978821,\"predicate\":\"inputMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":480546647,\"predicate\":\"inputChatPhotoEmpty\",\"params\":[],\"type\":\"InputChatPhoto\"},{\"id\":-968723890,\"predicate\":\"inputChatUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"}],\"type\":\"InputChatPhoto\"},{\"id\":-1991004873,\"predicate\":\"inputChatPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputChatPhoto\"},{\"id\":-457104426,\"predicate\":\"inputGeoPointEmpty\",\"params\":[],\"type\":\"InputGeoPoint\"},{\"id\":1210199983,\"predicate\":\"inputGeoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"InputGeoPoint\"},{\"id\":483901197,\"predicate\":\"inputPhotoEmpty\",\"params\":[],\"type\":\"InputPhoto\"},{\"id\":1001634122,\"predicate\":\"inputPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputPhoto\"},{\"id\":-539317279,\"predicate\":\"inputFileLocation\",\"params\":[{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputFileLocation\"},{\"id\":1498486562,\"predicate\":\"peerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":918946202,\"predicate\":\"peerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":-1432995067,\"predicate\":\"storage.fileUnknown\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1086091090,\"predicate\":\"storage.filePartial\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":8322574,\"predicate\":\"storage.fileJpeg\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-891180321,\"predicate\":\"storage.fileGif\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":172975040,\"predicate\":\"storage.filePng\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1373745011,\"predicate\":\"storage.filePdf\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1384777335,\"predicate\":\"storage.fileMp3\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1258941372,\"predicate\":\"storage.fileMov\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1278304028,\"predicate\":\"storage.fileMp4\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":276907596,\"predicate\":\"storage.fileWebp\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-742634630,\"predicate\":\"userEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"User\"},{\"id\":1326562017,\"predicate\":\"userProfilePhotoEmpty\",\"params\":[],\"type\":\"UserProfilePhoto\"},{\"id\":-2100168954,\"predicate\":\"userProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"UserProfilePhoto\"},{\"id\":164646985,\"predicate\":\"userStatusEmpty\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-306628279,\"predicate\":\"userStatusOnline\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":9203775,\"predicate\":\"userStatusOffline\",\"params\":[{\"name\":\"was_online\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":693512293,\"predicate\":\"chatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Chat\"},{\"id\":1103884886,\"predicate\":\"chat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"deactivated\",\"type\":\"flags.5?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.25?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"migrated_to\",\"type\":\"flags.6?InputChannel\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"}],\"type\":\"Chat\"},{\"id\":1704108455,\"predicate\":\"chatForbidden\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Chat\"},{\"id\":-908914376,\"predicate\":\"chatFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_set_username\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants\",\"type\":\"ChatParticipants\"},{\"name\":\"chat_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.13?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"flags.3?Vector<BotInfo>\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"call\",\"type\":\"flags.12?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.15?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.16?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.17?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.17?Vector<long>\"},{\"name\":\"available_reactions\",\"type\":\"flags.18?ChatReactions\"}],\"type\":\"ChatFull\"},{\"id\":-1070776313,\"predicate\":\"chatParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-2023500831,\"predicate\":\"chatParticipantsForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"self_participant\",\"type\":\"flags.0?ChatParticipant\"}],\"type\":\"ChatParticipants\"},{\"id\":1018991608,\"predicate\":\"chatParticipants\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"participants\",\"type\":\"Vector<ChatParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"ChatParticipants\"},{\"id\":935395612,\"predicate\":\"chatPhotoEmpty\",\"params\":[],\"type\":\"ChatPhoto\"},{\"id\":476978193,\"predicate\":\"chatPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"ChatPhoto\"},{\"id\":-1868117372,\"predicate\":\"messageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"peer_id\",\"type\":\"flags.0?Peer\"}],\"type\":\"Message\"},{\"id\":940666592,\"predicate\":\"message\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"from_scheduled\",\"type\":\"flags.18?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"edit_hide\",\"type\":\"flags.21?true\"},{\"name\":\"pinned\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.26?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.6?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"views\",\"type\":\"flags.10?int\"},{\"name\":\"forwards\",\"type\":\"flags.10?int\"},{\"name\":\"replies\",\"type\":\"flags.23?MessageReplies\"},{\"name\":\"edit_date\",\"type\":\"flags.15?int\"},{\"name\":\"post_author\",\"type\":\"flags.16?string\"},{\"name\":\"grouped_id\",\"type\":\"flags.17?long\"},{\"name\":\"reactions\",\"type\":\"flags.20?MessageReactions\"},{\"name\":\"restriction_reason\",\"type\":\"flags.22?Vector<RestrictionReason>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":721967202,\"predicate\":\"messageService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"MessageAction\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":1038967584,\"predicate\":\"messageMediaEmpty\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":1766936791,\"predicate\":\"messageMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1457575028,\"predicate\":\"messageMediaGeo\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"}],\"type\":\"MessageMedia\"},{\"id\":1882335561,\"predicate\":\"messageMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageMedia\"},{\"id\":-1618676578,\"predicate\":\"messageMediaUnsupported\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":-1230047312,\"predicate\":\"messageActionEmpty\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1119368275,\"predicate\":\"messageActionChatCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1247687078,\"predicate\":\"messageActionChatEditTitle\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":2144015272,\"predicate\":\"messageActionChatEditPhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":-1780220945,\"predicate\":\"messageActionChatDeletePhoto\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":365886720,\"predicate\":\"messageActionChatAddUser\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1539362612,\"predicate\":\"messageActionChatDeleteUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1460809483,\"predicate\":\"dialog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"unread_mark\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"unread_reactions_count\",\"type\":\"int\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"flags.1?DraftMessage\"},{\"name\":\"folder_id\",\"type\":\"flags.4?int\"}],\"type\":\"Dialog\"},{\"id\":590459437,\"predicate\":\"photoEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Photo\"},{\"id\":-82216347,\"predicate\":\"photo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_stickers\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<PhotoSize>\"},{\"name\":\"video_sizes\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"Photo\"},{\"id\":236446268,\"predicate\":\"photoSizeEmpty\",\"params\":[{\"name\":\"type\",\"type\":\"string\"}],\"type\":\"PhotoSize\"},{\"id\":1976012384,\"predicate\":\"photoSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"}],\"type\":\"PhotoSize\"},{\"id\":35527382,\"predicate\":\"photoCachedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":286776671,\"predicate\":\"geoPointEmpty\",\"params\":[],\"type\":\"GeoPoint\"},{\"id\":-1297942941,\"predicate\":\"geoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"GeoPoint\"},{\"id\":1577067778,\"predicate\":\"auth.sentCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"auth.SentCodeType\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"next_type\",\"type\":\"flags.1?auth.CodeType\"},{\"name\":\"timeout\",\"type\":\"flags.2?int\"}],\"type\":\"auth.SentCode\"},{\"id\":872119224,\"predicate\":\"auth.authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"setup_password_required\",\"type\":\"flags.1?true\"},{\"name\":\"otherwise_relogin_days\",\"type\":\"flags.1?int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"auth.Authorization\"},{\"id\":-1271602504,\"predicate\":\"auth.exportedAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1195615476,\"predicate\":\"inputNotifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputNotifyPeer\"},{\"id\":423314455,\"predicate\":\"inputNotifyUsers\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":1251338318,\"predicate\":\"inputNotifyChats\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-551616469,\"predicate\":\"inputPeerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?NotificationSound\"}],\"type\":\"InputPeerNotifySettings\"},{\"id\":-1472527322,\"predicate\":\"peerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"ios_sound\",\"type\":\"flags.3?NotificationSound\"},{\"name\":\"android_sound\",\"type\":\"flags.4?NotificationSound\"},{\"name\":\"other_sound\",\"type\":\"flags.5?NotificationSound\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-1525149427,\"predicate\":\"peerSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"report_spam\",\"type\":\"flags.0?true\"},{\"name\":\"add_contact\",\"type\":\"flags.1?true\"},{\"name\":\"block_contact\",\"type\":\"flags.2?true\"},{\"name\":\"share_contact\",\"type\":\"flags.3?true\"},{\"name\":\"need_contacts_exception\",\"type\":\"flags.4?true\"},{\"name\":\"report_geo\",\"type\":\"flags.5?true\"},{\"name\":\"autoarchived\",\"type\":\"flags.7?true\"},{\"name\":\"invite_members\",\"type\":\"flags.8?true\"},{\"name\":\"request_chat_broadcast\",\"type\":\"flags.10?true\"},{\"name\":\"geo_distance\",\"type\":\"flags.6?int\"},{\"name\":\"request_chat_title\",\"type\":\"flags.9?string\"},{\"name\":\"request_chat_date\",\"type\":\"flags.9?int\"}],\"type\":\"PeerSettings\"},{\"id\":-1539849235,\"predicate\":\"wallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"pattern\",\"type\":\"flags.3?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"Document\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1490799288,\"predicate\":\"inputReportReasonSpam\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":505595789,\"predicate\":\"inputReportReasonViolence\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":777640226,\"predicate\":\"inputReportReasonPornography\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1376497949,\"predicate\":\"inputReportReasonChildAbuse\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1041980751,\"predicate\":\"inputReportReasonOther\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-994968513,\"predicate\":\"userFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"phone_calls_available\",\"type\":\"flags.4?true\"},{\"name\":\"phone_calls_private\",\"type\":\"flags.5?true\"},{\"name\":\"can_pin_message\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.12?true\"},{\"name\":\"video_calls_available\",\"type\":\"flags.13?true\"},{\"name\":\"voice_messages_forbidden\",\"type\":\"flags.20?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"flags.1?string\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"profile_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"bot_info\",\"type\":\"flags.3?BotInfo\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"common_chats_count\",\"type\":\"int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.15?string\"},{\"name\":\"private_forward_name\",\"type\":\"flags.16?string\"},{\"name\":\"bot_group_admin_rights\",\"type\":\"flags.17?ChatAdminRights\"},{\"name\":\"bot_broadcast_admin_rights\",\"type\":\"flags.18?ChatAdminRights\"},{\"name\":\"premium_gifts\",\"type\":\"flags.19?Vector<PremiumGiftOption>\"}],\"type\":\"UserFull\"},{\"id\":341499403,\"predicate\":\"contact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"mutual\",\"type\":\"Bool\"}],\"type\":\"Contact\"},{\"id\":-1052885936,\"predicate\":\"importedContact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"client_id\",\"type\":\"long\"}],\"type\":\"ImportedContact\"},{\"id\":383348795,\"predicate\":\"contactStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"ContactStatus\"},{\"id\":-1219778094,\"predicate\":\"contacts.contactsNotModified\",\"params\":[],\"type\":\"contacts.Contacts\"},{\"id\":-353862078,\"predicate\":\"contacts.contacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<Contact>\"},{\"name\":\"saved_count\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Contacts\"},{\"id\":2010127419,\"predicate\":\"contacts.importedContacts\",\"params\":[{\"name\":\"imported\",\"type\":\"Vector<ImportedContact>\"},{\"name\":\"popular_invites\",\"type\":\"Vector<PopularContact>\"},{\"name\":\"retry_contacts\",\"type\":\"Vector<long>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":182326673,\"predicate\":\"contacts.blocked\",\"params\":[{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":-513392236,\"predicate\":\"contacts.blockedSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":364538944,\"predicate\":\"messages.dialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":1910543603,\"predicate\":\"messages.dialogsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1938715001,\"predicate\":\"messages.messages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":978610270,\"predicate\":\"messages.messagesSlice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"next_rate\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":1694474197,\"predicate\":\"messages.chats\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-438840932,\"predicate\":\"messages.chatFull\",\"params\":[{\"name\":\"full_chat\",\"type\":\"ChatFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1269012015,\"predicate\":\"messages.affectedHistory\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1474492012,\"predicate\":\"inputMessagesFilterEmpty\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1777752804,\"predicate\":\"inputMessagesFilterPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1614803355,\"predicate\":\"inputMessagesFilterVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1458172132,\"predicate\":\"inputMessagesFilterPhotoVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1629621880,\"predicate\":\"inputMessagesFilterDocument\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":2129714567,\"predicate\":\"inputMessagesFilterUrl\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-3644025,\"predicate\":\"inputMessagesFilterGif\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":522914557,\"predicate\":\"updateNewMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1318109142,\"predicate\":\"updateMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-1576161051,\"predicate\":\"updateDeleteMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1071741569,\"predicate\":\"updateUserTyping\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-2092401936,\"predicate\":\"updateChatUserTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":125178264,\"predicate\":\"updateChatParticipants\",\"params\":[{\"name\":\"participants\",\"type\":\"ChatParticipants\"}],\"type\":\"Update\"},{\"id\":-440534818,\"predicate\":\"updateUserStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"Update\"},{\"id\":-1007549728,\"predicate\":\"updateUserName\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-232290676,\"predicate\":\"updateUserPhoto\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"photo\",\"type\":\"UserProfilePhoto\"},{\"name\":\"previous\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":-1519637954,\"predicate\":\"updates.state\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"}],\"type\":\"updates.State\"},{\"id\":1567990072,\"predicate\":\"updates.differenceEmpty\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":16030880,\"predicate\":\"updates.difference\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-1459938943,\"predicate\":\"updates.differenceSlice\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"intermediate_state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-484987010,\"predicate\":\"updatesTooLong\",\"params\":[],\"type\":\"Updates\"},{\"id\":826001400,\"predicate\":\"updateShortMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":1299050149,\"predicate\":\"updateShortChatMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":2027216577,\"predicate\":\"updateShort\",\"params\":[{\"name\":\"update\",\"type\":\"Update\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1918567619,\"predicate\":\"updatesCombined\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq_start\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1957577280,\"predicate\":\"updates\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1916114267,\"predicate\":\"photos.photos\",\"params\":[{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":352657236,\"predicate\":\"photos.photosSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":539045032,\"predicate\":\"photos.photo\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photo\"},{\"id\":157948117,\"predicate\":\"upload.file\",\"params\":[{\"name\":\"type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.File\"},{\"id\":414687501,\"predicate\":\"dcOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"ipv6\",\"type\":\"flags.0?true\"},{\"name\":\"media_only\",\"type\":\"flags.1?true\"},{\"name\":\"tcpo_only\",\"type\":\"flags.2?true\"},{\"name\":\"cdn\",\"type\":\"flags.3?true\"},{\"name\":\"static\",\"type\":\"flags.4?true\"},{\"name\":\"this_port_only\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"ip_address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"flags.10?bytes\"}],\"type\":\"DcOption\"},{\"id\":589653676,\"predicate\":\"config\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phonecalls_enabled\",\"type\":\"flags.1?true\"},{\"name\":\"default_p2p_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"preload_featured_stickers\",\"type\":\"flags.4?true\"},{\"name\":\"ignore_phone_entities\",\"type\":\"flags.5?true\"},{\"name\":\"revoke_pm_inbox\",\"type\":\"flags.6?true\"},{\"name\":\"blocked_mode\",\"type\":\"flags.8?true\"},{\"name\":\"pfs_enabled\",\"type\":\"flags.13?true\"},{\"name\":\"force_try_ipv6\",\"type\":\"flags.14?true\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"test_mode\",\"type\":\"Bool\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"},{\"name\":\"dc_txt_domain_name\",\"type\":\"string\"},{\"name\":\"chat_size_max\",\"type\":\"int\"},{\"name\":\"megagroup_size_max\",\"type\":\"int\"},{\"name\":\"forwarded_count_max\",\"type\":\"int\"},{\"name\":\"online_update_period_ms\",\"type\":\"int\"},{\"name\":\"offline_blur_timeout_ms\",\"type\":\"int\"},{\"name\":\"offline_idle_timeout_ms\",\"type\":\"int\"},{\"name\":\"online_cloud_timeout_ms\",\"type\":\"int\"},{\"name\":\"notify_cloud_delay_ms\",\"type\":\"int\"},{\"name\":\"notify_default_delay_ms\",\"type\":\"int\"},{\"name\":\"push_chat_period_ms\",\"type\":\"int\"},{\"name\":\"push_chat_limit\",\"type\":\"int\"},{\"name\":\"saved_gifs_limit\",\"type\":\"int\"},{\"name\":\"edit_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_pm_time_limit\",\"type\":\"int\"},{\"name\":\"rating_e_decay\",\"type\":\"int\"},{\"name\":\"stickers_recent_limit\",\"type\":\"int\"},{\"name\":\"stickers_faved_limit\",\"type\":\"int\"},{\"name\":\"channels_read_media_period\",\"type\":\"int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"pinned_dialogs_count_max\",\"type\":\"int\"},{\"name\":\"pinned_infolder_count_max\",\"type\":\"int\"},{\"name\":\"call_receive_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_ring_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_connect_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_packet_timeout_ms\",\"type\":\"int\"},{\"name\":\"me_url_prefix\",\"type\":\"string\"},{\"name\":\"autoupdate_url_prefix\",\"type\":\"flags.7?string\"},{\"name\":\"gif_search_username\",\"type\":\"flags.9?string\"},{\"name\":\"venue_search_username\",\"type\":\"flags.10?string\"},{\"name\":\"img_search_username\",\"type\":\"flags.11?string\"},{\"name\":\"static_maps_provider\",\"type\":\"flags.12?string\"},{\"name\":\"caption_length_max\",\"type\":\"int\"},{\"name\":\"message_length_max\",\"type\":\"int\"},{\"name\":\"webfile_dc_id\",\"type\":\"int\"},{\"name\":\"suggested_lang_code\",\"type\":\"flags.2?string\"},{\"name\":\"lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"base_lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"reactions_default\",\"type\":\"flags.15?Reaction\"}],\"type\":\"Config\"},{\"id\":-1910892683,\"predicate\":\"nearestDc\",\"params\":[{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"nearest_dc\",\"type\":\"int\"}],\"type\":\"NearestDc\"},{\"id\":-860107216,\"predicate\":\"help.appUpdate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_not_skip\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"sticker\",\"type\":\"flags.3?Document\"}],\"type\":\"help.AppUpdate\"},{\"id\":-1000708810,\"predicate\":\"help.noAppUpdate\",\"params\":[],\"type\":\"help.AppUpdate\"},{\"id\":415997816,\"predicate\":\"help.inviteText\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"help.InviteText\"},{\"id\":314359194,\"predicate\":\"updateNewEncryptedMessage\",\"params\":[{\"name\":\"message\",\"type\":\"EncryptedMessage\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":386986326,\"predicate\":\"updateEncryptedChatTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1264392051,\"predicate\":\"updateEncryption\",\"params\":[{\"name\":\"chat\",\"type\":\"EncryptedChat\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":956179895,\"predicate\":\"updateEncryptedMessagesRead\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1417756512,\"predicate\":\"encryptedChatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":1722964307,\"predicate\":\"encryptedChatWaiting\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":1223809356,\"predicate\":\"encryptedChatRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1643173063,\"predicate\":\"encryptedChat\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":505183301,\"predicate\":\"encryptedChatDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"history_deleted\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":-247351839,\"predicate\":\"inputEncryptedChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedChat\"},{\"id\":-1038136962,\"predicate\":\"encryptedFileEmpty\",\"params\":[],\"type\":\"EncryptedFile\"},{\"id\":-1476358952,\"predicate\":\"encryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"EncryptedFile\"},{\"id\":406307684,\"predicate\":\"inputEncryptedFileEmpty\",\"params\":[],\"type\":\"InputEncryptedFile\"},{\"id\":1690108678,\"predicate\":\"inputEncryptedFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1511503333,\"predicate\":\"inputEncryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedFile\"},{\"id\":-182231723,\"predicate\":\"inputEncryptedFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-317144808,\"predicate\":\"encryptedMessage\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"EncryptedMessage\"},{\"id\":594758406,\"predicate\":\"encryptedMessageService\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"EncryptedMessage\"},{\"id\":-1058912715,\"predicate\":\"messages.dhConfigNotModified\",\"params\":[{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":740433629,\"predicate\":\"messages.dhConfig\",\"params\":[{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":1443858741,\"predicate\":\"messages.sentEncryptedMessage\",\"params\":[{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-1802240206,\"predicate\":\"messages.sentEncryptedFile\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-95482955,\"predicate\":\"inputFileBig\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":767652808,\"predicate\":\"inputEncryptedFileBigUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1037718609,\"predicate\":\"updateChatParticipantAdd\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-483443337,\"predicate\":\"updateChatParticipantDelete\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1906403213,\"predicate\":\"updateDcOptions\",\"params\":[{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"}],\"type\":\"Update\"},{\"id\":1530447553,\"predicate\":\"inputMediaUploadedDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nosound_video\",\"type\":\"flags.3?true\"},{\"name\":\"force_file\",\"type\":\"flags.4?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":860303448,\"predicate\":\"inputMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"},{\"name\":\"query\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":-1666158377,\"predicate\":\"messageMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nopremium\",\"type\":\"flags.3?true\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1928391342,\"predicate\":\"inputDocumentEmpty\",\"params\":[],\"type\":\"InputDocument\"},{\"id\":448771445,\"predicate\":\"inputDocument\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputDocument\"},{\"id\":-1160743548,\"predicate\":\"inputDocumentFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":922273905,\"predicate\":\"documentEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Document\"},{\"id\":-1881881384,\"predicate\":\"document\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"thumbs\",\"type\":\"flags.0?Vector<PhotoSize>\"},{\"name\":\"video_thumbs\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"Document\"},{\"id\":398898678,\"predicate\":\"help.support\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"help.Support\"},{\"id\":-1613493288,\"predicate\":\"notifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"NotifyPeer\"},{\"id\":-1261946036,\"predicate\":\"notifyUsers\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1073230141,\"predicate\":\"notifyChats\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1094555409,\"predicate\":\"updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"NotifyPeer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"}],\"type\":\"Update\"},{\"id\":381645902,\"predicate\":\"sendMessageTypingAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-44119819,\"predicate\":\"sendMessageCancelAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1584933265,\"predicate\":\"sendMessageRecordVideoAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-378127636,\"predicate\":\"sendMessageUploadVideoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-718310409,\"predicate\":\"sendMessageRecordAudioAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-212740181,\"predicate\":\"sendMessageUploadAudioAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-774682074,\"predicate\":\"sendMessageUploadPhotoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-1441998364,\"predicate\":\"sendMessageUploadDocumentAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":393186209,\"predicate\":\"sendMessageGeoLocationAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":1653390447,\"predicate\":\"sendMessageChooseContactAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1290580579,\"predicate\":\"contacts.found\",\"params\":[{\"name\":\"my_results\",\"type\":\"Vector<Peer>\"},{\"name\":\"results\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Found\"},{\"id\":-337352679,\"predicate\":\"updateServiceNotification\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"inbox_date\",\"type\":\"flags.1?int\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"Update\"},{\"id\":-496024847,\"predicate\":\"userStatusRecently\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":129960444,\"predicate\":\"userStatusLastWeek\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":2011940674,\"predicate\":\"userStatusLastMonth\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-298113238,\"predicate\":\"updatePrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"PrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"}],\"type\":\"Update\"},{\"id\":1335282456,\"predicate\":\"inputPrivacyKeyStatusTimestamp\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1137792208,\"predicate\":\"privacyKeyStatusTimestamp\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":218751099,\"predicate\":\"inputPrivacyValueAllowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":407582158,\"predicate\":\"inputPrivacyValueAllowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":320652927,\"predicate\":\"inputPrivacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":195371015,\"predicate\":\"inputPrivacyValueDisallowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-697604407,\"predicate\":\"inputPrivacyValueDisallowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-1877932953,\"predicate\":\"inputPrivacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-123988,\"predicate\":\"privacyValueAllowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":1698855810,\"predicate\":\"privacyValueAllowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1198497870,\"predicate\":\"privacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-125240806,\"predicate\":\"privacyValueDisallowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1955338397,\"predicate\":\"privacyValueDisallowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-463335103,\"predicate\":\"privacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1352683077,\"predicate\":\"account.privacyRules\",\"params\":[{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1194283041,\"predicate\":\"accountDaysTTL\",\"params\":[{\"name\":\"days\",\"type\":\"int\"}],\"type\":\"AccountDaysTTL\"},{\"id\":88680979,\"predicate\":\"updateUserPhone\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1815593308,\"predicate\":\"documentAttributeImageSize\",\"params\":[{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":297109817,\"predicate\":\"documentAttributeAnimated\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1662637586,\"predicate\":\"documentAttributeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"mask\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"DocumentAttribute\"},{\"id\":250621158,\"predicate\":\"documentAttributeVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"round_message\",\"type\":\"flags.0?true\"},{\"name\":\"supports_streaming\",\"type\":\"flags.1?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":-1739392570,\"predicate\":\"documentAttributeAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"voice\",\"type\":\"flags.10?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"},{\"name\":\"waveform\",\"type\":\"flags.2?bytes\"}],\"type\":\"DocumentAttribute\"},{\"id\":358154344,\"predicate\":\"documentAttributeFilename\",\"params\":[{\"name\":\"file_name\",\"type\":\"string\"}],\"type\":\"DocumentAttribute\"},{\"id\":-244016606,\"predicate\":\"messages.stickersNotModified\",\"params\":[],\"type\":\"messages.Stickers\"},{\"id\":816245886,\"predicate\":\"messages.stickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.Stickers\"},{\"id\":313694676,\"predicate\":\"stickerPack\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"documents\",\"type\":\"Vector<long>\"}],\"type\":\"StickerPack\"},{\"id\":-395967805,\"predicate\":\"messages.allStickersNotModified\",\"params\":[],\"type\":\"messages.AllStickers\"},{\"id\":-843329861,\"predicate\":\"messages.allStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSet>\"}],\"type\":\"messages.AllStickers\"},{\"id\":-1667805217,\"predicate\":\"updateReadHistoryInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":791617983,\"predicate\":\"updateReadHistoryOutbox\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-2066640507,\"predicate\":\"messages.affectedMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":2139689491,\"predicate\":\"updateWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-350980120,\"predicate\":\"webPageEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"WebPage\"},{\"id\":-981018084,\"predicate\":\"webPagePending\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-392411726,\"predicate\":\"webPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"display_url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"type\",\"type\":\"flags.0?string\"},{\"name\":\"site_name\",\"type\":\"flags.1?string\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"embed_url\",\"type\":\"flags.5?string\"},{\"name\":\"embed_type\",\"type\":\"flags.5?string\"},{\"name\":\"embed_width\",\"type\":\"flags.6?int\"},{\"name\":\"embed_height\",\"type\":\"flags.6?int\"},{\"name\":\"duration\",\"type\":\"flags.7?int\"},{\"name\":\"author\",\"type\":\"flags.8?string\"},{\"name\":\"document\",\"type\":\"flags.9?Document\"},{\"name\":\"cached_page\",\"type\":\"flags.10?Page\"},{\"name\":\"attributes\",\"type\":\"flags.12?Vector<WebPageAttribute>\"}],\"type\":\"WebPage\"},{\"id\":-1557277184,\"predicate\":\"messageMediaWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"}],\"type\":\"MessageMedia\"},{\"id\":-1392388579,\"predicate\":\"authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.0?true\"},{\"name\":\"official_app\",\"type\":\"flags.1?true\"},{\"name\":\"password_pending\",\"type\":\"flags.2?true\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.3?true\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.4?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"app_name\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"Authorization\"},{\"id\":1275039392,\"predicate\":\"account.authorizations\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"},{\"name\":\"authorizations\",\"type\":\"Vector<Authorization>\"}],\"type\":\"account.Authorizations\"},{\"id\":-1787080453,\"predicate\":\"account.password\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_recovery\",\"type\":\"flags.0?true\"},{\"name\":\"has_secure_values\",\"type\":\"flags.1?true\"},{\"name\":\"has_password\",\"type\":\"flags.2?true\"},{\"name\":\"current_algo\",\"type\":\"flags.2?PasswordKdfAlgo\"},{\"name\":\"srp_B\",\"type\":\"flags.2?bytes\"},{\"name\":\"srp_id\",\"type\":\"flags.2?long\"},{\"name\":\"hint\",\"type\":\"flags.3?string\"},{\"name\":\"email_unconfirmed_pattern\",\"type\":\"flags.4?string\"},{\"name\":\"new_algo\",\"type\":\"PasswordKdfAlgo\"},{\"name\":\"new_secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_random\",\"type\":\"bytes\"},{\"name\":\"pending_reset_date\",\"type\":\"flags.5?int\"},{\"name\":\"login_email_pattern\",\"type\":\"flags.6?string\"}],\"type\":\"account.Password\"},{\"id\":-1705233435,\"predicate\":\"account.passwordSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"email\",\"type\":\"flags.0?string\"},{\"name\":\"secure_settings\",\"type\":\"flags.1?SecureSecretSettings\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1036572727,\"predicate\":\"account.passwordInputSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"new_algo\",\"type\":\"flags.0?PasswordKdfAlgo\"},{\"name\":\"new_password_hash\",\"type\":\"flags.0?bytes\"},{\"name\":\"hint\",\"type\":\"flags.0?string\"},{\"name\":\"email\",\"type\":\"flags.1?string\"},{\"name\":\"new_secure_settings\",\"type\":\"flags.2?SecureSecretSettings\"}],\"type\":\"account.PasswordInputSettings\"},{\"id\":326715557,\"predicate\":\"auth.passwordRecovery\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"}],\"type\":\"auth.PasswordRecovery\"},{\"id\":-1052959727,\"predicate\":\"inputMediaVenue\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":784356159,\"predicate\":\"messageMediaVenue\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-1551583367,\"predicate\":\"receivedNotifyMessage\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"flags\",\"type\":\"int\"}],\"type\":\"ReceivedNotifyMessage\"},{\"id\":179611673,\"predicate\":\"chatInviteExported\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.0?true\"},{\"name\":\"permanent\",\"type\":\"flags.5?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"start_date\",\"type\":\"flags.4?int\"},{\"name\":\"expire_date\",\"type\":\"flags.1?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.2?int\"},{\"name\":\"usage\",\"type\":\"flags.3?int\"},{\"name\":\"requested\",\"type\":\"flags.7?int\"},{\"name\":\"title\",\"type\":\"flags.8?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1516793212,\"predicate\":\"chatInviteAlready\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"}],\"type\":\"ChatInvite\"},{\"id\":806110401,\"predicate\":\"chatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"flags.0?true\"},{\"name\":\"broadcast\",\"type\":\"flags.1?true\"},{\"name\":\"public\",\"type\":\"flags.2?true\"},{\"name\":\"megagroup\",\"type\":\"flags.3?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"flags.5?string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"flags.4?Vector<User>\"}],\"type\":\"ChatInvite\"},{\"id\":51520707,\"predicate\":\"messageActionChatJoinedByLink\",\"params\":[{\"name\":\"inviter_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":1757493555,\"predicate\":\"updateReadMessagesContents\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-4838507,\"predicate\":\"inputStickerSetEmpty\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1645763991,\"predicate\":\"inputStickerSetID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputStickerSet\"},{\"id\":-2044933984,\"predicate\":\"inputStickerSetShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":768691932,\"predicate\":\"stickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archived\",\"type\":\"flags.1?true\"},{\"name\":\"official\",\"type\":\"flags.2?true\"},{\"name\":\"masks\",\"type\":\"flags.3?true\"},{\"name\":\"animated\",\"type\":\"flags.5?true\"},{\"name\":\"videos\",\"type\":\"flags.6?true\"},{\"name\":\"emojis\",\"type\":\"flags.7?true\"},{\"name\":\"installed_date\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumbs\",\"type\":\"flags.4?Vector<PhotoSize>\"},{\"name\":\"thumb_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_version\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_document_id\",\"type\":\"flags.8?long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"StickerSet\"},{\"id\":1846886166,\"predicate\":\"messages.stickerSet\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"keywords\",\"type\":\"Vector<StickerKeyword>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.StickerSet\"},{\"id\":1570352622,\"predicate\":\"user\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"self\",\"type\":\"flags.10?true\"},{\"name\":\"contact\",\"type\":\"flags.11?true\"},{\"name\":\"mutual_contact\",\"type\":\"flags.12?true\"},{\"name\":\"deleted\",\"type\":\"flags.13?true\"},{\"name\":\"bot\",\"type\":\"flags.14?true\"},{\"name\":\"bot_chat_history\",\"type\":\"flags.15?true\"},{\"name\":\"bot_nochats\",\"type\":\"flags.16?true\"},{\"name\":\"verified\",\"type\":\"flags.17?true\"},{\"name\":\"restricted\",\"type\":\"flags.18?true\"},{\"name\":\"min\",\"type\":\"flags.20?true\"},{\"name\":\"bot_inline_geo\",\"type\":\"flags.21?true\"},{\"name\":\"support\",\"type\":\"flags.23?true\"},{\"name\":\"scam\",\"type\":\"flags.24?true\"},{\"name\":\"apply_min_photo\",\"type\":\"flags.25?true\"},{\"name\":\"fake\",\"type\":\"flags.26?true\"},{\"name\":\"bot_attach_menu\",\"type\":\"flags.27?true\"},{\"name\":\"premium\",\"type\":\"flags.28?true\"},{\"name\":\"attach_menu_enabled\",\"type\":\"flags.29?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.0?long\"},{\"name\":\"first_name\",\"type\":\"flags.1?string\"},{\"name\":\"last_name\",\"type\":\"flags.2?string\"},{\"name\":\"username\",\"type\":\"flags.3?string\"},{\"name\":\"phone\",\"type\":\"flags.4?string\"},{\"name\":\"photo\",\"type\":\"flags.5?UserProfilePhoto\"},{\"name\":\"status\",\"type\":\"flags.6?UserStatus\"},{\"name\":\"bot_info_version\",\"type\":\"flags.14?int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.18?Vector<RestrictionReason>\"},{\"name\":\"bot_inline_placeholder\",\"type\":\"flags.19?string\"},{\"name\":\"lang_code\",\"type\":\"flags.22?string\"},{\"name\":\"emoji_status\",\"type\":\"flags.30?EmojiStatus\"}],\"type\":\"User\"},{\"id\":-1032140601,\"predicate\":\"botCommand\",\"params\":[{\"name\":\"command\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"BotCommand\"},{\"id\":-1892676777,\"predicate\":\"botInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"flags.0?long\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"description_photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"description_document\",\"type\":\"flags.5?Document\"},{\"name\":\"commands\",\"type\":\"flags.2?Vector<BotCommand>\"},{\"name\":\"menu_button\",\"type\":\"flags.3?BotMenuButton\"}],\"type\":\"BotInfo\"},{\"id\":-1560655744,\"predicate\":\"keyboardButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":2002815875,\"predicate\":\"keyboardButtonRow\",\"params\":[{\"name\":\"buttons\",\"type\":\"Vector<KeyboardButton>\"}],\"type\":\"KeyboardButtonRow\"},{\"id\":-1606526075,\"predicate\":\"replyKeyboardHide\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2035021048,\"predicate\":\"replyKeyboardForceReply\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2049074735,\"predicate\":\"replyKeyboardMarkup\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"resize\",\"type\":\"flags.0?true\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-571955892,\"predicate\":\"inputPeerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-233744186,\"predicate\":\"inputUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":-1148011883,\"predicate\":\"messageEntityUnknown\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-100378723,\"predicate\":\"messageEntityMention\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1868782349,\"predicate\":\"messageEntityHashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1827637959,\"predicate\":\"messageEntityBotCommand\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1859134776,\"predicate\":\"messageEntityUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1692693954,\"predicate\":\"messageEntityEmail\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1117713463,\"predicate\":\"messageEntityBold\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-2106619040,\"predicate\":\"messageEntityItalic\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":681706865,\"predicate\":\"messageEntityCode\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1938967520,\"predicate\":\"messageEntityPre\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":1990644519,\"predicate\":\"messageEntityTextUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":-1877614335,\"predicate\":\"updateShortSentMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":-292807034,\"predicate\":\"inputChannelEmpty\",\"params\":[],\"type\":\"InputChannel\"},{\"id\":-212145112,\"predicate\":\"inputChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1566230754,\"predicate\":\"peerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":666680316,\"predicate\":\"inputPeerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-2107528095,\"predicate\":\"channel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"restricted\",\"type\":\"flags.9?true\"},{\"name\":\"signatures\",\"type\":\"flags.11?true\"},{\"name\":\"min\",\"type\":\"flags.12?true\"},{\"name\":\"scam\",\"type\":\"flags.19?true\"},{\"name\":\"has_link\",\"type\":\"flags.20?true\"},{\"name\":\"has_geo\",\"type\":\"flags.21?true\"},{\"name\":\"slowmode_enabled\",\"type\":\"flags.22?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"fake\",\"type\":\"flags.25?true\"},{\"name\":\"gigagroup\",\"type\":\"flags.26?true\"},{\"name\":\"noforwards\",\"type\":\"flags.27?true\"},{\"name\":\"join_to_send\",\"type\":\"flags.28?true\"},{\"name\":\"join_request\",\"type\":\"flags.29?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.13?long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"flags.6?string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.9?Vector<RestrictionReason>\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"banned_rights\",\"type\":\"flags.15?ChatBannedRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"},{\"name\":\"participants_count\",\"type\":\"flags.17?int\"}],\"type\":\"Chat\"},{\"id\":399807445,\"predicate\":\"channelForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"until_date\",\"type\":\"flags.16?int\"}],\"type\":\"Chat\"},{\"id\":2131196633,\"predicate\":\"contacts.resolvedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-231385849,\"predicate\":\"channelFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_view_participants\",\"type\":\"flags.3?true\"},{\"name\":\"can_set_username\",\"type\":\"flags.6?true\"},{\"name\":\"can_set_stickers\",\"type\":\"flags.7?true\"},{\"name\":\"hidden_prehistory\",\"type\":\"flags.10?true\"},{\"name\":\"can_set_location\",\"type\":\"flags.16?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.19?true\"},{\"name\":\"can_view_stats\",\"type\":\"flags.20?true\"},{\"name\":\"blocked\",\"type\":\"flags.22?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"can_delete_channel\",\"type\":\"flags2.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants_count\",\"type\":\"flags.0?int\"},{\"name\":\"admins_count\",\"type\":\"flags.1?int\"},{\"name\":\"kicked_count\",\"type\":\"flags.2?int\"},{\"name\":\"banned_count\",\"type\":\"flags.2?int\"},{\"name\":\"online_count\",\"type\":\"flags.13?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chat_photo\",\"type\":\"Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.23?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"Vector<BotInfo>\"},{\"name\":\"migrated_from_chat_id\",\"type\":\"flags.4?long\"},{\"name\":\"migrated_from_max_id\",\"type\":\"flags.4?int\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.5?int\"},{\"name\":\"stickerset\",\"type\":\"flags.8?StickerSet\"},{\"name\":\"available_min_id\",\"type\":\"flags.9?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"linked_chat_id\",\"type\":\"flags.14?long\"},{\"name\":\"location\",\"type\":\"flags.15?ChannelLocation\"},{\"name\":\"slowmode_seconds\",\"type\":\"flags.17?int\"},{\"name\":\"slowmode_next_send_date\",\"type\":\"flags.18?int\"},{\"name\":\"stats_dc\",\"type\":\"flags.12?int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"call\",\"type\":\"flags.21?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.24?int\"},{\"name\":\"pending_suggestions\",\"type\":\"flags.25?Vector<string>\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.26?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.27?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.28?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.28?Vector<long>\"},{\"name\":\"default_send_as\",\"type\":\"flags.29?Peer\"},{\"name\":\"available_reactions\",\"type\":\"flags.30?ChatReactions\"}],\"type\":\"ChatFull\"},{\"id\":182649427,\"predicate\":\"messageRange\",\"params\":[{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"MessageRange\"},{\"id\":1682413576,\"predicate\":\"messages.channelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":-1781355374,\"predicate\":\"messageActionChannelCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":277713951,\"predicate\":\"updateChannelTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1666927625,\"predicate\":\"updateChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1656358105,\"predicate\":\"updateNewChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1842450928,\"predicate\":\"updateReadChannelInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1020437742,\"predicate\":\"updateDeleteChannelMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-232346616,\"predicate\":\"updateChannelMessageViews\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1041346555,\"predicate\":\"updates.channelDifferenceEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1531132162,\"predicate\":\"updates.channelDifferenceTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"dialog\",\"type\":\"Dialog\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":543450958,\"predicate\":\"updates.channelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1798033689,\"predicate\":\"channelMessagesFilterEmpty\",\"params\":[],\"type\":\"ChannelMessagesFilter\"},{\"id\":-847783593,\"predicate\":\"channelMessagesFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_new_messages\",\"type\":\"flags.1?true\"},{\"name\":\"ranges\",\"type\":\"Vector<MessageRange>\"}],\"type\":\"ChannelMessagesFilter\"},{\"id\":-1072953408,\"predicate\":\"channelParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":900251559,\"predicate\":\"channelParticipantSelf\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_request\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":803602899,\"predicate\":\"channelParticipantCreator\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.0?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":-566281095,\"predicate\":\"channelParticipantsRecent\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1268741783,\"predicate\":\"channelParticipantsAdmins\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1548400251,\"predicate\":\"channelParticipantsKicked\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1699676497,\"predicate\":\"channels.channelParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<ChannelParticipant>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-541588713,\"predicate\":\"channels.channelParticipant\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":-462696732,\"predicate\":\"chatParticipantCreator\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"ChatParticipant\"},{\"id\":-1600962725,\"predicate\":\"chatParticipantAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-674602590,\"predicate\":\"updateChatParticipantAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"is_admin\",\"type\":\"Bool\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-519864430,\"predicate\":\"messageActionChatMigrateTo\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-365344535,\"predicate\":\"messageActionChannelMigrateFrom\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1328445861,\"predicate\":\"channelParticipantsBots\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":2013922064,\"predicate\":\"help.termsOfService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"DataJSON\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"min_age_confirm\",\"type\":\"flags.1?int\"}],\"type\":\"help.TermsOfService\"},{\"id\":1753886890,\"predicate\":\"updateNewStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"messages.StickerSet\"}],\"type\":\"Update\"},{\"id\":196268545,\"predicate\":\"updateStickerSetsOrder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":834816008,\"predicate\":\"updateStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"}],\"type\":\"Update\"},{\"id\":-402498398,\"predicate\":\"messages.savedGifsNotModified\",\"params\":[],\"type\":\"messages.SavedGifs\"},{\"id\":-2069878259,\"predicate\":\"messages.savedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"gifs\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.SavedGifs\"},{\"id\":-1821035490,\"predicate\":\"updateSavedGifs\",\"params\":[],\"type\":\"Update\"},{\"id\":864077702,\"predicate\":\"inputBotInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1036876423,\"predicate\":\"inputBotInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-2000710887,\"predicate\":\"inputBotInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?InputWebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?InputWebDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1984755728,\"predicate\":\"botInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1937807902,\"predicate\":\"botInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":295067450,\"predicate\":\"botInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?WebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1803769784,\"predicate\":\"messages.botResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"next_offset\",\"type\":\"flags.1?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.2?InlineBotSwitchPM\"},{\"name\":\"results\",\"type\":\"Vector<BotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.BotResults\"},{\"id\":1232025500,\"predicate\":\"updateBotInlineQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"peer_type\",\"type\":\"flags.1?InlineQueryPeerType\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":317794823,\"predicate\":\"updateBotInlineSend\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"flags.1?InputBotInlineMessageID\"}],\"type\":\"Update\"},{\"id\":1358283666,\"predicate\":\"inputMessagesFilterVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":928101534,\"predicate\":\"inputMessagesFilterMusic\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1107622874,\"predicate\":\"inputPrivacyKeyChatInvite\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1343122938,\"predicate\":\"privacyKeyChatInvite\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1571494644,\"predicate\":\"exportedMessageLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"html\",\"type\":\"string\"}],\"type\":\"ExportedMessageLink\"},{\"id\":1601666510,\"predicate\":\"messageFwdHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"imported\",\"type\":\"flags.7?true\"},{\"name\":\"from_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"from_name\",\"type\":\"flags.5?string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"post_author\",\"type\":\"flags.3?string\"},{\"name\":\"saved_from_peer\",\"type\":\"flags.4?Peer\"},{\"name\":\"saved_from_msg_id\",\"type\":\"flags.4?int\"},{\"name\":\"psa_type\",\"type\":\"flags.6?string\"}],\"type\":\"MessageFwdHeader\"},{\"id\":457133559,\"predicate\":\"updateEditChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1799538451,\"predicate\":\"messageActionPinMessage\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1923290508,\"predicate\":\"auth.codeTypeSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1948046307,\"predicate\":\"auth.codeTypeCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":577556219,\"predicate\":\"auth.codeTypeFlashCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1035688326,\"predicate\":\"auth.sentCodeTypeApp\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1073693790,\"predicate\":\"auth.sentCodeTypeSms\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1398007207,\"predicate\":\"auth.sentCodeTypeCall\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1425815847,\"predicate\":\"auth.sentCodeTypeFlashCall\",\"params\":[{\"name\":\"pattern\",\"type\":\"string\"}],\"type\":\"auth.SentCodeType\"},{\"id\":629866245,\"predicate\":\"keyboardButtonUrl\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":901503851,\"predicate\":\"keyboardButtonCallback\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requires_password\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"KeyboardButton\"},{\"id\":-1318425559,\"predicate\":\"keyboardButtonRequestPhone\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-59151553,\"predicate\":\"keyboardButtonRequestGeoLocation\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":90744648,\"predicate\":\"keyboardButtonSwitchInline\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"same_peer\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1218642516,\"predicate\":\"replyInlineMarkup\",\"params\":[{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"}],\"type\":\"ReplyMarkup\"},{\"id\":911761060,\"predicate\":\"messages.botCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"has_url\",\"type\":\"flags.3?true\"},{\"name\":\"native_ui\",\"type\":\"flags.4?true\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-1177566067,\"predicate\":\"updateBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":649453030,\"predicate\":\"messages.messageEditData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"caption\",\"type\":\"flags.0?true\"}],\"type\":\"messages.MessageEditData\"},{\"id\":-469536605,\"predicate\":\"updateEditMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1768777083,\"predicate\":\"inputBotInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1098628881,\"predicate\":\"inputBotInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-1494368259,\"predicate\":\"inputBotInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":85477117,\"predicate\":\"botInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1970903652,\"predicate\":\"botInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":416402882,\"predicate\":\"botInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1462213465,\"predicate\":\"inputBotInlineResultPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"InputPhoto\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":-459324,\"predicate\":\"inputBotInlineResultDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":400266251,\"predicate\":\"botInlineMediaResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1995686519,\"predicate\":\"inputBotInlineMessageID\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":1763610706,\"predicate\":\"updateInlineBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"msg_id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":1008755359,\"predicate\":\"inlineBotSwitchPM\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"InlineBotSwitchPM\"},{\"id\":863093588,\"predicate\":\"messages.peerDialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-305282981,\"predicate\":\"topPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"rating\",\"type\":\"double\"}],\"type\":\"TopPeer\"},{\"id\":-1419371685,\"predicate\":\"topPeerCategoryBotsPM\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":344356834,\"predicate\":\"topPeerCategoryBotsInline\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":104314861,\"predicate\":\"topPeerCategoryCorrespondents\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-1122524854,\"predicate\":\"topPeerCategoryGroups\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":371037736,\"predicate\":\"topPeerCategoryChannels\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-75283823,\"predicate\":\"topPeerCategoryPeers\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<TopPeer>\"}],\"type\":\"TopPeerCategoryPeers\"},{\"id\":-567906571,\"predicate\":\"contacts.topPeersNotModified\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":1891070632,\"predicate\":\"contacts.topPeers\",\"params\":[{\"name\":\"categories\",\"type\":\"Vector<TopPeerCategoryPeers>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.TopPeers\"},{\"id\":-595914432,\"predicate\":\"messageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":546203849,\"predicate\":\"inputMessageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"MessageEntity\"},{\"id\":975236280,\"predicate\":\"inputMessagesFilterChatPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1218471511,\"predicate\":\"updateReadChannelOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-299124375,\"predicate\":\"updateDraftMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"draft\",\"type\":\"DraftMessage\"}],\"type\":\"Update\"},{\"id\":453805082,\"predicate\":\"draftMessageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"DraftMessage\"},{\"id\":-40996577,\"predicate\":\"draftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"DraftMessage\"},{\"id\":-1615153660,\"predicate\":\"messageActionHistoryClear\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-958657434,\"predicate\":\"messages.featuredStickersNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1103615738,\"predicate\":\"messages.featuredStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"},{\"name\":\"unread\",\"type\":\"Vector<long>\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1461528386,\"predicate\":\"updateReadFeaturedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":186120336,\"predicate\":\"messages.recentStickersNotModified\",\"params\":[],\"type\":\"messages.RecentStickers\"},{\"id\":-1999405994,\"predicate\":\"messages.recentStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"},{\"name\":\"dates\",\"type\":\"Vector<int>\"}],\"type\":\"messages.RecentStickers\"},{\"id\":-1706939360,\"predicate\":\"updateRecentStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":1338747336,\"predicate\":\"messages.archivedStickers\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":946083368,\"predicate\":\"messages.stickerSetInstallResultSuccess\",\"params\":[],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":904138920,\"predicate\":\"messages.stickerSetInstallResultArchive\",\"params\":[{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":1678812626,\"predicate\":\"stickerSetCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"cover\",\"type\":\"Document\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1574314746,\"predicate\":\"updateConfig\",\"params\":[],\"type\":\"Update\"},{\"id\":861169551,\"predicate\":\"updatePtsChanged\",\"params\":[],\"type\":\"Update\"},{\"id\":-440664550,\"predicate\":\"inputMediaPhotoExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-78455655,\"predicate\":\"inputMediaDocumentExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":872932635,\"predicate\":\"stickerSetMultiCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"covers\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1361650766,\"predicate\":\"maskCoords\",\"params\":[{\"name\":\"n\",\"type\":\"int\"},{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"zoom\",\"type\":\"double\"}],\"type\":\"MaskCoords\"},{\"id\":-1744710921,\"predicate\":\"documentAttributeHasStickers\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1251549527,\"predicate\":\"inputStickeredMediaPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputStickeredMedia\"},{\"id\":70813275,\"predicate\":\"inputStickeredMediaDocument\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"}],\"type\":\"InputStickeredMedia\"},{\"id\":-1107729093,\"predicate\":\"game\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"}],\"type\":\"Game\"},{\"id\":1336154098,\"predicate\":\"inputBotInlineResultGame\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1262639204,\"predicate\":\"inputBotInlineMessageGame\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-38694904,\"predicate\":\"messageMediaGame\",\"params\":[{\"name\":\"game\",\"type\":\"Game\"}],\"type\":\"MessageMedia\"},{\"id\":-750828557,\"predicate\":\"inputMediaGame\",\"params\":[{\"name\":\"id\",\"type\":\"InputGame\"}],\"type\":\"InputMedia\"},{\"id\":53231223,\"predicate\":\"inputGameID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGame\"},{\"id\":-1020139510,\"predicate\":\"inputGameShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputGame\"},{\"id\":1358175439,\"predicate\":\"keyboardButtonGame\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1834538890,\"predicate\":\"messageActionGameScore\",\"params\":[{\"name\":\"game_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":1940093419,\"predicate\":\"highScore\",\"params\":[{\"name\":\"pos\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"HighScore\"},{\"id\":-1707344487,\"predicate\":\"messages.highScores\",\"params\":[{\"name\":\"scores\",\"type\":\"Vector<HighScore>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.HighScores\"},{\"id\":1258196845,\"predicate\":\"updates.differenceTooLong\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":791390623,\"predicate\":\"updateChannelWebPage\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1663561404,\"predicate\":\"messages.chatsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-599948721,\"predicate\":\"textEmpty\",\"params\":[],\"type\":\"RichText\"},{\"id\":1950782688,\"predicate\":\"textPlain\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":1730456516,\"predicate\":\"textBold\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-653089380,\"predicate\":\"textItalic\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1054465340,\"predicate\":\"textUnderline\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1678197867,\"predicate\":\"textStrike\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1816074681,\"predicate\":\"textFixed\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1009288385,\"predicate\":\"textUrl\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"}],\"type\":\"RichText\"},{\"id\":-564523562,\"predicate\":\"textEmail\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":2120376535,\"predicate\":\"textConcat\",\"params\":[{\"name\":\"texts\",\"type\":\"Vector<RichText>\"}],\"type\":\"RichText\"},{\"id\":324435594,\"predicate\":\"pageBlockUnsupported\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":1890305021,\"predicate\":\"pageBlockTitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1879401953,\"predicate\":\"pageBlockSubtitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1162877472,\"predicate\":\"pageBlockAuthorDate\",\"params\":[{\"name\":\"author\",\"type\":\"RichText\"},{\"name\":\"published_date\",\"type\":\"int\"}],\"type\":\"PageBlock\"},{\"id\":-1076861716,\"predicate\":\"pageBlockHeader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-248793375,\"predicate\":\"pageBlockSubheader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1182402406,\"predicate\":\"pageBlockParagraph\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1066346178,\"predicate\":\"pageBlockPreformatted\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":1216809369,\"predicate\":\"pageBlockFooter\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-618614392,\"predicate\":\"pageBlockDivider\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":-837994576,\"predicate\":\"pageBlockAnchor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":-454524911,\"predicate\":\"pageBlockList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListItem>\"}],\"type\":\"PageBlock\"},{\"id\":641563686,\"predicate\":\"pageBlockBlockquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1329878739,\"predicate\":\"pageBlockPullquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":391759200,\"predicate\":\"pageBlockPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"webpage_id\",\"type\":\"flags.0?long\"}],\"type\":\"PageBlock\"},{\"id\":2089805750,\"predicate\":\"pageBlockVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autoplay\",\"type\":\"flags.0?true\"},{\"name\":\"loop\",\"type\":\"flags.1?true\"},{\"name\":\"video_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":972174080,\"predicate\":\"pageBlockCover\",\"params\":[{\"name\":\"cover\",\"type\":\"PageBlock\"}],\"type\":\"PageBlock\"},{\"id\":-1468953147,\"predicate\":\"pageBlockEmbed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"full_width\",\"type\":\"flags.0?true\"},{\"name\":\"allow_scrolling\",\"type\":\"flags.3?true\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"html\",\"type\":\"flags.2?string\"},{\"name\":\"poster_photo_id\",\"type\":\"flags.4?long\"},{\"name\":\"w\",\"type\":\"flags.5?int\"},{\"name\":\"h\",\"type\":\"flags.5?int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-229005301,\"predicate\":\"pageBlockEmbedPost\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"author_photo_id\",\"type\":\"long\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1705048653,\"predicate\":\"pageBlockCollage\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":52401552,\"predicate\":\"pageBlockSlideshow\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1930545681,\"predicate\":\"webPageNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"cached_page_views\",\"type\":\"flags.0?int\"}],\"type\":\"WebPage\"},{\"id\":-88417185,\"predicate\":\"inputPrivacyKeyPhoneCall\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1030105979,\"predicate\":\"privacyKeyPhoneCall\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-580219064,\"predicate\":\"sendMessageGamePlayAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-2048646399,\"predicate\":\"phoneCallDiscardReasonMissed\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-527056480,\"predicate\":\"phoneCallDiscardReasonDisconnect\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1471006352,\"predicate\":\"phoneCallDiscardReasonHangup\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-84416311,\"predicate\":\"phoneCallDiscardReasonBusy\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1852826908,\"predicate\":\"updateDialogPinned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-99664734,\"predicate\":\"updatePinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<DialogPeer>\"}],\"type\":\"Update\"},{\"id\":2104790276,\"predicate\":\"dataJSON\",\"params\":[{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"DataJSON\"},{\"id\":-2095595325,\"predicate\":\"updateBotWebhookJSON\",\"params\":[{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-1684914010,\"predicate\":\"updateBotWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"},{\"name\":\"timeout\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-886477832,\"predicate\":\"labeledPrice\",\"params\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"LabeledPrice\"},{\"id\":1048946971,\"predicate\":\"invoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"test\",\"type\":\"flags.0?true\"},{\"name\":\"name_requested\",\"type\":\"flags.1?true\"},{\"name\":\"phone_requested\",\"type\":\"flags.2?true\"},{\"name\":\"email_requested\",\"type\":\"flags.3?true\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.4?true\"},{\"name\":\"flexible\",\"type\":\"flags.5?true\"},{\"name\":\"phone_to_provider\",\"type\":\"flags.6?true\"},{\"name\":\"email_to_provider\",\"type\":\"flags.7?true\"},{\"name\":\"recurring\",\"type\":\"flags.9?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"},{\"name\":\"max_tip_amount\",\"type\":\"flags.8?long\"},{\"name\":\"suggested_tip_amounts\",\"type\":\"flags.8?Vector<long>\"},{\"name\":\"recurring_terms_url\",\"type\":\"flags.9?string\"}],\"type\":\"Invoice\"},{\"id\":-1900697899,\"predicate\":\"inputMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"},{\"name\":\"extended_media\",\"type\":\"flags.2?InputMedia\"}],\"type\":\"InputMedia\"},{\"id\":-368917890,\"predicate\":\"paymentCharge\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"provider_charge_id\",\"type\":\"string\"}],\"type\":\"PaymentCharge\"},{\"id\":-1892568281,\"predicate\":\"messageActionPaymentSentMe\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recurring_init\",\"type\":\"flags.2?true\"},{\"name\":\"recurring_used\",\"type\":\"flags.3?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"charge\",\"type\":\"PaymentCharge\"}],\"type\":\"MessageAction\"},{\"id\":-156940077,\"predicate\":\"messageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"receipt_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"},{\"name\":\"extended_media\",\"type\":\"flags.4?MessageExtendedMedia\"}],\"type\":\"MessageMedia\"},{\"id\":512535275,\"predicate\":\"postAddress\",\"params\":[{\"name\":\"street_line1\",\"type\":\"string\"},{\"name\":\"street_line2\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country_iso2\",\"type\":\"string\"},{\"name\":\"post_code\",\"type\":\"string\"}],\"type\":\"PostAddress\"},{\"id\":-1868808300,\"predicate\":\"paymentRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"flags.0?string\"},{\"name\":\"phone\",\"type\":\"flags.1?string\"},{\"name\":\"email\",\"type\":\"flags.2?string\"},{\"name\":\"shipping_address\",\"type\":\"flags.3?PostAddress\"}],\"type\":\"PaymentRequestedInfo\"},{\"id\":-1344716869,\"predicate\":\"keyboardButtonBuy\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1776926890,\"predicate\":\"messageActionPaymentSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recurring_init\",\"type\":\"flags.2?true\"},{\"name\":\"recurring_used\",\"type\":\"flags.3?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"invoice_slug\",\"type\":\"flags.0?string\"}],\"type\":\"MessageAction\"},{\"id\":-842892769,\"predicate\":\"paymentSavedCredentialsCard\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentSavedCredentials\"},{\"id\":475467473,\"predicate\":\"webDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":-1678949555,\"predicate\":\"inputWebDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"InputWebDocument\"},{\"id\":-1036396922,\"predicate\":\"inputWebFileLocation\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWebFileLocation\"},{\"id\":568808380,\"predicate\":\"upload.webFile\",\"params\":[{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"file_type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.WebFile\"},{\"id\":-1610250415,\"predicate\":\"payments.paymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_save_credentials\",\"type\":\"flags.2?true\"},{\"name\":\"password_missing\",\"type\":\"flags.3?true\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"native_provider\",\"type\":\"flags.4?string\"},{\"name\":\"native_params\",\"type\":\"flags.4?DataJSON\"},{\"name\":\"additional_methods\",\"type\":\"flags.6?Vector<PaymentFormMethod>\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"saved_credentials\",\"type\":\"flags.1?Vector<PaymentSavedCredentials>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentForm\"},{\"id\":-784000893,\"predicate\":\"payments.validatedRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":1314881805,\"predicate\":\"payments.paymentResult\",\"params\":[{\"name\":\"updates\",\"type\":\"Updates\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1891958275,\"predicate\":\"payments.paymentReceipt\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.2?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping\",\"type\":\"flags.1?ShippingOption\"},{\"name\":\"tip_amount\",\"type\":\"flags.3?long\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"credentials_title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-74456004,\"predicate\":\"payments.savedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_saved_credentials\",\"type\":\"flags.1?true\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"}],\"type\":\"payments.SavedInfo\"},{\"id\":-1056001329,\"predicate\":\"inputPaymentCredentialsSaved\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"tmp_password\",\"type\":\"bytes\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":873977640,\"predicate\":\"inputPaymentCredentials\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-614138572,\"predicate\":\"account.tmpPassword\",\"params\":[{\"name\":\"tmp_password\",\"type\":\"bytes\"},{\"name\":\"valid_until\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":-1239335713,\"predicate\":\"shippingOption\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"}],\"type\":\"ShippingOption\"},{\"id\":-1246823043,\"predicate\":\"updateBotShippingQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"shipping_address\",\"type\":\"PostAddress\"}],\"type\":\"Update\"},{\"id\":-1934976362,\"predicate\":\"updateBotPrecheckoutQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-6249322,\"predicate\":\"inputStickerSetItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"string\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"InputStickerSetItem\"},{\"id\":-1425052898,\"predicate\":\"updatePhoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"}],\"type\":\"Update\"},{\"id\":506920429,\"predicate\":\"inputPhoneCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPhoneCall\"},{\"id\":1399245077,\"predicate\":\"phoneCallEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"PhoneCall\"},{\"id\":-987599081,\"predicate\":\"phoneCallWaiting\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"receive_date\",\"type\":\"flags.0?int\"}],\"type\":\"PhoneCall\"},{\"id\":347139340,\"predicate\":\"phoneCallRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":912311057,\"predicate\":\"phoneCallAccepted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":-1770029977,\"predicate\":\"phoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"p2p_allowed\",\"type\":\"flags.5?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"connections\",\"type\":\"Vector<PhoneConnection>\"},{\"name\":\"start_date\",\"type\":\"int\"}],\"type\":\"PhoneCall\"},{\"id\":1355435489,\"predicate\":\"phoneCallDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"need_rating\",\"type\":\"flags.2?true\"},{\"name\":\"need_debug\",\"type\":\"flags.3?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"PhoneCall\"},{\"id\":-1665063993,\"predicate\":\"phoneConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"tcp\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"peer_tag\",\"type\":\"bytes\"}],\"type\":\"PhoneConnection\"},{\"id\":-58224696,\"predicate\":\"phoneCallProtocol\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"udp_p2p\",\"type\":\"flags.0?true\"},{\"name\":\"udp_reflector\",\"type\":\"flags.1?true\"},{\"name\":\"min_layer\",\"type\":\"int\"},{\"name\":\"max_layer\",\"type\":\"int\"},{\"name\":\"library_versions\",\"type\":\"Vector<string>\"}],\"type\":\"PhoneCallProtocol\"},{\"id\":-326966976,\"predicate\":\"phone.phoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.PhoneCall\"},{\"id\":-2134272152,\"predicate\":\"inputMessagesFilterPhoneCalls\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"missed\",\"type\":\"flags.0?true\"}],\"type\":\"MessagesFilter\"},{\"id\":-2132731265,\"predicate\":\"messageActionPhoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call_id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"MessageAction\"},{\"id\":2054952868,\"predicate\":\"inputMessagesFilterRoundVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1253451181,\"predicate\":\"inputMessagesFilterRoundVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1997373508,\"predicate\":\"sendMessageRecordRoundAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":608050278,\"predicate\":\"sendMessageUploadRoundAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-242427324,\"predicate\":\"upload.fileCdnRedirect\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"encryption_key\",\"type\":\"bytes\"},{\"name\":\"encryption_iv\",\"type\":\"bytes\"},{\"name\":\"file_hashes\",\"type\":\"Vector<FileHash>\"}],\"type\":\"upload.File\"},{\"id\":-290921362,\"predicate\":\"upload.cdnFileReuploadNeeded\",\"params\":[{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1449145777,\"predicate\":\"upload.cdnFile\",\"params\":[{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-914167110,\"predicate\":\"cdnPublicKey\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"CdnPublicKey\"},{\"id\":1462101002,\"predicate\":\"cdnConfig\",\"params\":[{\"name\":\"public_keys\",\"type\":\"Vector<CdnPublicKey>\"}],\"type\":\"CdnConfig\"},{\"id\":-283684427,\"predicate\":\"pageBlockChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"Chat\"}],\"type\":\"PageBlock\"},{\"id\":-892239370,\"predicate\":\"langPackString\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":1816636575,\"predicate\":\"langPackStringPluralized\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"zero_value\",\"type\":\"flags.0?string\"},{\"name\":\"one_value\",\"type\":\"flags.1?string\"},{\"name\":\"two_value\",\"type\":\"flags.2?string\"},{\"name\":\"few_value\",\"type\":\"flags.3?string\"},{\"name\":\"many_value\",\"type\":\"flags.4?string\"},{\"name\":\"other_value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":695856818,\"predicate\":\"langPackStringDeleted\",\"params\":[{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":-209337866,\"predicate\":\"langPackDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"strings\",\"type\":\"Vector<LangPackString>\"}],\"type\":\"LangPackDifference\"},{\"id\":-288727837,\"predicate\":\"langPackLanguage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"official\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.2?true\"},{\"name\":\"beta\",\"type\":\"flags.3?true\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"native_name\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"base_lang_code\",\"type\":\"flags.1?string\"},{\"name\":\"plural_code\",\"type\":\"string\"},{\"name\":\"strings_count\",\"type\":\"int\"},{\"name\":\"translated_count\",\"type\":\"int\"},{\"name\":\"translations_url\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":1180041828,\"predicate\":\"updateLangPackTooLong\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1442983757,\"predicate\":\"updateLangPack\",\"params\":[{\"name\":\"difference\",\"type\":\"LangPackDifference\"}],\"type\":\"Update\"},{\"id\":885242707,\"predicate\":\"channelParticipantAdmin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_edit\",\"type\":\"flags.0?true\"},{\"name\":\"self\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"flags.1?long\"},{\"name\":\"promoted_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.2?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":1844969806,\"predicate\":\"channelParticipantBanned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"left\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"kicked_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelParticipant\"},{\"id\":338142689,\"predicate\":\"channelParticipantsBanned\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":106343499,\"predicate\":\"channelParticipantsSearch\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-421545947,\"predicate\":\"channelAdminLogEventActionChangeTitle\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1427671598,\"predicate\":\"channelAdminLogEventActionChangeAbout\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1783299128,\"predicate\":\"channelAdminLogEventActionChangeUsername\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1129042607,\"predicate\":\"channelAdminLogEventActionChangePhoto\",\"params\":[{\"name\":\"prev_photo\",\"type\":\"Photo\"},{\"name\":\"new_photo\",\"type\":\"Photo\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":460916654,\"predicate\":\"channelAdminLogEventActionToggleInvites\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":648939889,\"predicate\":\"channelAdminLogEventActionToggleSignatures\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-370660328,\"predicate\":\"channelAdminLogEventActionUpdatePinned\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1889215493,\"predicate\":\"channelAdminLogEventActionEditMessage\",\"params\":[{\"name\":\"prev_message\",\"type\":\"Message\"},{\"name\":\"new_message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1121994683,\"predicate\":\"channelAdminLogEventActionDeleteMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":405815507,\"predicate\":\"channelAdminLogEventActionParticipantJoin\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-124291086,\"predicate\":\"channelAdminLogEventActionParticipantLeave\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-484690728,\"predicate\":\"channelAdminLogEventActionParticipantInvite\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-422036098,\"predicate\":\"channelAdminLogEventActionParticipantToggleBan\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-714643696,\"predicate\":\"channelAdminLogEventActionParticipantToggleAdmin\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":531458253,\"predicate\":\"channelAdminLogEvent\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"ChannelAdminLogEventAction\"}],\"type\":\"ChannelAdminLogEvent\"},{\"id\":-309659827,\"predicate\":\"channels.adminLogResults\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<ChannelAdminLogEvent>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-368018716,\"predicate\":\"channelAdminLogEventsFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join\",\"type\":\"flags.0?true\"},{\"name\":\"leave\",\"type\":\"flags.1?true\"},{\"name\":\"invite\",\"type\":\"flags.2?true\"},{\"name\":\"ban\",\"type\":\"flags.3?true\"},{\"name\":\"unban\",\"type\":\"flags.4?true\"},{\"name\":\"kick\",\"type\":\"flags.5?true\"},{\"name\":\"unkick\",\"type\":\"flags.6?true\"},{\"name\":\"promote\",\"type\":\"flags.7?true\"},{\"name\":\"demote\",\"type\":\"flags.8?true\"},{\"name\":\"info\",\"type\":\"flags.9?true\"},{\"name\":\"settings\",\"type\":\"flags.10?true\"},{\"name\":\"pinned\",\"type\":\"flags.11?true\"},{\"name\":\"edit\",\"type\":\"flags.12?true\"},{\"name\":\"delete\",\"type\":\"flags.13?true\"},{\"name\":\"group_call\",\"type\":\"flags.14?true\"},{\"name\":\"invites\",\"type\":\"flags.15?true\"},{\"name\":\"send\",\"type\":\"flags.16?true\"},{\"name\":\"forums\",\"type\":\"flags.17?true\"}],\"type\":\"ChannelAdminLogEventsFilter\"},{\"id\":511092620,\"predicate\":\"topPeerCategoryPhoneCalls\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-2143067670,\"predicate\":\"pageBlockAudio\",\"params\":[{\"name\":\"audio_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1558266229,\"predicate\":\"popularContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"importers\",\"type\":\"int\"}],\"type\":\"PopularContact\"},{\"id\":1200788123,\"predicate\":\"messageActionScreenshotTaken\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1634752813,\"predicate\":\"messages.favedStickersNotModified\",\"params\":[],\"type\":\"messages.FavedStickers\"},{\"id\":750063767,\"predicate\":\"messages.favedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-451831443,\"predicate\":\"updateFavedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":1153291573,\"predicate\":\"updateChannelReadMessagesContents\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-1040652646,\"predicate\":\"inputMessagesFilterMyMentions\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1887741886,\"predicate\":\"updateContactsReset\",\"params\":[],\"type\":\"Update\"},{\"id\":-1312568665,\"predicate\":\"channelAdminLogEventActionChangeStickerSet\",\"params\":[{\"name\":\"prev_stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"new_stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-85549226,\"predicate\":\"messageActionCustomAction\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":178373535,\"predicate\":\"inputPaymentCredentialsApplePay\",\"params\":[{\"name\":\"payment_data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-419271411,\"predicate\":\"inputMessagesFilterGeo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-530392189,\"predicate\":\"inputMessagesFilterContacts\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1304443240,\"predicate\":\"updateChannelAvailableMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"available_min_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1599903217,\"predicate\":\"channelAdminLogEventActionTogglePreHistoryHidden\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1759532989,\"predicate\":\"inputMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stopped\",\"type\":\"flags.0?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.2?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"}],\"type\":\"InputMedia\"},{\"id\":-1186937242,\"predicate\":\"messageMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.1?int\"}],\"type\":\"MessageMedia\"},{\"id\":1189204285,\"predicate\":\"recentMeUrlUnknown\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1188296222,\"predicate\":\"recentMeUrlUser\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1294306862,\"predicate\":\"recentMeUrlChat\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-347535331,\"predicate\":\"recentMeUrlChatInvite\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_invite\",\"type\":\"ChatInvite\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1140172836,\"predicate\":\"recentMeUrlStickerSet\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"set\",\"type\":\"StickerSetCovered\"}],\"type\":\"RecentMeUrl\"},{\"id\":235081943,\"predicate\":\"help.recentMeUrls\",\"params\":[{\"name\":\"urls\",\"type\":\"Vector<RecentMeUrl>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-266911767,\"predicate\":\"channels.channelParticipantsNotModified\",\"params\":[],\"type\":\"channels.ChannelParticipants\"},{\"id\":1951620897,\"predicate\":\"messages.messagesNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":482797855,\"predicate\":\"inputSingleMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"}],\"type\":\"InputSingleMedia\"},{\"id\":-1493633966,\"predicate\":\"webAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"browser\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"WebAuthorization\"},{\"id\":-313079300,\"predicate\":\"account.webAuthorizations\",\"params\":[{\"name\":\"authorizations\",\"type\":\"Vector<WebAuthorization>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.WebAuthorizations\"},{\"id\":-1502174430,\"predicate\":\"inputMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-1160215659,\"predicate\":\"inputMessageReplyTo\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-2037963464,\"predicate\":\"inputMessagePinned\",\"params\":[],\"type\":\"InputMessage\"},{\"id\":-1687559349,\"predicate\":\"messageEntityPhone\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1280209983,\"predicate\":\"messageEntityCashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1410748418,\"predicate\":\"messageActionBotAllowed\",\"params\":[{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-55902537,\"predicate\":\"inputDialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputDialogPeer\"},{\"id\":-445792507,\"predicate\":\"dialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"DialogPeer\"},{\"id\":223655517,\"predicate\":\"messages.foundStickerSetsNotModified\",\"params\":[],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1963942446,\"predicate\":\"messages.foundStickerSets\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-207944868,\"predicate\":\"fileHash\",\"params\":[{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"FileHash\"},{\"id\":-104284986,\"predicate\":\"webDocumentNoProxy\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":1968737087,\"predicate\":\"inputClientProxy\",\"params\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"}],\"type\":\"InputClientProxy\"},{\"id\":-483352705,\"predicate\":\"help.termsOfServiceUpdateEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":686618977,\"predicate\":\"help.termsOfServiceUpdate\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"terms_of_service\",\"type\":\"help.TermsOfService\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":859091184,\"predicate\":\"inputSecureFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"InputSecureFile\"},{\"id\":1399317950,\"predicate\":\"inputSecureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputSecureFile\"},{\"id\":-876089816,\"predicate\":\"inputSecureFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":1679398724,\"predicate\":\"secureFileEmpty\",\"params\":[],\"type\":\"SecureFile\"},{\"id\":2097791614,\"predicate\":\"secureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureFile\"},{\"id\":-1964327229,\"predicate\":\"secureData\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureData\"},{\"id\":2103482845,\"predicate\":\"securePlainPhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":569137759,\"predicate\":\"securePlainEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":-1658158621,\"predicate\":\"secureValueTypePersonalDetails\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":1034709504,\"predicate\":\"secureValueTypePassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":115615172,\"predicate\":\"secureValueTypeDriverLicense\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1596951477,\"predicate\":\"secureValueTypeIdentityCard\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1717268701,\"predicate\":\"secureValueTypeInternalPassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-874308058,\"predicate\":\"secureValueTypeAddress\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-63531698,\"predicate\":\"secureValueTypeUtilityBill\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1995211763,\"predicate\":\"secureValueTypeBankStatement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1954007928,\"predicate\":\"secureValueTypeRentalAgreement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1713143702,\"predicate\":\"secureValueTypePassportRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-368907213,\"predicate\":\"secureValueTypeTemporaryRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1289704741,\"predicate\":\"secureValueTypePhone\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1908627474,\"predicate\":\"secureValueTypeEmail\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":411017418,\"predicate\":\"secureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?SecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?SecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?SecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<SecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<SecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValue\"},{\"id\":-618540889,\"predicate\":\"inputSecureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?InputSecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?InputSecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?InputSecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<InputSecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<InputSecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"}],\"type\":\"InputSecureValue\"},{\"id\":-316748368,\"predicate\":\"secureValueHash\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValueHash\"},{\"id\":-391902247,\"predicate\":\"secureValueErrorData\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"field\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":12467706,\"predicate\":\"secureValueErrorFrontSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2037765467,\"predicate\":\"secureValueErrorReverseSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-449327402,\"predicate\":\"secureValueErrorSelfie\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":2054162547,\"predicate\":\"secureValueErrorFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":1717706985,\"predicate\":\"secureValueErrorFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":871426631,\"predicate\":\"secureCredentialsEncrypted\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureCredentialsEncrypted\"},{\"id\":-1389486888,\"predicate\":\"account.authorizationForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"required_types\",\"type\":\"Vector<SecureRequiredType>\"},{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"privacy_policy_url\",\"type\":\"flags.0?string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-2128640689,\"predicate\":\"account.sentEmailCode\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"account.SentEmailCode\"},{\"id\":455635795,\"predicate\":\"messageActionSecureValuesSentMe\",\"params\":[{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"MessageAction\"},{\"id\":-648257196,\"predicate\":\"messageActionSecureValuesSent\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"MessageAction\"},{\"id\":1722786150,\"predicate\":\"help.deepLinkInfoEmpty\",\"params\":[],\"type\":\"help.DeepLinkInfo\"},{\"id\":1783556146,\"predicate\":\"help.deepLinkInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"update_app\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":289586518,\"predicate\":\"savedPhoneContact\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"SavedContact\"},{\"id\":1304052993,\"predicate\":\"account.takeout\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"account.Takeout\"},{\"id\":700340377,\"predicate\":\"inputTakeoutFileLocation\",\"params\":[],\"type\":\"InputFileLocation\"},{\"id\":-513517117,\"predicate\":\"updateDialogUnreadMark\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-253500010,\"predicate\":\"messages.dialogsNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1625153079,\"predicate\":\"inputWebFileGeoPointLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}],\"type\":\"InputWebFileLocation\"},{\"id\":-1255369827,\"predicate\":\"contacts.topPeersDisabled\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":-1685456582,\"predicate\":\"inputReportReasonCopyright\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-732254058,\"predicate\":\"passwordKdfAlgoUnknown\",\"params\":[],\"type\":\"PasswordKdfAlgo\"},{\"id\":4883767,\"predicate\":\"securePasswordKdfAlgoUnknown\",\"params\":[],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-1141711456,\"predicate\":\"securePasswordKdfAlgoPBKDF2HMACSHA512iter100000\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-2042159726,\"predicate\":\"securePasswordKdfAlgoSHA512\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":354925740,\"predicate\":\"secureSecretSettings\",\"params\":[{\"name\":\"secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_secret\",\"type\":\"bytes\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureSecretSettings\"},{\"id\":982592842,\"predicate\":\"passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow\",\"params\":[{\"name\":\"salt1\",\"type\":\"bytes\"},{\"name\":\"salt2\",\"type\":\"bytes\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"}],\"type\":\"PasswordKdfAlgo\"},{\"id\":-1736378792,\"predicate\":\"inputCheckPasswordEmpty\",\"params\":[],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-763367294,\"predicate\":\"inputCheckPasswordSRP\",\"params\":[{\"name\":\"srp_id\",\"type\":\"long\"},{\"name\":\"A\",\"type\":\"bytes\"},{\"name\":\"M1\",\"type\":\"bytes\"}],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-2036501105,\"predicate\":\"secureValueError\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-1592506512,\"predicate\":\"secureValueErrorTranslationFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":878931416,\"predicate\":\"secureValueErrorTranslationFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2103600678,\"predicate\":\"secureRequiredType\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"native_names\",\"type\":\"flags.0?true\"},{\"name\":\"selfie_required\",\"type\":\"flags.1?true\"},{\"name\":\"translation_required\",\"type\":\"flags.2?true\"},{\"name\":\"type\",\"type\":\"SecureValueType\"}],\"type\":\"SecureRequiredType\"},{\"id\":41187252,\"predicate\":\"secureRequiredTypeOneOf\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureRequiredType>\"}],\"type\":\"SecureRequiredType\"},{\"id\":-1078332329,\"predicate\":\"help.passportConfigNotModified\",\"params\":[],\"type\":\"help.PassportConfig\"},{\"id\":-1600596305,\"predicate\":\"help.passportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"countries_langs\",\"type\":\"DataJSON\"}],\"type\":\"help.PassportConfig\"},{\"id\":488313413,\"predicate\":\"inputAppEvent\",\"params\":[{\"name\":\"time\",\"type\":\"double\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"peer\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"JSONValue\"}],\"type\":\"InputAppEvent\"},{\"id\":-1059185703,\"predicate\":\"jsonObjectValue\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"JSONValue\"}],\"type\":\"JSONObjectValue\"},{\"id\":1064139624,\"predicate\":\"jsonNull\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":-952869270,\"predicate\":\"jsonBool\",\"params\":[{\"name\":\"value\",\"type\":\"Bool\"}],\"type\":\"JSONValue\"},{\"id\":736157604,\"predicate\":\"jsonNumber\",\"params\":[{\"name\":\"value\",\"type\":\"double\"}],\"type\":\"JSONValue\"},{\"id\":-1222740358,\"predicate\":\"jsonString\",\"params\":[{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"JSONValue\"},{\"id\":-146520221,\"predicate\":\"jsonArray\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1715350371,\"predicate\":\"jsonObject\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONObjectValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1311015810,\"predicate\":\"inputNotifyBroadcasts\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-703403793,\"predicate\":\"notifyBroadcasts\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-311786236,\"predicate\":\"textSubscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-939827711,\"predicate\":\"textSuperscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":55281185,\"predicate\":\"textMarked\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":483104362,\"predicate\":\"textPhone\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":136105807,\"predicate\":\"textImage\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"RichText\"},{\"id\":504660880,\"predicate\":\"pageBlockKicker\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":878078826,\"predicate\":\"pageTableCell\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"header\",\"type\":\"flags.0?true\"},{\"name\":\"align_center\",\"type\":\"flags.3?true\"},{\"name\":\"align_right\",\"type\":\"flags.4?true\"},{\"name\":\"valign_middle\",\"type\":\"flags.5?true\"},{\"name\":\"valign_bottom\",\"type\":\"flags.6?true\"},{\"name\":\"text\",\"type\":\"flags.7?RichText\"},{\"name\":\"colspan\",\"type\":\"flags.1?int\"},{\"name\":\"rowspan\",\"type\":\"flags.2?int\"}],\"type\":\"PageTableCell\"},{\"id\":-524237339,\"predicate\":\"pageTableRow\",\"params\":[{\"name\":\"cells\",\"type\":\"Vector<PageTableCell>\"}],\"type\":\"PageTableRow\"},{\"id\":-1085412734,\"predicate\":\"pageBlockTable\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bordered\",\"type\":\"flags.0?true\"},{\"name\":\"striped\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"rows\",\"type\":\"Vector<PageTableRow>\"}],\"type\":\"PageBlock\"},{\"id\":1869903447,\"predicate\":\"pageCaption\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"credit\",\"type\":\"RichText\"}],\"type\":\"PageCaption\"},{\"id\":-1188055347,\"predicate\":\"pageListItemText\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListItem\"},{\"id\":635466748,\"predicate\":\"pageListItemBlocks\",\"params\":[{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListItem\"},{\"id\":1577484359,\"predicate\":\"pageListOrderedItemText\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1730311882,\"predicate\":\"pageListOrderedItemBlocks\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1702174239,\"predicate\":\"pageBlockOrderedList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListOrderedItem>\"}],\"type\":\"PageBlock\"},{\"id\":1987480557,\"predicate\":\"pageBlockDetails\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"open\",\"type\":\"flags.0?true\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"title\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1282352120,\"predicate\":\"pageRelatedArticle\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"photo_id\",\"type\":\"flags.2?long\"},{\"name\":\"author\",\"type\":\"flags.3?string\"},{\"name\":\"published_date\",\"type\":\"flags.4?int\"}],\"type\":\"PageRelatedArticle\"},{\"id\":370236054,\"predicate\":\"pageBlockRelatedArticles\",\"params\":[{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"articles\",\"type\":\"Vector<PageRelatedArticle>\"}],\"type\":\"PageBlock\"},{\"id\":-1538310410,\"predicate\":\"pageBlockMap\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-1738178803,\"predicate\":\"page\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"part\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.1?true\"},{\"name\":\"v2\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"},{\"name\":\"views\",\"type\":\"flags.3?int\"}],\"type\":\"Page\"},{\"id\":-610373422,\"predicate\":\"inputPrivacyKeyPhoneP2P\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":961092808,\"predicate\":\"privacyKeyPhoneP2P\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":894777186,\"predicate\":\"textAnchor\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":-1945767479,\"predicate\":\"help.supportName\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"help.SupportName\"},{\"id\":-206688531,\"predicate\":\"help.userInfoEmpty\",\"params\":[],\"type\":\"help.UserInfo\"},{\"id\":32192344,\"predicate\":\"help.userInfo\",\"params\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"help.UserInfo\"},{\"id\":-202219658,\"predicate\":\"messageActionContactSignUp\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1398708869,\"predicate\":\"updateMessagePoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"poll\",\"type\":\"flags.0?Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"Update\"},{\"id\":1823064809,\"predicate\":\"pollAnswer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"PollAnswer\"},{\"id\":-2032041631,\"predicate\":\"poll\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"closed\",\"type\":\"flags.0?true\"},{\"name\":\"public_voters\",\"type\":\"flags.1?true\"},{\"name\":\"multiple_choice\",\"type\":\"flags.2?true\"},{\"name\":\"quiz\",\"type\":\"flags.3?true\"},{\"name\":\"question\",\"type\":\"string\"},{\"name\":\"answers\",\"type\":\"Vector<PollAnswer>\"},{\"name\":\"close_period\",\"type\":\"flags.4?int\"},{\"name\":\"close_date\",\"type\":\"flags.5?int\"}],\"type\":\"Poll\"},{\"id\":997055186,\"predicate\":\"pollAnswerVoters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"correct\",\"type\":\"flags.1?true\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"voters\",\"type\":\"int\"}],\"type\":\"PollAnswerVoters\"},{\"id\":-591909213,\"predicate\":\"pollResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"results\",\"type\":\"flags.1?Vector<PollAnswerVoters>\"},{\"name\":\"total_voters\",\"type\":\"flags.2?int\"},{\"name\":\"recent_voters\",\"type\":\"flags.3?Vector<long>\"},{\"name\":\"solution\",\"type\":\"flags.4?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.4?Vector<MessageEntity>\"}],\"type\":\"PollResults\"},{\"id\":261416433,\"predicate\":\"inputMediaPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"correct_answers\",\"type\":\"flags.0?Vector<bytes>\"},{\"name\":\"solution\",\"type\":\"flags.1?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"InputMedia\"},{\"id\":1272375192,\"predicate\":\"messageMediaPoll\",\"params\":[{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"MessageMedia\"},{\"id\":-264117680,\"predicate\":\"chatOnlines\",\"params\":[{\"name\":\"onlines\",\"type\":\"int\"}],\"type\":\"ChatOnlines\"},{\"id\":1202287072,\"predicate\":\"statsURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"StatsURL\"},{\"id\":-525288402,\"predicate\":\"photoStrippedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":1605510357,\"predicate\":\"chatAdminRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"change_info\",\"type\":\"flags.0?true\"},{\"name\":\"post_messages\",\"type\":\"flags.1?true\"},{\"name\":\"edit_messages\",\"type\":\"flags.2?true\"},{\"name\":\"delete_messages\",\"type\":\"flags.3?true\"},{\"name\":\"ban_users\",\"type\":\"flags.4?true\"},{\"name\":\"invite_users\",\"type\":\"flags.5?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.7?true\"},{\"name\":\"add_admins\",\"type\":\"flags.9?true\"},{\"name\":\"anonymous\",\"type\":\"flags.10?true\"},{\"name\":\"manage_call\",\"type\":\"flags.11?true\"},{\"name\":\"other\",\"type\":\"flags.12?true\"}],\"type\":\"ChatAdminRights\"},{\"id\":-1626209256,\"predicate\":\"chatBannedRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"view_messages\",\"type\":\"flags.0?true\"},{\"name\":\"send_messages\",\"type\":\"flags.1?true\"},{\"name\":\"send_media\",\"type\":\"flags.2?true\"},{\"name\":\"send_stickers\",\"type\":\"flags.3?true\"},{\"name\":\"send_gifs\",\"type\":\"flags.4?true\"},{\"name\":\"send_games\",\"type\":\"flags.5?true\"},{\"name\":\"send_inline\",\"type\":\"flags.6?true\"},{\"name\":\"embed_links\",\"type\":\"flags.7?true\"},{\"name\":\"send_polls\",\"type\":\"flags.8?true\"},{\"name\":\"change_info\",\"type\":\"flags.10?true\"},{\"name\":\"invite_users\",\"type\":\"flags.15?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.17?true\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"ChatBannedRights\"},{\"id\":1421875280,\"predicate\":\"updateChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"default_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-433014407,\"predicate\":\"inputWallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":1913199744,\"predicate\":\"inputWallPaperSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputWallPaper\"},{\"id\":-1150621555,\"predicate\":\"channelParticipantsContacts\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":771095562,\"predicate\":\"channelAdminLogEventActionDefaultBannedRights\",\"params\":[{\"name\":\"prev_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"new_banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1895328189,\"predicate\":\"channelAdminLogEventActionStopPoll\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":471437699,\"predicate\":\"account.wallPapersNotModified\",\"params\":[],\"type\":\"account.WallPapers\"},{\"id\":-842824308,\"predicate\":\"account.wallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"wallpapers\",\"type\":\"Vector<WallPaper>\"}],\"type\":\"account.WallPapers\"},{\"id\":-1973130814,\"predicate\":\"codeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_flashcall\",\"type\":\"flags.0?true\"},{\"name\":\"current_number\",\"type\":\"flags.1?true\"},{\"name\":\"allow_app_hash\",\"type\":\"flags.4?true\"},{\"name\":\"allow_missed_call\",\"type\":\"flags.5?true\"},{\"name\":\"logout_tokens\",\"type\":\"flags.6?Vector<bytes>\"}],\"type\":\"CodeSettings\"},{\"id\":499236004,\"predicate\":\"wallPaperSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blur\",\"type\":\"flags.1?true\"},{\"name\":\"motion\",\"type\":\"flags.2?true\"},{\"name\":\"background_color\",\"type\":\"flags.0?int\"},{\"name\":\"second_background_color\",\"type\":\"flags.4?int\"},{\"name\":\"third_background_color\",\"type\":\"flags.5?int\"},{\"name\":\"fourth_background_color\",\"type\":\"flags.6?int\"},{\"name\":\"intensity\",\"type\":\"flags.3?int\"},{\"name\":\"rotation\",\"type\":\"flags.4?int\"}],\"type\":\"WallPaperSettings\"},{\"id\":-1896171181,\"predicate\":\"autoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"video_preload_large\",\"type\":\"flags.1?true\"},{\"name\":\"audio_preload_next\",\"type\":\"flags.2?true\"},{\"name\":\"phonecalls_less_data\",\"type\":\"flags.3?true\"},{\"name\":\"photo_size_max\",\"type\":\"int\"},{\"name\":\"video_size_max\",\"type\":\"long\"},{\"name\":\"file_size_max\",\"type\":\"long\"},{\"name\":\"video_upload_maxbitrate\",\"type\":\"int\"}],\"type\":\"AutoDownloadSettings\"},{\"id\":1674235686,\"predicate\":\"account.autoDownloadSettings\",\"params\":[{\"name\":\"low\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"medium\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"high\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"account.AutoDownloadSettings\"},{\"id\":-709641735,\"predicate\":\"emojiKeyword\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":594408994,\"predicate\":\"emojiKeywordDeleted\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":1556570557,\"predicate\":\"emojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"keywords\",\"type\":\"Vector<EmojiKeyword>\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":-1519029347,\"predicate\":\"emojiURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":-1275374751,\"predicate\":\"emojiLanguage\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiLanguage\"},{\"id\":-1529000952,\"predicate\":\"inputPrivacyKeyForwards\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1777096355,\"predicate\":\"privacyKeyForwards\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1461304012,\"predicate\":\"inputPrivacyKeyProfilePhoto\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1777000467,\"predicate\":\"privacyKeyProfilePhoto\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1075322878,\"predicate\":\"inputPhotoFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":-667654413,\"predicate\":\"inputPhotoLegacyFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":925204121,\"predicate\":\"inputPeerPhotoFileLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-1652231205,\"predicate\":\"inputStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb_version\",\"type\":\"int\"}],\"type\":\"InputFileLocation\"},{\"id\":-11252123,\"predicate\":\"folder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autofill_new_broadcasts\",\"type\":\"flags.0?true\"},{\"name\":\"autofill_public_groups\",\"type\":\"flags.1?true\"},{\"name\":\"autofill_new_correspondents\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.3?ChatPhoto\"}],\"type\":\"Folder\"},{\"id\":1908216652,\"predicate\":\"dialogFolder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"folder\",\"type\":\"Folder\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"unread_muted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_muted_messages_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_messages_count\",\"type\":\"int\"}],\"type\":\"Dialog\"},{\"id\":1684014375,\"predicate\":\"inputDialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputDialogPeer\"},{\"id\":1363483106,\"predicate\":\"dialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"DialogPeer\"},{\"id\":-70073706,\"predicate\":\"inputFolderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputFolderPeer\"},{\"id\":-373643672,\"predicate\":\"folderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"FolderPeer\"},{\"id\":422972864,\"predicate\":\"updateFolderPeers\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<FolderPeer>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":497305826,\"predicate\":\"inputUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":1536380829,\"predicate\":\"inputChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1468331492,\"predicate\":\"inputPeerUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1121318848,\"predicate\":\"inputPeerChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":55761658,\"predicate\":\"inputPrivacyKeyPhoneNumber\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-778378131,\"predicate\":\"privacyKeyPhoneNumber\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1472172887,\"predicate\":\"topPeerCategoryForwardUsers\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-68239120,\"predicate\":\"topPeerCategoryForwardChats\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":84703944,\"predicate\":\"channelAdminLogEventActionChangeLinkedChat\",\"params\":[{\"name\":\"prev_value\",\"type\":\"long\"},{\"name\":\"new_value\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-398136321,\"predicate\":\"messages.searchCounter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.SearchCounter\"},{\"id\":280464681,\"predicate\":\"keyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":-802258988,\"predicate\":\"inputKeyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.1?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":-1831650802,\"predicate\":\"urlAuthResultRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"User\"},{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1886646706,\"predicate\":\"urlAuthResultAccepted\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1445536993,\"predicate\":\"urlAuthResultDefault\",\"params\":[],\"type\":\"UrlAuthResult\"},{\"id\":-2079962673,\"predicate\":\"inputPrivacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-380694650,\"predicate\":\"inputPrivacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":1796427406,\"predicate\":\"privacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1103656293,\"predicate\":\"privacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-1672577397,\"predicate\":\"messageEntityUnderline\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1090087980,\"predicate\":\"messageEntityStrike\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":34469328,\"predicate\":\"messageEntityBlockquote\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1786671974,\"predicate\":\"updatePeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"}],\"type\":\"Update\"},{\"id\":-1078612597,\"predicate\":\"channelLocationEmpty\",\"params\":[],\"type\":\"ChannelLocation\"},{\"id\":547062491,\"predicate\":\"channelLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"GeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"ChannelLocation\"},{\"id\":-901375139,\"predicate\":\"peerLocated\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":-1263546448,\"predicate\":\"updatePeerLocated\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<PeerLocated>\"}],\"type\":\"Update\"},{\"id\":241923758,\"predicate\":\"channelAdminLogEventActionChangeLocation\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChannelLocation\"},{\"name\":\"new_value\",\"type\":\"ChannelLocation\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-606798099,\"predicate\":\"inputReportReasonGeoIrrelevant\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":1401984889,\"predicate\":\"channelAdminLogEventActionToggleSlowMode\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1148485274,\"predicate\":\"auth.authorizationSignUpRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"terms_of_service\",\"type\":\"flags.0?help.TermsOfService\"}],\"type\":\"auth.Authorization\"},{\"id\":-666824391,\"predicate\":\"payments.paymentVerificationNeeded\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.PaymentResult\"},{\"id\":42402760,\"predicate\":\"inputStickerSetAnimatedEmoji\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":967122427,\"predicate\":\"updateNewScheduledMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"Update\"},{\"id\":-1870238482,\"predicate\":\"updateDeleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-797791052,\"predicate\":\"restrictionReason\",\"params\":[{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RestrictionReason\"},{\"id\":1012306921,\"predicate\":\"inputTheme\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputTheme\"},{\"id\":-175567375,\"predicate\":\"inputThemeSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputTheme\"},{\"id\":-1609668650,\"predicate\":\"theme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"for_chat\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?Document\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<ThemeSettings>\"},{\"name\":\"emoticon\",\"type\":\"flags.6?string\"},{\"name\":\"installs_count\",\"type\":\"flags.4?int\"}],\"type\":\"Theme\"},{\"id\":-199313886,\"predicate\":\"account.themesNotModified\",\"params\":[],\"type\":\"account.Themes\"},{\"id\":-1707242387,\"predicate\":\"account.themes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"themes\",\"type\":\"Vector<Theme>\"}],\"type\":\"account.Themes\"},{\"id\":-2112423005,\"predicate\":\"updateTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"Theme\"}],\"type\":\"Update\"},{\"id\":-786326563,\"predicate\":\"inputPrivacyKeyAddedByPhone\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1124062251,\"predicate\":\"privacyKeyAddedByPhone\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-2027964103,\"predicate\":\"updateGeoLiveViewed\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1448076945,\"predicate\":\"updateLoginToken\",\"params\":[],\"type\":\"Update\"},{\"id\":1654593920,\"predicate\":\"auth.loginToken\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":110008598,\"predicate\":\"auth.loginTokenMigrateTo\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":957176926,\"predicate\":\"auth.loginTokenSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.LoginToken\"},{\"id\":1474462241,\"predicate\":\"account.contentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"sensitive_can_change\",\"type\":\"flags.1?true\"}],\"type\":\"account.ContentSettings\"},{\"id\":-1456996667,\"predicate\":\"messages.inactiveChats\",\"params\":[{\"name\":\"dates\",\"type\":\"Vector<int>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.InactiveChats\"},{\"id\":-1012849566,\"predicate\":\"baseThemeClassic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-69724536,\"predicate\":\"baseThemeDay\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1212997976,\"predicate\":\"baseThemeNight\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1834973166,\"predicate\":\"baseThemeTinted\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1527845466,\"predicate\":\"baseThemeArctic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1770371538,\"predicate\":\"inputWallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":-528465642,\"predicate\":\"wallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":-1881255857,\"predicate\":\"inputThemeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?InputWallPaper\"},{\"name\":\"wallpaper_settings\",\"type\":\"flags.1?WallPaperSettings\"}],\"type\":\"InputThemeSettings\"},{\"id\":-94849324,\"predicate\":\"themeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?WallPaper\"}],\"type\":\"ThemeSettings\"},{\"id\":1421174295,\"predicate\":\"webPageAttributeTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"documents\",\"type\":\"flags.0?Vector<Document>\"},{\"name\":\"settings\",\"type\":\"flags.1?ThemeSettings\"}],\"type\":\"WebPageAttribute\"},{\"id\":274961865,\"predicate\":\"updateMessagePollVote\",\"params\":[{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":886196148,\"predicate\":\"messageUserVote\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":1017491692,\"predicate\":\"messageUserVoteInputOption\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":-1973033641,\"predicate\":\"messageUserVoteMultiple\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":136574537,\"predicate\":\"messages.votesList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"votes\",\"type\":\"Vector<MessageUserVote>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.VotesList\"},{\"id\":-1144565411,\"predicate\":\"keyboardButtonRequestPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"quiz\",\"type\":\"flags.0?Bool\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1981704948,\"predicate\":\"messageEntityBankCard\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-177732982,\"predicate\":\"bankCardOpenUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"BankCardOpenUrl\"},{\"id\":1042605427,\"predicate\":\"payments.bankCardData\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"open_urls\",\"type\":\"Vector<BankCardOpenUrl>\"}],\"type\":\"payments.BankCardData\"},{\"id\":-118740917,\"predicate\":\"peerSelfLocated\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":1949890536,\"predicate\":\"dialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.1?true\"},{\"name\":\"groups\",\"type\":\"flags.2?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.3?true\"},{\"name\":\"bots\",\"type\":\"flags.4?true\"},{\"name\":\"exclude_muted\",\"type\":\"flags.11?true\"},{\"name\":\"exclude_read\",\"type\":\"flags.12?true\"},{\"name\":\"exclude_archived\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"exclude_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":2004110666,\"predicate\":\"dialogFilterSuggested\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"DialogFilterSuggested\"},{\"id\":654302845,\"predicate\":\"updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Update\"},{\"id\":-1512627963,\"predicate\":\"updateDialogFilterOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":889491791,\"predicate\":\"updateDialogFilters\",\"params\":[],\"type\":\"Update\"},{\"id\":-1237848657,\"predicate\":\"statsDateRangeDays\",\"params\":[{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"StatsDateRangeDays\"},{\"id\":-884757282,\"predicate\":\"statsAbsValueAndPrev\",\"params\":[{\"name\":\"current\",\"type\":\"double\"},{\"name\":\"previous\",\"type\":\"double\"}],\"type\":\"StatsAbsValueAndPrev\"},{\"id\":-875679776,\"predicate\":\"statsPercentValue\",\"params\":[{\"name\":\"part\",\"type\":\"double\"},{\"name\":\"total\",\"type\":\"double\"}],\"type\":\"StatsPercentValue\"},{\"id\":1244130093,\"predicate\":\"statsGraphAsync\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1092839390,\"predicate\":\"statsGraphError\",\"params\":[{\"name\":\"error\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1901828938,\"predicate\":\"statsGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"json\",\"type\":\"DataJSON\"},{\"name\":\"zoom_token\",\"type\":\"flags.0?string\"}],\"type\":\"StatsGraph\"},{\"id\":-1387279939,\"predicate\":\"messageInteractionCounters\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"MessageInteractionCounters\"},{\"id\":-1107852396,\"predicate\":\"stats.broadcastStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"followers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"views_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"shares_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"enabled_notifications\",\"type\":\"StatsPercentValue\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"followers_graph\",\"type\":\"StatsGraph\"},{\"name\":\"mute_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"iv_interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"views_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_followers_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"recent_message_interactions\",\"type\":\"Vector<MessageInteractionCounters>\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":-428884101,\"predicate\":\"inputMediaDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":1065280907,\"predicate\":\"messageMediaDice\",\"params\":[{\"name\":\"value\",\"type\":\"int\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-427863538,\"predicate\":\"inputStickerSetDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":-1728664459,\"predicate\":\"help.promoDataEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.PromoData\"},{\"id\":-1942390465,\"predicate\":\"help.promoData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"proxy\",\"type\":\"flags.0?true\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"psa_type\",\"type\":\"flags.1?string\"},{\"name\":\"psa_message\",\"type\":\"flags.2?string\"}],\"type\":\"help.PromoData\"},{\"id\":-567037804,\"predicate\":\"videoSize\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"video_start_ts\",\"type\":\"flags.0?double\"}],\"type\":\"VideoSize\"},{\"id\":643940105,\"predicate\":\"updatePhoneCallSignalingData\",\"params\":[{\"name\":\"phone_call_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Update\"},{\"id\":1634294960,\"predicate\":\"chatInvitePeek\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ChatInvite\"},{\"id\":-1660637285,\"predicate\":\"statsGroupTopPoster\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"int\"},{\"name\":\"avg_chars\",\"type\":\"int\"}],\"type\":\"StatsGroupTopPoster\"},{\"id\":-682079097,\"predicate\":\"statsGroupTopAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"deleted\",\"type\":\"int\"},{\"name\":\"kicked\",\"type\":\"int\"},{\"name\":\"banned\",\"type\":\"int\"}],\"type\":\"StatsGroupTopAdmin\"},{\"id\":1398765469,\"predicate\":\"statsGroupTopInviter\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"invitations\",\"type\":\"int\"}],\"type\":\"StatsGroupTopInviter\"},{\"id\":-276825834,\"predicate\":\"stats.megagroupStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"members\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"messages\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"viewers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"posters\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"members_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_members_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"messages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"actions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"weekdays_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_posters\",\"type\":\"Vector<StatsGroupTopPoster>\"},{\"name\":\"top_admins\",\"type\":\"Vector<StatsGroupTopAdmin>\"},{\"name\":\"top_inviters\",\"type\":\"Vector<StatsGroupTopInviter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-1096616924,\"predicate\":\"globalPrivacySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archive_and_mute_new_noncontact_peers\",\"type\":\"flags.0?Bool\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":1667228533,\"predicate\":\"phoneConnectionWebrtc\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"turn\",\"type\":\"flags.0?true\"},{\"name\":\"stun\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"}],\"type\":\"PhoneConnection\"},{\"id\":1107543535,\"predicate\":\"help.countryCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"country_code\",\"type\":\"string\"},{\"name\":\"prefixes\",\"type\":\"flags.0?Vector<string>\"},{\"name\":\"patterns\",\"type\":\"flags.1?Vector<string>\"}],\"type\":\"help.CountryCode\"},{\"id\":-1014526429,\"predicate\":\"help.country\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hidden\",\"type\":\"flags.0?true\"},{\"name\":\"iso2\",\"type\":\"string\"},{\"name\":\"default_name\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.1?string\"},{\"name\":\"country_codes\",\"type\":\"Vector<help.CountryCode>\"}],\"type\":\"help.Country\"},{\"id\":-1815339214,\"predicate\":\"help.countriesListNotModified\",\"params\":[],\"type\":\"help.CountriesList\"},{\"id\":-2016381538,\"predicate\":\"help.countriesList\",\"params\":[{\"name\":\"countries\",\"type\":\"Vector<help.Country>\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":1163625789,\"predicate\":\"messageViews\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"views\",\"type\":\"flags.0?int\"},{\"name\":\"forwards\",\"type\":\"flags.1?int\"},{\"name\":\"replies\",\"type\":\"flags.2?MessageReplies\"}],\"type\":\"MessageViews\"},{\"id\":-761649164,\"predicate\":\"updateChannelMessageForwards\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-96535659,\"predicate\":\"photoSizeProgressive\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<int>\"}],\"type\":\"PhotoSize\"},{\"id\":-1228606141,\"predicate\":\"messages.messageViews\",\"params\":[{\"name\":\"views\",\"type\":\"Vector<MessageViews>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.MessageViews\"},{\"id\":-693004986,\"predicate\":\"updateReadChannelDiscussionInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"},{\"name\":\"broadcast_id\",\"type\":\"flags.0?long\"},{\"name\":\"broadcast_post\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1767677564,\"predicate\":\"updateReadChannelDiscussionOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1506535550,\"predicate\":\"messages.discussionMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"max_id\",\"type\":\"flags.0?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"flags.1?int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"flags.2?int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-1495959709,\"predicate\":\"messageReplyHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_to_scheduled\",\"type\":\"flags.2?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"reply_to_peer_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"reply_to_top_id\",\"type\":\"flags.1?int\"}],\"type\":\"MessageReplyHeader\"},{\"id\":-2083123262,\"predicate\":\"messageReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"comments\",\"type\":\"flags.0?true\"},{\"name\":\"replies\",\"type\":\"int\"},{\"name\":\"replies_pts\",\"type\":\"int\"},{\"name\":\"recent_repliers\",\"type\":\"flags.1?Vector<Peer>\"},{\"name\":\"channel_id\",\"type\":\"flags.0?long\"},{\"name\":\"max_id\",\"type\":\"flags.2?int\"},{\"name\":\"read_max_id\",\"type\":\"flags.3?int\"}],\"type\":\"MessageReplies\"},{\"id\":610945826,\"predicate\":\"updatePeerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"blocked\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":-386039788,\"predicate\":\"peerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PeerBlocked\"},{\"id\":-1937192669,\"predicate\":\"updateChannelUserTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-1392895362,\"predicate\":\"inputMessageCallbackQuery\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"InputMessage\"},{\"id\":453242886,\"predicate\":\"channelParticipantLeft\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"ChannelParticipant\"},{\"id\":-531931925,\"predicate\":\"channelParticipantsMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-309990731,\"predicate\":\"updatePinnedMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1538885128,\"predicate\":\"updatePinnedChannelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":464520273,\"predicate\":\"inputMessagesFilterPinned\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1986399595,\"predicate\":\"stats.messageStats\",\"params\":[{\"name\":\"views_graph\",\"type\":\"StatsGraph\"}],\"type\":\"stats.MessageStats\"},{\"id\":-1730095465,\"predicate\":\"messageActionGeoProximityReached\",\"params\":[{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"to_id\",\"type\":\"Peer\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-668906175,\"predicate\":\"photoPathSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":-651419003,\"predicate\":\"speakingInGroupCallAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":2004925620,\"predicate\":\"groupCallDiscarded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"duration\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-711498484,\"predicate\":\"groupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join_muted\",\"type\":\"flags.1?true\"},{\"name\":\"can_change_join_muted\",\"type\":\"flags.2?true\"},{\"name\":\"join_date_asc\",\"type\":\"flags.6?true\"},{\"name\":\"schedule_start_subscribed\",\"type\":\"flags.8?true\"},{\"name\":\"can_start_video\",\"type\":\"flags.9?true\"},{\"name\":\"record_video_active\",\"type\":\"flags.11?true\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.12?true\"},{\"name\":\"listeners_hidden\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.3?string\"},{\"name\":\"stream_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"record_start_date\",\"type\":\"flags.5?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.7?int\"},{\"name\":\"unmuted_video_count\",\"type\":\"flags.10?int\"},{\"name\":\"unmuted_video_limit\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-659913713,\"predicate\":\"inputGroupCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGroupCall\"},{\"id\":2047704898,\"predicate\":\"messageActionGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"duration\",\"type\":\"flags.0?int\"}],\"type\":\"MessageAction\"},{\"id\":1345295095,\"predicate\":\"messageActionInviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-341428482,\"predicate\":\"groupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.1?true\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.2?true\"},{\"name\":\"just_joined\",\"type\":\"flags.4?true\"},{\"name\":\"versioned\",\"type\":\"flags.5?true\"},{\"name\":\"min\",\"type\":\"flags.8?true\"},{\"name\":\"muted_by_you\",\"type\":\"flags.9?true\"},{\"name\":\"volume_by_admin\",\"type\":\"flags.10?true\"},{\"name\":\"self\",\"type\":\"flags.12?true\"},{\"name\":\"video_joined\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"active_date\",\"type\":\"flags.3?int\"},{\"name\":\"source\",\"type\":\"int\"},{\"name\":\"volume\",\"type\":\"flags.7?int\"},{\"name\":\"about\",\"type\":\"flags.11?string\"},{\"name\":\"raise_hand_rating\",\"type\":\"flags.13?long\"},{\"name\":\"video\",\"type\":\"flags.6?GroupCallParticipantVideo\"},{\"name\":\"presentation\",\"type\":\"flags.14?GroupCallParticipantVideo\"}],\"type\":\"GroupCallParticipant\"},{\"id\":-124097970,\"predicate\":\"updateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-219423922,\"predicate\":\"updateGroupCallParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":347227392,\"predicate\":\"updateGroupCall\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"call\",\"type\":\"GroupCall\"}],\"type\":\"Update\"},{\"id\":-1636664659,\"predicate\":\"phone.groupCall\",\"params\":[{\"name\":\"call\",\"type\":\"GroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"participants_next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.GroupCall\"},{\"id\":-193506890,\"predicate\":\"phone.groupParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":813821341,\"predicate\":\"inlineQueryPeerTypeSameBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-2093215828,\"predicate\":\"inlineQueryPeerTypePM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-681130742,\"predicate\":\"inlineQueryPeerTypeChat\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1589952067,\"predicate\":\"inlineQueryPeerTypeMegagroup\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1664413338,\"predicate\":\"inlineQueryPeerTypeBroadcast\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":589338437,\"predicate\":\"channelAdminLogEventActionStartGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-610299584,\"predicate\":\"channelAdminLogEventActionDiscardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-115071790,\"predicate\":\"channelAdminLogEventActionParticipantMute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-431740480,\"predicate\":\"channelAdminLogEventActionParticipantUnmute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1456906823,\"predicate\":\"channelAdminLogEventActionToggleGroupCallSetting\",\"params\":[{\"name\":\"join_muted\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1966921727,\"predicate\":\"inputPaymentCredentialsGooglePay\",\"params\":[{\"name\":\"payment_token\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":375566091,\"predicate\":\"messages.historyImport\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"messages.HistoryImport\"},{\"id\":-606432698,\"predicate\":\"sendMessageHistoryImportAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":1578088377,\"predicate\":\"messages.historyImportParsed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pm\",\"type\":\"flags.0?true\"},{\"name\":\"group\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"flags.2?string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":-170010905,\"predicate\":\"inputReportReasonFake\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-275956116,\"predicate\":\"messages.affectedFoundMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":-1441072131,\"predicate\":\"messageActionSetMessagesTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-1147422299,\"predicate\":\"updatePeerHistoryTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":-796432838,\"predicate\":\"updateChatParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChatParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChatParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1738720581,\"predicate\":\"updateChannelParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChannelParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-997782967,\"predicate\":\"updateBotStopped\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"stopped\",\"type\":\"Bool\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1940201511,\"predicate\":\"chatInviteImporter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"about\",\"type\":\"flags.2?string\"},{\"name\":\"approved_by\",\"type\":\"flags.1?long\"}],\"type\":\"ChatInviteImporter\"},{\"id\":-1111085620,\"predicate\":\"messages.exportedChatInvites\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"invites\",\"type\":\"Vector<ExportedChatInvite>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":410107472,\"predicate\":\"messages.exportedChatInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":572915951,\"predicate\":\"messages.exportedChatInviteReplaced\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-2118733814,\"predicate\":\"messages.chatInviteImporters\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"importers\",\"type\":\"Vector<ChatInviteImporter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-219353309,\"predicate\":\"chatAdminWithInvites\",\"params\":[{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"invites_count\",\"type\":\"int\"},{\"name\":\"revoked_invites_count\",\"type\":\"int\"}],\"type\":\"ChatAdminWithInvites\"},{\"id\":-1231326505,\"predicate\":\"messages.chatAdminsWithInvites\",\"params\":[{\"name\":\"admins\",\"type\":\"Vector<ChatAdminWithInvites>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":1557846647,\"predicate\":\"channelAdminLogEventActionParticipantJoinByInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1515256996,\"predicate\":\"channelAdminLogEventActionExportedInviteDelete\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1091179342,\"predicate\":\"channelAdminLogEventActionExportedInviteRevoke\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-384910503,\"predicate\":\"channelAdminLogEventActionExportedInviteEdit\",\"params\":[{\"name\":\"prev_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1048537159,\"predicate\":\"channelAdminLogEventActionParticipantVolume\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1855199800,\"predicate\":\"channelAdminLogEventActionChangeHistoryTTL\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1571952873,\"predicate\":\"messages.checkedHistoryImportPeer\",\"params\":[{\"name\":\"confirm_text\",\"type\":\"string\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":93890858,\"predicate\":\"inputGroupCallStream\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"time_ms\",\"type\":\"long\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"video_channel\",\"type\":\"flags.0?int\"},{\"name\":\"video_quality\",\"type\":\"flags.0?int\"}],\"type\":\"InputFileLocation\"},{\"id\":-1343921601,\"predicate\":\"phone.joinAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":541839704,\"predicate\":\"phone.exportedGroupCallInvite\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":-672693723,\"predicate\":\"inputBotInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":894081801,\"predicate\":\"botInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1281329567,\"predicate\":\"messageActionGroupCallScheduled\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"schedule_date\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-592373577,\"predicate\":\"groupCallParticipantVideoSourceGroup\",\"params\":[{\"name\":\"semantics\",\"type\":\"string\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"GroupCallParticipantVideoSourceGroup\"},{\"id\":1735736008,\"predicate\":\"groupCallParticipantVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"paused\",\"type\":\"flags.0?true\"},{\"name\":\"endpoint\",\"type\":\"string\"},{\"name\":\"source_groups\",\"type\":\"Vector<GroupCallParticipantVideoSourceGroup>\"},{\"name\":\"audio_source\",\"type\":\"flags.1?int\"}],\"type\":\"GroupCallParticipantVideo\"},{\"id\":192428418,\"predicate\":\"updateGroupCallConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"presentation\",\"type\":\"flags.0?true\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-2046910401,\"predicate\":\"stickers.suggestedShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":795652779,\"predicate\":\"botCommandScopeDefault\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1011811544,\"predicate\":\"botCommandScopeUsers\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1877059713,\"predicate\":\"botCommandScopeChats\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-1180016534,\"predicate\":\"botCommandScopeChatAdmins\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-610432643,\"predicate\":\"botCommandScopePeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":1071145937,\"predicate\":\"botCommandScopePeerAdmins\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":169026035,\"predicate\":\"botCommandScopePeerUser\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotCommandScope\"},{\"id\":-478701471,\"predicate\":\"account.resetPasswordFailedWait\",\"params\":[{\"name\":\"retry_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-370148227,\"predicate\":\"account.resetPasswordRequestedWait\",\"params\":[{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-383330754,\"predicate\":\"account.resetPasswordOk\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1299263278,\"predicate\":\"updateBotCommands\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Update\"},{\"id\":-1434950843,\"predicate\":\"messageActionSetChatTheme\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1336228175,\"predicate\":\"sendMessageChooseStickerAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":981691896,\"predicate\":\"sponsoredMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recommended\",\"type\":\"flags.5?true\"},{\"name\":\"random_id\",\"type\":\"bytes\"},{\"name\":\"from_id\",\"type\":\"flags.3?Peer\"},{\"name\":\"chat_invite\",\"type\":\"flags.4?ChatInvite\"},{\"name\":\"chat_invite_hash\",\"type\":\"flags.4?string\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"start_param\",\"type\":\"flags.0?string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"SponsoredMessage\"},{\"id\":1705297877,\"predicate\":\"messages.sponsoredMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<SponsoredMessage>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":215889721,\"predicate\":\"inputStickerSetAnimatedEmojiAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":630664139,\"predicate\":\"sendMessageEmojiInteraction\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"interaction\",\"type\":\"DataJSON\"}],\"type\":\"SendMessageAction\"},{\"id\":-1234857938,\"predicate\":\"sendMessageEmojiInteractionSeen\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"SendMessageAction\"},{\"id\":-1227287081,\"predicate\":\"inputBotInlineMessageID64\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"owner_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":-911191137,\"predicate\":\"searchResultsCalendarPeriod\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"max_msg_id\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"SearchResultsCalendarPeriod\"},{\"id\":343859772,\"predicate\":\"messages.searchResultsCalendar\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.1?int\"},{\"name\":\"periods\",\"type\":\"Vector<SearchResultsCalendarPeriod>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":2137295719,\"predicate\":\"searchResultPosition\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"SearchResultsPosition\"},{\"id\":1404185519,\"predicate\":\"messages.searchResultsPositions\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"positions\",\"type\":\"Vector<SearchResultsPosition>\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":-339958837,\"predicate\":\"messageActionChatJoinedByRequest\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1885586395,\"predicate\":\"updatePendingJoinRequests\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"requests_pending\",\"type\":\"int\"},{\"name\":\"recent_requesters\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":299870598,\"predicate\":\"updateBotChatInviteRequester\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1347021750,\"predicate\":\"channelAdminLogEventActionParticipantJoinByRequest\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"approved_by\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-376962181,\"predicate\":\"inputKeyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":814112961,\"predicate\":\"keyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"KeyboardButton\"},{\"id\":-191450938,\"predicate\":\"channels.sendAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<SendAsPeer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-886388890,\"predicate\":\"channelAdminLogEventActionToggleNoForwards\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-738646805,\"predicate\":\"messages.stickerSetNotModified\",\"params\":[],\"type\":\"messages.StickerSet\"},{\"id\":997004590,\"predicate\":\"users.userFull\",\"params\":[{\"name\":\"full_user\",\"type\":\"UserFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"users.UserFull\"},{\"id\":1753266509,\"predicate\":\"messages.peerSettings\",\"params\":[{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.PeerSettings\"},{\"id\":663693416,\"predicate\":\"channelAdminLogEventActionSendMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-702884114,\"predicate\":\"auth.codeTypeMissedCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-2113903484,\"predicate\":\"auth.sentCodeTypeMissedCall\",\"params\":[{\"name\":\"prefix\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1012759713,\"predicate\":\"auth.loggedOut\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"future_auth_token\",\"type\":\"flags.0?bytes\"}],\"type\":\"auth.LoggedOut\"},{\"id\":357013699,\"predicate\":\"updateMessageReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"MessageReactions\"}],\"type\":\"Update\"},{\"id\":-1546531968,\"predicate\":\"reactionCount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen_order\",\"type\":\"flags.0?int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"ReactionCount\"},{\"id\":1328256121,\"predicate\":\"messageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"can_see_list\",\"type\":\"flags.2?true\"},{\"name\":\"results\",\"type\":\"Vector<ReactionCount>\"},{\"name\":\"recent_reactions\",\"type\":\"flags.1?Vector<MessagePeerReaction>\"}],\"type\":\"MessageReactions\"},{\"id\":834488621,\"predicate\":\"messages.messageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<MessagePeerReaction>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-1065882623,\"predicate\":\"availableReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"premium\",\"type\":\"flags.2?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"static_icon\",\"type\":\"Document\"},{\"name\":\"appear_animation\",\"type\":\"Document\"},{\"name\":\"select_animation\",\"type\":\"Document\"},{\"name\":\"activate_animation\",\"type\":\"Document\"},{\"name\":\"effect_animation\",\"type\":\"Document\"},{\"name\":\"around_animation\",\"type\":\"flags.1?Document\"},{\"name\":\"center_icon\",\"type\":\"flags.1?Document\"}],\"type\":\"AvailableReaction\"},{\"id\":-1626924713,\"predicate\":\"messages.availableReactionsNotModified\",\"params\":[],\"type\":\"messages.AvailableReactions\"},{\"id\":1989032621,\"predicate\":\"messages.availableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<AvailableReaction>\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":852137487,\"predicate\":\"messageEntitySpoiler\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1102180616,\"predicate\":\"channelAdminLogEventActionChangeAvailableReactions\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChatReactions\"},{\"name\":\"new_value\",\"type\":\"ChatReactions\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1741309751,\"predicate\":\"messages.translateNoResult\",\"params\":[],\"type\":\"messages.TranslatedText\"},{\"id\":-1575684144,\"predicate\":\"messages.translateResultText\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"messages.TranslatedText\"},{\"id\":-1319698788,\"predicate\":\"messagePeerReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"unread\",\"type\":\"flags.1?true\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"MessagePeerReaction\"},{\"id\":-2132064081,\"predicate\":\"groupCallStreamChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"last_timestamp_ms\",\"type\":\"long\"}],\"type\":\"GroupCallStreamChannel\"},{\"id\":-790330702,\"predicate\":\"phone.groupCallStreamChannels\",\"params\":[{\"name\":\"channels\",\"type\":\"Vector<GroupCallStreamChannel>\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":177124030,\"predicate\":\"inputReportReasonIllegalDrugs\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1631091139,\"predicate\":\"inputReportReasonPersonalDetails\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":767505458,\"predicate\":\"phone.groupCallStreamRtmpUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":1165423600,\"predicate\":\"attachMenuBotIconColor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"color\",\"type\":\"int\"}],\"type\":\"AttachMenuBotIconColor\"},{\"id\":-1297663893,\"predicate\":\"attachMenuBotIcon\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"icon\",\"type\":\"Document\"},{\"name\":\"colors\",\"type\":\"flags.0?Vector<AttachMenuBotIconColor>\"}],\"type\":\"AttachMenuBotIcon\"},{\"id\":-928371502,\"predicate\":\"attachMenuBot\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"has_settings\",\"type\":\"flags.1?true\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"peer_types\",\"type\":\"Vector<AttachMenuPeerType>\"},{\"name\":\"icons\",\"type\":\"Vector<AttachMenuBotIcon>\"}],\"type\":\"AttachMenuBot\"},{\"id\":-237467044,\"predicate\":\"attachMenuBotsNotModified\",\"params\":[],\"type\":\"AttachMenuBots\"},{\"id\":1011024320,\"predicate\":\"attachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bots\",\"type\":\"Vector<AttachMenuBot>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBots\"},{\"id\":-1816172929,\"predicate\":\"attachMenuBotsBot\",\"params\":[{\"name\":\"bot\",\"type\":\"AttachMenuBot\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":397910539,\"predicate\":\"updateAttachMenuBots\",\"params\":[],\"type\":\"Update\"},{\"id\":202659196,\"predicate\":\"webViewResultUrl\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"WebViewResult\"},{\"id\":-2010155333,\"predicate\":\"simpleWebViewResultUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":211046684,\"predicate\":\"webViewMessageSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"msg_id\",\"type\":\"flags.0?InputBotInlineMessageID\"}],\"type\":\"WebViewMessageSent\"},{\"id\":361936797,\"predicate\":\"updateWebViewResultSent\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":326529584,\"predicate\":\"keyboardButtonWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1598009252,\"predicate\":\"keyboardButtonSimpleWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1205698681,\"predicate\":\"messageActionWebViewDataSentMe\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1262252875,\"predicate\":\"messageActionWebViewDataSent\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":347625491,\"predicate\":\"updateBotMenuButton\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Update\"},{\"id\":1966318984,\"predicate\":\"botMenuButtonDefault\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":1113113093,\"predicate\":\"botMenuButtonCommands\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":-944407322,\"predicate\":\"botMenuButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"BotMenuButton\"},{\"id\":-67704655,\"predicate\":\"account.savedRingtonesNotModified\",\"params\":[],\"type\":\"account.SavedRingtones\"},{\"id\":-1041683259,\"predicate\":\"account.savedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"ringtones\",\"type\":\"Vector<Document>\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1960361625,\"predicate\":\"updateSavedRingtones\",\"params\":[],\"type\":\"Update\"},{\"id\":-1746354498,\"predicate\":\"notificationSoundDefault\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":1863070943,\"predicate\":\"notificationSoundNone\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":-2096391452,\"predicate\":\"notificationSoundLocal\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"NotificationSound\"},{\"id\":-9666487,\"predicate\":\"notificationSoundRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"NotificationSound\"},{\"id\":-1222230163,\"predicate\":\"account.savedRingtone\",\"params\":[],\"type\":\"account.SavedRingtone\"},{\"id\":523271863,\"predicate\":\"account.savedRingtoneConverted\",\"params\":[{\"name\":\"document\",\"type\":\"Document\"}],\"type\":\"account.SavedRingtone\"},{\"id\":2104224014,\"predicate\":\"attachMenuPeerTypeSameBotPM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-1020528102,\"predicate\":\"attachMenuPeerTypeBotPM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-247016673,\"predicate\":\"attachMenuPeerTypePM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":84480319,\"predicate\":\"attachMenuPeerTypeChat\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":2080104188,\"predicate\":\"attachMenuPeerTypeBroadcast\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-317687113,\"predicate\":\"chatInvitePublicJoinRequests\",\"params\":[],\"type\":\"ExportedChatInvite\"},{\"id\":-977967015,\"predicate\":\"inputInvoiceMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"InputInvoice\"},{\"id\":-1020867857,\"predicate\":\"inputInvoiceSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputInvoice\"},{\"id\":-1362048039,\"predicate\":\"payments.exportedInvoice\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.ExportedInvoice\"},{\"id\":8703322,\"predicate\":\"updateTranscribedAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pending\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-1821037486,\"predicate\":\"messages.transcribedAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pending\",\"type\":\"flags.0?true\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"messages.TranscribedAudio\"},{\"id\":909284270,\"predicate\":\"dialogFilterDefault\",\"params\":[],\"type\":\"DialogFilter\"},{\"id\":1395946908,\"predicate\":\"help.premiumPromo\",\"params\":[{\"name\":\"status_text\",\"type\":\"string\"},{\"name\":\"status_entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"video_sections\",\"type\":\"Vector<string>\"},{\"name\":\"videos\",\"type\":\"Vector<Document>\"},{\"name\":\"period_options\",\"type\":\"Vector<PremiumSubscriptionOption>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.PremiumPromo\"},{\"id\":-925956616,\"predicate\":\"messageEntityCustomEmoji\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":-48981863,\"predicate\":\"documentAttributeCustomEmoji\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"free\",\"type\":\"flags.0?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"DocumentAttribute\"},{\"id\":1087454222,\"predicate\":\"stickerSetFullCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"keywords\",\"type\":\"Vector<StickerKeyword>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1502273946,\"predicate\":\"inputStorePaymentPremiumSubscription\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"restore\",\"type\":\"flags.0?true\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":1634697192,\"predicate\":\"inputStorePaymentGiftPremium\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":-1415514682,\"predicate\":\"messageActionGiftPremium\",\"params\":[{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"months\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":1958953753,\"predicate\":\"premiumGiftOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"bot_url\",\"type\":\"string\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"}],\"type\":\"PremiumGiftOption\"},{\"id\":-930399486,\"predicate\":\"inputStickerSetPremiumGifts\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-78886548,\"predicate\":\"updateReadFeaturedEmojiStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-1360618136,\"predicate\":\"inputPrivacyKeyVoiceMessages\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":110621716,\"predicate\":\"privacyKeyVoiceMessages\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1996951013,\"predicate\":\"paymentFormMethod\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentFormMethod\"},{\"id\":-193992412,\"predicate\":\"inputWebFileAudioAlbumThumbLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"small\",\"type\":\"flags.2?true\"},{\"name\":\"document\",\"type\":\"flags.0?InputDocument\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"}],\"type\":\"InputWebFileLocation\"},{\"id\":769727150,\"predicate\":\"emojiStatusEmpty\",\"params\":[],\"type\":\"EmojiStatus\"},{\"id\":-1835310691,\"predicate\":\"emojiStatus\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"EmojiStatus\"},{\"id\":-97474361,\"predicate\":\"emojiStatusUntil\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"until\",\"type\":\"int\"}],\"type\":\"EmojiStatus\"},{\"id\":674706841,\"predicate\":\"updateUserEmojiStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Update\"},{\"id\":821314523,\"predicate\":\"updateRecentEmojiStatuses\",\"params\":[],\"type\":\"Update\"},{\"id\":-796072379,\"predicate\":\"account.emojiStatusesNotModified\",\"params\":[],\"type\":\"account.EmojiStatuses\"},{\"id\":-1866176559,\"predicate\":\"account.emojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"statuses\",\"type\":\"Vector<EmojiStatus>\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":2046153753,\"predicate\":\"reactionEmpty\",\"params\":[],\"type\":\"Reaction\"},{\"id\":455247544,\"predicate\":\"reactionEmoji\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Reaction\"},{\"id\":-1992950669,\"predicate\":\"reactionCustomEmoji\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"Reaction\"},{\"id\":-352570692,\"predicate\":\"chatReactionsNone\",\"params\":[],\"type\":\"ChatReactions\"},{\"id\":1385335754,\"predicate\":\"chatReactionsAll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_custom\",\"type\":\"flags.0?true\"}],\"type\":\"ChatReactions\"},{\"id\":1713193015,\"predicate\":\"chatReactionsSome\",\"params\":[{\"name\":\"reactions\",\"type\":\"Vector<Reaction>\"}],\"type\":\"ChatReactions\"},{\"id\":-1334846497,\"predicate\":\"messages.reactionsNotModified\",\"params\":[],\"type\":\"messages.Reactions\"},{\"id\":-352454890,\"predicate\":\"messages.reactions\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"reactions\",\"type\":\"Vector<Reaction>\"}],\"type\":\"messages.Reactions\"},{\"id\":1870160884,\"predicate\":\"updateRecentReactions\",\"params\":[],\"type\":\"Update\"},{\"id\":-2030252155,\"predicate\":\"updateMoveStickerSetToTop\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"stickerset\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1511364673,\"predicate\":\"auth.sentCodeTypeEmailCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"apple_signin_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"google_signin_allowed\",\"type\":\"flags.1?true\"},{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"next_phone_login_date\",\"type\":\"flags.2?int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1521934870,\"predicate\":\"auth.sentCodeTypeSetUpEmailRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"apple_signin_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"google_signin_allowed\",\"type\":\"flags.1?true\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1128644211,\"predicate\":\"emailVerifyPurposeLoginSetup\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"EmailVerifyPurpose\"},{\"id\":1383932651,\"predicate\":\"emailVerifyPurposeLoginChange\",\"params\":[],\"type\":\"EmailVerifyPurpose\"},{\"id\":-1141565819,\"predicate\":\"emailVerifyPurposePassport\",\"params\":[],\"type\":\"EmailVerifyPurpose\"},{\"id\":-1842457175,\"predicate\":\"emailVerificationCode\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":-611279166,\"predicate\":\"emailVerificationGoogle\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":-1764723459,\"predicate\":\"emailVerificationApple\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":731303195,\"predicate\":\"account.emailVerified\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.EmailVerified\"},{\"id\":-507835039,\"predicate\":\"account.emailVerifiedLogin\",\"params\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"sent_code\",\"type\":\"auth.SentCode\"}],\"type\":\"account.EmailVerified\"},{\"id\":-1225711938,\"predicate\":\"premiumSubscriptionOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.1?true\"},{\"name\":\"can_purchase_upgrade\",\"type\":\"flags.2?true\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"bot_url\",\"type\":\"string\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"}],\"type\":\"PremiumSubscriptionOption\"},{\"id\":80008398,\"predicate\":\"inputStickerSetEmojiGenericAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":701560302,\"predicate\":\"inputStickerSetEmojiDefaultStatuses\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1206095820,\"predicate\":\"sendAsPeer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium_required\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"SendAsPeer\"},{\"id\":-1386050360,\"predicate\":\"messageExtendedMediaPreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"w\",\"type\":\"flags.0?int\"},{\"name\":\"h\",\"type\":\"flags.0?int\"},{\"name\":\"thumb\",\"type\":\"flags.1?PhotoSize\"},{\"name\":\"video_duration\",\"type\":\"flags.2?int\"}],\"type\":\"MessageExtendedMedia\"},{\"id\":-297296796,\"predicate\":\"messageExtendedMedia\",\"params\":[{\"name\":\"media\",\"type\":\"MessageMedia\"}],\"type\":\"MessageExtendedMedia\"},{\"id\":1517529484,\"predicate\":\"updateMessageExtendedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"extended_media\",\"type\":\"MessageExtendedMedia\"}],\"type\":\"Update\"},{\"id\":-50416996,\"predicate\":\"stickerKeyword\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"keyword\",\"type\":\"Vector<string>\"}],\"type\":\"StickerKeyword\"}],\"methods\":[{\"id\":-878758099,\"method\":\"invokeAfterMsg\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":1036301552,\"method\":\"invokeAfterMsgs\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1502141361,\"method\":\"auth.sendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":-2131827673,\"method\":\"auth.signUp\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1923962543,\"method\":\"auth.signIn\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"flags.0?string\"},{\"name\":\"email_verification\",\"type\":\"flags.1?EmailVerification\"}],\"type\":\"auth.Authorization\"},{\"id\":1047706137,\"method\":\"auth.logOut\",\"params\":[],\"type\":\"auth.LoggedOut\"},{\"id\":-1616179942,\"method\":\"auth.resetAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":-440401971,\"method\":\"auth.exportAuthorization\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1518699091,\"method\":\"auth.importAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.Authorization\"},{\"id\":-841733627,\"method\":\"auth.bindTempAuthKey\",\"params\":[{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"},{\"name\":\"encrypted_message\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-326762118,\"method\":\"account.registerDevice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_muted\",\"type\":\"flags.0?true\"},{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"app_sandbox\",\"type\":\"Bool\"},{\"name\":\"secret\",\"type\":\"bytes\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":1779249670,\"method\":\"account.unregisterDevice\",\"params\":[{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-2067899501,\"method\":\"account.updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"},{\"name\":\"settings\",\"type\":\"InputPeerNotifySettings\"}],\"type\":\"Bool\"},{\"id\":313765169,\"method\":\"account.getNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-612493497,\"method\":\"account.resetNotifySettings\",\"params\":[],\"type\":\"Bool\"},{\"id\":2018596725,\"method\":\"account.updateProfile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"first_name\",\"type\":\"flags.0?string\"},{\"name\":\"last_name\",\"type\":\"flags.1?string\"},{\"name\":\"about\",\"type\":\"flags.2?string\"}],\"type\":\"User\"},{\"id\":1713919532,\"method\":\"account.updateStatus\",\"params\":[{\"name\":\"offline\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":127302966,\"method\":\"account.getWallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.WallPapers\"},{\"id\":-977650298,\"method\":\"account.reportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":227648840,\"method\":\"users.getUsers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Vector<User>\"},{\"id\":-1240508136,\"method\":\"users.getFullUser\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"users.UserFull\"},{\"id\":2061264541,\"method\":\"contacts.getContactIDs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Vector<int>\"},{\"id\":-995929106,\"method\":\"contacts.getStatuses\",\"params\":[],\"type\":\"Vector<ContactStatus>\"},{\"id\":1574346258,\"method\":\"contacts.getContacts\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.Contacts\"},{\"id\":746589157,\"method\":\"contacts.importContacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<InputContact>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":157945344,\"method\":\"contacts.deleteContacts\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":269745566,\"method\":\"contacts.deleteByPhones\",\"params\":[{\"name\":\"phones\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1758204945,\"method\":\"contacts.block\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1096393392,\"method\":\"contacts.unblock\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-176409329,\"method\":\"contacts.getBlocked\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Blocked\"},{\"id\":1673946374,\"method\":\"messages.getMessages\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":-1594569905,\"method\":\"messages.getDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Dialogs\"},{\"id\":1143203525,\"method\":\"messages.getHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1593989278,\"method\":\"messages.search\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"from_id\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":238054714,\"method\":\"messages.readHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-1332768214,\"method\":\"messages.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_clear\",\"type\":\"flags.0?true\"},{\"name\":\"revoke\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"flags.2?int\"},{\"name\":\"max_date\",\"type\":\"flags.3?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-443640366,\"method\":\"messages.deleteMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":94983360,\"method\":\"messages.receivedMessages\",\"params\":[{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<ReceivedNotifyMessage>\"},{\"id\":1486110434,\"method\":\"messages.setTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Bool\"},{\"id\":228423076,\"method\":\"messages.sendMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-497026848,\"method\":\"messages.sendMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-869258997,\"method\":\"messages.forwardMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"with_my_score\",\"type\":\"flags.8?true\"},{\"name\":\"drop_author\",\"type\":\"flags.11?true\"},{\"name\":\"drop_media_captions\",\"type\":\"flags.12?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"from_peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"random_id\",\"type\":\"Vector<long>\"},{\"name\":\"to_peer\",\"type\":\"InputPeer\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-820669733,\"method\":\"messages.reportSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-270948702,\"method\":\"messages.getPeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.PeerSettings\"},{\"id\":-1991005362,\"method\":\"messages.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1240027791,\"method\":\"messages.getChats\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-1364194508,\"method\":\"messages.getFullChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"messages.ChatFull\"},{\"id\":1937260541,\"method\":\"messages.editChatTitle\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":903730804,\"method\":\"messages.editChatPhoto\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":-230206493,\"method\":\"messages.addChatUser\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"fwd_limit\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1575461717,\"method\":\"messages.deleteChatUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":164303470,\"method\":\"messages.createChat\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-304838614,\"method\":\"updates.getState\",\"params\":[],\"type\":\"updates.State\"},{\"id\":630429265,\"method\":\"updates.getDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_total_limit\",\"type\":\"flags.0?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":1926525996,\"method\":\"photos.updateProfilePhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"photos.Photo\"},{\"id\":-1980559511,\"method\":\"photos.uploadProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"}],\"type\":\"photos.Photo\"},{\"id\":-2016444625,\"method\":\"photos.deletePhotos\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPhoto>\"}],\"type\":\"Vector<long>\"},{\"id\":-1291540959,\"method\":\"upload.saveFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1101843010,\"method\":\"upload.getFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"precise\",\"type\":\"flags.0?true\"},{\"name\":\"cdn_supported\",\"type\":\"flags.1?true\"},{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.File\"},{\"id\":-990308245,\"method\":\"help.getConfig\",\"params\":[],\"type\":\"Config\"},{\"id\":531836966,\"method\":\"help.getNearestDc\",\"params\":[],\"type\":\"NearestDc\"},{\"id\":1378703997,\"method\":\"help.getAppUpdate\",\"params\":[{\"name\":\"source\",\"type\":\"string\"}],\"type\":\"help.AppUpdate\"},{\"id\":1295590211,\"method\":\"help.getInviteText\",\"params\":[],\"type\":\"help.InviteText\"},{\"id\":-1848823128,\"method\":\"photos.getUserPhotos\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"photos.Photos\"},{\"id\":651135312,\"method\":\"messages.getDhConfig\",\"params\":[{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random_length\",\"type\":\"int\"}],\"type\":\"messages.DhConfig\"},{\"id\":-162681021,\"method\":\"messages.requestEncryption\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1035731989,\"method\":\"messages.acceptEncryption\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":-208425312,\"method\":\"messages.discardEncryption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":2031374829,\"method\":\"messages.setEncryptedTyping\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"typing\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2135648522,\"method\":\"messages.readEncryptedHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1157265941,\"method\":\"messages.sendEncrypted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1431914525,\"method\":\"messages.sendEncryptedFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":852769188,\"method\":\"messages.sendEncryptedService\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1436924774,\"method\":\"messages.receivedQueue\",\"params\":[{\"name\":\"max_qts\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1259113487,\"method\":\"messages.reportEncryptedSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"}],\"type\":\"Bool\"},{\"id\":-562337987,\"method\":\"upload.saveBigFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"file_total_parts\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1043505495,\"method\":\"initConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"system_lang_code\",\"type\":\"string\"},{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"proxy\",\"type\":\"flags.0?InputClientProxy\"},{\"name\":\"params\",\"type\":\"flags.1?JSONValue\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1663104819,\"method\":\"help.getSupport\",\"params\":[],\"type\":\"help.Support\"},{\"id\":916930423,\"method\":\"messages.readMessageContents\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":655677548,\"method\":\"account.checkUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1040964988,\"method\":\"account.updateUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":301470424,\"method\":\"contacts.search\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Found\"},{\"id\":-623130288,\"method\":\"account.getPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-906486552,\"method\":\"account.setPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<InputPrivacyRule>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1564422284,\"method\":\"account.deleteAccount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"flags.0?InputCheckPasswordSRP\"}],\"type\":\"Bool\"},{\"id\":150761757,\"method\":\"account.getAccountTTL\",\"params\":[],\"type\":\"AccountDaysTTL\"},{\"id\":608323678,\"method\":\"account.setAccountTTL\",\"params\":[{\"name\":\"ttl\",\"type\":\"AccountDaysTTL\"}],\"type\":\"Bool\"},{\"id\":-627372787,\"method\":\"invokeWithLayer\",\"params\":[{\"name\":\"layer\",\"type\":\"int\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-113456221,\"method\":\"contacts.resolveUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-2108208411,\"method\":\"account.sendChangePhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1891839707,\"method\":\"account.changePhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-710552671,\"method\":\"messages.getStickers\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Stickers\"},{\"id\":-1197432408,\"method\":\"messages.getAllStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":954152242,\"method\":\"account.updateDeviceLocked\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1738800940,\"method\":\"auth.importBotAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"int\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"bot_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1956073268,\"method\":\"messages.getWebPagePreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"MessageMedia\"},{\"id\":-484392616,\"method\":\"account.getAuthorizations\",\"params\":[],\"type\":\"account.Authorizations\"},{\"id\":-545786948,\"method\":\"account.resetAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1418342645,\"method\":\"account.getPassword\",\"params\":[],\"type\":\"account.Password\"},{\"id\":-1663767815,\"method\":\"account.getPasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1516564433,\"method\":\"account.updatePasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"new_settings\",\"type\":\"account.PasswordInputSettings\"}],\"type\":\"Bool\"},{\"id\":-779399914,\"method\":\"auth.checkPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"auth.Authorization\"},{\"id\":-661144474,\"method\":\"auth.requestPasswordRecovery\",\"params\":[],\"type\":\"auth.PasswordRecovery\"},{\"id\":923364464,\"method\":\"auth.recoverPassword\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"new_settings\",\"type\":\"flags.0?account.PasswordInputSettings\"}],\"type\":\"auth.Authorization\"},{\"id\":-1080796745,\"method\":\"invokeWithoutUpdates\",\"params\":[{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1607670315,\"method\":\"messages.exportChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"legacy_revoke_permanent\",\"type\":\"flags.2?true\"},{\"name\":\"request_needed\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1051570619,\"method\":\"messages.checkChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"ChatInvite\"},{\"id\":1817183516,\"method\":\"messages.importChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-928977804,\"method\":\"messages.getStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-946871200,\"method\":\"messages.installStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"archived\",\"type\":\"Bool\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":-110209570,\"method\":\"messages.uninstallStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":-421563528,\"method\":\"messages.startBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1877938321,\"method\":\"help.getAppChangelog\",\"params\":[{\"name\":\"prev_app_version\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1468322785,\"method\":\"messages.getMessagesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"increment\",\"type\":\"Bool\"}],\"type\":\"messages.MessageViews\"},{\"id\":-871347913,\"method\":\"channels.readHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-2067661490,\"method\":\"channels.deleteMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-196443371,\"method\":\"channels.reportSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1383294429,\"method\":\"channels.getMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":2010044880,\"method\":\"channels.getParticipants\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelParticipantsFilter\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-1599378234,\"method\":\"channels.getParticipant\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":176122811,\"method\":\"channels.getChannels\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputChannel>\"}],\"type\":\"messages.Chats\"},{\"id\":141781513,\"method\":\"channels.getFullChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.ChatFull\"},{\"id\":1029681423,\"method\":\"channels.createChannel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.0?true\"},{\"name\":\"megagroup\",\"type\":\"flags.1?true\"},{\"name\":\"for_import\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"geo_point\",\"type\":\"flags.2?InputGeoPoint\"},{\"name\":\"address\",\"type\":\"flags.2?string\"}],\"type\":\"Updates\"},{\"id\":-751007486,\"method\":\"channels.editAdmin\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1450044624,\"method\":\"channels.editTitle\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-248621111,\"method\":\"channels.editPhoto\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":283557164,\"method\":\"channels.checkUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":890549214,\"method\":\"channels.updateUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":615851205,\"method\":\"channels.joinChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-130635115,\"method\":\"channels.leaveChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":429865580,\"method\":\"channels.inviteToChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":-1072619549,\"method\":\"channels.deleteChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":51854712,\"method\":\"updates.getChannelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelMessagesFilter\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1470377534,\"method\":\"messages.editChatAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"is_admin\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1568189671,\"method\":\"messages.migrateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1271290010,\"method\":\"messages.searchGlobal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":2016638777,\"method\":\"messages.reorderStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1309538785,\"method\":\"messages.getDocumentByHash\",\"params\":[{\"name\":\"sha256\",\"type\":\"bytes\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1559270965,\"method\":\"messages.getSavedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.SavedGifs\"},{\"id\":846868683,\"method\":\"messages.saveGif\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1364105629,\"method\":\"messages.getInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"geo_point\",\"type\":\"flags.0?InputGeoPoint\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"messages.BotResults\"},{\"id\":-346119674,\"method\":\"messages.setInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"private\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"results\",\"type\":\"Vector<InputBotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"next_offset\",\"type\":\"flags.2?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.3?InlineBotSwitchPM\"}],\"type\":\"Bool\"},{\"id\":2057376407,\"method\":\"messages.sendInlineBotResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"hide_via\",\"type\":\"flags.11?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-432034325,\"method\":\"channels.exportMessageLink\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"grouped\",\"type\":\"flags.0?true\"},{\"name\":\"thread\",\"type\":\"flags.1?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ExportedMessageLink\"},{\"id\":527021574,\"method\":\"channels.toggleSignatures\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1056025023,\"method\":\"auth.resendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":520357240,\"method\":\"auth.cancelCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-39416522,\"method\":\"messages.getMessageEditData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"messages.MessageEditData\"},{\"id\":1224152952,\"method\":\"messages.editMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.15?int\"}],\"type\":\"Updates\"},{\"id\":-2091549254,\"method\":\"messages.editInlineBotMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":-1824339449,\"method\":\"messages.getBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"game\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"password\",\"type\":\"flags.2?InputCheckPasswordSRP\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-712043766,\"method\":\"messages.setBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1758168906,\"method\":\"contacts.getTopPeers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"correspondents\",\"type\":\"flags.0?true\"},{\"name\":\"bots_pm\",\"type\":\"flags.1?true\"},{\"name\":\"bots_inline\",\"type\":\"flags.2?true\"},{\"name\":\"phone_calls\",\"type\":\"flags.3?true\"},{\"name\":\"forward_users\",\"type\":\"flags.4?true\"},{\"name\":\"forward_chats\",\"type\":\"flags.5?true\"},{\"name\":\"groups\",\"type\":\"flags.10?true\"},{\"name\":\"channels\",\"type\":\"flags.15?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.TopPeers\"},{\"id\":451113900,\"method\":\"contacts.resetTopPeerRating\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-462373635,\"method\":\"messages.getPeerDialogs\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1137057461,\"method\":\"messages.saveDraft\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":1782549861,\"method\":\"messages.getAllDrafts\",\"params\":[],\"type\":\"Updates\"},{\"id\":1685588756,\"method\":\"messages.getFeaturedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1527873830,\"method\":\"messages.readFeaturedStickers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1649852357,\"method\":\"messages.getRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.RecentStickers\"},{\"id\":958863608,\"method\":\"messages.saveRecentSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1986437075,\"method\":\"messages.clearRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":1475442322,\"method\":\"messages.getArchivedStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"offset_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":457157256,\"method\":\"account.sendConfirmPhoneCode\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1596029123,\"method\":\"account.confirmPhone\",\"params\":[{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-122669393,\"method\":\"channels.getAdminedPublicChannels\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_location\",\"type\":\"flags.0?true\"},{\"name\":\"check_limit\",\"type\":\"flags.1?true\"}],\"type\":\"messages.Chats\"},{\"id\":1678738104,\"method\":\"messages.getMaskStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":-866424884,\"method\":\"messages.getAttachedStickers\",\"params\":[{\"name\":\"media\",\"type\":\"InputStickeredMedia\"}],\"type\":\"Vector<StickerSetCovered>\"},{\"id\":-1907842680,\"method\":\"auth.dropTempAuthKeys\",\"params\":[{\"name\":\"except_auth_keys\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1896289088,\"method\":\"messages.setGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":363700068,\"method\":\"messages.setInlineGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-400399203,\"method\":\"messages.getGameHighScores\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":258170395,\"method\":\"messages.getInlineGameHighScores\",\"params\":[{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":-468934396,\"method\":\"messages.getCommonChats\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-2023787330,\"method\":\"messages.getAllChats\",\"params\":[{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-333262899,\"method\":\"help.setBotUpdatesStatus\",\"params\":[{\"name\":\"pending_updates_count\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":852135825,\"method\":\"messages.getWebPage\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-1489903017,\"method\":\"messages.toggleDialogPin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":991616823,\"method\":\"messages.reorderPinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"int\"},{\"name\":\"order\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"Bool\"},{\"id\":-692498958,\"method\":\"messages.getPinnedDialogs\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1440257555,\"method\":\"bots.sendCustomRequest\",\"params\":[{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":-434028723,\"method\":\"bots.answerWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":619086221,\"method\":\"upload.getWebFile\",\"params\":[{\"name\":\"location\",\"type\":\"InputWebFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.WebFile\"},{\"id\":924093883,\"method\":\"payments.getPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"}],\"type\":\"payments.PaymentForm\"},{\"id\":611897804,\"method\":\"payments.getPaymentReceipt\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-1228345045,\"method\":\"payments.validateRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"info\",\"type\":\"PaymentRequestedInfo\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":755192367,\"method\":\"payments.sendPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"requested_info_id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"credentials\",\"type\":\"InputPaymentCredentials\"},{\"name\":\"tip_amount\",\"type\":\"flags.2?long\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1151208273,\"method\":\"account.getTmpPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":578650699,\"method\":\"payments.getSavedInfo\",\"params\":[],\"type\":\"payments.SavedInfo\"},{\"id\":-667062079,\"method\":\"payments.clearSavedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"credentials\",\"type\":\"flags.0?true\"},{\"name\":\"info\",\"type\":\"flags.1?true\"}],\"type\":\"Bool\"},{\"id\":-436833542,\"method\":\"messages.setBotShippingResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"Bool\"},{\"id\":163765653,\"method\":\"messages.setBotPrecheckoutResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":-1876841625,\"method\":\"stickers.createStickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"animated\",\"type\":\"flags.1?true\"},{\"name\":\"videos\",\"type\":\"flags.4?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"stickers\",\"type\":\"Vector<InputStickerSetItem>\"},{\"name\":\"software\",\"type\":\"flags.3?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-143257775,\"method\":\"stickers.removeStickerFromSet\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":-4795190,\"method\":\"stickers.changeStickerPosition\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"position\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2041315650,\"method\":\"stickers.addStickerToSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker\",\"type\":\"InputStickerSetItem\"}],\"type\":\"messages.StickerSet\"},{\"id\":1369162417,\"method\":\"messages.uploadMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":1430593449,\"method\":\"phone.getCallConfig\",\"params\":[],\"type\":\"DataJSON\"},{\"id\":1124046573,\"method\":\"phone.requestCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":1003664544,\"method\":\"phone.acceptCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":788404002,\"method\":\"phone.confirmCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":399855457,\"method\":\"phone.receivedCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"}],\"type\":\"Bool\"},{\"id\":-1295269440,\"method\":\"phone.discardCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"reason\",\"type\":\"PhoneCallDiscardReason\"},{\"name\":\"connection_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1508562471,\"method\":\"phone.setCallRating\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_initiative\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"rating\",\"type\":\"int\"},{\"name\":\"comment\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":662363518,\"method\":\"phone.saveCallDebug\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"debug\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":962554330,\"method\":\"upload.getCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1691921240,\"method\":\"upload.reuploadCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"Vector<FileHash>\"},{\"id\":1375900482,\"method\":\"help.getCdnConfig\",\"params\":[],\"type\":\"CdnConfig\"},{\"id\":-219008246,\"method\":\"langpack.getLangPack\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackDifference\"},{\"id\":-269862909,\"method\":\"langpack.getStrings\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"keys\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<LangPackString>\"},{\"id\":-845657435,\"method\":\"langpack.getDifference\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"LangPackDifference\"},{\"id\":1120311183,\"method\":\"langpack.getLanguages\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"}],\"type\":\"Vector<LangPackLanguage>\"},{\"id\":-1763259007,\"method\":\"channels.editBanned\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":870184064,\"method\":\"channels.getAdminLog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"events_filter\",\"type\":\"flags.0?ChannelAdminLogEventsFilter\"},{\"name\":\"admins\",\"type\":\"flags.1?Vector<InputUser>\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"min_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-1847836879,\"method\":\"upload.getCdnFileHashes\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"long\"}],\"type\":\"Vector<FileHash>\"},{\"id\":-914493408,\"method\":\"messages.sendScreenshotNotification\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":-359881479,\"method\":\"channels.setStickers\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":82946729,\"method\":\"messages.getFavedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-1174420133,\"method\":\"messages.faveSticker\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unfave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-357180360,\"method\":\"channels.readMessageContents\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-2020263951,\"method\":\"contacts.resetSaved\",\"params\":[],\"type\":\"Bool\"},{\"id\":1180140658,\"method\":\"messages.getUnreadMentions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1683319225,\"method\":\"channels.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_everyone\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1036054804,\"method\":\"help.getRecentMeUrls\",\"params\":[{\"name\":\"referer\",\"type\":\"string\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-356796084,\"method\":\"channels.togglePreHistoryHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":251759059,\"method\":\"messages.readMentions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1881817312,\"method\":\"messages.getRecentLocations\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-134016113,\"method\":\"messages.sendMultiMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"multi_media\",\"type\":\"Vector<InputSingleMedia>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":1347929239,\"method\":\"messages.uploadEncryptedFile\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"EncryptedFile\"},{\"id\":405695855,\"method\":\"account.getWebAuthorizations\",\"params\":[],\"type\":\"account.WebAuthorizations\"},{\"id\":755087855,\"method\":\"account.resetWebAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1747789204,\"method\":\"account.resetWebAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":896555914,\"method\":\"messages.searchStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_featured\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1856595926,\"method\":\"upload.getFileHashes\",\"params\":[{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"long\"}],\"type\":\"Vector<FileHash>\"},{\"id\":749019089,\"method\":\"help.getTermsOfServiceUpdate\",\"params\":[],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":-294455398,\"method\":\"help.acceptTermsOfService\",\"params\":[{\"name\":\"id\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":-1299661699,\"method\":\"account.getAllSecureValues\",\"params\":[],\"type\":\"Vector<SecureValue>\"},{\"id\":1936088002,\"method\":\"account.getSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Vector<SecureValue>\"},{\"id\":-1986010339,\"method\":\"account.saveSecureValue\",\"params\":[{\"name\":\"value\",\"type\":\"InputSecureValue\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureValue\"},{\"id\":-1199522741,\"method\":\"account.deleteSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Bool\"},{\"id\":-1865902923,\"method\":\"users.setSecureValueErrors\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"}],\"type\":\"Bool\"},{\"id\":-1456907910,\"method\":\"account.getAuthorizationForm\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-202552205,\"method\":\"account.acceptAuthorization\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"},{\"name\":\"value_hashes\",\"type\":\"Vector<SecureValueHash>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"Bool\"},{\"id\":-1516022023,\"method\":\"account.sendVerifyPhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1305716726,\"method\":\"account.verifyPhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1730136133,\"method\":\"account.sendVerifyEmailCode\",\"params\":[{\"name\":\"purpose\",\"type\":\"EmailVerifyPurpose\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.SentEmailCode\"},{\"id\":53322959,\"method\":\"account.verifyEmail\",\"params\":[{\"name\":\"purpose\",\"type\":\"EmailVerifyPurpose\"},{\"name\":\"verification\",\"type\":\"EmailVerification\"}],\"type\":\"account.EmailVerified\"},{\"id\":1072547679,\"method\":\"help.getDeepLinkInfo\",\"params\":[{\"name\":\"path\",\"type\":\"string\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":-2098076769,\"method\":\"contacts.getSaved\",\"params\":[],\"type\":\"Vector<SavedContact>\"},{\"id\":-2092831552,\"method\":\"channels.getLeftChannels\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-1896617296,\"method\":\"account.initTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"message_users\",\"type\":\"flags.1?true\"},{\"name\":\"message_chats\",\"type\":\"flags.2?true\"},{\"name\":\"message_megagroups\",\"type\":\"flags.3?true\"},{\"name\":\"message_channels\",\"type\":\"flags.4?true\"},{\"name\":\"files\",\"type\":\"flags.5?true\"},{\"name\":\"file_max_size\",\"type\":\"flags.5?long\"}],\"type\":\"account.Takeout\"},{\"id\":489050862,\"method\":\"account.finishTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":486505992,\"method\":\"messages.getSplitRanges\",\"params\":[],\"type\":\"Vector<MessageRange>\"},{\"id\":911373810,\"method\":\"invokeWithMessagesRange\",\"params\":[{\"name\":\"range\",\"type\":\"MessageRange\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1398145746,\"method\":\"invokeWithTakeout\",\"params\":[{\"name\":\"takeout_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1031349873,\"method\":\"messages.markDialogUnread\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":585256482,\"method\":\"messages.getDialogUnreadMarks\",\"params\":[],\"type\":\"Vector<DialogPeer>\"},{\"id\":-2062238246,\"method\":\"contacts.toggleTopPeers\",\"params\":[{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2119757468,\"method\":\"messages.clearAllDrafts\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1735311088,\"method\":\"help.getAppConfig\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":1862465352,\"method\":\"help.saveAppLog\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<InputAppEvent>\"}],\"type\":\"Bool\"},{\"id\":-966677240,\"method\":\"help.getPassportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PassportConfig\"},{\"id\":1784243458,\"method\":\"langpack.getLanguage\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":-760547348,\"method\":\"messages.updatePinnedMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"unpin\",\"type\":\"flags.1?true\"},{\"name\":\"pm_oneside\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1881204448,\"method\":\"account.confirmPasswordEmail\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":2055154197,\"method\":\"account.resendPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1043606090,\"method\":\"account.cancelPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-748624084,\"method\":\"help.getSupportName\",\"params\":[],\"type\":\"help.SupportName\"},{\"id\":59377875,\"method\":\"help.getUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"help.UserInfo\"},{\"id\":1723407216,\"method\":\"help.editUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"help.UserInfo\"},{\"id\":-1626880216,\"method\":\"account.getContactSignUpNotification\",\"params\":[],\"type\":\"Bool\"},{\"id\":-806076575,\"method\":\"account.setContactSignUpNotification\",\"params\":[{\"name\":\"silent\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1398240377,\"method\":\"account.getNotifyExceptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"compare_sound\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"flags.0?InputNotifyPeer\"}],\"type\":\"Updates\"},{\"id\":283795844,\"method\":\"messages.sendVote\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"}],\"type\":\"Updates\"},{\"id\":1941660731,\"method\":\"messages.getPollResults\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1848369232,\"method\":\"messages.getOnlines\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"ChatOnlines\"},{\"id\":-554301545,\"method\":\"messages.editChatAbout\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"about\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1517917375,\"method\":\"messages.editChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":-57811990,\"method\":\"account.getWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"}],\"type\":\"WallPaper\"},{\"id\":-578472351,\"method\":\"account.uploadWallPaper\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1817860919,\"method\":\"account.saveWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"unsave\",\"type\":\"Bool\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-18000023,\"method\":\"account.installWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-1153722364,\"method\":\"account.resetWallPapers\",\"params\":[],\"type\":\"Bool\"},{\"id\":1457130303,\"method\":\"account.getAutoDownloadSettings\",\"params\":[],\"type\":\"account.AutoDownloadSettings\"},{\"id\":1995661875,\"method\":\"account.saveAutoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"low\",\"type\":\"flags.0?true\"},{\"name\":\"high\",\"type\":\"flags.1?true\"},{\"name\":\"settings\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"Bool\"},{\"id\":899735650,\"method\":\"messages.getEmojiKeywords\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":352892591,\"method\":\"messages.getEmojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":1318675378,\"method\":\"messages.getEmojiKeywordsLanguages\",\"params\":[{\"name\":\"lang_codes\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<EmojiLanguage>\"},{\"id\":-709817306,\"method\":\"messages.getEmojiURL\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":1749536939,\"method\":\"folders.editPeerFolders\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<InputFolderPeer>\"}],\"type\":\"Updates\"},{\"id\":472471681,\"method\":\"folders.deleteFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1932455680,\"method\":\"messages.getSearchCounters\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filters\",\"type\":\"Vector<MessagesFilter>\"}],\"type\":\"Vector<messages.SearchCounter>\"},{\"id\":-170208392,\"method\":\"channels.getGroupsForDiscussion\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":1079520178,\"method\":\"channels.setDiscussionGroup\",\"params\":[{\"name\":\"broadcast\",\"type\":\"InputChannel\"},{\"name\":\"group\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":428848198,\"method\":\"messages.requestUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1322487515,\"method\":\"messages.acceptUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":1336717624,\"method\":\"messages.hidePeerSettingsBar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-386636848,\"method\":\"contacts.addContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_phone_privacy_exception\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-130964977,\"method\":\"contacts.acceptContact\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-1892102881,\"method\":\"channels.editCreator\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"Updates\"},{\"id\":-750207932,\"method\":\"contacts.getLocated\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"background\",\"type\":\"flags.1?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"self_expires\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":1491484525,\"method\":\"channels.editLocation\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-304832784,\"method\":\"channels.toggleSlowMode\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"seconds\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-183077365,\"method\":\"messages.getScheduledHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1111817116,\"method\":\"messages.getScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.Messages\"},{\"id\":-1120369398,\"method\":\"messages.sendScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1504586518,\"method\":\"messages.deleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":473805619,\"method\":\"account.uploadTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1697530880,\"method\":\"account.createTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":737414348,\"method\":\"account.updateTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"slug\",\"type\":\"flags.0?string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":-229175188,\"method\":\"account.saveTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-953697477,\"method\":\"account.installTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"theme\",\"type\":\"flags.1?InputTheme\"},{\"name\":\"format\",\"type\":\"flags.2?string\"},{\"name\":\"base_theme\",\"type\":\"flags.3?BaseTheme\"}],\"type\":\"Bool\"},{\"id\":-1919060949,\"method\":\"account.getTheme\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"Theme\"},{\"id\":1913054296,\"method\":\"account.getThemes\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-1210022402,\"method\":\"auth.exportLoginToken\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"auth.LoginToken\"},{\"id\":-1783866140,\"method\":\"auth.importLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":-392909491,\"method\":\"auth.acceptLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"Authorization\"},{\"id\":-1250643605,\"method\":\"account.setContentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":-1952756306,\"method\":\"account.getContentSettings\",\"params\":[],\"type\":\"account.ContentSettings\"},{\"id\":300429806,\"method\":\"channels.getInactiveChannels\",\"params\":[],\"type\":\"messages.InactiveChats\"},{\"id\":1705865692,\"method\":\"account.getMultiWallPapers\",\"params\":[{\"name\":\"wallpapers\",\"type\":\"Vector<InputWallPaper>\"}],\"type\":\"Vector<WallPaper>\"},{\"id\":-1200736242,\"method\":\"messages.getPollVotes\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"option\",\"type\":\"flags.0?bytes\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.VotesList\"},{\"id\":-1257951254,\"method\":\"messages.toggleStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"uninstall\",\"type\":\"flags.0?true\"},{\"name\":\"archive\",\"type\":\"flags.1?true\"},{\"name\":\"unarchive\",\"type\":\"flags.2?true\"},{\"name\":\"stickersets\",\"type\":\"Vector<InputStickerSet>\"}],\"type\":\"Bool\"},{\"id\":779736953,\"method\":\"payments.getBankCardData\",\"params\":[{\"name\":\"number\",\"type\":\"string\"}],\"type\":\"payments.BankCardData\"},{\"id\":-241247891,\"method\":\"messages.getDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilter>\"},{\"id\":-1566780372,\"method\":\"messages.getSuggestedDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilterSuggested>\"},{\"id\":450142282,\"method\":\"messages.updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Bool\"},{\"id\":-983318044,\"method\":\"messages.updateDialogFiltersOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1421720550,\"method\":\"stats.getBroadcastStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":1646092192,\"method\":\"stats.loadAsyncGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"x\",\"type\":\"flags.0?long\"}],\"type\":\"StatsGraph\"},{\"id\":-1707717072,\"method\":\"stickers.setStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":85399130,\"method\":\"bots.setBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Bool\"},{\"id\":2127598753,\"method\":\"messages.getOldFeaturedStickers\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1063816159,\"method\":\"help.getPromoData\",\"params\":[],\"type\":\"help.PromoData\"},{\"id\":505748629,\"method\":\"help.hidePromoData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-8744061,\"method\":\"phone.sendSignalingData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-589330937,\"method\":\"stats.getMegagroupStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-349483786,\"method\":\"account.getGlobalPrivacySettings\",\"params\":[],\"type\":\"GlobalPrivacySettings\"},{\"id\":517647042,\"method\":\"account.setGlobalPrivacySettings\",\"params\":[{\"name\":\"settings\",\"type\":\"GlobalPrivacySettings\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":-183649631,\"method\":\"help.dismissSuggestion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"suggestion\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1935116200,\"method\":\"help.getCountriesList\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":584962828,\"method\":\"messages.getReplies\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1147761405,\"method\":\"messages.getDiscussionMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-147740172,\"method\":\"messages.readDiscussion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":698914348,\"method\":\"contacts.blockFromReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_message\",\"type\":\"flags.0?true\"},{\"name\":\"delete_history\",\"type\":\"flags.1?true\"},{\"name\":\"report_spam\",\"type\":\"flags.2?true\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1445996571,\"method\":\"stats.getMessagePublicForwards\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1226791947,\"method\":\"stats.getMessageStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"stats.MessageStats\"},{\"id\":-265962357,\"method\":\"messages.unpinAllMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1221445336,\"method\":\"phone.createGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"schedule_date\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"},{\"id\":-1322057861,\"method\":\"phone.joinGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"video_stopped\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"},{\"name\":\"invite_hash\",\"type\":\"flags.1?string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":1342404601,\"method\":\"phone.leaveGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"source\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":2067345760,\"method\":\"phone.inviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":2054648117,\"method\":\"phone.discardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1958458429,\"method\":\"phone.toggleGroupCallSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reset_invite_hash\",\"type\":\"flags.1?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_muted\",\"type\":\"flags.0?Bool\"}],\"type\":\"Updates\"},{\"id\":68699611,\"method\":\"phone.getGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupCall\"},{\"id\":-984033109,\"method\":\"phone.getGroupParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"ids\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":-1248003721,\"method\":\"phone.checkGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<int>\"},{\"id\":1540419152,\"method\":\"messages.deleteChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-104078327,\"method\":\"messages.deletePhoneCallHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1140726259,\"method\":\"messages.checkHistoryImport\",\"params\":[{\"name\":\"import_head\",\"type\":\"string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":873008187,\"method\":\"messages.initHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"media_count\",\"type\":\"int\"}],\"type\":\"messages.HistoryImport\"},{\"id\":713433234,\"method\":\"messages.uploadImportedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":-1271008444,\"method\":\"messages.startHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-1565154314,\"method\":\"messages.getExportedChatInvites\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"},{\"name\":\"offset_date\",\"type\":\"flags.2?int\"},{\"name\":\"offset_link\",\"type\":\"flags.2?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":1937010524,\"method\":\"messages.getExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-1110823051,\"method\":\"messages.editExportedChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"request_needed\",\"type\":\"flags.3?Bool\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":1452833749,\"method\":\"messages.deleteRevokedExportedChatInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-731601877,\"method\":\"messages.deleteExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":958457583,\"method\":\"messages.getAdminsWithInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-553329330,\"method\":\"messages.getChatInviteImporters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"},{\"name\":\"q\",\"type\":\"flags.2?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_user\",\"type\":\"InputUser\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-1207017500,\"method\":\"messages.setHistoryTTL\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-91437323,\"method\":\"account.reportProfilePhoto\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"InputPhoto\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":187239529,\"method\":\"channels.convertToGigagroup\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":1573261059,\"method\":\"messages.checkHistoryImportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":-248985848,\"method\":\"phone.toggleGroupCallRecord\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"start\",\"type\":\"flags.0?true\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"video_portrait\",\"type\":\"flags.2?Bool\"}],\"type\":\"Updates\"},{\"id\":-1524155713,\"method\":\"phone.editGroupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"muted\",\"type\":\"flags.0?Bool\"},{\"name\":\"volume\",\"type\":\"flags.1?int\"},{\"name\":\"raise_hand\",\"type\":\"flags.2?Bool\"},{\"name\":\"video_stopped\",\"type\":\"flags.3?Bool\"},{\"name\":\"video_paused\",\"type\":\"flags.4?Bool\"},{\"name\":\"presentation_paused\",\"type\":\"flags.5?Bool\"}],\"type\":\"Updates\"},{\"id\":480685066,\"method\":\"phone.editGroupCallTitle\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-277077702,\"method\":\"phone.getGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":-425040769,\"method\":\"phone.exportGroupCallInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.0?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":563885286,\"method\":\"phone.toggleGroupCallStartSubscription\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"subscribed\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1451287362,\"method\":\"phone.startScheduledGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1465786252,\"method\":\"phone.saveDefaultGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-873829436,\"method\":\"phone.joinGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":475058500,\"method\":\"phone.leaveGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":676017721,\"method\":\"stickers.checkShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1303364867,\"method\":\"stickers.suggestShortName\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":1032708345,\"method\":\"bots.resetBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-481554986,\"method\":\"bots.getBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Vector<BotCommand>\"},{\"id\":-1828139493,\"method\":\"account.resetPassword\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1284770294,\"method\":\"account.declinePasswordReset\",\"params\":[],\"type\":\"Bool\"},{\"id\":221691769,\"method\":\"auth.checkRecoveryPassword\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-700916087,\"method\":\"account.getChatThemes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-432283329,\"method\":\"messages.setChatTheme\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1095836780,\"method\":\"channels.viewSponsoredMessage\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"random_id\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-333377601,\"method\":\"channels.getSponsoredMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":745510839,\"method\":\"messages.getMessageReadParticipants\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1240514025,\"method\":\"messages.getSearchResultsCalendar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":1855292323,\"method\":\"messages.getSearchResultsPositions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":2145904661,\"method\":\"messages.hideChatJoinRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-528091926,\"method\":\"messages.hideAllChatJoinRequests\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"}],\"type\":\"Updates\"},{\"id\":-1323389022,\"method\":\"messages.toggleNoForwards\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-855777386,\"method\":\"messages.saveDefaultSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"send_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":231174382,\"method\":\"channels.getSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-1081501024,\"method\":\"account.setAuthorizationTTL\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1089766498,\"method\":\"account.changeAuthorizationSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.0?Bool\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.1?Bool\"}],\"type\":\"Bool\"},{\"id\":913655003,\"method\":\"channels.deleteParticipantHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-754091820,\"method\":\"messages.sendReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.1?true\"},{\"name\":\"add_to_recent\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Vector<Reaction>\"}],\"type\":\"Updates\"},{\"id\":-1950707482,\"method\":\"messages.getMessagesReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1176190792,\"method\":\"messages.getMessageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Reaction\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-21928079,\"method\":\"messages.setChatAvailableReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"available_reactions\",\"type\":\"ChatReactions\"}],\"type\":\"Updates\"},{\"id\":417243308,\"method\":\"messages.getAvailableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":1330094102,\"method\":\"messages.setDefaultReaction\",\"params\":[{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"Bool\"},{\"id\":617508334,\"method\":\"messages.translateText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"text\",\"type\":\"flags.1?string\"},{\"name\":\"from_lang\",\"type\":\"flags.2?string\"},{\"name\":\"to_lang\",\"type\":\"string\"}],\"type\":\"messages.TranslatedText\"},{\"id\":-396644838,\"method\":\"messages.getUnreadReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-2099097129,\"method\":\"messages.readReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-1963375804,\"method\":\"contacts.resolvePhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":447879488,\"method\":\"phone.getGroupCallStreamChannels\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":-558650433,\"method\":\"phone.getGroupCallStreamRtmpUrl\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"revoke\",\"type\":\"Bool\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":276705696,\"method\":\"messages.searchSentMedia\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":385663691,\"method\":\"messages.getAttachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"AttachMenuBots\"},{\"id\":1998676370,\"method\":\"messages.getAttachMenuBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":451818415,\"method\":\"messages.toggleBotInAttachMenu\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-58219204,\"method\":\"messages.requestWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"from_bot_menu\",\"type\":\"flags.4?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"start_param\",\"type\":\"flags.3?string\"},{\"name\":\"theme_params\",\"type\":\"flags.2?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"WebViewResult\"},{\"id\":-362824498,\"method\":\"messages.prolongWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Bool\"},{\"id\":698084494,\"method\":\"messages.requestSimpleWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":172168437,\"method\":\"messages.sendWebViewResultMessage\",\"params\":[{\"name\":\"bot_query_id\",\"type\":\"string\"},{\"name\":\"result\",\"type\":\"InputBotInlineResult\"}],\"type\":\"WebViewMessageSent\"},{\"id\":-603831608,\"method\":\"messages.sendWebViewData\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"button_text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1157944655,\"method\":\"bots.setBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Bool\"},{\"id\":-1671369944,\"method\":\"bots.getBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotMenuButton\"},{\"id\":-510647672,\"method\":\"account.getSavedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1038768899,\"method\":\"account.saveRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"account.SavedRingtone\"},{\"id\":-2095414366,\"method\":\"account.uploadRingtone\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":2021942497,\"method\":\"bots.setBotBroadcastDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":-1839281686,\"method\":\"bots.setBotGroupDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":1092913030,\"method\":\"phone.saveCallLog\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"file\",\"type\":\"InputFile\"}],\"type\":\"Bool\"},{\"id\":-456419968,\"method\":\"channels.toggleJoinToSend\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1277789622,\"method\":\"channels.toggleJoinRequest\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":261206117,\"method\":\"payments.exportInvoice\",\"params\":[{\"name\":\"invoice_media\",\"type\":\"InputMedia\"}],\"type\":\"payments.ExportedInvoice\"},{\"id\":647928393,\"method\":\"messages.transcribeAudio\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.TranscribedAudio\"},{\"id\":2132608815,\"method\":\"messages.rateTranscribedAudio\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"good\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-2131921795,\"method\":\"payments.assignAppStoreTransaction\",\"params\":[{\"name\":\"receipt\",\"type\":\"bytes\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":-537046829,\"method\":\"payments.assignPlayMarketTransaction\",\"params\":[{\"name\":\"receipt\",\"type\":\"DataJSON\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":-1614700874,\"method\":\"payments.canPurchasePremium\",\"params\":[{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Bool\"},{\"id\":-1206152236,\"method\":\"help.getPremiumPromo\",\"params\":[],\"type\":\"help.PremiumPromo\"},{\"id\":-643100844,\"method\":\"messages.getCustomEmojiDocuments\",\"params\":[{\"name\":\"document_id\",\"type\":\"Vector<long>\"}],\"type\":\"Vector<Document>\"},{\"id\":-67329649,\"method\":\"messages.getEmojiStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":248473398,\"method\":\"messages.getFeaturedEmojiStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-70001045,\"method\":\"account.updateEmojiStatus\",\"params\":[{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Bool\"},{\"id\":-696962170,\"method\":\"account.getDefaultEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":257392901,\"method\":\"account.getRecentEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":404757166,\"method\":\"account.clearRecentEmojiStatuses\",\"params\":[],\"type\":\"Bool\"},{\"id\":1063567478,\"method\":\"messages.reportReaction\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction_peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1149164102,\"method\":\"messages.getTopReactions\",\"params\":[{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Reactions\"},{\"id\":960896434,\"method\":\"messages.getRecentReactions\",\"params\":[{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Reactions\"},{\"id\":-1644236876,\"method\":\"messages.clearRecentReactions\",\"params\":[],\"type\":\"Bool\"},{\"id\":-2064119788,\"method\":\"messages.getExtendedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":767062953,\"method\":\"auth.importWebTokenAuthorization\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"web_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"}]},\"layer\":147} as {\r\n  MTProto: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  API: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  layer: number,\r\n};\r\n","export default function intToUint(val: number) {\n  // return val < 0 ? val + 4294967296 : val; // 0 <= val <= Infinity\n  return val >>> 0; // (4294967296 >>> 0) === 0; 0 <= val <= 4294967295\n}\n","import bigInt from 'big-integer';\nimport intToUint from '../number/intToUint';\n\nexport default function ulongFromInts(high: number, low: number) {\n  high = intToUint(high), low = intToUint(low);\n  return bigInt(high).shiftLeft(32).add(bigInt(low));\n}\n","import bigInt from 'big-integer';\n\nexport const safeBigInt = bigInt(Number.MAX_SAFE_INTEGER);\nexport const ulongBigInt = bigInt(bigInt[2]).pow(64);\nexport const longBigInt = ulongBigInt.divide(bigInt[2]);\n","import bigInt from 'big-integer';\nimport { longBigInt, ulongBigInt } from './bigIntConstants';\n\nexport function bigIntFromBytes(bytes: Uint8Array | number[], base = 256) {\n  return bigInt.fromArray(bytes instanceof Uint8Array ? [...bytes] : bytes, base);\n}\n\nexport function bigIntToBytes(bigInt: bigInt.BigInteger) {\n  return new Uint8Array(bigInt.toArray(256).value);\n}\n\nexport function bigIntToSigned(bigInt: bigInt.BigInteger) {\n  return bigInt.greater(longBigInt) ? bigInt.minus(ulongBigInt) : bigInt;\n}\n\nexport function bigIntToUnsigned(bigInt: bigInt.BigInteger) {\n  return bigInt.isNegative() ? ulongBigInt.add(bigInt) : bigInt;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport Schema, {MTProtoConstructor} from './schema';\nimport {JSONValue} from '../../layer';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport gzipUncompress from '../../helpers/gzipUncompress';\nimport bigInt from 'big-integer';\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\nimport {safeBigInt} from '../../helpers/bigInt/bigIntConstants';\nimport {bigIntToSigned, bigIntToUnsigned} from '../../helpers/bigInt/bigIntConversion';\n\nconst boolFalse = +Schema.API.constructors.find((c) => c.predicate === 'boolFalse').id;\nconst boolTrue = +Schema.API.constructors.find((c) => c.predicate === 'boolTrue').id;\nconst vector = +Schema.API.constructors.find((c) => c.predicate === 'vector').id;\nconst gzipPacked = +Schema.MTProto.constructors.find((c) => c.predicate === 'gzip_packed').id;\n\n// * using slice to have a new buffer, otherwise the buffer will be copied to main thread\nconst sliceMethod: 'slice' | 'subarray' = 'slice'; // subarray\n\nclass TLSerialization {\n  private maxLength = 2048; // 2Kb\n  private offset = 0; // in bytes\n  private mtproto = false;\n  private debug = false;// Modes.debug;\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  constructor(options: Partial<{startMaxLength: number, mtproto: true}> = {}) {\n    this.maxLength = options.startMaxLength || 2048; // 2Kb\n    this.mtproto = options.mtproto || false;\n    this.createBuffer();\n  }\n\n  public createBuffer() {\n    this.buffer = new ArrayBuffer(this.maxLength);\n    this.intView = new Int32Array(this.buffer);\n    this.byteView = new Uint8Array(this.buffer);\n  }\n\n  public getArray() {\n    const resultBuffer = new ArrayBuffer(this.offset);\n\n    // let perf = performance.now();\n    /* const resultUint8: any = new Uint8Array(resultBuffer);\n    resultUint8.set(this.byteView.subarray(0, this.offset)); */\n    // console.log('perf uint8', performance.now() - perf);\n\n    // perf = performance.now();\n    const resultInt32 = new Int32Array(resultBuffer);\n    resultInt32.set(this.intView.subarray(0, this.offset / 4));\n    // console.log('perf int32', performance.now() - perf);\n\n    /* if(resultUint8.buffer.byteLength !== resultInt32.buffer.byteLength) {\n      console.error(resultUint8, resultInt32);\n    } */\n\n    return resultInt32;\n  }\n\n  public getBuffer() {\n    return this.getArray().buffer;\n  }\n\n  public getBytes(typed: true): Uint8Array;\n  public getBytes(typed?: false): number[];\n  public getBytes(typed: boolean = true): number[] | Uint8Array {\n    if(typed) {\n      const resultBuffer = new ArrayBuffer(this.offset);\n      const resultArray = new Uint8Array(resultBuffer);\n\n      resultArray.set(this.byteView.subarray(0, this.offset));\n\n      return resultArray;\n    }\n\n    const bytes: number[] = new Array(this.offset);\n    for(let i = 0; i < this.offset; i++) {\n      bytes[i] = this.byteView[i];\n    }\n    return bytes;\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public checkLength(needBytes: number) {\n    if(this.offset + needBytes < this.maxLength) {\n      return;\n    }\n\n    // console.log('Increase buffer start', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32));\n    this.maxLength = Math.ceil(Math.max(this.maxLength * 2, this.offset + needBytes + 16) / 4) * 4;\n    const previousBuffer = this.buffer;\n    // const previousByteView = this.byteView;\n    const previousArray = new Int32Array(previousBuffer);\n\n    this.createBuffer();\n\n    new Int32Array(this.buffer).set(previousArray);\n    /* console.log('Increase buffer end', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32),\n      bytesCmp(previousByteView, this.byteView.slice(0, previousByteView.length))); */\n  }\n\n  public writeInt(i: number, field: string) {\n    this.debug && console.log('>>>', i.toString(16), i, field);\n\n    const offset = this.offset / 4;\n    this.checkLength(4);\n    this.intView[offset] = i;\n    this.offset += 4;\n\n    return offset;\n  }\n\n  public storeInt(i: number, field?: string) {\n    return this.writeInt(i, (field || '') + ':int');\n  }\n\n  public storeBool(i: boolean, field?: string) {\n    if(i) {\n      this.writeInt(boolTrue, (field || '') + ':bool');\n    } else {\n      this.writeInt(boolFalse, (field || '') + ':bool');\n    }\n  }\n\n  public storeLongP(iHigh: number, iLow: number, field?: string) {\n    this.writeInt(iLow, (field || '') + ':long[low]');\n    this.writeInt(iHigh, (field || '') + ':long[high]');\n  }\n\n  public storeLong(sLong: Array<number> | string | number, field?: string) {\n    if(Array.isArray(sLong)) {\n      if(sLong.length === 2) {\n        return this.storeLongP(sLong[0], sLong[1], field);\n      } else {\n        return this.storeIntBytes(sLong, 64, field);\n      }\n    }\n\n    const _bigInt = bigIntToUnsigned(bigInt(sLong as string));\n    const {quotient, remainder} = _bigInt.divmod(0x100000000);\n    const high = quotient.toJSNumber();\n    const low = remainder.toJSNumber();\n\n    this.writeInt(low, (field || '') + ':long[low]');\n    this.writeInt(high, (field || '') + ':long[high]');\n  }\n\n  public storeDouble(f: any, field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n\n    doubleView[0] = f;\n\n    this.writeInt(intView[0], (field || '') + ':double[low]');\n    this.writeInt(intView[1], (field || '') + ':double[high]');\n  }\n\n  public storeString(s: string, field?: string) {\n    this.debug && console.log('>>>', s, (field || '') + ':string');\n\n    if(s === undefined) {\n      s = '';\n    }\n    const sUTF8 = unescape(encodeURIComponent(s));\n\n    this.checkLength(sUTF8.length + 8);\n\n    const len = sUTF8.length;\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n    for(let i = 0; i < len; i++) {\n      this.byteView[this.offset++] = sUTF8.charCodeAt(i);\n    }\n\n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n\n  public storeBytes(bytes: ArrayBuffer | Uint8Array | number[], field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    } else if(bytes === undefined) {\n      bytes = [];\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as number[]), (field || '') + ':bytes');\n\n    // if uint8array was json.stringified, then will be: {'0': 123, '1': 123}\n    const len = (bytes as Uint8Array).length;\n    this.checkLength(len + 8);\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n\n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n\n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n\n  public storeIntBytes(bytes: ArrayBuffer | Uint8Array | number[], bits: number, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = (bytes as Uint8Array).length;\n    if((bits % 32) || (len * 8) !== bits) {\n      const error = new Error('Invalid bits: ' + bits + ', ' + len);\n      console.error(error, bytes, field);\n      throw error;\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as Uint8Array), (field || '') + ':int' + bits);\n    this.checkLength(len);\n\n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n  }\n\n  public storeRawBytes(bytes: ArrayLike<number>, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = bytes.length;\n\n    this.debug && console.log('>>>', bytesToHex(bytes), (field || ''));\n    this.checkLength(len);\n\n    this.byteView.set(bytes, this.offset);\n    this.offset += len;\n  }\n\n  public storeMethod(methodName: string, params: any) {\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const methodData = schema.methods.find((m) => m.method === methodName);\n\n    if(!methodData) {\n      throw new Error('No method ' + methodName + ' found');\n    }\n\n    this.storeInt(methodData.id, methodName + '[id]');\n\n    const pFlags = params.pFlags || params; // * support pFlags, though am not expecting it to be there\n    const flagsOffsets: {[paramName: string]: number} = {};\n    // console.log('storeMethod', len, methodData);\n    for(const param of methodData.params) {\n      let type = param.type;\n\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        if(!(params[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags[param.name] : params[param.name] !== undefined) {\n            // console.log('storeMethod autocompleting', methodName, param.name, params[param.name], type);\n            params[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n\n        // console.log('storeMethod', methodName, fieldBit, params[fieldBit[0]], params, param, condType, !!(params[fieldBit[0]] & (1 << +fieldBit[1])));\n        type = condType[1];\n      }\n\n      // console.log('storeMethod', methodName, param.name, params[param.name], type);\n      const result = this.storeObject(params[param.name], type, methodName + '[' + param.name + ']');\n\n      if(type === '#') {\n        params[param.name] = params[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(const paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = params[paramName];\n    }\n\n    return methodData.type;\n  }\n\n  public storeObject(obj: any, type: string, field?: string) {\n    // console.log('storeObject', obj, type, field, this.offset, this.getBytes(true).hex);\n    switch(type) {\n      case '#':\n        obj = obj || 0;\n      case 'int':\n        return this.storeInt(obj, field);\n      case 'long':\n        return this.storeLong(obj, field);\n      case 'int128':\n        return this.storeIntBytes(obj, 128, field);\n      case 'int256':\n        return this.storeIntBytes(obj, 256, field);\n      case 'int512':\n        return this.storeIntBytes(obj, 512, field);\n      case 'string':\n        return this.storeString(obj, field);\n      case 'bytes':\n        return this.storeBytes(obj, field);\n      case 'double':\n        return this.storeDouble(obj, field);\n      case 'Bool':\n        return this.storeBool(obj, field);\n      case 'true':\n        return\n    }\n\n    if(Array.isArray(obj)) {\n      if(type.substr(0, 6) === 'Vector') {\n        this.writeInt(vector, field + '[id]');\n      } else if(type.substr(0, 6) !== 'vector') {\n        throw new Error('Invalid vector type ' + type);\n      }\n\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      this.writeInt(obj.length, field + '[count]');\n      for(let i = 0; i < obj.length; i++) {\n        this.storeObject(obj[i], itemType, field + '[' + i + ']');\n      }\n\n      return true;\n    } else if(type.substr(0, 6).toLowerCase() === 'vector') {\n      throw new Error('Invalid vector object');\n    }\n\n    if(!isObject(obj)) {\n      throw new Error('Invalid object for type ' + type);\n    }\n\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const predicate = obj['_'];\n    let isBare = false;\n    const constructorData: MTProtoConstructor = schema.constructors.find((c) => c.predicate === predicate);\n\n    if(isBare = (type.charAt(0) === '%')) {\n      type = type.substr(1);\n    }\n\n    if(!constructorData) {\n      throw new Error('No predicate ' + predicate + ' found');\n    }\n\n    if(predicate === type) {\n      isBare = true;\n    }\n\n    if(!isBare) {\n      this.writeInt(constructorData.id, field + '[' + predicate + '][id]');\n    }\n\n    const pFlags = obj.pFlags;\n    const flagsOffsets: {[paramName: string]: number} = {};\n    // console.log('storeObject', len, constructorData);\n    for(const param of constructorData.params) {\n      let type = param.type;\n\n      // console.log('storeObject', param, type);\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        // console.log('storeObject fieldBit', fieldBit, obj[fieldBit[0]]);\n\n        if(!(obj[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags && pFlags[param.name] : obj[param.name] !== undefined) {\n            // console.log('storeObject autocompleting', param.name, obj[param.name], type);\n            obj[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n\n        type = condType[1];\n      }\n      // console.log('storeObject', param, type);\n\n      const result = this.storeObject(obj[param.name], type, field + '[' + predicate + '][' + param.name + ']');\n\n      if(type === '#') {\n        obj[param.name] = obj[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(const paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = obj[paramName];\n    }\n\n    return constructorData.type;\n  }\n}\n\nclass TLDeserialization<FetchLongAs extends Long> {\n  private offset = 0; // in bytes\n  private override: {[key: string]: (result: any, field: string) => void};\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  // this.debug =\n  private mtproto: boolean = false;\n  private debug: boolean;\n\n  constructor(buffer: ArrayBuffer | Uint8Array, options: Partial<{override: any, mtproto: true, debug: true}> = {}) {\n    // buffer = addPadding(buffer, 4, true); // fix 21.01.2020 for wss\n    if(buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.intView = new Int32Array(buffer);\n      this.byteView = new Uint8Array(this.buffer);\n    } else {\n      this.buffer = buffer.buffer;\n      this.intView = new Int32Array(buffer.buffer);\n      this.byteView = buffer;\n    }\n\n    // console.log(this.intView);\n\n    this.override = options.override || {};\n    this.mtproto = !!options.mtproto;\n    this.debug = options.debug !== undefined ? options.debug : /* Modes.debug */false;\n  }\n\n  /* public setMtproto(mtproto: boolean) {\n    this.mtproto = mtproto;\n  } */\n\n  private readInt(field: string) {\n    // if(this.offset >= this.intView.length * 4) {\n    if((this.byteView.length - this.offset) < 4) {\n      console.error(this.byteView, this.offset);\n      throw new Error('Nothing to fetch: ' + field);\n    }\n\n    const i = this.intView[this.offset / 4];\n    // const i = new Uint32Array(this.byteView.buffer.slice(this.offset, this.offset + 4))[0];\n\n    this.debug &&/*  || field.includes('[dialog][read_outbox_max_id]') */\n      console.log('<<<', i.toString(16), i, field,\n        this.byteView.slice(this.offset - 16, this.offset + 16),\n        bytesToHex(this.byteView.slice(this.offset - 16, this.offset + 16)));\n\n    this.offset += 4;\n\n    return i;\n  }\n\n  public fetchInt(field?: string) {\n    return this.readInt((field || '') + ':int');\n  }\n\n  public fetchDouble(field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n\n    intView[0] = this.readInt((field || '') + ':double[low]'),\n    intView[1] = this.readInt((field || '') + ':double[high]');\n\n    return doubleView[0];\n  }\n\n  // ! it should've been signed\n  public fetchLong(field?: string): FetchLongAs {\n    const iLow = this.readInt((field || '') + ':long[low]');\n    const iHigh = this.readInt((field || '') + ':long[high]');\n\n    let ulong = ulongFromInts(iHigh, iLow);\n    if(/* !unsigned &&  */!this.mtproto) { // make it signed\n      ulong = bigIntToSigned(ulong);\n    }\n\n    if(!this.mtproto) {\n      if(safeBigInt.greaterOrEquals(ulong.abs())) {\n        // @ts-ignore\n        return ulong.toJSNumber();\n      }\n    }\n\n    // @ts-ignore\n    return ulong.toString(10);\n  }\n\n  public fetchBool(field?: string): boolean {\n    const i = this.readInt((field || '') + ':bool');\n    if(i === boolTrue) {\n      return true;\n    } else if(i === boolFalse) {\n      return false;\n    }\n\n    this.offset -= 4;\n    return this.fetchObject('Object', field);\n  }\n\n  public fetchString(field?: string): string {\n    let len = this.byteView[this.offset++];\n\n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n\n    let sUTF8 = '';\n    for(let i = 0; i < len; i++) {\n      sUTF8 += String.fromCharCode(this.byteView[this.offset++]);\n    }\n\n    // Padding\n    while(this.offset % 4) {\n      this.offset++;\n    }\n\n    let s: string;\n    try {\n      s = decodeURIComponent(escape(sUTF8));\n    } catch(e) {\n      s = sUTF8;\n    }\n\n    this.debug && console.log('<<<', s, (field || '') + ':string');\n\n    return s;\n  }\n\n  public fetchBytes(field?: string) {\n    let len = this.byteView[this.offset++];\n\n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n\n    const bytes = this.byteView[sliceMethod](this.offset, this.offset + len);\n    this.offset += len;\n\n    // Padding\n    while(this.offset % 4) {\n      this.offset++;\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':bytes');\n\n    return bytes;\n  }\n\n  public fetchIntBytes(bits: number, typed: true, field?: string): Uint8Array;\n  public fetchIntBytes(bits: number, typed?: false, field?: string): number[];\n  public fetchIntBytes(bits: number, typed: boolean = true, field?: string) {\n    if(bits % 32) {\n      throw new Error('Invalid bits: ' + bits);\n    }\n\n    const len = bits / 8;\n    if(typed) {\n      const result = this.byteView[sliceMethod](this.offset, this.offset + len);\n      this.offset += len;\n      return result;\n    }\n\n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; i++) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':int' + bits);\n\n    return bytes;\n  }\n\n  public fetchRawBytes(len: number | false, typed: true, field: string): Uint8Array;\n  public fetchRawBytes(len: number | false, typed: false, field: string): number[];\n  public fetchRawBytes(len: number | false, typed: boolean = true, field: string) {\n    if(len === false) {\n      len = this.readInt((field || '') + '_length');\n      if(len > this.byteView.byteLength) {\n        throw new Error('Invalid raw bytes length: ' + len + ', buffer len: ' + this.byteView.byteLength);\n      }\n    }\n\n    if(typed) {\n      const bytes = new Uint8Array(len);\n      bytes.set(this.byteView[sliceMethod](this.offset, this.offset + len));\n      this.offset += len;\n      return bytes;\n    }\n\n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; i++) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || ''));\n\n    return bytes;\n  }\n\n  private fetchVector(type: string, field?: string) {\n    const len = this.readInt(field + '[count]');\n    const result: any[] = new Array(len);\n    if(len > 0) {\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      for(let i = 0; i < len; ++i) {\n        result[i] = this.fetchObject(itemType, field + '[' + i + ']');\n      }\n    }\n\n    return result;\n  }\n\n  public fetchObject(type: string, field?: string): any {\n    switch(type) {\n      case '#':\n      case 'int':\n        return this.fetchInt(field);\n      case 'long':\n        return this.fetchLong(field);\n      case 'int128':\n        return this.fetchIntBytes(128, true, field);\n      case 'int256':\n        return this.fetchIntBytes(256, true, field);\n      case 'int512':\n        return this.fetchIntBytes(512, true, field);\n      case 'string':\n        return this.fetchString(field);\n      case 'bytes':\n        return this.fetchBytes(field);\n      case 'double':\n        return this.fetchDouble(field);\n      case 'Bool':\n        return this.fetchBool(field);\n      case 'true':\n        return true;\n    }\n\n    field = field || type || 'Object';\n\n    if(type.charAt(0) === 'v' && type.substr(1, 5) === 'ector') {\n      return this.fetchVector(type, field);\n    }\n\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    let constructorData: MTProtoConstructor = null;\n    let fallback = false;\n\n    if(type.charAt(0) === '%') {\n      const checkType = type.substr(1);\n      constructorData = schema.constructors.find((c) => c.type === checkType);\n      if(!constructorData) {\n        throw new Error('Constructor not found for type: ' + type);\n      }\n    }/*  else if(type.charAt(0) >= 97 && type.charAt(0) <= 122) {\n      constructorData = schema.constructors.find((c) => c.predicate === type);\n      if(!constructorData) {\n        throw new Error('Constructor not found for predicate: ' + type);\n      }\n    } */ else {\n      const constructorCmp = this.readInt(field + '[id]');\n\n      if(constructorCmp === gzipPacked) { // Gzip packed\n        const compressed = this.fetchBytes(field + '[packed_string]');\n        const uncompressed = gzipUncompress(compressed) as Uint8Array;\n        const newDeserializer = new TLDeserialization(uncompressed); // rpc_result is packed here\n\n        return newDeserializer.fetchObject(type, field);\n      }\n\n      if(constructorCmp === vector) {\n        return this.fetchVector(type, field);\n      }\n\n      let index = schema.constructorsIndex;\n      if(!index) {\n        schema.constructorsIndex = index = {};\n        for(let i = 0, len = schema.constructors.length; i < len; i++) {\n          index[schema.constructors[i].id] = i;\n        }\n      }\n\n      const i = index[constructorCmp];\n      if(i !== undefined) {\n        constructorData = schema.constructors[i];\n      }\n\n      if(!constructorData && this.mtproto) {\n        const schemaFallback = Schema.API;\n        for(let i = 0, len = schemaFallback.constructors.length; i < len; i++) {\n          if(+schemaFallback.constructors[i].id === constructorCmp) {\n            constructorData = schemaFallback.constructors[i];\n\n            delete this.mtproto;\n            fallback = true;\n            break;\n          }\n        }\n      }\n\n      if(!constructorData) {\n        console.error('Constructor not found:', constructorCmp);\n\n        let int1: number, int2: number;\n        try {\n          int1 = this.fetchInt(field);\n          int2 = this.fetchInt(field);\n        } catch(err) {\n\n        }\n\n        throw new Error('Constructor not found: ' + constructorCmp + ' ' + int1 + ' ' + int2 + ' ' + field);\n      }\n    }\n\n    const predicate = constructorData.predicate;\n\n    const result: any = {'_': predicate};\n    const overrideKey = (this.mtproto ? 'mt_' : '') + predicate;\n    if(this.override[overrideKey]) {\n      this.override[overrideKey](result, field + '[' + predicate + ']');\n    } else {\n      for(let i = 0, len = constructorData.params.length; i < len; i++) {\n        const param = constructorData.params[i];\n        let type = param.type;\n\n        if(type === '#' && result.pFlags === undefined) {\n          result.pFlags = {};\n        }\n\n        const isCond = (type.indexOf('?') !== -1);\n        if(isCond) {\n          const condType = type.split('?');\n          const fieldBit = condType[0].split('.');\n\n          if(!(result[fieldBit[0]] & (1 << +fieldBit[1]))) {\n            // console.log('fetchObject bad', constructorData, result[fieldBit[0]], fieldBit);\n            continue;\n          }\n\n          // console.log('fetchObject good', constructorData, result[fieldBit[0]], fieldBit);\n\n          type = condType[1];\n        }\n\n        const value = this.fetchObject(type, field + '[' + predicate + '][' + param.name + ']');\n\n        if(isCond && type === 'true') {\n          result.pFlags[param.name] = value;\n        } else {\n          /* if(param.name === 'read_outbox_max_id') {\n            console.log(result, param.name, value, field + '[' + predicate + '][' + param.name + ']');\n          } */\n\n          result[param.name] = value;\n        }\n      }\n    }\n\n    if(fallback) {\n      this.mtproto = true;\n    }\n\n    if(type === 'JSONValue') {\n      return this.formatJSONValue(result);\n    }\n\n    return result;\n  }\n\n  private formatJSONValue(jsonValue: JSONValue): any {\n    if(!jsonValue._) return jsonValue;\n    switch(jsonValue._) {\n      case 'jsonNull':\n        return null;\n      case 'jsonObject': {\n        const out: any = {};\n        const objectValues = jsonValue.value;\n        for(let i = 0, length = objectValues.length; i < length; ++i) {\n          const objectValue = objectValues[i];\n          out[objectValue.key] = this.formatJSONValue(objectValue.value);\n        }\n        return out;\n      }\n      default:\n        return jsonValue.value;\n    }\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public setOffset(offset: number) {\n    this.offset = offset;\n  }\n\n  /* public fetchEnd() {\n    if(this.offset !== this.byteView.length) {\n      throw new Error('Fetch end with non-empty buffer');\n    }\n\n    return true;\n  } */\n}\n\nMOUNT_CLASS_TO.TLDeserialization = TLDeserialization;\nMOUNT_CLASS_TO.TLSerialization = TLSerialization;\nexport {TLDeserialization, TLSerialization};\n","// export function gzipUncompress(bytes: ArrayBuffer, toString: true): string;\n\n// @ts-ignore\nimport pako from 'pako/dist/pako_inflate.min.js';\n// import dT from './dT';\n\n// export function gzipUncompress(bytes: ArrayBuffer, toString?: false): Uint8Array;\nexport default function gzipUncompress(bytes: ArrayBuffer, toString?: boolean): string | Uint8Array {\n  // console.log(dT(), 'Gzip uncompress start');\n  const result = pako.inflate(bytes, toString ? {to: 'string'} : undefined);\n  // console.log(dT(), 'Gzip uncompress finish'/* , result */);\n  return result;\n}\n","import randomize from '../array/randomize';\nimport bufferConcats from './bufferConcats';\n\nexport default function addPadding<T extends number[] | ArrayBuffer | Uint8Array>(\n  bytes: T,\n  blockSize: number = 16,\n  zeroes?: boolean,\n  blockSizeAsTotalLength = false,\n  prepend = false\n): T {\n  const len = (bytes as ArrayBuffer).byteLength || (bytes as Uint8Array).length;\n  const needPadding = blockSizeAsTotalLength ? blockSize - len : blockSize - (len % blockSize);\n  if(needPadding > 0 && needPadding < blockSize) {\n    // //console.log('addPadding()', len, blockSize, needPadding);\n    const padding = new Uint8Array(needPadding);\n    if(zeroes) {\n      for(let i = 0; i < needPadding; ++i) {\n        padding[i] = 0;\n      }\n    } else {\n      randomize(padding);\n    }\n\n    if(bytes instanceof ArrayBuffer) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)).buffer as T;\n    } else if(bytes instanceof Uint8Array) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)) as T;\n    } else {\n      // @ts-ignore\n      return (prepend ? [...padding].concat(bytes) : bytes.concat([...padding])) as T;\n    }\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {TLDeserialization, TLSerialization} from './tl_utils';\nimport CryptoWorker from '../crypto/cryptoMessagePort';\nimport sessionStorage from '../sessionStorage';\nimport Schema from './schema';\nimport {NetworkerFactory} from './networkerFactory';\nimport {logger, LogTypes} from '../logger';\nimport {InvokeApiOptions} from '../../types';\nimport longToBytes from '../../helpers/long/longToBytes';\nimport MTTransport from './transports/transport';\nimport {nextRandomUint, randomLong} from '../../helpers/random';\nimport App from '../../config/app';\nimport DEBUG from '../../config/debug';\nimport Modes from '../../config/modes';\nimport noop from '../../helpers/noop';\n\n                       \nimport HTTP from './transports/http';\n         \n\nimport type TcpObfuscated from './transports/tcpObfuscated';\nimport bigInt from 'big-integer';\nimport {ConnectionStatus} from './connectionStatus';\nimport ctx from '../../environment/ctx';\nimport bufferConcats from '../../helpers/bytes/bufferConcats';\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport convertToUint8Array from '../../helpers/bytes/convertToUint8Array';\nimport isObject from '../../helpers/object/isObject';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport sortLongsArray from '../../helpers/long/sortLongsArray';\nimport randomize from '../../helpers/array/randomize';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\nimport {getEnvironment} from '../../environment/utils';\nimport {TimeManager} from './timeManager';\n\n// console.error('networker included!', new Error().stack);\n\nexport type MTMessageOptions = InvokeApiOptions & Partial<{\n  noResponse: true, // http_wait\n  longPoll: true,\n\n  notContentRelated: true, // ACK\n  noSchedule: true,\n  // withResult: true,\n  messageId: MTLong,\n}>;\n\nexport type MTMessage = InvokeApiOptions & MTMessageOptions & {\n  msg_id: MTLong,\n  seq_no: number,\n  body?: Uint8Array | number[],\n  isAPI?: boolean,\n  // only these four are important\n\n  acked?: boolean,\n\n  deferred?: CancellablePromise<void>,\n\n  container?: boolean,\n  inner?: MTLong[],\n\n  // below - options\n\n  notContentRelated?: true,\n  noSchedule?: true,\n\n  resultType?: string,\n\n  longPoll?: true,\n  noResponse?: true, // only with http (http_wait for longPoll)\n};\n\nconst DRAIN_TIMEOUT = 10000;\nconst delays: {\n  [k in 'client' | 'file']: {\n    disconnectDelayMin: number,\n    disconnectDelayMax: number,\n    pingInterval: number,\n    pingMaxTime: number,\n    connectionTimeout: number\n  }\n} = {\n  client: {\n    disconnectDelayMin: 7,\n    disconnectDelayMax: 20,\n    pingInterval: 2000,\n    pingMaxTime: 5,\n    connectionTimeout: 5000\n  },\n  file: {\n    disconnectDelayMin: 10,\n    disconnectDelayMax: 24,\n    pingInterval: 3000,\n    pingMaxTime: 7,\n    connectionTimeout: 7500\n  }\n};\nconst RESEND_OPTIONS: MTMessageOptions = {\n  noSchedule: true,\n  notContentRelated: true\n};\nlet invokeAfterMsgConstructor: number;\nlet networkerTempId = 0;\n\nexport default class MTPNetworker {\n  private authKeyUint8: Uint8Array;\n\n  public isFileNetworker: boolean;\n  private isFileUpload: boolean;\n  private isFileDownload: boolean;\n\n  private lastServerMessages: Array<MTLong> = [];\n\n  private sentMessages: {\n    [msgId: MTLong]: MTMessage\n  } = {};\n\n  private pendingMessages: {[msgId: MTLong]: number} = {};\n  private pendingAcks: Array<MTLong> = [];\n  private pendingResendReq: MTLong[] = [];\n  // private pendingResendAnsReq: MTLong[] = [];\n  public connectionInited: boolean;\n\n  private nextReqTimeout: number;\n  private nextReq: number = 0;\n\n                         \n  private longPollInterval: number;\n  private longPollPending: number;\n  private checkConnectionRetryAt: number;\n  private checkConnectionTimeout: number;\n  private checkConnectionPeriod = 0;\n  private sleepAfter: number;\n  private offline = false;\n  private sendingLongPoll: boolean;\n           \n\n  private seqNo: number;\n  private prevSessionId: Uint8Array;\n  private sessionId: Uint8Array;\n  private serverSalt: Uint8Array;\n\n  private lastResendReq: {\n    reqMsgId: MTLong,\n    msgIds: MTPNetworker['pendingResendReq']\n  };\n  // private lastResendAnsReq: MTPNetworker['lastResendReq'];\n\n  private name: string;\n  private log: ReturnType<typeof logger>;\n\n  public isOnline = false;\n  private status: ConnectionStatus = ConnectionStatus.Closed;\n  private lastResponseTime = 0;\n\n  private debug = DEBUG /* && false */ || Modes.debug;\n\n  public activeRequests = 0;\n\n  public onDrain: () => void;\n  private onDrainTimeout: number;\n\n  public transport: MTTransport;\n\n                       \n  private pingDelayDisconnectDeferred: CancellablePromise<string>;\n  private pingPromise: Promise<void>;\n  // private pingInterval: number;\n  private lastPingTime: number;\n  private lastPingStartTime: number;\n  private lastPingDelayDisconnectId: string;\n           \n  // public onConnectionStatusChange: (online: boolean) => void;\n\n  // private debugRequests: Array<{before: Uint8Array, after: Uint8Array}> = [];\n\n  private delays: typeof delays[keyof typeof delays];\n  // private getNewTimeOffset: boolean;\n\n  constructor(\n    private networkerFactory: NetworkerFactory,\n    private timeManager: TimeManager,\n    public dcId: number,\n    private authKey: Uint8Array,\n    private authKeyId: Uint8Array,\n    serverSalt: Uint8Array,\n    options: InvokeApiOptions = {}\n  ) {\n    this.authKeyUint8 = convertToUint8Array(this.authKey);\n    this.serverSalt = convertToUint8Array(serverSalt);\n\n    this.isFileUpload = !!options.fileUpload;\n    this.isFileDownload = !!options.fileDownload;\n    this.isFileNetworker = this.isFileUpload || this.isFileDownload;\n    this.delays = this.isFileNetworker ? delays.file : delays.client;\n\n    const suffix = this.isFileUpload ? '-U' : this.isFileDownload ? '-D' : '';\n    this.name = 'NET-' + dcId + suffix;\n    // this.log = logger(this.name, this.upload && this.dcId === 2 ? LogLevels.debug | LogLevels.warn | LogLevels.log | LogLevels.error : LogLevels.error);\n    this.log = logger(this.name + (suffix ? '' : '-C') + '-' + networkerTempId++, LogTypes.Log/*  | LogTypes.Debug */ | LogTypes.Error | LogTypes.Warn);\n    this.log('constructor'/* , this.authKey, this.authKeyID, this.serverSalt */);\n\n    // Test resend after bad_server_salt\n    /* if(this.dcId === 2 && this.upload) {\n      //timeManager.applyServerTime((Date.now() / 1000 - 86400) | 0);\n      this.serverSalt[0] = 0;\n    } */\n\n    this.updateSession();\n\n    // if(!NetworkerFactory.offlineInited) {\n    //   NetworkerFactory.offlineInited = true;\n    //   /* rootScope.offline = true\n    //   rootScope.offlineConnecting = true */\n    // }\n  }\n\n  private updateSession() {\n    this.seqNo = 0;\n    this.prevSessionId = this.sessionId;\n    this.sessionId = randomize(new Uint8Array(8));\n  }\n\n  /* private clearContainers() {\n    for(const messageId in this.sentMessages) {\n      const message = this.sentMessages[messageId];\n      if(message.container) {\n        delete this.sentMessages[messageId];\n      }\n    }\n  } */\n\n  private updateSentMessage(sentMessageId: string) {\n    const sentMessage = this.sentMessages[sentMessageId];\n    if(!sentMessage) {\n      return false;\n    }\n\n    if(sentMessage.container) {\n      forEachReverse(sentMessage.inner, (innerSentMessageId, idx) => {\n        const innerSentMessage = this.updateSentMessage(innerSentMessageId);\n        if(!innerSentMessage) {\n          sentMessage.inner.splice(idx, 1);\n        } else {\n          sentMessage.inner[idx] = innerSentMessage.msg_id;\n        }\n      });\n    }\n\n    sentMessage.msg_id = this.timeManager.generateId();\n    sentMessage.seq_no = this.generateSeqNo(sentMessage.notContentRelated || sentMessage.container);\n\n    if(this.debug) {\n      this.log(`updateSentMessage, old=${sentMessageId}, new=${sentMessage.msg_id}`);\n    }\n\n    this.sentMessages[sentMessage.msg_id] = sentMessage;\n    delete this.sentMessages[sentMessageId];\n\n    return sentMessage;\n  }\n\n  private generateSeqNo(notContentRelated?: boolean) {\n    let seqNo = this.seqNo * 2;\n\n    if(!notContentRelated) {\n      seqNo++;\n      this.seqNo++;\n    }\n\n    return seqNo;\n  }\n\n  public wrapMtpCall(method: string, params: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n\n    serializer.storeMethod(method, params);\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n\n    if(Modes.debug) {\n      this.log('MT call', method, params, messageId, seqNo);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public wrapMtpMessage(object: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n    serializer.storeObject(object, 'Object');\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo(options.notContentRelated);\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n\n    if(Modes.debug) {\n      this.log('MT message', object, messageId, seqNo);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public wrapApiCall(method: string, params: any = {}, options: InvokeApiOptions = {}) {\n    const serializer = new TLSerialization(options);\n\n    if(!this.connectionInited) { // this will call once for each new session\n      // /////this.log('Wrap api call !this.connectionInited');\n\n      const invokeWithLayer = Schema.API.methods.find((m) => m.method === 'invokeWithLayer');\n      if(!invokeWithLayer) throw new Error('no invokeWithLayer!');\n      serializer.storeInt(+invokeWithLayer.id, 'invokeWithLayer');\n\n      // @ts-ignore\n      serializer.storeInt(Schema.layer, 'layer');\n\n      const initConnection = Schema.API.methods.find((m) => m.method === 'initConnection');\n      if(!initConnection) throw new Error('no initConnection!');\n\n      serializer.storeInt(+initConnection.id, 'initConnection');\n      serializer.storeInt(0x0, 'flags');\n      serializer.storeInt(App.id, 'api_id');\n      serializer.storeString(getEnvironment().USER_AGENT || 'Unknown UserAgent', 'device_model');\n      serializer.storeString(navigator.platform || 'Unknown Platform', 'system_version');\n      serializer.storeString(App.version + (App.isMainDomain ? ' ' + App.suffix : ''), 'app_version');\n      serializer.storeString(navigator.language || 'en', 'system_lang_code');\n      serializer.storeString(App.langPack, 'lang_pack');\n      serializer.storeString(this.networkerFactory.language, 'lang_code');\n      // serializer.storeInt(0x0, 'proxy');\n      /* serializer.storeMethod('initConnection', {\n        'flags': 0,\n        'api_id': App.id,\n        'device_model': navigator.userAgent || 'Unknown UserAgent',\n        'system_version': navigator.platform || 'Unknown Platform',\n        'app_version': App.version,\n        'system_lang_code': navigator.language || 'en',\n        'lang_pack': '',\n        'lang_code': navigator.language || 'en'\n      }); */\n    }\n\n    if(options.afterMessageId) {\n      if(invokeAfterMsgConstructor === undefined) {\n        const m = Schema.API.methods.find((m) => m.method === 'invokeAfterMsg');\n        invokeAfterMsgConstructor = m ? +m.id : 0;\n      }\n\n      if(invokeAfterMsgConstructor) {\n        // if(this.debug) {\n        //   this.log('invokeApi: store invokeAfterMsg');\n        // }\n\n        serializer.storeInt(invokeAfterMsgConstructor, 'invokeAfterMsg');\n        serializer.storeLong(options.afterMessageId, 'msg_id');\n      } else {\n        this.log.error('no invokeAfterMsg!');\n      }\n    }\n\n    options.resultType = serializer.storeMethod(method, params);\n\n    /* if(method === 'account.updateNotifySettings') {\n      this.log('api call body:', serializer.getBytes(true));\n    } */\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true),\n      isAPI: true\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log('Api call', method, message, params, options);\n    } else if(this.debug) {\n      this.log('Api call', method, params, options);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public changeTransport(transport?: MTTransport) {\n    const oldTransport = this.transport;\n    if(oldTransport) {\n      oldTransport.destroy();\n\n      if(this.nextReqTimeout) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n      }\n\n      this.connectionInited = false;\n\n                             \n      if(this.longPollInterval !== undefined) {\n        clearInterval(this.longPollInterval);\n        this.longPollInterval = undefined;\n      }\n\n      this.clearCheckConnectionTimeout();\n               \n    }\n\n    this.log('change transport', transport, oldTransport);\n\n                         \n    this.clearPingDelayDisconnect();\n\n    // if(this.pingInterval !== undefined) {\n    //   clearInterval(this.pingInterval);\n    //   this.pingInterval = undefined;\n    // }\n\n    // this.clearPing();\n             \n\n    this.transport = transport;\n    if(!transport) {\n      return;\n    }\n\n    transport.networker = this;\n\n                           \n                         \n    if(transport instanceof HTTP) {\n             \n      this.longPollInterval = ctx.setInterval(this.checkLongPoll, 10000);\n      this.checkLongPoll();\n      this.checkConnection('changed transport');\n                         \n    }\n             \n             \n\n                         \n    // * handle outcoming dead socket, server will close the connection\n    if((transport as TcpObfuscated).connection) {\n      // this.sendPingDelayDisconnect();\n\n      if(transport.connected) {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n      }\n\n      // this.pingInterval = ctx.setInterval(this.sendPing, PING_INTERVAL);\n      // this.sendPing();\n    }\n             \n\n    this.resend();\n  }\n\n  public destroy() {\n    this.log('destroy');\n  }\n\n  public forceReconnectTimeout() {\n    if((this.transport as TcpObfuscated).reconnect) {\n      (this.transport as TcpObfuscated).reconnect();\n    } else {\n      this.resend();\n    }\n  }\n\n  public forceReconnect() {\n    if((this.transport as TcpObfuscated).forceReconnect) {\n      (this.transport as TcpObfuscated).forceReconnect();\n    } else {\n      this.checkConnection('force reconnect');\n    }\n  }\n\n  /* private clearPing() {\n    if(this.pingPromise) {\n      this.pingPromise = undefined;\n    }\n\n    this.lastPingTime = undefined;\n  }\n\n  private sendPing = () => {\n    // return;\n\n    // if(!(this.transport as TcpObfuscated).connected) {\n    //   this.clearPing();\n    //   return;\n    // }\n\n    if(this.pingPromise) {\n      return;\n    }\n\n    const startTime = Date.now();\n    this.log('sendPing: ping', startTime);\n    const promise = this.pingPromise = this.wrapMtpCall('ping', {\n      ping_id: randomLong()\n    }, {\n      notContentRelated: true\n    }).then(() => {\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.log('sendPing: pong', elapsedTime);\n\n      setTimeout(() => {\n        if(this.pingPromise !== promise) {\n          return;\n        }\n\n        this.pingPromise = undefined;\n        this.sendPing();\n      }, Math.max(0, PING_INTERVAL - elapsedTime));\n    });\n  }; */\n\n  private clearPingDelayDisconnect() {\n    const deferred = this.pingDelayDisconnectDeferred;\n    this.pingDelayDisconnectDeferred = undefined;\n    this.lastPingDelayDisconnectId = undefined;\n\n    if(deferred) {\n      deferred.reject();\n    }\n  }\n\n  private sendPingDelayDisconnect = () => {\n    // return;\n\n    if(this.pingDelayDisconnectDeferred || !this.transport || !this.transport.connected) return;\n\n    /* if(!this.isOnline) {\n      if((this.transport as TcpObfuscated).connected) {\n        (this.transport as TcpObfuscated).connection.close();\n      }\n\n      return;\n    } */\n\n    const deferred = this.pingDelayDisconnectDeferred = deferredPromise();\n    const delays = this.delays;\n    const pingMaxTime = this.delays.pingMaxTime;\n    const lastPingTime = Math.min(this.lastPingTime ?? 0, pingMaxTime);\n    const disconnectDelay = Math.round(delays.disconnectDelayMin + lastPingTime / pingMaxTime * (delays.disconnectDelayMax - delays.disconnectDelayMin));\n    const timeoutTime = disconnectDelay * 1000;\n    const startTime = this.lastPingStartTime = Date.now();\n    const pingId = this.lastPingDelayDisconnectId = randomLong();\n    const options: MTMessageOptions = {notContentRelated: true};\n    this.wrapMtpCall('ping_delay_disconnect', {\n      ping_id: pingId,\n      disconnect_delay: disconnectDelay\n    }, options);\n\n    const log = this.log.bindPrefix('sendPingDelayDisconnect');\n    this.debug && log.debug(`ping, timeout=${timeoutTime}, lastPingTime=${this.lastPingTime}, msgId=${options.messageId}, pingId=${pingId}`);\n    const rejectTimeout = ctx.setTimeout(deferred.reject, timeoutTime);\n\n    const onResolved = (reason: string) => {\n      clearTimeout(rejectTimeout);\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.debug && log.debug(`pong, reason='${reason}', time=${lastPingTime}, msgId=${options.messageId}`);\n      if(elapsedTime > timeoutTime) {\n        throw undefined;\n      } else {\n        return pause(Math.max(0, this.delays.pingInterval - elapsedTime/* timeoutTime - elapsedTime - PING_INTERVAL */));\n      }\n    };\n\n    const onTimeout = () => {\n      clearTimeout(rejectTimeout);\n      const transport = this.transport as TcpObfuscated;\n      if(this.pingDelayDisconnectDeferred !== deferred || !transport?.connection) {\n        return;\n      }\n\n      log.error('catch, closing connection', this.lastPingTime, options.messageId);\n      transport.connection.close();\n    };\n\n    const onFinally = () => {\n      if(this.pingDelayDisconnectDeferred !== deferred) {\n        return;\n      }\n\n      this.pingDelayDisconnectDeferred = undefined;\n      this.sendPingDelayDisconnect();\n    };\n\n    deferred\n    .then(onResolved)\n    .catch(onTimeout)\n    .finally(onFinally);\n  };\n\n                         \n  private checkLongPoll = () => {\n    const isClean = this.cleanupSent();\n    // this.log.error('Check lp', this.longPollPending, this.dcId, isClean, this);\n    if((this.longPollPending && Date.now() < this.longPollPending) ||\n      this.offline ||\n      this.isStopped() ||\n      this.isFileNetworker) {\n      // this.log('No lp this time');\n      return false;\n    }\n\n    sessionStorage.get('dc').then((baseDcId) => {\n      if(isClean && (\n        baseDcId !== this.dcId ||\n          (this.sleepAfter && Date.now() > this.sleepAfter)\n      )) {\n        // console.warn(dT(), 'Send long-poll for DC is delayed', this.dcId, this.sleepAfter);\n        return;\n      }\n\n      this.sendLongPoll();\n    });\n  };\n\n  private sendLongPoll() {\n    if(this.sendingLongPoll) return;\n    this.sendingLongPoll = true;\n    const maxWait = 25000;\n\n    this.longPollPending = Date.now() + maxWait;\n    this.debug && this.log.debug('sendLongPoll', this.longPollPending);\n\n    this.wrapMtpCall('http_wait', {\n      max_delay: 500,\n      wait_after: 150,\n      max_wait: maxWait\n    }, {\n      noResponse: true,\n      // notContentRelated: true,\n      longPoll: true\n    }).then(() => {\n      this.longPollPending = undefined;\n      setTimeout(this.checkLongPoll, 0);\n    }, (error: ErrorEvent) => {\n      this.log('Long-poll failed', error);\n    }).finally(() => {\n      this.sendingLongPoll = undefined;\n    });\n  }\n\n  private checkConnection = (event: Event | string) => {\n    this.debug && this.log('Check connection', event);\n    this.clearCheckConnectionTimeout();\n\n    if(!this.transport) {\n      this.log.warn('No transport for checkConnection');\n      return;\n    }\n\n    const serializer = new TLSerialization({mtproto: true});\n    const pingId = randomLong();\n\n    serializer.storeMethod('ping', {\n      ping_id: pingId\n    });\n\n    const pingMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      body: serializer.getBytes(true)\n    };\n\n    if(this.offline) {\n      this.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.sendEncryptedRequest(pingMessage).then(() => {\n      this.toggleOffline(false);\n    }, () => {\n      this.debug && this.log('Delay', this.checkConnectionPeriod * 1000);\n      this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from failed checkConnection request'), this.checkConnectionPeriod * 1000 | 0);\n      this.checkConnectionPeriod = Math.min(60, this.checkConnectionPeriod * 1.5);\n    });\n  };\n\n  private clearCheckConnectionTimeout() {\n    if(this.checkConnectionTimeout !== undefined) {\n      clearTimeout(this.checkConnectionTimeout);\n      this.checkConnectionTimeout = undefined;\n    }\n  }\n\n  private toggleOffline(offline: boolean) {\n    if(this.offline !== offline) {\n      this.offline = offline;\n\n      this.clearCheckConnectionTimeout();\n      if(offline) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n\n        if(this.checkConnectionPeriod < 1.5) {\n          this.checkConnectionPeriod = 0;\n        }\n\n        const delay = this.checkConnectionPeriod * 1000 | 0;\n        this.checkConnectionRetryAt = Date.now() + delay;\n        this.setConnectionStatus(ConnectionStatus.Closed, this.checkConnectionRetryAt);\n        this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from toggleOfline'), delay);\n        this.checkConnectionPeriod = Math.min(30, (1 + this.checkConnectionPeriod) * 1.5);\n\n                              \n                                                                              \n                                                                             \n                 \n      } else {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n        this.checkLongPoll();\n\n        this.scheduleRequest();\n\n                              \n                                                                          \n                                                                         \n                 \n      }\n    }\n\n    this.setConnectionStatus(offline ? ConnectionStatus.Closed : ConnectionStatus.Connected, offline ? this.checkConnectionRetryAt : undefined);\n  }\n\n  private handleSentEncryptedRequestHTTP(promise: ReturnType<MTPNetworker['sendEncryptedRequest']>, message: MTMessage, noResponseMsgs: string[]) {\n    // let timeout = setTimeout(() => {\n    //   this.log.error('handleSentEncryptedRequestHTTP timeout', promise, message, noResponseMsgs);\n    // }, 5e3);\n\n    promise.then((result) => {\n      this.toggleOffline(false);\n      // this.log('parse for', message);\n      return this.parseResponse(result).then((response) => {\n        this.debug && this.log.debug('Server response', response);\n\n        this.processMessage(response.response, response.messageId, response.sessionId);\n\n        this.checkLongPoll();\n        this.checkConnectionPeriod = Math.max(1.1, Math.sqrt(this.checkConnectionPeriod));\n\n        return true;\n      });\n    }, (error) => {\n      this.log.error('Encrypted request failed', error, message);\n\n      this.pushResend(message.msg_id);\n      this.toggleOffline(true);\n\n      return false;\n    }).then((shouldResolve) => {\n      // clearTimeout(timeout);\n      const sentMessages = this.sentMessages;\n      noResponseMsgs.forEach((msgId) => {\n        const sentMessage = sentMessages[msgId];\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          delete sentMessages[msgId];\n          delete this.pendingMessages[msgId];\n          shouldResolve ? deferred.resolve() : deferred.reject();\n        }\n      });\n    });\n  }\n           \n\n  // тут можно сделать таймаут и выводить дисконнект\n  private pushMessage(message: {\n    msg_id: string,\n    seq_no: number,\n    body: Uint8Array | number[],\n    isAPI?: boolean\n  }, options: MTMessageOptions) {\n    let promise: CancellablePromise<void>;\n    if(!options.notContentRelated || options.noResponse) {\n      promise = deferredPromise();\n    }\n\n    this.sentMessages[message.msg_id] = Object.assign(\n      message,\n      options,\n      promise ? {deferred: promise} : undefined\n    );\n\n    // this.log.error('Networker pushMessage:', this.sentMessages[message.msg_id]);\n\n    this.pendingMessages[message.msg_id] = 0;\n\n    if(!options.noSchedule) {\n      this.scheduleRequest();\n    }\n\n    if(isObject(options)) {\n      options.messageId = message.msg_id;\n    }\n\n    return promise;\n  }\n\n  public attachPromise(promise: Promise<any>, message: MTMessage) {\n    const canIncrement = true;\n    const timeout = setTimeout(() => {\n      if(this.lastResponseTime && (Date.now() - this.lastResponseTime) < this.delays.connectionTimeout) {\n        return;\n      }\n\n      this.log.error('timeout', message);\n      if(this.isOnline) {\n        this.setConnectionStatus(ConnectionStatus.TimedOut);\n      }\n\n      /* this.getEncryptedOutput(message).then((bytes) => {\n        this.log.error('timeout encrypted', bytes);\n      }); */\n    }, this.delays.connectionTimeout);\n\n    promise.catch(noop).finally(() => {\n      clearTimeout(timeout);\n      this.setConnectionStatus(ConnectionStatus.Connected);\n\n      if(canIncrement) {\n        --this.activeRequests;\n        this.setDrainTimeout();\n      }\n    });\n\n    if(canIncrement) {\n      ++this.activeRequests;\n      if(this.onDrainTimeout !== undefined) {\n        clearTimeout(this.onDrainTimeout);\n        this.onDrainTimeout = undefined;\n      }\n    }\n  }\n\n  public setDrainTimeout() {\n    if(!this.activeRequests && this.onDrain && this.onDrainTimeout === undefined) {\n      this.onDrainTimeout = ctx.setTimeout(() => {\n        this.onDrainTimeout = undefined;\n        this.log('drain');\n        this.onDrain();\n      }, DRAIN_TIMEOUT);\n    }\n  }\n\n  public setConnectionStatus(status: ConnectionStatus, retryAt?: number) {\n    const isOnline = status === ConnectionStatus.Connected;\n    const willChange = this.status !== status;\n    this.isOnline = isOnline;\n    this.status = status;\n\n    if(willChange) {\n      if(this.networkerFactory.onConnectionStatusChange) {\n        this.networkerFactory.onConnectionStatusChange({\n          _: 'networkerStatus',\n          status,\n          dcId: this.dcId,\n          name: this.name,\n          isFileNetworker: this.isFileNetworker,\n          isFileDownload: this.isFileDownload,\n          isFileUpload: this.isFileUpload,\n          retryAt\n        });\n      }\n\n      if(this.isOnline) {\n        this.scheduleRequest();\n      }\n\n      if((this.transport as TcpObfuscated)?.connection) {\n        this.clearPingDelayDisconnect();\n        this.sendPingDelayDisconnect();\n      }\n\n      // this.getNewTimeOffset = true;\n    }\n    /* if(this.onConnectionStatusChange) {\n      this.onConnectionStatusChange(this.isOnline);\n    } */\n  }\n\n  private pushResend(messageId: string, delay = 100) {\n    const value = delay ? Date.now() + delay : 0;\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage.container) {\n      for(const innerMsgId of sentMessage.inner) {\n        this.pendingMessages[innerMsgId] = value;\n      }\n    } else {\n      this.pendingMessages[messageId] = value;\n    }\n\n    if(sentMessage.acked) {\n      this.log.error('pushResend: acked message?', sentMessage);\n    }\n\n    if(this.debug) {\n      this.log.debug('pushResend:', messageId, sentMessage, this.pendingMessages, delay);\n    }\n\n    this.scheduleRequest(delay);\n  }\n\n  // * correct, fully checked\n  private async getMsgKey(dataWithPadding: Uint8Array, isOut: boolean) {\n    const x = isOut ? 0 : 8;\n    const msgKeyLargePlain = bufferConcats(this.authKeyUint8.subarray(88 + x, 88 + x + 32), dataWithPadding);\n\n    const msgKeyLarge = await CryptoWorker.invokeCrypto('sha256', msgKeyLargePlain);\n    const msgKey = new Uint8Array(msgKeyLarge).subarray(8, 24);\n    return msgKey;\n  };\n\n  // * correct, fully checked\n  private getAesKeyIv(msgKey: Uint8Array, isOut: boolean): Promise<[Uint8Array, Uint8Array]> {\n    const x = isOut ? 0 : 8;\n    const sha2aText = new Uint8Array(52);\n    const sha2bText = new Uint8Array(52);\n    const promises: Array<Promise<Uint8Array>> = [];\n\n    sha2aText.set(msgKey, 0);\n    sha2aText.set(this.authKeyUint8.subarray(x, x + 36), 16);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2aText));\n\n    sha2bText.set(this.authKeyUint8.subarray(40 + x, 40 + x + 36), 0);\n    sha2bText.set(msgKey, 36);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2bText));\n\n    return Promise.all(promises).then((results) => {\n      const aesKey = new Uint8Array(32);\n      const aesIv = new Uint8Array(32);\n      const sha2a = new Uint8Array(results[0]);\n      const sha2b = new Uint8Array(results[1]);\n\n      aesKey.set(sha2a.subarray(0, 8));\n      aesKey.set(sha2b.subarray(8, 24), 8);\n      aesKey.set(sha2a.subarray(24, 32), 24);\n\n      aesIv.set(sha2b.subarray(0, 8));\n      aesIv.set(sha2a.subarray(8, 24), 8);\n      aesIv.set(sha2b.subarray(24, 32), 24);\n\n      return [aesKey, aesIv];\n    });\n  }\n\n  public isStopped() {\n    return this.networkerFactory.akStopped && !this.isFileNetworker;\n  }\n\n  private performScheduledRequest() {\n    if(this.isStopped()) {\n      return false;\n    }\n\n    if(this.pendingAcks.length) {\n      const ackMsgIds = this.pendingAcks.slice();\n\n      // this.log('acking messages', ackMsgIDs)\n      this.wrapMtpMessage({\n        _: 'msgs_ack',\n        msg_ids: ackMsgIds\n      }, {\n        notContentRelated: true,\n        noSchedule: true\n      });\n    }\n\n    const pendingResendReqLength = this.pendingResendReq.length;\n    if(pendingResendReqLength) {\n      const options: MTMessageOptions = {...RESEND_OPTIONS};\n      const msgIds = this.pendingResendReq.splice(0, pendingResendReqLength);\n      this.wrapMtpMessage({\n        _: 'msg_resend_req',\n        msg_ids: msgIds\n      }, options);\n\n      this.log('resend: resending requests', options.messageId, msgIds);\n      /* this.lastResendReq = {\n        reqMsgId: options.messageId,\n        msgIds: msgIds\n      }; */\n\n      // this.pendingResendReq.length = 0;\n    }\n\n    // if(this.pendingResendAnsReq.length) {\n    //   const options: MTMessageOptions = {...RESEND_OPTIONS};\n    //   const msgIds = this.pendingResendAnsReq.slice();\n    //   this.wrapMtpMessage({\n    //     _: 'msg_resend_ans_req',\n    //     msg_ids: msgIds\n    //   }, options);\n\n    //   this.log('resend: requesting answers', options.messageId, msgIds);\n    //   this.lastResendAnsReq = {\n    //     reqMsgId: options.messageId,\n    //     msgIds: msgIds\n    //   };\n\n    //   // this.pendingResendAnsReq.length = 0;\n    // }\n\n    let outMessage: MTMessage;\n    const messages: typeof outMessage[] = [];\n\n    // const currentTime = Date.now();\n    let messagesByteLen = 0;\n\n                           \n    let hasApiCall = false;\n    let hasHttpWait = false;\n             \n\n    let lengthOverflow = false;\n\n    // * Сюда никогда не попадут контейнеры, так как их не будет в pendingMessages\n    const keys = sortLongsArray(Object.keys(this.pendingMessages));\n    for(const messageId of keys) {\n      // const value = this.pendingMessages[messageId];\n\n      // if(!value || value <= currentTime) {\n      const message = this.sentMessages[messageId];\n      if(message && message.body) {\n        /* if(message.fileUpload) {\n            this.log('performScheduledRequest message:', message, message.body.length, (message.body as Uint8Array).byteLength, (message.body as Uint8Array).buffer.byteLength);\n          } */\n\n        const messageByteLength = message.body.length + 32;\n\n        if((messagesByteLen + messageByteLength) > 655360) { // 640 Kb\n          this.log.warn('lengthOverflow', message, messages);\n          lengthOverflow = true;\n\n          if(outMessage) { // if it's not a first message\n            break;\n          }\n        }\n\n        messages.push(message);\n        messagesByteLen += messageByteLength;\n\n                               \n        if(message.isAPI) {\n          hasApiCall = true;\n        } else if(message.longPoll) {\n          hasHttpWait = true;\n        }\n                 \n\n        outMessage = message;\n      } else {\n        // this.log(message, messageId)\n      }\n\n      delete this.pendingMessages[messageId];\n      // }\n    }\n\n                           \n                         \n    if(this.transport instanceof HTTP)\n             \n      if(hasApiCall && !hasHttpWait) {\n        const serializer = new TLSerialization({mtproto: true});\n        serializer.storeMethod('http_wait', {\n          max_delay: 500,\n          wait_after: 150,\n          max_wait: 3000\n        });\n\n        messages.push({\n          msg_id: this.timeManager.generateId(),\n          seq_no: this.generateSeqNo(),\n          body: serializer.getBytes(true)\n        });\n      }\n             \n\n    if(!messages.length) {\n      // this.log('no scheduled messages')\n      return;\n    }\n\n                           \n    const noResponseMsgs: Array<string> = messages.filter((message) => message.noResponse).map((message) => message.msg_id);\n             \n\n    if(messages.length > 1) {\n      const container = this.generateContainerMessage(messagesByteLen, messages);\n      outMessage = container.messageWithBody;\n\n      this.sentMessages[outMessage.msg_id] = container.message;\n    } else {\n      this.sentMessages[outMessage.msg_id] = outMessage;\n    }\n\n    this.pendingAcks = [];\n\n    const promise = this.sendEncryptedRequest(outMessage);\n\n                           \n                         \n    if(this.transport instanceof HTTP)\n             \n      this.handleSentEncryptedRequestHTTP(promise, outMessage, noResponseMsgs);\n             \n\n                         \n                           \n    if(!(this.transport instanceof HTTP))\n             \n      this.cleanupSent(); // ! WARNING\n             \n\n    if(lengthOverflow) {\n      this.scheduleRequest();\n    }\n  }\n\n  private generateContainerMessage(messagesByteLen: number, messages: MTMessage[]) {\n    const container = new TLSerialization({\n      mtproto: true,\n      startMaxLength: messagesByteLen + 64\n    });\n\n    container.storeInt(0x73f1f8dc, 'CONTAINER[id]');\n    container.storeInt(messages.length, 'CONTAINER[count]');\n\n    const innerMessages: string[] = [];\n    messages.forEach((message, i) => {\n      innerMessages.push(message.msg_id);\n      // this.log('Pushing to container:', message.msg_id);\n      container.storeLong(message.msg_id, 'CONTAINER[' + i + '][msg_id]');\n      container.storeInt(message.seq_no, 'CONTAINER[' + i + '][seq_no]');\n      container.storeInt(message.body.length, 'CONTAINER[' + i + '][bytes]');\n      container.storeRawBytes(message.body, 'CONTAINER[' + i + '][body]');\n    });\n\n    const message: MTMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      container: true,\n      inner: innerMessages\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log.warn('Container', innerMessages, message.msg_id, message.seq_no);\n    }\n\n    return {\n      message,\n      messageWithBody: Object.assign({body: container.getBytes(true)}, message)\n    };\n  }\n\n  private async getEncryptedMessage(dataWithPadding: Uint8Array) {\n    const msgKey = await this.getMsgKey(dataWithPadding, true);\n    const keyIv = await this.getAesKeyIv(msgKey, true);\n    // this.log('after msg key iv')\n\n    const encryptedBytes = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithPadding, keyIv[0], keyIv[1]);\n    // this.log('Finish encrypt')\n\n    return {\n      bytes: encryptedBytes,\n      msgKey\n    };\n  }\n\n  private getDecryptedMessage(msgKey: Uint8Array, encryptedData: Uint8Array) {\n    // this.log('get decrypted start')\n    return this.getAesKeyIv(msgKey, false).then((keyIv) => {\n      // this.log('after msg key iv')\n      return CryptoWorker.invokeCrypto('aes-decrypt', encryptedData, keyIv[0], keyIv[1]);\n    });\n  }\n\n  private getEncryptedOutput(message: MTMessage) {\n    /* if(DEBUG) {\n      this.log.debug('Send encrypted', message, this.authKeyId);\n    } */\n    /* if(!this.isOnline) {\n      this.log('trying to send message when offline:', Object.assign({}, message));\n      //debugger;\n    } */\n\n    const data = new TLSerialization({\n      startMaxLength: message.body.length + 2048\n    });\n\n    data.storeIntBytes(this.serverSalt, 64, 'salt');\n    data.storeIntBytes(this.sessionId, 64, 'session_id');\n\n    data.storeLong(message.msg_id, 'message_id');\n    data.storeInt(message.seq_no, 'seq_no');\n\n    data.storeInt(message.body.length, 'message_data_length');\n    data.storeRawBytes(message.body, 'message_data');\n\n    /* const des = new TLDeserialization(data.getBuffer().slice(16));\n    const desSalt = des.fetchLong();\n    const desSessionId = des.fetchLong();\n\n    if(!this.isOnline) {\n      this.log.error('trying to send message when offline', message, new Uint8Array(des.buffer), desSalt, desSessionId);\n    } */\n\n    /* const messageDataLength = message.body.length;\n    let canBeLength = 0; // bytes\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 4;\n    canBeLength += 4;\n    canBeLength += message.body.length; */\n\n    const dataBuffer = data.getBuffer();\n\n    /* if(dataBuffer.byteLength !== canBeLength || !bytesCmp(new Uint8Array(dataBuffer.slice(dataBuffer.byteLength - message.body.length)), new Uint8Array(message.body))) {\n      this.log.error('wrong length', dataBuffer, canBeLength, message.msg_id);\n    } */\n\n    const paddingLength = (16 - (data.getOffset() % 16)) + 16 * (1 + nextRandomUint(8) % 5);\n    const padding = /* (message as any).padding ||  */randomize(new Uint8Array(paddingLength))/* .fill(0) */;\n    /* const padding = [167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28, 167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28].slice(0, paddingLength); */\n\n    // (message as any).padding = padding;\n\n    const dataWithPadding = bufferConcats(dataBuffer, padding);\n    // this.log('Adding padding', dataBuffer, padding, dataWithPadding)\n    // this.log('auth_key_id', bytesToHex(self.authKeyID))\n\n    /* if(dataWithPadding.byteLength % 16) {\n      this.log.error('aaa', dataWithPadding, paddingLength);\n    }\n\n    if(message.fileUpload) {\n      this.log('Send encrypted: body length:', (message.body as ArrayBuffer).byteLength, paddingLength, dataWithPadding);\n    } */\n\n    // * full next block is correct\n    return this.getEncryptedMessage(dataWithPadding).then((encryptedResult) => {\n      /* if(DEBUG) {\n        this.log('Got encrypted out message', encryptedResult);\n      } */\n\n      const request = new TLSerialization({\n        startMaxLength: encryptedResult.bytes.length + 256\n      });\n      request.storeIntBytes(this.authKeyId, 64, 'auth_key_id');\n      request.storeIntBytes(encryptedResult.msgKey, 128, 'msg_key');\n      request.storeRawBytes(encryptedResult.bytes, 'encrypted_data');\n\n      const requestData = request.getBytes(true);\n\n      // if(this.isFileNetworker) {\n      //   //this.log('Send encrypted: requestData length:', requestData.length, requestData.length % 16, paddingLength % 16, paddingLength, data.offset, encryptedResult.msgKey.length % 16, encryptedResult.bytes.length % 16);\n      //   //this.log('Send encrypted: messageId:', message.msg_id, requestData.length);\n      //   //this.log('Send encrypted:', message, new Uint8Array(bufferConcat(des.buffer, padding)), requestData, this.serverSalt.hex, this.sessionId.hex/* new Uint8Array(des.buffer) */);\n      //   this.debugRequests.push({before: new Uint8Array(bufferConcat(des.buffer, padding)), after: requestData});\n      // }\n\n      return requestData;\n    });\n  }\n\n  private async sendEncryptedRequest(message: MTMessage) {\n    const requestData = await this.getEncryptedOutput(message);\n\n    if(!this.transport) {\n      this.log.error('trying to send something when offline', this.transport, this);\n    }\n\n    this.debug && this.log.debug('sending:', message, [message.msg_id].concat(message.inner || []), requestData.length);\n    const promise: Promise<Uint8Array> = this.transport ? this.transport.send(requestData) as any : Promise.reject({});\n    // this.debug && this.log.debug('sendEncryptedRequest: launched message into space:', message, promise);\n\n                            \n                   \n            \n\n                         \n    if(!(this.transport instanceof HTTP)) return promise;\n             \n\n    const baseError: ApiError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE',\n      // @ts-ignore\n      transport: this.transport\n    };\n\n    return promise.then((result) => {\n      if(!result?.byteLength) {\n        throw baseError;\n      }\n\n      // this.debug && this.log.debug('sendEncryptedRequest: got response for:', message, [message.msg_id].concat(message.inner || []));\n      return result;\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          type: 'NETWORK_BAD_REQUEST',\n          originalError: error\n        });\n      }\n\n      throw error;\n    });\n             \n  }\n\n  public parseResponse(responseBuffer: Uint8Array) {\n    // const perf = performance.now();\n    /* if(this.debug) {\n      this.log.debug('Start parsing response', responseBuffer);\n    } */\n\n    this.lastResponseTime = Date.now();\n\n    const deserializer = new TLDeserialization(responseBuffer);\n\n    const authKeyId = deserializer.fetchIntBytes(64, true, 'auth_key_id');\n    if(!bytesCmp(authKeyId, this.authKeyId)) {\n      throw new Error('[MT] Invalid server auth_key_id: ' + bytesToHex(authKeyId));\n    }\n\n    const msgKey = deserializer.fetchIntBytes(128, true, 'msg_key');\n    const encryptedData = deserializer.fetchRawBytes(responseBuffer.byteLength - deserializer.getOffset(), true, 'encrypted_data');\n\n    return this.getDecryptedMessage(msgKey, encryptedData).then((dataWithPadding) => {\n      // this.log('after decrypt')\n      return this.getMsgKey(dataWithPadding, false).then((calcMsgKey) => {\n        if(!bytesCmp(msgKey, calcMsgKey)) {\n          this.log.warn('[MT] msg_keys', msgKey, calcMsgKey);\n          this.updateSession(); // fix 28.01.2020\n          throw new Error('[MT] server msgKey mismatch, updating session');\n        }\n        // this.log('after msgKey check')\n\n        let deserializer = new TLDeserialization<MTLong>(dataWithPadding, {mtproto: true});\n\n        /* const salt =  */deserializer.fetchIntBytes(64, true, 'salt'); // need\n        const sessionId = deserializer.fetchIntBytes(64, true, 'session_id');\n        const messageId = deserializer.fetchLong('message_id');\n\n        if(!bytesCmp(sessionId, this.sessionId) &&\n          (!this.prevSessionId || !bytesCmp(sessionId, this.prevSessionId))) {\n          this.log.warn('Sessions', sessionId, this.sessionId, this.prevSessionId, dataWithPadding);\n          // this.updateSession();\n          // this.sessionID = sessionID;\n          throw new Error('[MT] Invalid server session_id: ' + bytesToHex(sessionId));\n        }\n\n        const seqNo = deserializer.fetchInt('seq_no');\n\n        const totalLength = dataWithPadding.byteLength;\n\n        const messageBodyLength = deserializer.fetchInt('message_data[length]');\n        let offset = deserializer.getOffset();\n\n        if((messageBodyLength % 4) ||\n          messageBodyLength > totalLength - offset) {\n          throw new Error('[MT] Invalid body length: ' + messageBodyLength);\n        }\n        const messageBody = deserializer.fetchRawBytes(messageBodyLength, true, 'message_data');\n\n        offset = deserializer.getOffset();\n        const paddingLength = totalLength - offset;\n        if(paddingLength < 12 || paddingLength > 1024) {\n          throw new Error('[MT] Invalid padding length: ' + paddingLength);\n        }\n\n        // let buffer = bytesToArrayBuffer(messageBody);\n        deserializer = new TLDeserialization<MTLong>(/* buffer */messageBody, {\n          mtproto: true,\n          override: {\n            mt_message: (result: any, field: string) => {\n              result.msg_id = deserializer.fetchLong(field + '[msg_id]');\n              result.seqno = deserializer.fetchInt(field + '[seqno]');\n              result.bytes = deserializer.fetchInt(field + '[bytes]');\n\n              const offset = deserializer.getOffset();\n\n              // self.log('mt_message!!!!!', result, field);\n\n              try {\n                result.body = deserializer.fetchObject('Object', field + '[body]');\n              } catch(e) {\n                this.log.error('parse error', (e as Error).message, (e as Error).stack);\n                result.body = {\n                  _: 'parse_error',\n                  error: e\n                };\n              }\n\n              if(deserializer.getOffset() !== offset + result.bytes) {\n                // console.warn(dT(), 'set offset', this.offset, offset, result.bytes)\n                // this.log(result)\n                deserializer.setOffset(offset + result.bytes);\n              }\n              // this.log('override message', result)\n            },\n            mt_rpc_result: (result: any, field: any) => {\n              result.req_msg_id = deserializer.fetchLong(field + '[req_msg_id]');\n\n              const sentMessage = this.sentMessages[result.req_msg_id];\n              const type = sentMessage && sentMessage.resultType || 'Object';\n\n              if(result.req_msg_id && !sentMessage) {\n                // console.warn(dT(), 'Result for unknown message', result);\n                return;\n              }\n\n              // deserializer.setMtproto(false);\n              result.result = deserializer.fetchObject(type, field + '[result]');\n              // deserializer.setMtproto(true);\n              // self.log(dT(), 'override rpc_result', sentMessage, type, result);\n            }\n          }\n        });\n\n        const response = deserializer.fetchObject('', 'INPUT');\n        // this.log.error('Parse response time:', performance.now() - perf);\n        return {\n          response,\n          messageId,\n          sessionId,\n          seqNo\n        };\n      });\n    });\n  }\n\n  private applyServerSalt(newServerSalt: string) {\n    const serverSalt = longToBytes(newServerSalt);\n\n    sessionStorage.set({\n      ['dc' + this.dcId + '_server_salt']: bytesToHex(serverSalt)\n    });\n\n    this.serverSalt = new Uint8Array(serverSalt);\n  }\n\n  // ! таймаут очень сильно тормозит скорость работы сокета (даже нулевой)\n  public scheduleRequest(delay?: number) {\n    /* if(!this.isOnline) {\n      return;\n    } */\n\n                           \n                         \n    if(this.transport instanceof HTTP) {\n             \n      if(this.offline) {\n        this.checkConnection('forced schedule');\n      }\n\n      delay ||= 0; // set zero timeout to pack other messages too\n                         \n    }\n             \n             \n\n    const nextReq = Date.now() + (delay || 0);\n    if(this.nextReq && (delay === undefined || this.nextReq <= nextReq)) {\n      // this.debug && this.log('scheduleRequest: nextReq', this.nextReq, nextReq);\n      return;\n    }\n\n    // this.debug && this.log('scheduleRequest: delay', delay);\n\n    /* if(this.nextReqTimeout) {\n      return;\n    } */\n\n    // const perf = performance.now();\n    if(this.nextReqTimeout) {\n      clearTimeout(this.nextReqTimeout);\n    }\n\n    const cb = () => {\n      // this.debug && this.log('scheduleRequest: timeout delay was:', performance.now() - perf);\n\n      this.nextReqTimeout = 0;\n      this.nextReq = 0;\n\n                             \n                           \n      if(this.transport instanceof HTTP)\n               \n        if(this.offline) {\n        // this.log('Cancel scheduled');\n          return;\n        }\n               \n\n      this.performScheduledRequest();\n    };\n\n    this.nextReq = nextReq;\n\n    if(delay !== undefined) {\n      this.nextReqTimeout = ctx.setTimeout(cb, delay);\n    } else {\n      cb();\n    }\n  }\n\n  private ackMessage(msgId: MTLong) {\n    // this.log('ack message', msgID)\n    this.pendingAcks.push(msgId);\n\n    let delay: number;\n\n                           \n                         \n    if(this.transport instanceof HTTP)\n             \n      delay = 30000;\n             \n\n    this.scheduleRequest(delay);\n  }\n\n  private reqResend(msgId: MTLong/* , isAnswer?: boolean */) {\n    if(this.debug) {\n      this.log.debug('Req resend', msgId/* , isAnswer */);\n    }\n\n    // (isAnswer ? this.pendingResendAnsReq : this.pendingResendReq).push(msgId);\n    this.pendingResendReq.push(msgId);\n    this.scheduleRequest(100);\n  }\n\n  public cleanupSent() {\n    let notEmpty = false;\n    const sentMessages = this.sentMessages;\n    // this.log('clean start', this.dcId/*, sentMessages*/)\n    Object.keys(sentMessages).forEach((msgId) => {\n      const message = sentMessages[msgId];\n\n      // this.log('clean iter', msgID, message)\n      if(message.notContentRelated && this.pendingMessages[msgId] === undefined) {\n        // this.log('clean notContentRelated', msgID)\n        delete sentMessages[msgId];\n      } else if(message.container) {\n        for(const innerMsgId of message.inner) {\n          if(sentMessages[innerMsgId] !== undefined) {\n            // this.log('clean failed, found', msgID, message.inner[i], sentMessages[message.inner[i]].seq_no)\n            notEmpty = true;\n            return;\n          }\n        }\n        // this.log('clean container', msgID)\n        delete sentMessages[msgId];\n      } else {\n        notEmpty = true;\n      }\n    });\n\n    return !notEmpty;\n  }\n\n  private processMessageAck(messageId: Long) {\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage && !sentMessage.acked) {\n      // delete sentMessage.body;\n      sentMessage.acked = true;\n    }\n  }\n\n  private processError(rawError: {error_message: string, error_code: number}): ApiError {\n    const matches = (rawError.error_message || '').match(/^([A-Z_0-9]+\\b)(: (.+))?/) || [];\n    rawError.error_code = rawError.error_code;\n\n    return {\n      code: !rawError.error_code || rawError.error_code <= 0 ? 500 : rawError.error_code,\n      type: matches[1] as any || 'UNKNOWN',\n      description: matches[3] || ('CODE#' + rawError.error_code + ' ' + rawError.error_message),\n      originalError: rawError\n    };\n  }\n\n  /**\n   * * только для сокета\n   * TODO: consider about containers resend\n   */\n  public resend() {\n    const sentMessages = this.sentMessages;\n    for(const id in sentMessages) {\n      const msg = sentMessages[id];\n      if(msg.body || msg.container) {\n        this.pushResend(id);\n      }\n    }\n\n    if((this.transport as TcpObfuscated).connection) {\n      this.clearPingDelayDisconnect();\n      this.sendPingDelayDisconnect();\n    }\n  }\n\n  /* public requestMessageStatus() {\n    const ids: string[] = [];\n    for(const id in this.sentMessages) {\n      const message = this.sentMessages[id];\n      if(message.isAPI && message.fileUpload) {\n        ids.push(message.msg_id);\n      }\n    }\n\n    this.wrapMtpMessage({\n      _: 'msgs_state_req',\n      msg_ids: ids\n    }, {\n      notContentRelated: true\n    }).then((res) => {\n      this.log('status', res);\n    });\n  } */\n\n  private applyServerTime(messageId: string) {\n    const serverTime = bigInt(messageId).shiftRight(32).toJSNumber();\n    this.log('applying server time', serverTime);\n    return this.timeManager.applyServerTime(serverTime);\n  }\n\n  // * https://core.telegram.org/mtproto/service_messages_about_messages#notice-of-ignored-error-message\n  public processMessage(message: any, messageId: MTLong, sessionId: Uint8Array | number[]) {\n    if(message._ === 'messageEmpty') {\n      this.log.warn('processMessage: messageEmpty', message, messageId);\n      return;\n    }\n\n    // messageId = messageId.toString();\n\n    const msgidInt = parseInt(messageId.substr(0, -10), 10);\n    if(msgidInt % 2) {\n      this.log.warn('Server even message id: ', messageId, message);\n      return;\n    }\n\n    if(this.debug) {\n      this.log.debug('process message', message, messageId);\n    }\n\n    if(this.pingDelayDisconnectDeferred) {\n      this.pingDelayDisconnectDeferred.resolve('any message');\n    }\n\n    // let changedTimeOffset: boolean;\n    // if(this.getNewTimeOffset) {\n    //   changedTimeOffset = this.applyServerTime(messageId);\n    //   this.getNewTimeOffset = undefined;\n    // }\n\n    switch(message._) {\n      case 'msg_container': {\n        for(const innerMessage of message.messages) {\n          this.processMessage(innerMessage, innerMessage.msg_id, sessionId);\n        }\n\n        break;\n      }\n\n      case 'bad_server_salt': {\n        this.log('Bad server salt', message);\n\n        this.applyServerSalt(message.new_server_salt);\n\n        if(this.sentMessages[message.bad_msg_id]) {\n          this.pushResend(message.bad_msg_id);\n        }\n\n        this.ackMessage(messageId);\n\n        // simulate disconnect\n        /* try {\n          this.log('networker state:', this);\n          // @ts-ignore\n          this.transport.ws.close(1000);\n        } catch(err) {\n          this.log.error('transport', this.transport, err);\n        } */\n\n        break;\n      }\n\n      case 'bad_msg_notification': {\n        this.log.error('Bad msg notification', message);\n\n        switch(message.error_code) {\n          case 16:    // * msg_id too low\n          case 17:    // * msg_id too high\n          case 32:    // * msg_seqno too low\n          case 33:    // * msg_seqno too high\n          case 64: {  // * invalid container\n            // if(changedTimeOffset === undefined) {\n            //   changedTimeOffset = this.applyServerTime(messageId);\n            // }\n\n            const changedTimeOffset = this.applyServerTime(messageId);\n            if(message.error_code === 17 || changedTimeOffset) {\n              this.log('Update session');\n              this.updateSession();\n            }\n\n            const badMessage = this.updateSentMessage(message.bad_msg_id);\n            if(badMessage) this.pushResend(badMessage.msg_id); // fix 23.01.2020\n            // this.ackMessage(messageId);\n          }\n\n          // * invalid container\n          /* case 64: {\n            const badMessage = this.sentMessages[message.bad_msg_id];\n            if(badMessage) {\n              for(const msgId of badMessage.inner) {\n                if(this.sentMessages[msgId] !== undefined) {\n                  this.updateSentMessage\n                }\n              }\n              const inner = badMessage.inner;\n            }\n          } */\n        }\n\n        break;\n      }\n\n      case 'message': {\n        if(this.lastServerMessages.indexOf(messageId) !== -1) {\n          // console.warn('[MT] Server same messageId: ', messageId)\n          this.ackMessage(messageId);\n          return;\n        }\n\n        this.lastServerMessages.push(messageId);\n        if(this.lastServerMessages.length > 100) {\n          this.lastServerMessages.shift();\n        }\n\n        this.processMessage(message.body, message.msg_id, sessionId);\n        break;\n      }\n\n      case 'new_session_created': {\n        this.ackMessage(messageId);\n\n        if(this.debug) {\n          this.log.debug('new_session_created', message);\n        }\n        // this.updateSession();\n\n        this.processMessageAck(message.first_msg_id);\n        this.applyServerSalt(message.server_salt);\n\n        sessionStorage.get('dc').then((baseDcId) => {\n          if(baseDcId === this.dcId && !this.isFileNetworker && this.networkerFactory.updatesProcessor) {\n            this.networkerFactory.updatesProcessor(message);\n          }\n        });\n        break;\n      }\n\n      case 'msgs_ack': {\n        this.debug && this.log('got acks', message.msg_ids);\n        for(const msgId of message.msg_ids) {\n          this.processMessageAck(msgId);\n        }\n\n        break;\n      }\n\n      case 'msg_detailed_info': {\n        const sentMessage = this.sentMessages[message.msg_id];\n        if(!sentMessage) {\n          this.ackMessage(message.answer_msg_id);\n          break;\n        }/*  else if(sentMessage.acked) {\n          this.reqResend(message.answer_msg_id, true);\n        }\n\n        break; */\n      }\n\n      case 'msg_new_detailed_info': {\n        if(this.pendingAcks.indexOf(message.answer_msg_id) !== -1) {\n          break;\n        }\n\n        this.reqResend(message.answer_msg_id);\n        break;\n      }\n\n      case 'msgs_state_info': {\n        this.ackMessage(message.answer_msg_id);\n        const arr = [\n          [this.lastResendReq, this.pendingResendReq] as const\n          // [this.lastResendAnsReq, this.pendingResendAnsReq] as const\n        ];\n\n        for(const [lastResend, pendingResend] of arr) {\n          if(lastResend?.reqMsgId === message.req_msg_id && pendingResend.length) {\n            for(const badMsgId of lastResend.msgIds) {\n              const pos = pendingResend.indexOf(badMsgId);\n              if(pos !== -1) {\n                pendingResend.splice(pos, 1);\n              }\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 'rpc_result': {\n        this.ackMessage(messageId);\n\n        const sentMessageId = message.req_msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        if(this.debug) {\n          this.log('Rpc response', message.result, sentMessage);\n        }\n\n        this.processMessageAck(sentMessageId);\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          if(message.result._ === 'rpc_error') {\n            const error = this.processError(message.result);\n            this.log('Rpc error', error);\n            if(deferred) {\n              deferred.reject(error);\n            }\n          } else {\n            if(deferred) {\n              deferred.resolve(message.result);\n            }\n\n            if(sentMessage.isAPI && !this.connectionInited) {\n              this.connectionInited = true;\n            }\n          }\n\n          delete this.sentMessages[sentMessageId];\n        } else {\n          if(this.debug) {\n            this.log('Rpc result for unknown message:', sentMessageId, message);\n          }\n        }\n\n        break;\n      }\n\n      case 'pong': { // * https://core.telegram.org/mtproto/service_messages#ping-messages-pingpong - These messages don't require acknowledgments\n        /* const sentMessageId = message.msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        if(sentMessage) {\n          sentMessage.deferred.resolve(message);\n          delete this.sentMessages[sentMessageId];\n        } */\n        const pingId = message.ping_id;\n        if(this.lastPingDelayDisconnectId === pingId) {\n          const deferred = this.pingDelayDisconnectDeferred;\n          if(deferred) {\n            deferred.resolve('pong');\n          } else {\n            this.log('ping deferred deleted', pingId);\n          }\n        }\n\n        break;\n      }\n\n      default:\n        this.ackMessage(messageId);\n\n        /* if(this.debug) {\n          this.log.debug('Update', message);\n        } */\n\n        if(this.networkerFactory.updatesProcessor !== null) {\n          this.networkerFactory.updatesProcessor(message);\n        }\n        break;\n    }\n  }\n}\n","import bigInt from 'big-integer';\n\nexport default function sortLongsArray(arr: string[]) {\n  return arr.map((long) => {\n    return bigInt(long);\n  }).sort((a, b) => {\n    return a.compare(b);\n  }).map((bigInt) => {\n    return bigInt.toString(10);\n  });\n}\n","import addPadding from '../bytes/addPadding';\nimport bigInt from 'big-integer';\nimport {bigIntToBytes} from '../bigInt/bigIntConversion';\n\nexport default function longToBytes(sLong: string) {\n  const bigIntBytes = bigIntToBytes(bigInt(sLong)).reverse();\n  const bytes = addPadding(bigIntBytes, 8, true, false, false);\n  // console.log('longToBytes', bytes, bigIntBytes);\n\n  return bytes;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type {ConnectionStatusChange} from './connectionStatus';\r\nimport MTPNetworker from './networker';\r\nimport {InvokeApiOptions} from '../../types';\r\nimport App from '../../config/app';\r\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\r\nimport {AppManager} from '../appManagers/manager';\r\n\r\nexport class NetworkerFactory extends AppManager {\r\n  private networkers: MTPNetworker[] = [];\r\n  public language = navigator.language || App.langPackCode;\r\n  public updatesProcessor: (obj: any) => void = null;\r\n  // public onConnectionStatusChange: (status: ConnectionStatusChange) => void = null;\r\n  public akStopped = false;\r\n\r\n  public onConnectionStatusChange(status: ConnectionStatusChange) {\r\n    this.rootScope.dispatchEvent('connection_status_change', status);\r\n    //  ({type: 'connectionStatusChange', payload: status});\r\n  }\r\n\r\n  public removeNetworker(networker: MTPNetworker) {\r\n    indexOfAndSplice(this.networkers, networker);\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n  }\r\n\r\n  public getNetworker(dcId: number, authKey: Uint8Array, authKeyId: Uint8Array, serverSalt: Uint8Array, options: InvokeApiOptions) {\r\n    // console.log('NetworkerFactory: creating new instance of MTPNetworker:', dcId, options);\r\n    const networker = new MTPNetworker(this, this.timeManager, dcId, authKey, authKeyId, serverSalt, options);\r\n    this.networkers.push(networker);\r\n    return networker;\r\n  }\r\n\r\n  public startAll() {\r\n    if(this.akStopped) {\r\n      const stoppedNetworkers = this.networkers.filter((networker) => networker.isStopped());\r\n\r\n      this.akStopped = false;\r\n      this.updatesProcessor && this.updatesProcessor({_: 'new_session_created'});\r\n\r\n      for(const networker of stoppedNetworkers) {\r\n        networker.scheduleRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  public stopAll() {\r\n    this.akStopped = true;\r\n  }\r\n\r\n  public setLanguage(langCode: string) {\r\n    this.language = langCode;\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.connectionInited = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public unsetConnectionInited() {\r\n    for(const networker of this.networkers) {\r\n      networker.connectionInited = false;\r\n    }\r\n  }\r\n\r\n  public forceReconnectTimeout() {\r\n    for(const networker of this.networkers) {\r\n      networker.forceReconnectTimeout();\r\n    }\r\n  }\r\n\r\n  public forceReconnect() {\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.forceReconnect();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n *\r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport {TLSerialization} from './tl_utils';\r\nimport cryptoWorker from '../crypto/cryptoMessagePort';\r\nimport Modes from '../../config/modes';\r\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\r\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\r\nimport bigInt from 'big-integer';\r\n\r\nexport type RSAPublicKeyHex = {\r\n  modulus: string,\r\n  exponent: string\r\n};\r\n\r\nexport class RSAKeysManager {\n  /**\r\n   *  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\r\n   *\r\n   *\r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEA6LszBcC1LGzyr992NzE0ieY+BSaOW622Aa9Bd4ZHLl+TuFQ4lo4g\r\n   *  5nKaMBwK/BIb9xUfg0Q29/2mgIR6Zr9krM7HjuIcCzFvDtr+L0GQjae9H0pRB2OO\r\n   *  62cECs5HKhT5DZ98K33vmWiLowc621dQuwKWSQKjWf50XYFw42h21P2KXUGyp2y/\r\n   *  +aEyZ+uVgLLQbRA1dEjSDZ2iGRy12Mk5gpYc397aYp438fsJoHIgJ2lgMv5h7WY9\r\n   *  t6N/byY9Nw9p21Og3AoXSL2q/2IJ1WRUhebgAdGVMlV1fkuOQoEzR7EdpqtQD9Cs\r\n   *  5+bfo3Nhmcyvk5ftB0WkJ9z6bNZ7yxrP8wIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEBadMIUYSKhyznMh+Pg+OxTLyDZrWEjQIPZC3oJCtuZX7qUxgcWqFX\r\n   *  Q1952TSY8S8NYuz12sK9Fvp+lil1hIG0U/cuPsK08VB1hB4VA+p0S46fGwVsRovq\r\n   *  4qUiUIzQSjSHDASuXTOinlYEHwmg/GaLc5G7qhePWa0p9YmqYR5Ha3xHJywcXZrn\r\n   *  yE3nC9igL96Aanqv+Prbu1N+r9vAgZeHh9cfbtbV8WWwruOANOTEv2ctQLR0dfr9\r\n   *  MwQXNePTPQlYsO9HNIGS1LWe7hZFtGBAVJH92F7Kig68WqHM3PIZ6Sq7N0VSzfzL\r\n   *  b11Z/YHz2UXYtXADwL/m5pTpKBUtJBXkOQIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   * Bytes can be got via\r\n   * $ openssl rsa -in rsa.pem -RSAPublicKey_in -pubout > pub.pem\r\n   * $ openssl rsa -pubin -in pub.pem -text -noout\r\n   */\r\n\r\n  /* private publisKeysHex = [{\r\n    modulus: 'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e580230e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d866b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde74a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'aeec36c8ffc109cb099624685b97815415657bd76d8c9c3e398103d7ad16c9bba6f525ed0412d7ae2c2de2b44e77d72cbf4b7438709a4e646a05c43427c7f184debf72947519680e651500890c6832796dd11f772c25ff8f576755afe055b0a3752c696eb7d8da0d8be1faf38c9bdd97ce0a77d3916230c4032167100edd0f9e7a3a9b602d04367b689536af0d64b613ccba7962939d3b57682beb6dae5b608130b2e52aca78ba023cf6ce806b1dc49c72cf928a7199d22e3d7ac84e47bc9427d0236945d10dbd15177bab413fbf0edfda09f014c7a7da088dde9759702ca760af2b8e4e97cc055c617bd74c3d97008635b98dc4d621b4891da9fb0473047927',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'bdf2c77d81f6afd47bd30f29ac76e55adfe70e487e5e48297e5a9055c9c07d2b93b4ed3994d3eca5098bf18d978d54f8b7c713eb10247607e69af9ef44f38e28f8b439f257a11572945cc0406fe3f37bb92b79112db69eedf2dc71584a661638ea5becb9e23585074b80d57d9f5710dd30d2da940e0ada2f1b878397dc1a72b5ce2531b6f7dd158e09c828d03450ca0ff8a174deacebcaa22dde84ef66ad370f259d18af806638012da0ca4a70baa83d9c158f3552bc9158e69bf332a45809e1c36905a5caa12348dd57941a482131be7b2355a5f4635374f3bd3ddf5ff925bf4809ee27c1e67d9120c5fe08a9de458b1b4a3c5d0a428437f2beca81f4e2d5ff',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'b3f762b739be98f343eb1921cf0148cfa27ff7af02b6471213fed9daa0098976e667750324f1abcea4c31e43b7d11f1579133f2b3d9fe27474e462058884e5e1b123be9cbbc6a443b2925c08520e7325e6f1a6d50e117eb61ea49d2534c8bb4d2ae4153fabe832b9edf4c5755fdd8b19940b81d1d96cf433d19e6a22968a85dc80f0312f596bd2530c1cfb28b5fe019ac9bc25cd9c2a5d8a0f3a1c0c79bcca524d315b5e21b5c26b46babe3d75d06d1cd33329ec782a0f22891ed1db42a1d6c0dea431428bc4d7aabdcf3e0eb6fda4e23eb7733e7727e9a1915580796c55188d2596d2665ad1182ba7abf15aaa5a8b779ea996317a20ae044b820bff35b6e8a1',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'be6a71558ee577ff03023cfa17aab4e6c86383cff8a7ad38edb9fafe6f323f2d5106cbc8cafb83b869cffd1ccf121cd743d509e589e68765c96601e813dc5b9dfc4be415c7a6526132d0035ca33d6d6075d4f535122a1cdfe017041f1088d1419f65c8e5490ee613e16dbf662698c0f54870f0475fa893fc41eb55b08ff1ac211bc045ded31be27d12c96d8d3cfc6a7ae8aa50bf2ee0f30ed507cc2581e3dec56de94f5dc0a7abee0be990b893f2887bd2c6310a1e0a9e3e38bd34fded2541508dc102a9c9b4c95effd9dd2dfe96c29be647d6c69d66ca500843cfaed6e440196f1dbe0e2e22163c61ca48c79116fa77216726749a976a1c4b0944b5121e8c01',\r\n    exponent: '010001'\r\n  }]; */\r\n\r\n  private testPublicKeysHex: RSAPublicKeyHex[] = [{\r\n    modulus: 'c8c11d635691fac091dd9489aedced2932aa8a0bcefef05fa800892d9b52ed03200865c9e97211cb2ee6c7ae96d3fb0e15aeffd66019b44a08a240cfdd2868a85e1f54d6fa5deaa041f6941ddf302690d61dc476385c2fa655142353cb4e4b59f6e5b6584db76fe8b1370263246c010c93d011014113ebdf987d093f9d37c2be48352d69a1683f8f6e6c2167983c761e3ab169fde5daaa12123fa1beab621e4da5935e9c198f82f35eae583a99386d8110ea6bd1abb0f568759f62694419ea5f69847c43462abef858b4cb5edc84e7b9226cd7bd7e183aa974a712c079dde85b9dc063b8a5c08e8f859c0ee5dcd824c7807f20153361a7f63cfd2a433a1be7f5',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publisKeysHex: RSAPublicKeyHex[] = [{\r\n    // modulus: '00e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    modulus: 'e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publicKeysParsed: {\r\n    [hex: string]: RSAPublicKeyHex\r\n  } = {};\r\n  private prepared = false;\r\n  private preparePromise: Promise<void> = null;\r\n\r\n  constructor() {\r\n    if(Modes.test) {\r\n      this.publisKeysHex = this.testPublicKeysHex;\r\n    }\r\n  }\r\n\r\n  public prepare(): Promise<void> {\r\n    if(this.preparePromise) return this.preparePromise;\r\n    else if(this.prepared) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return this.preparePromise = Promise.all(this.publisKeysHex.map((keyParsed) => {\r\n      const RSAPublicKey = new TLSerialization();\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.modulus), 'n');\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.exponent), 'e');\r\n\r\n      const buffer = RSAPublicKey.getBuffer();\r\n\r\n      return cryptoWorker.invokeCrypto('sha1', buffer).then((bytes) => {\r\n        const fingerprintBytes = bytes.slice(-8);\r\n        fingerprintBytes.reverse();\r\n\r\n        this.publicKeysParsed[bytesToHex(fingerprintBytes).toLowerCase()] = {\r\n          modulus: keyParsed.modulus,\r\n          exponent: keyParsed.exponent\r\n        };\r\n      });\r\n    })).then(() => {\r\n      this.prepared = true;\r\n\r\n      // console.log('[MT] Prepared keys');\r\n      this.preparePromise = null;\r\n    });\r\n  }\r\n\r\n  public async select(fingerprints: Array<string>) {\r\n    await this.prepare();\r\n\r\n    for(let i = 0; i < fingerprints.length; ++i) {\r\n      let fingerprintHex = bigInt(fingerprints[i]).toString(16).toLowerCase();\r\n\r\n      if(fingerprintHex.length < 16) {\r\n        fingerprintHex = new Array(16 - fingerprintHex.length).fill('0').join('') + fingerprintHex;\r\n      }\r\n\r\n      // console.log(fingerprintHex, this.publicKeysParsed);\r\n      const foundKey = this.publicKeysParsed[fingerprintHex];\r\n      if(foundKey) {\r\n        return Object.assign({\r\n          fingerprint: fingerprints[i]\r\n        }, foundKey);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new RSAKeysManager();\r\n","export default function bytesXor(bytes1: Uint8Array, bytes2: Uint8Array) {\n  const len = bytes1.length;\n  const bytes = new Uint8Array(len);\n\n  for(let i = 0; i < len; ++i) {\n    bytes[i] = bytes1[i] ^ bytes2[i];\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n                   \nimport transportController from './transports/controller';\n         \n\nimport {TLSerialization, TLDeserialization} from './tl_utils';\nimport {TransportType} from './dcConfigurator';\nimport rsaKeysManager from './rsaKeysManager';\n\nimport CryptoWorker from '../crypto/cryptoMessagePort';\n\nimport {logger, LogTypes} from '../logger';\nimport DEBUG from '../../config/debug';\nimport {Awaited, DcId} from '../../types';\nimport addPadding from '../../helpers/bytes/addPadding';\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport bytesXor from '../../helpers/bytes/bytesXor';\nimport {bigIntFromBytes} from '../../helpers/bigInt/bigIntConversion';\nimport bigInt from 'big-integer';\nimport randomize from '../../helpers/array/randomize';\nimport {AppManager} from '../appManagers/manager';\n\n/* let fNewNonce: any = bytesFromHex('8761970c24cb2329b5b2459752c502f3057cb7e8dbab200e526e8767fdc73b3c').reverse();\nlet fNonce: any = bytesFromHex('b597720d11faa5914ef485c529cde414').reverse();\nlet fResult: any = new Uint8Array(bytesFromHex('000000000000000001b473a0661b285e480000006324160514e4cd29c585f44e91a5fa110d7297b5c0c4134c84893db5715ecd56af5ed618082182053cc5de91cd00000015c4b51c02000000a5b7f709355fc30b216be86c022bb4c3'));\n\nfNewNonce = false;\nfNonce = false;\nfResult = false; */\n\ntype AuthOptions = {\n  dcId: number,\n  nonce: Uint8Array,\n\n  serverNonce?: Uint8Array,\n  pq?: Uint8Array,\n  fingerprints?: string[],\n  publicKey?: {\n    modulus: string,\n    exponent: string,\n    fingerprint: string\n  },\n\n  // good\n  p?: Uint8Array,\n  q?: Uint8Array,\n\n  newNonce?: Uint8Array,\n\n  retry?: number,\n\n  b?: Uint8Array,\n  g?: number,\n  gA?: Uint8Array,\n  dhPrime?: Uint8Array,\n\n  tmpAesKey?: Uint8Array,\n  tmpAesIv?: Uint8Array,\n\n  authKeyId?: Uint8Array,\n  authKey?: Uint8Array,\n  serverSalt?: Uint8Array,\n\n  localTime?: number,\n  serverTime?: any,\n};\n\ntype ResPQ = {\n  _: 'resPQ';\n  nonce: Uint8Array;\n  pq: Uint8Array;\n  server_nonce: Uint8Array;\n  server_public_key_fingerprints: string[];\n};\n\ntype P_Q_inner_data = {\n  _: 'p_q_inner_data_dc';\n  pq: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  new_nonce: Uint8Array;\n  dc: number;\n};\n\ntype req_DH_params = {\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  public_key_fingerprint: string;\n  encrypted_data: Uint8Array;\n};\n\nexport class Authorizer extends AppManager {\n  private cached: {\n    [dcId: DcId]: Promise<AuthOptions>\n  };\n\n  private log: ReturnType<typeof logger>;\n\n  private transportType: TransportType;\n\n                     \n  private getTransportTypePromise: Promise<void>;\n           \n\n  protected after() {\n    this.cached = {};\n    this.log = logger(`AUTHORIZER`, LogTypes.Error | LogTypes.Log);\n  }\n\n  private sendPlainRequest(dcId: DcId, requestArray: Uint8Array) {\n    const requestLength = requestArray.byteLength;\n\n    const header = new TLSerialization();\n    header.storeLongP(0, 0, 'auth_key_id');\n    header.storeLong(this.timeManager.generateId(), 'msg_id');\n    header.storeInt(requestLength, 'request_length');\n\n    const headerArray = header.getBytes(true) as Uint8Array;\n    const resultArray = new Uint8Array(headerArray.byteLength + requestLength);\n    resultArray.set(headerArray);\n    resultArray.set(requestArray, headerArray.length);\n\n    const transport = this.dcConfigurator.chooseServer(dcId, 'client', this.transportType);\n    const baseError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE'\n    };\n\n    if(DEBUG) {\n      this.log('mtpSendPlainRequest: creating requestPromise');\n    }\n\n    const promise = transport.send(resultArray) as any as Promise<Uint8Array>;\n    return promise.then((result) => {\n      if(DEBUG) {\n        this.log('mtpSendPlainRequest: in good sector', result);\n      }\n\n      if(!result || !result.byteLength) {\n        throw baseError;\n      }\n\n      try {\n        /* result = fResult ? fResult : result;\n        fResult = new Uint8Array(0); */\n\n        const deserializer = new TLDeserialization<MTLong>(result, {mtproto: true});\n\n        if(result.length === 4) {\n          const errorCode = deserializer.fetchInt();\n          this.log.error('mtpSendPlainRequest: wrong response, error code:', errorCode);\n          throw errorCode;\n        }\n\n        const auth_key_id = deserializer.fetchLong('auth_key_id');\n        if(auth_key_id !== '0') this.log.error('auth_key_id !== 0', auth_key_id);\n\n        const msg_id = deserializer.fetchLong('msg_id');\n        if(msg_id === '0') this.log.error('msg_id === 0', msg_id);\n\n        const msg_len = deserializer.fetchInt('msg_len');\n        if(!msg_len) this.log.error('no msg_len', msg_len);\n\n        return deserializer;\n      } catch(e) {\n        this.log.error('mtpSendPlainRequest: deserialization went bad', e);\n        const error = Object.assign(baseError, {originalError: e});\n        throw error;\n      }\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          originalError: error\n        });\n      }\n\n      throw error;\n    });\n  }\n\n  private async sendReqPQ(auth: AuthOptions) {\n    const request = new TLSerialization({mtproto: true});\n\n    request.storeMethod('req_pq_multi', {nonce: auth.nonce});\n\n    if(DEBUG) {\n      this.log('Send req_pq', bytesToHex(auth.nonce));\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      const promise = this.sendPlainRequest(auth.dcId, request.getBytes(true));\n      rsaKeysManager.prepare();\n      deserializer = await promise;\n    } catch(error) {\n      this.log.error('req_pq error', (error as Error).message);\n      throw error;\n    }\n\n    const response: ResPQ = deserializer.fetchObject('ResPQ');\n\n    if(response._ !== 'resPQ') {\n      throw new Error('[MT] resPQ response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      this.log.error(auth.nonce, response.nonce);\n      throw new Error('[MT] resPQ nonce mismatch');\n    }\n\n    auth.serverNonce = response.server_nonce; // need\n    auth.pq = response.pq;\n    auth.fingerprints = response.server_public_key_fingerprints;\n\n    if(DEBUG) {\n      this.log('Got ResPQ', bytesToHex(auth.serverNonce), bytesToHex(auth.pq), auth.fingerprints);\n    }\n\n    const publicKey = await rsaKeysManager.select(auth.fingerprints);\n    if(!publicKey) {\n      throw new Error('[MT] No public key found');\n    }\n\n    auth.publicKey = publicKey;\n\n    if(DEBUG) {\n      this.log('PQ factorization start', auth.pq);\n    }\n\n    // let pAndQ: Awaited<ReturnType<typeof CryptoWorker['factorize']>>;\n    try {\n      var pAndQ = await CryptoWorker.invokeCrypto('factorize', auth.pq);\n    } catch(error) {\n      this.log.error('worker error factorize', error);\n      throw error;\n    }\n\n    auth.p = pAndQ[0];\n    auth.q = pAndQ[1];\n\n    if(DEBUG) {\n      this.log('PQ factorization done', pAndQ);\n    }\n\n    return this.sendReqDhParams(auth);\n  }\n\n  private async sendReqDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    auth.newNonce = randomize(new Uint8Array(32));\n\n    const p_q_inner_data_dc: P_Q_inner_data = {\n      _: 'p_q_inner_data_dc',\n      pq: auth.pq,\n      p: auth.p,\n      q: auth.q,\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      new_nonce: auth.newNonce,\n      dc: 0\n    };\n\n    const pQInnerDataSerialization = new TLSerialization({mtproto: true});\n    pQInnerDataSerialization.storeObject(p_q_inner_data_dc, 'P_Q_inner_data', 'DECRYPTED_DATA');\n\n    const data = pQInnerDataSerialization.getBytes(true);\n    if(data.length > 144) {\n      throw 'DH_params: data is more than 144 bytes!';\n    }\n\n    const dataWithPadding = addPadding(data, 192, false, true, false);\n    const dataPadReversed = dataWithPadding.slice().reverse();\n\n    const getKeyAesEncrypted = async() => {\n      for(;;) {\n        const tempKey = randomize(new Uint8Array(32));\n        const dataWithHash = dataPadReversed.concat(await CryptoWorker.invokeCrypto('sha256', tempKey.concat(dataWithPadding)));\n        if(dataWithHash.length !== 224) {\n          throw 'DH_params: dataWithHash !== 224 bytes!';\n        }\n\n        const aesEncrypted = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, tempKey, new Uint8Array([0]));\n        const tempKeyXor = bytesXor(tempKey, await CryptoWorker.invokeCrypto('sha256', aesEncrypted));\n        const keyAesEncrypted = tempKeyXor.concat(aesEncrypted);\n\n        const keyAesEncryptedBigInt = bigIntFromBytes(keyAesEncrypted);\n        const publicKeyModulusBigInt = bigInt(auth.publicKey.modulus, 16);\n\n        if(keyAesEncryptedBigInt.compare(publicKeyModulusBigInt) === -1) {\n          return keyAesEncrypted;\n        }\n      }\n    };\n\n    const keyAesEncrypted = await getKeyAesEncrypted();\n    const encryptedData = addPadding(await CryptoWorker.invokeCrypto('rsa-encrypt', keyAesEncrypted, auth.publicKey), 256, true, true, true);\n\n    const req_DH_params: req_DH_params = {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      p: auth.p,\n      q: auth.q,\n      public_key_fingerprint: auth.publicKey.fingerprint,\n      encrypted_data: encryptedData\n    };\n\n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('req_DH_params', req_DH_params);\n\n    const requestBytes = request.getBytes(true);\n\n    if(DEBUG) {\n      this.log('Send req_DH_params', req_DH_params/* , requestBytes.hex */);\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, requestBytes);\n    } catch(error) {\n      this.log.error('Send req_DH_params FAIL!', error);\n      throw error;\n    }\n\n    const response = deserializer.fetchObject('Server_DH_Params', 'RESPONSE');\n\n    if(DEBUG) {\n      this.log('Sent req_DH_params, response:', response);\n    }\n\n    if(response._ !== 'server_DH_params_fail' && response._ !== 'server_DH_params_ok') {\n      throw new Error('[MT] Server_DH_Params response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Server_DH_Params nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Server_DH_Params server_nonce mismatch');\n    }\n\n    if(response._ === 'server_DH_params_fail') {\n      const newNonceHash = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce)).slice(-16);\n      if(!bytesCmp(newNonceHash, response.new_nonce_hash)) {\n        throw new Error('[MT] server_DH_params_fail new_nonce_hash mismatch');\n      }\n\n      throw new Error('[MT] server_DH_params_fail');\n    }\n\n    // fill auth object\n    try {\n      await this.decryptServerDhDataAnswer(auth, response.encrypted_answer);\n    } catch(e) {\n      this.log.error('mtpDecryptServerDhDataAnswer FAILED!', e);\n      throw e;\n    }\n\n    // console.log(dT(), 'mtpSendReqDhParams: executing mtpSendSetClientDhParams...');\n\n    return this.sendSetClientDhParams(auth);\n  }\n\n  private async decryptServerDhDataAnswer(auth: AuthOptions, encryptedAnswer: any) {\n    auth.localTime = Date.now();\n\n    // ! can't concat Array with Uint8Array!\n    auth.tmpAesKey = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.serverNonce)))\n    .concat((await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(0, 12));\n\n    auth.tmpAesIv = (await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(12)\n    .concat(await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.newNonce)), auth.newNonce.slice(0, 4));\n\n    const answerWithHash = new Uint8Array(await CryptoWorker.invokeCrypto('aes-decrypt', encryptedAnswer, auth.tmpAesKey, auth.tmpAesIv));\n\n    const hash = answerWithHash.slice(0, 20);\n    const answerWithPadding = answerWithHash.slice(20);\n\n    const deserializer = new TLDeserialization<MTLong>(answerWithPadding, {mtproto: true});\n    const response = deserializer.fetchObject('Server_DH_inner_data');\n\n    if(response._ !== 'server_DH_inner_data') {\n      throw new Error('[MT] server_DH_inner_data response invalid: ' + response);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] server_DH_inner_data nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] server_DH_inner_data serverNonce mismatch');\n    }\n\n    if(DEBUG) {\n      this.log('Done decrypting answer');\n    }\n    auth.g = response.g;\n    auth.dhPrime = response.dh_prime;\n    auth.gA = response.g_a;\n    auth.serverTime = response.server_time;\n    auth.retry = 0;\n\n    this.verifyDhParams(auth.g, auth.dhPrime, auth.gA);\n\n    const offset = deserializer.getOffset();\n\n    if(!bytesCmp(hash, await CryptoWorker.invokeCrypto('sha1', answerWithPadding.slice(0, offset)))) {\n      throw new Error('[MT] server_DH_inner_data SHA1 mismatch');\n    }\n\n    this.timeManager.applyServerTime(auth.serverTime, auth.localTime);\n  }\n\n  private verifyDhParams(g: number, dhPrime: Uint8Array, gA: Uint8Array) {\n    if(DEBUG) {\n      this.log('Verifying DH params', g, dhPrime, gA);\n    }\n\n    const dhPrimeHex = bytesToHex(dhPrime);\n    if(g !== 3 || dhPrimeHex !== 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b') {\n      // The verified value is from https://core.telegram.org/mtproto/security_guidelines\n      throw new Error('[MT] DH params are not verified: unknown dhPrime');\n    }\n\n    if(DEBUG) {\n      this.log('dhPrime cmp OK');\n    }\n\n    const gABigInt = bigIntFromBytes(gA);\n    const dhPrimeBigInt = bigInt(dhPrimeHex, 16);\n\n    if(gABigInt.compare(bigInt.one) <= 0) {\n      throw new Error('[MT] DH params are not verified: gA <= 1');\n    }\n\n    if(gABigInt.compare(dhPrimeBigInt.subtract(bigInt.one)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA >= dhPrime - 1');\n    }\n\n    if(DEBUG) {\n      this.log('1 < gA < dhPrime-1 OK');\n    }\n\n    const twoPow = bigInt(2).pow(2048 - 64);\n\n    if(gABigInt.compare(twoPow) < 0) {\n      throw new Error('[MT] DH params are not verified: gA < 2^{2048-64}');\n    }\n    if(gABigInt.compare(dhPrimeBigInt.subtract(twoPow)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}');\n    }\n\n    if(DEBUG) {\n      this.log('2^{2048-64} < gA < dhPrime-2^{2048-64} OK');\n    }\n\n    return true;\n  }\n\n  private async sendSetClientDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    const gBytes = bytesFromHex(auth.g.toString(16));\n\n    auth.b = randomize(new Uint8Array(256));\n    // MTProto.secureRandom.nextBytes(auth.b);\n\n    // let gB: Awaited<ReturnType<typeof CryptoWorker['modPow']>>;\n    try {\n      var gB = await CryptoWorker.invokeCrypto('mod-pow', gBytes, auth.b, auth.dhPrime);\n    } catch(error) {\n      throw error;\n    }\n\n    const data = new TLSerialization({mtproto: true});\n    data.storeObject({\n      _: 'client_DH_inner_data',\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      retry_id: [0, auth.retry++],\n      g_b: gB\n    }, 'Client_DH_Inner_Data');\n\n    const dataWithHash = (await CryptoWorker.invokeCrypto('sha1', data.getBuffer())).concat(data.getBytes(true));\n    const encryptedData = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, auth.tmpAesKey, auth.tmpAesIv);\n\n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('set_client_DH_params', {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      encrypted_data: encryptedData\n    });\n\n    if(DEBUG) {\n      this.log('Send set_client_DH_params');\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, request.getBytes(true));\n    } catch(err) {\n      throw err;\n    }\n\n    const response = deserializer.fetchObject('Set_client_DH_params_answer');\n\n    if(response._ !== 'dh_gen_ok' && response._ !== 'dh_gen_retry' && response._ !== 'dh_gen_fail') {\n      throw new Error('[MT] Set_client_DH_params_answer response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer server_nonce mismatch');\n    }\n\n    // let authKey: Uint8Array;\n    try {\n      var authKey = await CryptoWorker.invokeCrypto('mod-pow', auth.gA, auth.b, auth.dhPrime);\n    } catch(err) {\n      throw authKey;\n    }\n\n    const authKeyHash = await CryptoWorker.invokeCrypto('sha1', authKey),\n      authKeyAux = authKeyHash.slice(0, 8),\n      authKeyId = authKeyHash.slice(-8);\n\n    if(DEBUG) {\n      this.log('Got Set_client_DH_params_answer', response._, authKey);\n    }\n    switch(response._) {\n      case 'dh_gen_ok': {\n        const newNonceHash1 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([1], authKeyAux))).slice(-16);\n\n        if(!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\n          this.log.error('Set_client_DH_params_answer new_nonce_hash1 mismatch', newNonceHash1, response);\n          throw new Error('new_nonce_hash1 mismatch');\n        }\n\n        const serverSalt = bytesXor(auth.newNonce.slice(0, 8), auth.serverNonce.slice(0, 8));\n        if(DEBUG) {\n          this.log('Auth successfull!', authKeyId, authKey, serverSalt);\n        }\n\n        auth.authKeyId = authKeyId;\n        auth.authKey = authKey;\n        auth.serverSalt = serverSalt;\n\n        return auth;\n      }\n\n      case 'dh_gen_retry': {\n        const newNonceHash2 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([2], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch');\n        }\n\n        return this.sendSetClientDhParams(auth);\n      }\n\n      case 'dh_gen_fail': {\n        const newNonceHash3 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([3], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch');\n        }\n\n        throw new Error('[MT] Set_client_DH_params_answer fail');\n      }\n    }\n  }\n\n                     \n  private getTransportType() {\n    if(this.getTransportTypePromise) return this.getTransportTypePromise;\n    return this.getTransportTypePromise = transportController.pingTransports().then(({websocket}) => {\n      this.transportType = websocket ? 'websocket' : 'https';\n      this.log('will use transport:', this.transportType);\n    });\n  }\n           \n\n  public auth(dcId: DcId) {\n    let promise = this.cached[dcId];\n    if(promise) {\n      return promise;\n    }\n\n    promise = new Promise(async(resolve, reject) => {\n                         \n      await this.getTransportType();\n               \n\n      let error: ApiError;\n      let _try = 1;\n      while(_try++ <= 3) {\n        try {\n          const auth: AuthOptions = {\n            dcId,\n            nonce: randomize(new Uint8Array(16))\n          };\n\n          const promise = this.sendReqPQ(auth);\n          resolve(await promise);\n          return;\n        } catch(err) {\n          error = err;\n        }\n      }\n\n      reject(error);\n    });\n\n    return this.cached[dcId] = promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport sessionStorage from '../sessionStorage';\nimport {nextRandomUint} from '../../helpers/random';\nimport {WorkerTaskVoidTemplate} from '../../types';\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\nimport {AppManager} from '../appManagers/manager';\n\n/*\nlet lol: any = {};\nfor(var i = 0; i < 100; i++) {\n    timeManager.generateId();\n}\n*/\n\nexport interface ApplyServerTimeOffsetTask extends WorkerTaskVoidTemplate {\n  type: 'applyServerTimeOffset',\n  payload: TimeManager['timeOffset']\n};\n\nexport class TimeManager extends AppManager {\n  private lastMessageId: [number, number];\n  private timeOffset: number;\n\n  /* private midnightNoOffset: number;\n  private midnightOffseted: Date;\n\n  private midnightOffset: number; */\n\n  /* private timeParams: {\n    midnightOffset: number,\n    serverTimeOffset: number\n  }; */\n\n  protected after() {\n    this.lastMessageId = [0, 0];\n    this.timeOffset = 0;\n\n    sessionStorage.get('server_time_offset').then((to) => {\n      if(to) {\n        this.timeOffset = to;\n      }\n    });\n\n\n    // * migrated from ServerTimeManager\n    /* const timestampNow = tsNow(true);\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\n    this.midnightOffseted = new Date();\n    this.midnightOffseted.setHours(0, 0, 0, 0);\n\n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\n\n    /* this.timeParams = {\n      midnightOffset: this.midnightOffset,\n      serverTimeOffset: this.serverTimeOffset\n    }; */\n  }\n\n  public getServerTimeOffset() {\n    return this.timeOffset;\n  }\n\n  public generateId(): string {\n    const timeTicks = Date.now(),\n      timeSec = Math.floor(timeTicks / 1000) + this.timeOffset,\n      timeMSec = timeTicks % 1000,\n      random = nextRandomUint(16);\n\n    let messageId: TimeManager['lastMessageId'] = [timeSec, (timeMSec << 21) | (random << 3) | 4];\n    if(this.lastMessageId[0] > messageId[0] ||\n      this.lastMessageId[0] === messageId[0] && this.lastMessageId[1] >= messageId[1]) {\n      messageId = [this.lastMessageId[0], this.lastMessageId[1] + 4];\n    }\n\n    this.lastMessageId = messageId;\n\n    const ret = ulongFromInts(messageId[0], messageId[1]).toString(10);\n\n    // if(lol[ret]) {\n    //   console.error('[TimeManager]: Generated SAME msg id', messageId, this.timeOffset, ret);\n    // }\n    // lol[ret] = true;\n\n    // console.log('[TimeManager]: Generated msg id', messageId, this.timeOffset, ret);\n\n    return ret\n  }\n\n  public applyServerTime(serverTime: number, localTime?: number) {\n    localTime = (localTime || Date.now()) / 1000 | 0;\n    const newTimeOffset = serverTime - localTime;\n    const changed = Math.abs(this.timeOffset - newTimeOffset) > 10;\n    this.lastMessageId = [0, 0];\n\n    if(this.timeOffset !== newTimeOffset) {\n      sessionStorage.set({\n        server_time_offset: newTimeOffset\n      });\n\n      this.timeOffset = newTimeOffset;\n    }\n\n    // console.log('[TimeManager]: Apply server time', serverTime, localTime, newTimeOffset, changed);\n\n    return changed;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {DocumentAttribute, WebDocument} from '../../layer';\n\nexport default class AppWebDocsManager {\n  public saveWebDocument(webDocument: WebDocument) {\n    if(!webDocument) {\n      return;\n    }\n\n    const attribute: DocumentAttribute.documentAttributeImageSize = webDocument.attributes.find((attribute) => attribute._ === 'documentAttributeImageSize') as any;\n    if(attribute) {\n      webDocument.w = attribute.w;\n      webDocument.h = attribute.h;\n    }\n\n    return webDocument;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputInvoice, InputPaymentCredentials, PaymentRequestedInfo, PaymentsPaymentForm} from '../../layer';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\nexport default class AppPaymentsManager extends AppManager {\n  public getInputInvoiceBySlug(slug: string): InputInvoice.inputInvoiceSlug {\n    return {\n      _: 'inputInvoiceSlug',\n      slug\n    };\n  }\n\n  public getInputInvoiceByPeerId(peerId: PeerId, mid: number): InputInvoice.inputInvoiceMessage {\n    return {\n      _: 'inputInvoiceMessage',\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    };\n  }\n\n  public getPaymentForm(invoice: InputInvoice) {\n    return this.apiManager.invokeApi('payments.getPaymentForm', {\n      invoice\n    }).then((paymentForm) => {\n      this.appUsersManager.saveApiUsers(paymentForm.users);\n\n      return paymentForm;\n    });\n  }\n\n  public getPaymentReceipt(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApi('payments.getPaymentReceipt', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((paymentForm) => {\n      this.appUsersManager.saveApiUsers(paymentForm.users);\n\n      return paymentForm;\n    });\n  }\n\n  public validateRequestedInfo(invoice: InputInvoice, info: PaymentRequestedInfo, save?: boolean) {\n    return this.apiManager.invokeApi('payments.validateRequestedInfo', {\n      save,\n      invoice,\n      info\n    });\n  }\n\n  public sendPaymentForm(\n    invoice: InputInvoice,\n    formId: PaymentsPaymentForm['form_id'],\n    requestedInfoId: string,\n    shippingOptionId: string,\n    credentials: InputPaymentCredentials,\n    tipAmount?: number\n  ) {\n    return this.apiManager.invokeApi('payments.sendPaymentForm', {\n      form_id: formId,\n      invoice,\n      requested_info_id: requestedInfoId,\n      shipping_option_id: shippingOptionId,\n      credentials,\n      tip_amount: tipAmount || undefined\n    }).then((result) => {\n      if(result._ === 'payments.paymentResult') {\n        this.apiUpdatesManager.processUpdateMessage(result.updates);\n      }\n\n      return result;\n    });\n  }\n\n  public clearSavedInfo(info?: boolean, credentials?: boolean) {\n    return this.apiManager.invokeApi('payments.clearSavedInfo', {\n      info,\n      credentials\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport App from '../../config/app';\r\nimport {MOUNT_CLASS_TO} from '../../config/debug';\r\nimport callbackify from '../../helpers/callbackify';\r\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\r\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\r\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\r\nimport appStateManager from './appStateManager';\r\nimport {AppStoragesManager} from './appStoragesManager';\r\nimport createManagers from './createManagers';\r\n\r\ntype Managers = Awaited<ReturnType<typeof createManagers>>;\r\n\r\nexport class AppManagersManager {\r\n  private managers: Managers | Promise<Managers>;\r\n  private cryptoWorkersURLs: string[];\r\n  private cryptoPortsAttached: number;\r\n  private cryptoPortPromise: CancellablePromise<void>;\r\n\r\n  constructor() {\r\n    this.cryptoWorkersURLs = [];\r\n    this.cryptoPortsAttached = 0;\r\n    this.cryptoPortPromise = deferredPromise();\r\n    this.cryptoPortPromise.then(() => {\r\n      this.cryptoPortPromise = undefined;\r\n    });\r\n  }\r\n\r\n  public start() {\r\n    const port = MTProtoMessagePort.getInstance<false>();\r\n\r\n    port.addEventListener('manager', ({name, method, args}) => {\r\n      return callbackify(this.getManagers(), (managers) => {\r\n        // @ts-ignore\r\n        const manager = managers[name];\r\n        return manager[method].apply(manager, args);\r\n      });\r\n    });\r\n\r\n    port.addEventListener('cryptoPort', (payload, source, event) => {\r\n      const port = event.ports[0];\r\n      if(this.cryptoPortsAttached >= this.cryptoWorkersURLs.length) {\r\n        port.close();\r\n        return;\r\n      }\r\n\r\n      ++this.cryptoPortsAttached;\r\n      cryptoMessagePort.attachPort(port);\r\n      this.cryptoPortPromise?.resolve();\r\n    });\r\n\r\n    port.addEventListener('createProxyWorkerURLs', ({originalUrl, blob}) => {\r\n      let length = this.cryptoWorkersURLs.length;\r\n      if(!length) {\r\n        this.cryptoWorkersURLs.push(originalUrl);\r\n        ++length;\r\n      }\r\n\r\n      const maxLength = App.cryptoWorkers;\r\n      if(length === maxLength) {\r\n        return this.cryptoWorkersURLs;\r\n      }\r\n\r\n      const newURLs = new Array(maxLength - length).fill(undefined).map(() => URL.createObjectURL(blob));\r\n      this.cryptoWorkersURLs.push(...newURLs);\r\n      return this.cryptoWorkersURLs;\r\n    });\r\n  }\r\n\r\n  public async createManagers() {\r\n    const appStoragesManager = new AppStoragesManager();\r\n\r\n    await Promise.all([\r\n      // new Promise(() => {}),\r\n      appStoragesManager.loadStorages(),\r\n      this.cryptoPortPromise\r\n    ]);\r\n\r\n    const managers = await createManagers(appStoragesManager, appStateManager.userId);\r\n    return this.managers = managers;\r\n  }\r\n\r\n  public getManagers() {\r\n    return this.managers ??= this.createManagers();\r\n  }\r\n}\r\n\r\nconst appManagersManager = new AppManagersManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appManagersManager = appManagersManager);\r\nexport default appManagersManager;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {PasswordManager} from '../mtproto/passwordManager';\nimport {ReferenceDatabase} from '../mtproto/referenceDatabase';\nimport DialogsStorage from '../storages/dialogs';\nimport FiltersStorage from '../storages/filters';\nimport {ApiUpdatesManager} from './apiUpdatesManager';\nimport {AppAvatarsManager} from './appAvatarsManager';\nimport {AppCallsManager} from './appCallsManager';\nimport {AppChatsManager} from './appChatsManager';\nimport {AppDocsManager} from './appDocsManager';\nimport {AppDraftsManager} from './appDraftsManager';\nimport {AppEmojiManager} from './appEmojiManager';\nimport {AppGroupCallsManager} from './appGroupCallsManager';\nimport {AppInlineBotsManager} from './appInlineBotsManager';\nimport {AppMessagesIdsManager} from './appMessagesIdsManager';\nimport {AppMessagesManager} from './appMessagesManager';\nimport {AppNotificationsManager} from './appNotificationsManager';\nimport {AppPeersManager} from './appPeersManager';\nimport {AppPhotosManager} from './appPhotosManager';\nimport {AppPollsManager} from './appPollsManager';\nimport {AppPrivacyManager} from './appPrivacyManager';\nimport {AppProfileManager} from './appProfileManager';\nimport {AppReactionsManager} from './appReactionsManager';\nimport {AppStickersManager} from './appStickersManager';\nimport {AppUsersManager} from './appUsersManager';\nimport {AppWebPagesManager} from './appWebPagesManager';\nimport {ApiFileManager} from '../mtproto/apiFileManager';\nimport {ApiManager} from '../mtproto/apiManager';\nimport ctx from '../../environment/ctx';\nimport PeersStorage from '../storages/peers';\nimport ThumbsStorage from '../storages/thumbs';\nimport {NetworkerFactory} from '../mtproto/networkerFactory';\nimport {RootScope} from '../rootScope';\nimport {Authorizer} from '../mtproto/authorizer';\nimport {DcConfigurator} from '../mtproto/dcConfigurator';\nimport {TimeManager} from '../mtproto/timeManager';\nimport {AppStoragesManager} from './appStoragesManager';\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\nimport appStateManager from './appStateManager';\nimport filterUnique from '../../helpers/array/filterUnique';\nimport AppWebDocsManager from './appWebDocsManager';\nimport AppPaymentsManager from './appPaymentsManager';\n\nexport default function createManagers(appStoragesManager: AppStoragesManager, userId: UserId) {\n  const managers = {\n    appPeersManager: new AppPeersManager,\n    appChatsManager: new AppChatsManager,\n    appDocsManager: new AppDocsManager,\n    appPhotosManager: new AppPhotosManager,\n    appPollsManager: new AppPollsManager,\n    appUsersManager: new AppUsersManager,\n    appWebPagesManager: new AppWebPagesManager,\n    appDraftsManager: new AppDraftsManager,\n    appProfileManager: new AppProfileManager,\n    appNotificationsManager: new AppNotificationsManager,\n    apiUpdatesManager: new ApiUpdatesManager,\n    appAvatarsManager: new AppAvatarsManager,\n    appGroupCallsManager: new AppGroupCallsManager,\n    appCallsManager: new AppCallsManager,\n    appReactionsManager: new AppReactionsManager,\n    appMessagesManager: new AppMessagesManager,\n    appMessagesIdsManager: new AppMessagesIdsManager,\n    appPrivacyManager: new AppPrivacyManager,\n    appInlineBotsManager: new AppInlineBotsManager,\n    appStickersManager: new AppStickersManager,\n    referenceDatabase: new ReferenceDatabase,\n    appEmojiManager: new AppEmojiManager,\n    filtersStorage: new FiltersStorage,\n    dialogsStorage: new DialogsStorage,\n    apiManager: new ApiManager,\n    cryptoWorker: cryptoMessagePort,\n    passwordManager: new PasswordManager,\n    apiFileManager: new ApiFileManager,\n    peersStorage: new PeersStorage,\n    thumbsStorage: new ThumbsStorage,\n    networkerFactory: new NetworkerFactory,\n    rootScope: new RootScope,\n    authorizer: new Authorizer,\n    dcConfigurator: new DcConfigurator,\n    timeManager: new TimeManager,\n    appStoragesManager: appStoragesManager,\n    appStateManager: appStateManager,\n    appWebDocsManager: new AppWebDocsManager,\n    appPaymentsManager: new AppPaymentsManager\n  };\n\n  type T = typeof managers;\n\n  for(const name in managers) {\n    const manager = managers[name as keyof T];\n    if(!manager) {\n      continue;\n    }\n\n    if((manager as AppMessagesManager).setManagers) {\n      (manager as AppMessagesManager).setManagers(managers as any);\n      delete (manager as AppMessagesManager).setManagers;\n    }\n\n    // @ts-ignore\n    ctx[name] = manager;\n  }\n\n  const promises: Array<Promise<(() => void) | void> | void>[] = [];\n  let names = Object.keys(managers) as (keyof T)[];\n  names.unshift('appUsersManager', 'appChatsManager', 'appNotificationsManager', 'appMessagesManager', 'dialogsStorage');\n  names = filterUnique(names);\n  for(const name of names) {\n    const manager = managers[name];\n    if((manager as any)?.after) {\n      // console.log('injecting after', name);\n      const result = (manager as any).after();\n      promises.push(result);\n\n      // if(result instanceof Promise) {\n      //   result.then(() => {\n      //     console.log('injected after', name);\n      //   });\n      // }\n    }\n  }\n\n  if(userId) {\n    managers.apiManager.setUserAuth(userId);\n  }\n\n  return Promise.all(promises).then(() => managers);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// just to include\nimport '../polyfill';\nimport '../../helpers/peerIdPolyfill';\n\nimport cryptoWorker from '../crypto/cryptoMessagePort';\nimport {setEnvironment} from '../../environment/utils';\nimport appStateManager from '../appManagers/appStateManager';\nimport transportController from './transports/controller';\nimport MTProtoMessagePort from './mtprotoMessagePort';\nimport RESET_STORAGES_PROMISE from '../appManagers/utils/storages/resetStoragesPromise';\nimport appManagersManager from '../appManagers/appManagersManager';\nimport listenMessagePort from '../../helpers/listenMessagePort';\nimport {logger} from '../logger';\nimport {State} from '../../config/state';\nimport toggleStorages from '../../helpers/toggleStorages';\nimport appTabsManager from '../appManagers/appTabsManager';\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\nimport callbackify from '../../helpers/callbackify';\n\nlet _isServiceWorkerOnline = true;\nexport function isServiceWorkerOnline() {\n  return _isServiceWorkerOnline;\n}\n\nlet serviceMessagePort: ServiceMessagePort<true>, _serviceMessagePort: MessagePort;\nexport function getServiceMessagePort() {\n  return _isServiceWorkerOnline ? serviceMessagePort : undefined;\n}\n\nconst log = logger('MTPROTO');\n// let haveState = false;\n\nconst port = new MTProtoMessagePort<false>();\nport.addMultipleEventsListeners({\n  environment: (environment) => {\n    setEnvironment(environment);\n\n    transportController.waitForWebSocket();\n  },\n\n  crypto: ({method, args}) => {\n    return cryptoWorker.invokeCrypto(method as any, ...args as any);\n  },\n\n  state: ({state, resetStorages, pushedKeys, newVersion, oldVersion, userId}) => {\n    // if(haveState) {\n    //   return;\n    // }\n\n    log('got state', state, pushedKeys);\n\n    appStateManager.userId = userId;\n    appStateManager.newVersion = newVersion;\n    appStateManager.oldVersion = oldVersion;\n\n    (Object.keys(state) as any as (keyof State)[]).forEach((key) => {\n      appStateManager.pushToState(key, state[key], true, !pushedKeys.includes(key));\n    });\n\n    RESET_STORAGES_PROMISE.resolve(resetStorages);\n    // haveState = true;\n  },\n\n  toggleStorages: ({enabled, clearWrite}) => {\n    return toggleStorages(enabled, clearWrite);\n  },\n\n  event: (payload, source) => {\n    log('will redirect event', payload, source);\n    port.invokeExceptSource('event', payload, source);\n  },\n\n  serviceWorkerOnline: (online) => {\n    _isServiceWorkerOnline = online;\n  },\n\n  serviceWorkerPort: (payload, source, event) => {\n    if(serviceMessagePort) {\n      serviceMessagePort.detachPort(_serviceMessagePort);\n      _serviceMessagePort = undefined;\n    } else {\n      serviceMessagePort = new ServiceMessagePort();\n      serviceMessagePort.addMultipleEventsListeners({\n        requestFilePart: (payload) => {\n          return callbackify(appManagersManager.getManagers(), (managers) => {\n            const {docId, dcId, offset, limit} = payload;\n            return managers.appDocsManager.requestDocPart(docId, dcId, offset, limit);\n          });\n        }\n      });\n    }\n\n    // * port can be undefined in the future\n    if(_serviceMessagePort = event.ports[0]) {\n      serviceMessagePort.attachPort(_serviceMessagePort);\n    }\n  },\n\n  createObjectURL: (blob) => {\n    return URL.createObjectURL(blob);\n  }\n\n  // socketProxy: (task) => {\n  //   const socketTask = task.payload;\n  //   const id = socketTask.id;\n\n  //   const socketProxied = socketsProxied.get(id);\n  //   if(socketTask.type === 'message') {\n  //     socketProxied.dispatchEvent('message', socketTask.payload);\n  //   } else if(socketTask.type === 'open') {\n  //     socketProxied.dispatchEvent('open');\n  //   } else if(socketTask.type === 'close') {\n  //     socketProxied.dispatchEvent('close');\n  //     socketsProxied.delete(id);\n  //   }\n  // },\n});\n\nlog('MTProto start');\n\nappManagersManager.start();\nappManagersManager.getManagers();\nappTabsManager.start();\n\n// let sentHello = false;\nlistenMessagePort(port, (source) => {\n  appTabsManager.addTab(source);\n\n  // port.invokeVoid('hello', undefined, source);\n  // if(!sentHello) {\n  //   port.invokeVoid('hello', undefined, source);\n  //   sentHello = true;\n  // }\n}, (source) => {\n  appTabsManager.deleteTab(source);\n});\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type SuperMessagePort from '../lib/mtproto/superMessagePort';\r\nimport ctx from '../environment/ctx';\r\n\r\nexport default function listenMessagePort(\r\n  messagePort: SuperMessagePort<any, any, any>,\r\n  onConnect?: (source: MessageEventSource) => void,\r\n  onDisconnect?: (source: MessageEventSource) => void\r\n) {\r\n  const attachPort = (listenPort: any, sendPort: any) => {\r\n    messagePort.attachListenPort(listenPort);\r\n    sendPort && messagePort.attachSendPort(sendPort);\r\n    onConnect?.(listenPort);\r\n  };\r\n\r\n  messagePort.setOnPortDisconnect(onDisconnect);\r\n\r\n  if(typeof(SharedWorkerGlobalScope) !== 'undefined') {\r\n    (ctx as any as SharedWorkerGlobalScope).addEventListener('connect', (e) => attachPort(e.source, e.source));\r\n  } else if(typeof(ServiceWorkerGlobalScope) !== 'undefined') {\r\n    attachPort(ctx, null);\r\n  } else {\r\n    attachPort(ctx, ctx);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type {MyDialogFilter} from '../storages/filters';\r\n\r\n/**\r\n * Legacy Webogram's format, don't change dcID to camelCase. date is timestamp\r\n */\r\nexport type UserAuth = {dcID: number | string, date: number, id: PeerId};\r\nexport type REAL_FOLDER_ID = 0 | 1;\r\n\r\nexport const NULL_PEER_ID: PeerId = 0;\r\nexport const REPLIES_PEER_ID: PeerId = 1271266957;\r\nexport const REPLIES_HIDDEN_CHANNEL_ID: ChatId = 777;\r\nexport const SERVICE_PEER_ID: PeerId = 777000;\r\nexport const MUTE_UNTIL = 0x7FFFFFFF;\r\nexport const BOT_START_PARAM = '';\r\nexport const MAX_FILE_SAVE_SIZE = 20 * 1024 * 1024;\r\nexport const THUMB_TYPE_FULL = '';\r\n\r\nexport const FOLDER_ID_ALL: REAL_FOLDER_ID = 0;\r\nexport const FOLDER_ID_ARCHIVE: REAL_FOLDER_ID = 1;\r\nexport const REAL_FOLDERS: Set<number> = new Set([FOLDER_ID_ALL, FOLDER_ID_ARCHIVE]);\r\nexport const START_LOCAL_ID = Math.max(...Array.from(REAL_FOLDERS)) + 1 as MyDialogFilter['localId'];\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport emojiRegExp from '../../vendor/emoji/regex';\nimport {MessageEntity} from '../../layer';\n\nconst EmojiHelper = {\n  emojiMap: (code: string) => { return code; },\n  shortcuts: [] as any,\n  emojis: [] as any\n};\n\nexport const ALPHA_CHARS_REG_EXP = 'a-z' +\n  '\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u00ff' + // Latin-1\n  '\\\\u0100-\\\\u024f' + // Latin Extended A and B\n  '\\\\u0253\\\\u0254\\\\u0256\\\\u0257\\\\u0259\\\\u025b\\\\u0263\\\\u0268\\\\u026f\\\\u0272\\\\u0289\\\\u028b' + // IPA Extensions\n  '\\\\u02bb' + // Hawaiian\n  '\\\\u0300-\\\\u036f' + // Combining diacritics\n  '\\\\u1e00-\\\\u1eff' + // Latin Extended Additional (mostly for Vietnamese)\n  '\\\\u0400-\\\\u04ff\\\\u0500-\\\\u0527' + // Cyrillic\n  '\\\\u2de0-\\\\u2dff\\\\ua640-\\\\ua69f' + // Cyrillic Extended A/B\n  '\\\\u0591-\\\\u05bf\\\\u05c1-\\\\u05c2\\\\u05c4-\\\\u05c5\\\\u05c7' +\n  '\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f4' + // Hebrew\n  '\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40-\\\\ufb41' +\n  '\\\\ufb43-\\\\ufb44\\\\ufb46-\\\\ufb4f' + // Hebrew Pres. Forms\n  '\\\\u0610-\\\\u061a\\\\u0620-\\\\u065f\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc' +\n  '\\\\u06de-\\\\u06e8\\\\u06ea-\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff' + // Arabic\n  '\\\\u0750-\\\\u077f\\\\u08a0\\\\u08a2-\\\\u08ac\\\\u08e4-\\\\u08fe' + // Arabic Supplement and Extended A\n  '\\\\ufb50-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb' + // Pres. Forms A\n  '\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc' + // Pres. Forms B\n  '\\\\u200c' + // Zero-Width Non-Joiner\n  '\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e' + // Thai\n  '\\\\u1100-\\\\u11ff\\\\u3130-\\\\u3185\\\\uA960-\\\\uA97F\\\\uAC00-\\\\uD7AF\\\\uD7B0-\\\\uD7FF' + // Hangul (Korean)\n  '\\\\u3003\\\\u3005\\\\u303b' + // Kanji/Han iteration marks\n  '\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a' + // full width Alphabet\n  '\\\\uff66-\\\\uff9f' + // half width Katakana\n  '\\\\uffa1-\\\\uffdc'; // half width Hangul (Korean)\nexport const ALPHA_NUMERIC_REG_EXP = '0-9\\_' + ALPHA_CHARS_REG_EXP;\nexport const DOMAIN_ADD_CHARS = '\\u00b7';\n// Based on Regular Expression for URL validation by Diego Perini\nexport const URL_ALPHANUMERIC_REG_EXP_PART = '[' + ALPHA_CHARS_REG_EXP + '0-9]';\nexport const URL_PROTOCOL_REG_EXP_PART = '((?:https?|ftp)://|mailto:)?';\nexport const URL_REG_EXP = URL_PROTOCOL_REG_EXP_PART +\n  // user:pass authentication\n  '(?:' + URL_ALPHANUMERIC_REG_EXP_PART + '{1,64}(?::' + URL_ALPHANUMERIC_REG_EXP_PART + '{0,64})?@)?' +\n  '(?:' +\n  // sindresorhus/ip-regexp\n  '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}' +\n  '|' +\n  // host name\n  URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}' +\n  // domain name\n  '(?:\\\\.' + URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}){0,10}' +\n  // TLD identifier\n  '(?:\\\\.(xn--[0-9a-z]{2,16}|[' + ALPHA_CHARS_REG_EXP + ']{2,24}))' +\n  ')' +\n  // port number\n  '(?::\\\\d{2,5})?' +\n  // resource path\n  '(?:/(?:\\\\S{0,255}[^\\\\s.;,(\\\\[\\\\]{}<>\"\\'])?)?';\nexport const URL_PROTOCOL_REG_EXP = new RegExp('^' + URL_PROTOCOL_REG_EXP_PART.slice(0, -1), 'i');\nexport const URL_ANY_PROTOCOL_REG_EXP = /^((?:[^\\/]+?):\\/\\/|mailto:)/;\nexport const USERNAME_REG_EXP = '[a-zA-Z\\\\d_]{5,32}';\nexport const BOT_COMMAND_REG_EXP = '\\\\/([a-zA-Z\\\\d_]{1,32})(?:@(' + USERNAME_REG_EXP + '))?(\\\\b|$)';\nexport const FULL_REG_EXP = new RegExp('(^| )(@)(' + USERNAME_REG_EXP + ')|(' + URL_REG_EXP + ')|(\\\\n)|(' + emojiRegExp + ')|(^|[\\\\s\\\\(\\\\]])(#[' + ALPHA_NUMERIC_REG_EXP + ']{2,64})|(^|\\\\s)' + BOT_COMMAND_REG_EXP, 'i');\nexport const EMAIL_REG_EXP = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n// const markdownTestRegExp = /[`_*@~]/;\nexport const MARKDOWN_REG_EXP = /(^|\\s|\\n)(````?)([\\s\\S]+?)(````?)([\\s\\n\\.,:?!;]|$)|(^|\\s|\\x01)(`|~~|\\*\\*|__|_-_|\\|\\|)([^\\n]+?)\\7([\\x01\\s\\.,:?!;]|$)|@(\\d+)\\s*\\((.+?)\\)|(\\[(.+?)\\]\\((.+?)\\))/m;\nexport const SITE_HASHTAGS: {[siteName: string]: string} = {\n  'Telegram': 'tg://search_hashtag?hashtag={1}',\n  'Twitter': 'https://twitter.com/hashtag/{1}',\n  'Instagram': 'https://instagram.com/explore/tags/{1}/',\n  'Google Plus': 'https://plus.google.com/explore/{1}'\n};\n\n// export const SITE_MENTIONS: {[siteName in 'Telegram' | 'Twitter' | 'Instagram' | 'GitHub']: string} = {\n//   Telegram: '#{1}',\n//   Twitter: 'https://twitter.com/{1}',\n//   Instagram: 'https://instagram.com/{1}/',\n//   GitHub: 'https://github.com/{1}'\n// };\n\nexport const MARKDOWN_ENTITIES: {[markdown: string]: MessageEntity['_']} = {\n  '`': 'messageEntityCode',\n  '``': 'messageEntityPre',\n  '**': 'messageEntityBold',\n  '__': 'messageEntityItalic',\n  '~~': 'messageEntityStrike',\n  '_-_': 'messageEntityUnderline',\n  '||': 'messageEntitySpoiler'\n};\n\nexport const PASS_CONFLICTING_ENTITIES: Set<MessageEntity['_']> = new Set([\n  'messageEntityEmoji',\n  'messageEntityLinebreak',\n  'messageEntityCaret'\n]);\nfor(const i in MARKDOWN_ENTITIES) {\n  PASS_CONFLICTING_ENTITIES.add(MARKDOWN_ENTITIES[i]);\n}\n\nexport const PHONE_NUMBER_REG_EXP = /^\\+\\d+$/;\n\n/* export function parseEmojis(text: string) {\n  return text.replace(/:([a-z0-9\\-\\+\\*_]+?):/gi, function (all, shortcut) {\n    var emojiCode = EmojiHelper.shortcuts[shortcut]\n    if (emojiCode !== undefined) {\n      return EmojiHelper.emojis[emojiCode][0]\n    }\n    return all\n  })\n} */\n\n\n/* export function replaceUrlEncodings(urlWithEncoded: string) {\n  return urlWithEncoded.replace(/(%[A-Z\\d]{2})+/g, (str) => {\n    try {\n      return decodeURIComponent(str);\n    } catch (e) {\n      return str;\n    }\n  });\n} */\n","// https://github.com/twitter/twemoji-parser/blob/master/src/lib/regex.js\r\n\r\nexport function encodeEmoji(emojiText: string) {\r\n  const codepoints = toCodePoints(removeVS16s(emojiText)).join('-');\r\n  return codepoints;\r\n}\r\n\r\nconst vs16RegExp = /\\uFE0F/g;\r\n// avoid using a string literal like '\\u200D' here because minifiers expand it inline\r\nconst zeroWidthJoiner = String.fromCharCode(0x200d);\r\n\r\nconst removeVS16s = (rawEmoji: string) => (rawEmoji.indexOf(zeroWidthJoiner) < 0 ? rawEmoji.replace(vs16RegExp, '') : rawEmoji);\r\n\r\nexport function toCodePoints(unicodeSurrogates: string): Array<string> {\r\n  const points = [];\r\n  let char = 0;\r\n  let previous = 0;\r\n  let i = 0;\r\n  while(i < unicodeSurrogates.length) {\r\n    char = unicodeSurrogates.charCodeAt(i++);\r\n    if(previous) {\r\n      points.push((0x10000 + ((previous - 0xd800) << 10) + (char - 0xdc00)).toString(16));\r\n      previous = 0;\r\n    } else if(char > 0xd800 && char <= 0xdbff) {\r\n      previous = char;\r\n    } else {\r\n      points.push(char.toString(16));\r\n    }\r\n  }\r\n\r\n  if(points.length && points[0].length === 2) {\r\n    points[0] = '00' + points[0];\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nexport function getEmojiToneIndex(input: string) {\r\n  const match = input.match(/[\\uDFFB-\\uDFFF]/);\r\n  return match ? 5 - (57343 - match[0].charCodeAt(0)) : 0;\r\n}\r\n\r\nexport function getCountryEmoji(iso2: string) {\r\n  return String.fromCharCode(55356, 56741 + iso2.charCodeAt(0), 55356, 56741 + iso2.charCodeAt(1));\r\n}\r\n\r\nexport function emojiFromCodePoints(codePoints: string) {\r\n  return codePoints.split('-').reduce((prev, curr) => prev + String.fromCodePoint(parseInt(curr, 16)), '');\r\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [699,211,51,437,567], () => (__webpack_require__(4098)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames not based on template\n\tif (chunkId === 437) return \"437.77e92ccb32c21ff43a10.bundle.js\";\n\tif (chunkId === 567) return \"567.019ac6f8c218416774ed.bundle.js\";\n\t// return url for filenames based on template\n\treturn \"\" + ({\"211\":\"npm.big-integer\",\"699\":\"npm.pako\"}[chunkId] || chunkId) + \".\" + {\"8\":\"0544e00385e42a07883b\",\"51\":\"015549e15aab2a59d3a0\",\"211\":\"a7ea0f3283af2967a6ae\",\"301\":\"a3f22008d452affb1ae4\",\"642\":\"d6b90b5bc53545046507\",\"699\":\"f16d6f756c34f3914132\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t678: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = this[\"webpackChunktweb\"] = this[\"webpackChunktweb\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","oldGetScript","oldLoadScript","queryMap","countMap","next","EmojiVersions","Emoji","version","Object","assign","USER_AGENT","navigator","userAgent","IS_SAFARI","search","toLowerCase","indexOf","test","vendor","platform","maxTouchPoints","match","IS_FIREFOX","badCharsRe","trimRe","C2L","cleanSearchText","text","latinize","processSearchText","clearBadChars","ignoreCase","options","hasTag","includeTag","charAt","originalText","replace","clearBadCharsAndTrim","ch","latinizeCh","latinizeString","fixCyrillic","FILENAME_JOINER","getFileNameByLocation","location","ext","length","str","_","id","thumb_size","filter","Boolean","join","photo_id","pFlags","big","stickerset","short_name","emoticon","thumb_version","volume_id","local_id","url","console","error","downloadId","getFileURL","type","encodeURIComponent","JSON","stringify","IDB","constructor","db","this","name","storageIsAvailable","log","openDatabase","INSTANCES","push","isAvailable","createNew","openDbPromise","createIndexes","os","store","indexNames","Array","from","indexName","deleteIndex","indexes","index","contains","createIndex","keyPath","objectParameters","request","indexedDB","open","Promise","reject","message","finished","setTimeout","onerror","resolve","onsuccess","event","result","calledNew","onclose","e","onabort","transaction","target","close","onversionchange","onupgradeneeded","warn","oldVersion","newVersion","stores","forEach","objectStoreNames","objectStore","createObjectStore","static","find","instance","preserve","storage","IDBStorage","storeName","idb","create","delete","entryName","isArray","concat","getObjectStore","map","clear","save","value","idx","put","get","mode","callback","perf","performance","now","then","onError","clearTimeout","timeout","onComplete","results","requests","r","waitForTransactionComplete","oncomplete","callbackResult","left","onRequestFinished","i","getAll","environment","getEnvironment","setEnvironment","env","RootScope","super","myId","connectionStatus","premium","addEventListener","toPeerId","isPremium","status","dispatchEvent","args","invokeVoid","settings","getConnectionStatus","getPremium","dispatchEventSingle","state","stateStorage","getState","setByKey","key","object","splitted","split","getDeepProperty","slice","pop","setDeepProperty","first","pushToState","direct","onlyLocal","setKeyValueToStorage","set","HTTP","dcId","logSuffix","pending","debug","logTypes","Log","logger","connected","_send","body","fetch","method","response","arrayBuffer","buffer","TextDecoder","decode","Uint8Array","setConnected","err","destroyed","destroy","send","networker","promise","releasePending","releasing","splice","pause","Socket","handleOpen","handleError","handleClose","removeListeners","handleMessage","data","byteLength","ws","connect","removeEventListener","undefined","WebSocket","binaryType","randomize","arr","crypto","Error","getRandomValues","Obfuscation","_process","operation","cryptoMessagePort","transfer","init","codec","idPromise","release","initPayload","val","val2","reversedPayload","reverse","encKey","encIv","decKey","decIv","process","obfuscateTag","encrypted","encode","payload","tag","encodePacket","len","header","readPacket","bytesToHex","bytes","toString","TcpObfuscated","Connection","retryTimeout","abridged","obfuscation","autoReconnect","onOpen","connection","setConnectionStatus","cleanupSent","resend","onMessage","parseResponse","processMessage","messageId","sessionId","catch","shift","onClose","needTimeout","retryAt","time","Date","diff","lastCloseTime","isNaN","reconnectTimeout","ctx","reconnect","bodySent","forceReconnect","setAutoReconnect","once","enable","changeUrl","encodeBody","toEncode","encoded","releasingPending","sent","TEST_SUFFIX","getTelegramConnectionSuffix","connectionType","constructTelegramWebSocketUrl","suffix","path","DcConfigurator","sslSubdomains","dcOptions","host","port","chosenServers","transportSocket","chosenServer","oooohLetMeLive","transportHTTP","dcOption","chooseServer","transportType","reuse","hasOwnProperty","client","download","upload","servers","transports","transport","obj","indexOfAndSplice","MTTransportController","opened","Map","waitForWebSocket","pingTransports","dcConfigurator","https","websocket","httpPromise","websocketPromise","socket","isFulfilled","isRejected","isHttpAvailable","isWebSocketAvailable","all","pinging","setTransportValue","setTransportOpened","setTransportClosed","AppManager","setManagers","managers","loadStorages","storages","recordPromise","storagesKeys","keys","storagesPromises","storagesResults","resetStorages","size","loadStoragesInner","AppStoragesManager","names","createStorages","loadStorage","PasswordManager","apiManager","invokeApi","updateSettings","currentHashPromise","newHashPromise","params","password","new_settings","hint","email","currentPassword","cryptoWorker","invokeCrypto","newAlgo","new_algo","salt1","newPassword","hashes","new_password_hash","getInputCheckPassword","check","inputCheckPassword","auth","setUser","user","confirmPasswordEmail","code","resendPasswordEmail","cancelPasswordEmail","ReferenceDatabase","contexts","links","saveContext","reference","context","getContexts","Set","_context","deepEqual","add","getReferenceByLink","getContext","values","deleteContext","refreshReference","c","appMessagesManager","reloadMessages","peerId","refreshEmojiesSoundsPromise","appStickersManager","getAnimatedEmojiSounds","appProfileManager","getProfile","userId","appEmojiManager","getCustomEmojiDocuments","docId","hex","newHex","newContext","makeError","safeReplaceObject","wasObject","newObject","getPeerIdsFromMessage","peerIds","fromId","viaBotId","fwdFromId","media","contactUserId","user_id","recentVoters","recent_voters","recentReactions","recent_reactions","reaction","getPeerId","peer_id","action","userIds","users","inviter_id","chatIds","channel_id","chat_id","chatId","recentRepliers","recent_repliers","reply","defineNotNumerableProperties","props","writable","configurable","out","defineProperties","setDialogIndex","dialog","indexKey","GLOBAL_FOLDER_ID","DialogsStorage","folders","allDialogsLoaded","pinnedOrders","folderId","setDialogsLoaded","resetPinnedOrder","savePinnedOrders","dialogsOffsetDate","dialogsNum","dialogsIndex","cachedResults","query","count","dialogs","onUpdateFolderPeers","update","folder_peers","folderPeer","folder_id","peer","appPeersManager","dropDialog","pinned","handleDialogUnpinning","generateIndexForDialog","pushDialog","scheduleHandleNewDialogs","onUpdateDialogPinned","getDialogOnly","onUpdatePinnedDialogs","handleOrder","order","newPinned","getFolderDialogs","dialogsResult","applyDialogs","d","after","rootScope","appUsersManager","getSelf","peerText","getPeerSearchText","indexObject","onFilterUpdate","getCachedDialogs","processDialogForFilter","filterId","processDialogForFilters","getDialogIndexKeyByFilterId","prepareDialogUnreadCountModifying","chat","appChatsManager","getChat","dropDialogOnDeletion","apiUpdatesManager","addMultipleEventsListeners","updateFolderPeers","updateDialogPinned","updatePinnedDialogs","appStateManager","appStoragesManager","getCache","_order","setDialogsFromState","bind","appDraftsManager","addMissedDialogs","top_message","getServerMessageId","topMessage","saveMessages","saveDialog","getMessageByPeer","reloadConversation","isDialogsLoaded","loaded","every","getPinnedOrders","getOffsetDate","offsetDate","Math","min","sort","a","b","generateFolder","folder","unreadMessagesCount","unreadPeerIds","unreadUnmutedPeerIds","getFolder","skipMigrated","migratedTo","getNextDialog","currentPeerId","findIndex","getDialogIndexKey","filtersStorage","getFilter","localId","isPeerUnmuted","appNotificationsManager","isPeerLocalMuted","getFolderUnreadCount","unreadUnmutedCount","unreadCount","arrays","setDialogIndexInFilter","isRealFolder","testDialogForFilter","pinnedIndex","pinnedPeerIds","generateDialogIndex","generateDialogPinnedDateByIndex","getDialogIndex","getDialog","skipped","isObject","date","isPinned","tsNow","timeManager","getServerTimeOffset","filters","getFilters","wasIndex","wasDialog","wasDialogIndex","newDialogIndex","prepareFolderUnreadCountModifyingByDialog","insertInDescendSortedArray","callbacks","toggle","wasUnreadCount","getDialogUnreadCount","wasUnmuted","newUnreadCount","newUnmuted","addMessagesCount","modifyFolderUnreadCount","toggleDialog","toggleUnmuted","max","dispatchUnreadTimeout","_folder","justReturn","noPinnedOrderUpdate","topDate","generateDialogPinnedDate","channelId","isChannel","toChatId","channel","draft","unshift","setDialogToState","pts","historyStorage","getHistoryStorage","messagesStorage","getHistoryMessagesStorage","history","incomingMessage","mid","getMessageFromStorage","is_outgoing","peersStorage","requestPeersForKey","isAnyChat","newPts","getChannelState","requestPeer","ignoreOffsetDate","saveGlobalOffset","getDialogOffsetDate","savedGlobalOffsetDate","savedOffsetDate","dropDialogFromFolders","foundDialog","wasPinned","keepLocal","clearDialogFromState","releasePeer","dropDialogWithEvent","dropped","forEachReverse","saveApiUsers","saveApiChats","chats","messages","updatedDialogs","topMid","topPendingMid","pendingTopMsgs","topPendingMessage","maxId","updates","newUpdatesAfterReloadToHandle","saveUpdate","canSaveDialogByPeerId","wasDialogBefore","generateMessageId","wasTopMessage","generateTempMessageId","from_id","getOutputPeer","deleted","isOutgoing","migrated_to","deactivated","migratedToPeer","migratedFromTo","migratedToFrom","read_inbox_max_id","read_outbox_max_id","saveDraft","isOut","unread","unread_count","isEnd","insertSlice","setEnd","mergeReplyKeyboard","readMaxId","readOutboxMaxId","savePeerSettings","notify_settings","addChannelState","releaseUnreadCount","dialogsStorage","getDialogs","offsetIndex","limit","promises","fillContactsResult","fillContacts","cached","reloadMissingDialogsPromise","reloadMissingPeerIds","realFolderId","curDialogStorage","has","d1","d2","offset","loadedAll","isEnoughDialogs","isTopEnd","getTopMessages","convertment","PREPENDED_FILTERS","LOCAL_FILTER","flags","title","exclude_peers","include_peers","pinned_peers","excludePeerIds","includePeerIds","FiltersStorage","filtersArr","reloadedPeerIds","localFilters","generateLocalFilter","clearFilters","onUpdateDialogFilter","saveDialogFilter","findAndSplice","onUpdateDialogFilters","oldFilters","copy","getDialogFilters","_filterId","onUpdateDialogFilterOrder","includes","setLocalId","updateDialogFilter","updateDialogFilters","updateDialogFilterOrder","prependFilters","allChatsFilter","archiveFilter","allChatsFilterIndex","exclude_archived","exclude_unarchived","exclude_read","isDialogUnread","exclude_muted","unread_mentions_count","broadcasts","isBroadcast","groups","isAnyGroup","toUserId","isBot","bots","non_contacts","isContact","contacts","testDialogForFilterId","toggleDialogPin","getConfig","pinned_infolder_count_max","getInputPeerById","createDialogFilter","prepend","remove","getOutputDialogFilter","bool","f","filterIncludedPinnedPeers","peers","reloadDialogs","inputPeer","isAlreadyReloaded","reloadPromises","missingPeerIds","overwrite","invokeApiSingle","getSuggestedDialogsFilters","silent","assumeType","to","oldFilter","_filter","isFilterIdAvailable","getLimit","some","applyMixins","derivedCtor","constructors","baseCtor","getOwnPropertyNames","prototype","getOwnPropertyDescriptor","defineProperty","ApiUpdatesManager","updatesState","pendingPtsUpdates","pendingSeqUpdates","syncPending","syncLoading","channelStates","attached","processUpdateMessage","updateMessage","processOpts","seq","seqStart","seq_start","forceGetDifference","processUpdate","toId","fwd_from","reply_to","entities","pts_count","override","_constructor","setProxy","self","Proxy","saveUpdatesState","us","popPendingSeqUpdate","nextSeq","pendingUpdatesData","seqAwaiting","ptsAwaiting","popPendingPtsUpdate","curState","curPts","goodPts","goodIndex","getDifference","processLocalUpdate","wasSyncing","pts_total_limit","qts","differenceResult","other_updates","new_messages","apiMessage","nextState","intermediate_state","onDifferenceTooLong","justAName","getChannelDifference","channelState","bindPrefix","getChannelInput","final","lastPtsUpdateTime","fwdHeader","reason","hasUser","post","hasChat","isUser","popPts","popSeq","attach","langCode","noErrorBox","stateResult","setUpdatesProcessor","strs","en","ru","getChangelog","lang","res","ok","langStr","parseMarkdown","inbox_date","languages","filterUnique","language","AppAvatarsManager","savedAvatarURLs","removeFromAvatarsCache","isAvatarCached","saved","loadAvatar","photo","peerPhotoFileLocation","downloadOptions","dc_id","limitPart","apiFileManager","blob","URL","createObjectURL","AppCallsManager","calls","IS_CALL_SUPPORTED","updatePhoneCall","saveCall","phone_call","updatePhoneCallSignalingData","callId","phone_call_id","computeKey","g_b","p","call","isDiscarded","oldCall","getCall","getCallInput","access_hash","savePhonePhoneCall","phonePhoneCall","generateDh","random_length","dhConfig","requestCall","protocol","g_a_hash","video","getUserInput","random_id","discardCall","duration","connection_id","platforms","ignore","getRestrictionReason","reasons","isRestricted","AppChatsManager","isPeerNeeded","onChatUpdated","updateChannelParticipant","clearCache","updateChatDefaultBannedRights","default_banned_rights","getFromCache","apiChats","saveApiChat","oldChat","participants_count","changedPhoto","changedTitle","changedAnyBadge","verified","scam","fake","getChatTyped","hasRights","rights","isThread","editChatDefaultBannedRights","banned_rights","until_date","isMegagroup","megagroup","isInChat","good","getInputPeer","getChannelInputPeer","getChatInputPeer","allowMin","getChatPhoto","getChatString","createChannel","inviteToChannel","input","usersInputs","u","createChat","leaveChannel","joinChannel","addChatUser","fwdLimit","fwd_limit","deleteChatUser","leaveChat","leave","deleteChannel","deleteChat","migrateChat","updateUsername","username","editPhoto","inputFile","inputChatPhoto","file","editTitle","editAbout","about","editBanned","participant","getParticipantPeerId","timestamp","actor_id","prev_participant","new_participant","kicked_by","clearChannelParticipantBannedRights","kickFromChannel","view_messages","kickFromChat","resolveChannel","messagesChats","togglePreHistoryHidden","enabled","toggleSignatures","toggleNoForwards","setChatAvailableReactions","reactions","chatFull","getCachedFullChat","available_reactions","restrictionReasons","restriction_reason","restricted","getSendAs","invokeApiSingleProcess","processResult","sendAsPeers","importChatInvite","hash","checkUsername","getSponsoredMessage","invokeApiCacheable","cacheSeconds","sponsoredMessages","sponsoredMessage","viewSponsoredMessage","randomId","checkChatInvite","chatInvite","I18n","pluralRules","cacheLangPackPromise","setLangCode","lastRequestedLangCode","lastRequestedNormalizedLangCode","updateAmPm","timeFormat","dateTimeFormat","getDateTimeFormat","hour","minute","hour12","setHours","amText","format","amPmCache","am","pmText","pm","loadLocalLangPack","defaultCode","langSign","countries","strings","formatLocalStrings","default","saveLangPack","from_version","lang_code","local","loadLangPack","web","requestedServerLanguage","lang_pack","polyfillPromise","pushTo","v","langPack","appVersion","applyLangPack","currentLangCode","Intl","PluralRules","string","countriesList","country","langPackKey","default_name","lastAppliedLangCode","cachedDateTimeFormats","document","querySelectorAll","element","weakMap","entries","stringKey","stringValue","langValue","superFormatter","indexHolder","lastIndex","p1","p2","p3","p4","createElement","append","lastIndexOf","matchUrlProtocol","wrappedUrl","wrapUrl","href","onclick","setAttribute","DocumentFragment","firstChild","textContent","arg","pushNextArgument","plain","select","item","Node","getCacheLangPack","finally","setTimeFormat","haveToUpdate","IntlDateElement","getStrings","getLangPack","langPack1","langPack2","localLangPack1","localLangPack2","l","_Intl","window","WeakMap","IntlElementBase","classList","property","IntlElement","safeAssign","formatted","dataset","compareAndUpdate","json","DateTimeFormat","hours","getHours","getMinutes","capitalizeFirstLetter","i18n","i18n_","_i18n","months","days","getWeekNumber","UTC","getFullYear","getMonth","getDate","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","ceil","getTime","today","year","day","month","weekday","minYear","yearPattern","RegExp","monthYearOrDayPattern","yearOrDayAndMonthPattern","shortDate","longDate","numberOfDaysEachMonth","createForMonthYear","dates","selectedYear","currentYear","setFullYear","minDate","setMonth","maxDate","formatterMonthYear","createForDayMonth","validDateForMonth","formatterDayMonth","formatterYearMax","formatWeekLong","getDay","q","safeReplaceArrayInObject","trim","dayOfWeek","setDate","getDayOfWeek","distance","setTime","matches","exec","g1","g2","k","g3","parseInt","k1","EXTENSION_MIME_TYPE_MAP","pdf","tgv","tgs","wav","mp3","ogg","jpeg","jpg","png","gif","webp","mp4","webm","mov","svg","MIME_TYPE_EXTENSION_MAP","uploadWallPaperTempId","AppDocsManager","onServiceWorkerFail","docs","doc","supportsStreaming","thumbsStorage","deleteCacheContext","stickerCachedThumbs","uploadingWallPapers","online","saveDoc","oldDoc","file_reference","referenceDatabase","attributes","attribute","file_name","wrapPlainText","voice","mime_type","w","h","round_message","alt","stickerEmojiRaw","stickerSetInput","thumbs","IS_WEBP_SUPPORTED","sticker","IS_WEBM_SUPPORTED","animated","mappedMimeType","joiner","monthAsNumber","noSeconds","getSeconds","leadingZero","noTime","getFullDate","isServiceWorkerOnline","getCacheContext","setCacheContextURL","thumb","getDocumentDownloadOptions","getDocumentURL","getDoc","downloadDoc","queueId","onlyCache","downloadMedia","getLottieCachedThumb","toneIndex","saveLottiePreview","width","height","saveWebPConvertedStrippedThumb","stickerThumbConverted","getWallPapers","invokeApiHashable","accountWallpapers","wallPapers","wallpapers","wallPaper","prepareWallPaperUpload","cacheContext","wallpaper","slug","uploadWallPaper","fileName","downloaded","getGifs","gifs","requestDocPart","requestFilePart","getDocumentInputFileLocation","AppDraftsManager","drafts","updateDraftMessage","threadId","notify","getKey","getDraft","getAllDrafts","getAllDraftPromise","apiDraft","processApiDraft","force","isEmptyDraft","reply_to_msg_id","syncDraft","localDraft","saveOnServer","serverDraft","draftsAreEqual","draftObj","getInputEntities","no_webpage","saveLocalDraft","clearAllDrafts","combined","clearDraft","emptyDraft","setDraft","EMOJI_LANG_PACK","keywords","AppEmojiManager","keywordLangPacks","indexedLangPacks","getKeywordsPromises","recent","getRecentEmojisPromises","getCustomEmojiDocumentPromises","getEmojiKeywords","storageKey","pack","validateInitObject","keywordsDifference","packKeywords","keyword","emoticons","getBothEmojiKeywords","networkerFactory","native","getRecentEmojis","indexEmojis","searchEmojis","emojis","reduce","acc","POPULAR_EMOJI","recentEmoji","recentCustomEmoji","pushRecentEmoji","emoji","fixEmoji","docIds","document_id","documents","appDocsManager","getCachedCustomEmojiDocuments","setDebouncedGetCustomEmojiDocuments","getCustomEmojiDocumentsPromise","allIds","ids","getCustomEmojiDocument","getCustomEmojis","getEmojiStickers","AppGroupCallsManager","groupCalls","participants","nextOffsets","updateGroupCall","saveGroupCall","updateGroupCallParticipants","groupCallId","saveApiParticipants","groupCall","getCachedParticipants","prepareToSavingNextOffset","nextOffsetsMap","nextOffset","setNextOffset","newNextOffset","saveApiParticipant","skipCounterUpdating","oldParticipant","hasLeft","muted","can_self_unmute","getGroupCall","modified","just_joined","apiParticipants","editParticipant","getGroupCallInput","getInputPeerSelf","volume","raise_hand","raiseHand","video_paused","videoPaused","video_stopped","videoStopped","presentation_paused","presentationPaused","getGroupCallFull","participants_next_offset","shouldUpdate","createGroupCall","scheduleDate","schedule_date","getGroupCallParticipants","sources","groupCallParticipants","next_offset","hangUp","discard","groupCallInput","source","join_as","joinGroupCall","isMuted","joinVideo","leaveGroupCallPresentation","getPhotoInput","getPhotoMediaInput","ttl_seconds","getMediaInput","AppInlineBotsManager","inlineResults","setHash","getGeoInput","geo","lat","long","accuracy_radius","getInlineResults","botId","bot","geo_point","stopTime","botResults","queryId","query_id","appPhotosManager","savePhoto","generateQId","pushPopularBot","getTopPeers","topPeers","botPeerId","topPeer","rating","switchToPM","fromPeerId","startParam","startBot","checkSwitchReturn","getUser","bot_inline_placeholder","peerData","switchInlineQuery","callbackButtonClick","button","msg_id","sendInlineResult","queryAndResultIds","inlineResult","queryID","resultID","resultId","send_message","reply_markup","replyMarkup","sendText","inputMedia","messageMedia","caption","sendMessage","geoPoint","address","provider","venue_id","venue_type","phone_number","first_name","last_name","vcard","description","currency","total_amount","shipping_address_requested","start_param","sendOther","AppMessagesIdsManager","tempNum","num","MIDDLEWARE_ERROR","MiddlewareHelper","details","cleaned","inner","onCleanCallbacks","onDestroyCallbacks","onDestroy","clean","helper","parent","additionalCallback","middleware","onClean","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","cut","end","part","_arrayIndex","partLength","appTabsManager","tabs","start","getTabs","tab","addTab","deleteTab","getDocumentInput","processAfter","cb","UPDATE_STICKERSET_ORDER","AppMessagesManager","pendingByRandomId","pendingByMessageId","pendingAfterMsgs","tempFinalizeCallbacks","sendSmthLazyLoadQueue","needSingleMessages","fetchSingleMessagesPromise","extendedMedia","maxSeenId","newDialogsToHandle","notificationsHandlePromise","notificationsToHandle","reloadConversationsPeers","groupedTempId","typings","unreadMentions","goToNextMentionPromises","batchUpdates","uploadFilePromises","messagesStorageByPeerId","groupedMessagesStorage","scheduledMessagesStorage","historiesStorage","threadsStorage","searchesStorage","pinnedMessages","threadsServiceMessagesIdsStorage","threadsToReplies","handleNewDialogs","newMaxSeenId","incrementMaxSeenId","handleNotifications","_peerId","notifyPeerToHandle","getNotifyPeerSettings","peerTypeNotifySettings","mentioned","notifyAboutMessage","fwdCount","onUpdateMessageId","pendingData","tempId","finalizePendingMessageCallbacks","onUpdateNewMessage","getMessagePeer","isLocalThreadUpdate","createMessageStorage","threadKey","getThreadKey","reply_to_peer_id","reply_to_mid","receiptMessage","ignoreExisting","checkPendingMessage","updateMessageRepliesIfNeeded","findSlice","firstSlice","forceUserOnline","top_msg_id","handleNewMessage","inboxUnread","modifyCachedMentions","setDialogTopMessage","notifyPeer","onUpdateMessageReactions","recentReaction","previousReactions","previousRecentReactions","show_previews","peerReaction","pushBatchUpdate","batchUpdateReactions","setDialogToStateIfMessageIsTop","onUpdateDialogUnreadMark","unread_mark","onUpdateEditMessage","oldMessage","newMessage","handleEditedMessage","isTopMessage","clear_history","dispatchEditEvent","newReactions","grouped_id","onUpdateReadHistory","max_id","read_max_id","getObjectKeysAndSort","stillUnreadCount","still_unread_count","newUnreadMentionsCount","foundAffected","repliesKey","replyTo","reply_to_top_id","setCount","getReadMaxIdIfUnread","threadKeyPart","onUpdateReadMessagesContents","mids","findPeerIdByMids","media_unread","fixDialogUnreadMentionsIfNoMessage","onUpdateChannelAvailableMessages","availableMinId","available_min_id","onUpdateDeleteMessages","threadKeys","historyUpdated","handleDeletedMessages","threadsStorages","msgs","affected","onUpdateChannel","needDialog","onUpdateChannelReload","flushStoragesByPeerId","onUpdateChannelMessageViews","views","batchUpdateViews","onUpdateServiceNotification","popup","phone","onUpdatePinnedMessages","missingMessages","werePinned","hiddenPinnedMessages","onUpdateNotifySettings","onUpdateNewScheduledMessage","isScheduled","onUpdateDeleteScheduledMessages","onUpdateMessageExtendedMedia","extended_media","batch","toDispatch","getMessagesFromMap","previousResults","changedResults","reactionCount","previousReactionCount","_reactionCount","reactionsEqual","chosen_order","updateMessageID","updateNewDiscussionMessage","updateNewMessage","updateNewChannelMessage","updateDialogUnreadMark","updateEditMessage","updateEditChannelMessage","updateMessageReactions","updateReadChannelDiscussionInbox","updateReadChannelDiscussionOutbox","updateReadHistoryInbox","updateReadHistoryOutbox","updateReadChannelInbox","updateReadChannelOutbox","updateChannelReadMessagesContents","updateReadMessagesContents","updateChannelAvailableMessages","updateDeleteMessages","updateDeleteChannelMessages","updateChannel","updateChannelReload","updateChannelMessageViews","updateServiceNotification","updatePinnedMessages","updatePinnedChannelMessages","updateNotifySettings","updateNewScheduledMessage","updateDeleteScheduledMessages","updateMessageExtendedMedia","filterFunc","getScheduledMessagesStorage","webpage","appWebPagesManager","getCachedWebPage","drop","poll","appPollsManager","pollToMessages","batchUpdatesDebounced","debounce","maxSeenMsgId","sendEntites","entity","invokeAfterMessageIsSent","callbackName","finalize","editMessage","is_scheduled","newMedia","noWebPage","handled","replyToMsgId","MAX_LENGTH","message_length_max","webPage","getPeerMigratedTo","generateOutgoingMessage","toggleError","onMessagesSendError","sentRequestOptions","afterMessageId","sendAs","sendAsPeerId","apiPromise","invokeApiAfter","clear_draft","send_as","update_stickersets_order","wrapMessageEntities","beforeMessageSending","sequential","noop","sendFile","attachType","apiFileName","fileType","File","isDocument","Blob","isPhoto","IMAGE_MIME_TYPES_SUPPORTED","actionName","isVoiceMessage","waveform","isMedia","photoSize","sizes","objectURL","VIDEO_MIME_TYPES_SUPPORTED","videoAttribute","isRoundMessage","supports_streaming","noSound","thumbCacheContext","sentDeferred","uploadingFileName","getFileNameForUpload","uploaded","uploadPromise","load","thumbUploadPromise","cancelPendingMessage","setTyping","addNotifyListener","progress","percents","floor","done","total","notifyAll","force_file","isGroupedItem","background","ret","sendAlbum","files","sendFileDetails","groupId","o","invoke","multiMedia","multi_media","inputSingleMedia","inputs","sendContact","contactPeerId","getContactMediaInput","pollId","savePoll","total_voters","getPoll","getPhoto","postAuthor","getPeer","signatures","generateFromId","post_author","generateFlags","generateReplyHeader","via_bot_id","replies","generateReplies","replyToTopId","channelFull","linked_chat_id","comments","replies_pts","isAnonymousSending","generateForwardHeader","originalMessage","isUserHidden","from_name","userFull","getCachedFullUser","private_forward_name","channel_post","saved_from_msg_id","saved_from_peer","generateFakeAvatarMessage","Number","MAX_SAFE_INTEGER","getUploadPromise","uploadFileName","admin_rights","anonymous","fillConversations","getConversations","chatHistoryStorage","offset_date","offset_id","offset_peer","offsetPeerId","maxSeenIdIncremented","hasPrepend","noIdsDialogs","setFolderId","folderDialogs","dialogsLength","slicedDialogs","forwardMessages","config","overflowMids","forwarded_count_max","dropCaptions","dropAuthor","newMids","newMessages","replyToMid","replyToMessageIdx","newReplyToMid","getStickerEffectThumb","nopremium","group","from_peer","to_peer","with_my_score","withMyScore","drop_author","drop_media_captions","generateEmptyMessage","getMessagesStorageByKey","s","getMessagesStorage","getMessageById","getDialogByPeerId","cantForwardDeleteMids","cantForward","cantDelete","canForward","canDeleteMessage","inputDialogPeer","getInputDialogPeerById","reloadConversationsPromise","inputDialogPeers","fullfillLeft","doFlushHistory","just_clear","revoke","affectedHistory","flushHistory","justClear","getHistory","historyResult","ss","hidePinnedMessages","getPinnedMessage","getSearch","inputFilter","getPinnedMessagesCount","getPinnedMessagesMaxId","updatePinnedMessage","unpin","pm_oneside","unpinAllMessages","unpinAll","getAlbumText","getGroupsFirstMessage","minMid","getMidsByAlbum","groupedId","getMessagesByAlbum","getMidsByMessage","filterMessages","verify","appMessagesIdsManager","saveMessage","isMessage","overwriting","msgId","savedFromPeerId","savedFromMid","savedFrom","mediaContext","unsupported","originalDoc","messageKey","getMessageKeyForPendingWebPage","saveWebPage","appWebDocsManager","saveWebDocument","extendedMediaMedia","totalEntities","migrateFrom","migrateTo","video_sizes","appGroupCallsManager","migrateChecks","getFirstMessageToEdit","goodMessage","myPeerId","canEditMessage","apiEntities","myEntities","parseEntities","mergeEntities","reportMessages","editPeerFolders","getDialogPeer","markDialogUnread","read","fromChat","canMessageBeEdited","kind","goodMedias","edit_time_limit","getReplyKeyboard","messageReplyMarkup","lastReplyMarkup","selective","maxOutId","single_use","hidden","getSearchStorage","getSearchCounters","canCache","func","filterMessagesByInputFilterFromStorage","_storage","filterMessagesByInputFilter","nextRate","backLimit","offset_id_offset","next_rate","foundMsgs","min_date","max_date","add_offset","min_id","offsetId","offsetMessage","offset_rate","searchResult","foundCount","subscribeRepliesThread","getDiscussionMessage","generateThreadServiceStartMessage","maxMessageId","serviceStartMessage","is_single","getThreadServiceMessageId","getMessageWithReplies","newDialogsHandlePromise","deleteMessages","localMessageIds","creator","delete_messages","affectedMessages","readHistory","triedToReadMaxId","readPromise","getPeerString","readAllHistory","slicedArray","fixUnreadMentionsCountIfNeeded","goToNextMention","loadNextPromise","loadNextMentions","last","getUnreadMentions","mergeHistoryResult","minId","messagesMessages","readMessages","msgIds","getHistoryStorageTransferable","historySerialized","toJSON","getNotifyPeerTypeSettings","getNotifySettings","getInputNotifyPeerById","isMessageIsTopMessage","threadMessage","broadcastEventName","pendingMessage","finalizePendingMessage","mutePeer","muteUntil","mute_until","togglePeerMute","mute","canSendToPeer","canSendToUser","finalMessage","tempMessage","newPhoto","newDoc","newPhotoSize","oldCacheContext","getPhotoDownloadOptions","thumbSize","polls","handleReleasingMessage","getMessageReactionsListAndReadParticipants","skipReadParticipants","skipReactionsList","emptyMessageReactionsList","canViewMessageReadParticipants","getMessageReadParticipants","appReactionsManager","getMessageReactionsList","messageReactionsList","readParticipantsPeerIds","filteredReadParticipants","readPeerId","reactionsCount","readParticipants","appConfig","getAppConfig","chat_read_mark_size_threshold","chat_read_mark_expire_period","incrementMessageViews","increment","chatPeerIds","idleStartTime","getScheduledMessageByPeer","getScheduledMessages","sendScheduledMessages","deleteScheduledMessages","getMessageWithCommentReplies","isFetchIntervalNeeded","getNewHistory","unsetEnd","isBottomEnd","getEnds","offsetIdOffset","haveSlice","sliceMe","fulfilled","fillHistoryStorage","constructSlice","isHistoryResultEnd","topWasMeantToLoad","wasMaxId","requestHistory","newMaxId","deleteSlice","oldestMessage","foundSlice","_historyResult","fetchSingleMessages","requestPromises","getMessagesResult","getExtendedMedia","toRequest","fetchMessageReplyTo","replyToPeerId","typing","smth","deleteWebPageFromPending","updatePollToMessage","groupedStorage","albums","dispatchAlbumEdit","deletedMids","noforwards","noForwards","getElementCallback","newMap","peerIdStr","saveDefaultSendAs","default_send_as","convertInputKeyToKey","inputKey","MUTE_HIDE_MESSAGES_TITLE","AppNotificationsManager","peerSettings","notifyUsers","notifyChats","notifyBroadcasts","checkMuteUntil","checkMuteUntilTimeout","closestMuteUntil","peerNotifySettings","checkMuteUntilThrottled","throttle","notifySettings","getNotifyPeerTypePromise","getContactSignUpNotification","notifyContactsSignUp","setContactSignUpNotification","checkSoundStateIsMute","sound","isMuteLevelHideMessages","other_sound","mutePeerHideMessages","togglePeerMuteHideMessages","getPeerMuted","getPeerLocalSettings","respectType","n","typeNotifySettings","AppPeersManager","canPinMessage","getPeerPhoto","getUserPhoto","getUserString","getPeerUsername","getRestrictionReasonText","ignorePeerId","getUserInputPeer","getUserSearchText","getDialogType","getDeleteButtonText","AppPhotosManager","photos","oldPhoto","Infinity","getUserPhotos","inputUser","photosResult","photoIds","photoId","AppPollsManager","updateMessagePoll","poll_id","saveResults","chosenIndexes","answer","chosen","getInputMediaPoll","correctAnswers","solution","solutionEntities","correct_answers","solution_entities","sendVote","optionIds","answers","option","getResults","getVotes","votesList","stopPoll","closed","newPoll","AppPrivacyManager","privacy","updatePrivacy","rules","setPrivacy","privacyRules","inputRule","rule","getPrivacy","privacyKey","getGlobalPrivacySettings","setGlobalPrivacySettings","PEER_FULL_TTL","AppProfileManager","usersFull","chatsFull","fullExpiration","onUpdateUserTyping","typingsInPeer","t","cancelAction","getChatFull","onUpdatePeerBlocked","blocked","updateChatParticipants","updateChatParticipantAdd","_participants","updateChatParticipantDelete","updateUserTyping","updateChatUserTyping","updateChannelUserTyping","updatePeerBlocked","fullChat","updated","call_active","hasChatPhoto","chat_photo","refreshFullPeer","invalidateChannelParticipants","usersUserFull","full_user","profile_photo","botInfo","bot_info","referenceContext","description_document","description_photo","getProfileByPeerId","getCachedProfileByPeerId","getFullPhoto","profile","getChannelFull","full_chat","getChatInviteLink","exported_invite","link","exportedInvite","getChannelParticipants","broadcast","getChannelParticipant","channelParticipant","fullChannel","processError","getMentions","processUserIds","ratingMap","cP","updateProfile","saveApiUser","uploadProfilePhoto","updateResult","strippedThumb","stripped_thumb","previous","deletePhotos","deletedList","verifyParticipantForOnlineCount","reduceParticipantsForOnlineCount","getOnlines","chatInfo","channelParticipants","onlines","getPeerTypings","callbackifyAll","SAVE_DOC_KEYS","REFERENCE_CONTEXT","AppReactionsManager","availableReactions","getAvailableReactions","sendReactionPromises","lastSendingTimes","availableReaction","around_animation","static_icon","appear_animation","center_icon","messagesAvailableReactions","getActiveAvailableReactions","callbackify","inactive","getAvailableReactionsForPeer","activeAvailableReactions","unshiftQuickReaction","getQuickReaction","quickReaction","chatAvailableReactions","filteredChatAvailableReactions","unshiftQuickReactionInner","getAvailableReactionsByMessage","isReactionActive","reactions_default","getReactionCached","getReaction","getMessagesReactions","setDefaultReaction","sendReaction","lastSendingTimeKey","unsetReactionCount","canSeeList","can_see_list","chosenReactions","unsetReactions","chosenReactionIdx","chosenReactionCount","chosenReactionsLength","reactionCountIdx","id1","id2","promiseKey","editMessageUpdateIdx","editMessageUpdate","EMOJI_SET_LOCAL_ID","EMOJI_ANIMATIONS_SET_LOCAL_ID","LOCAL_IDS_SET","AppStickersManager","processAllStickersResult","allStickers","sets","stickerSet","videos","getStickerSetPromises","getStickersByEmoticonsPromises","sounds","getAnimatedEmojiStickerSet","getGreetingStickersPromise","getGreetingStickersTimeout","getGreetingSticker","onStickersUpdated","updateNewStickerSet","saveStickerSet","updateRecentStickers","updateFavedStickers","updateMoveStickerSetToTop","stickers","getFavedStickersStickers","getRecentStickersStickers","justPreload","getStickersByEmoticon","greetingStickers","random","saveStickers","canUseStickerSetCache","useCache","refreshTime","getStickerSet","cachedSet","getStickerSetInput","saveById","animations","getAnimatedEmojiSoundsPromise","emojies_sounds","bytesStr","atob","file_reference_base64","charCodeAt","this_dc","getRecentStickers","recentStickers","saveRecentSticker","unsave","_doc","docEmoticon","faved","cleanEmoji","getAnimatedEmojiSticker","isAnimation","packs","getAnimatedEmojiSoundDocument","preloadAnimatedEmojiSticker","preloadEmojiPromise","preloadAnimatedEmojiStickerAnimation","animation","preloadSticker","isPremiumEffect","video_thumbs","newSet","setToCache","needSave","installed_date","getStickerSetThumbDownloadOptions","thumb_dc_id","isAnimated","mimeType","getFeaturedStickers","covered","getPromoPremiumStickers","getPremiumStickers","getFavedStickers","favedStickers","getFavedStickersLimit","faveSticker","unfave","toggleStickerSet","archived","toggleStickerSets","searchStickerSets","excludeFeatured","exclude_featured","foundSaved","cache","cover","getAllStickers","preloadStickerSets","includeOurStickers","messagesStickers","installedSets","foundStickers","cachedStickersAnimated","cachedStickersStatic","iteratePacks","clearRecentStickers","cleanUsername","AppUsersManager","usernames","getTopPeersPromises","contactsIndex","createSearchIndex","contactsFillPromise","contactsList","updatedContactsList","updateUsersStatuses","timestampNow","updateUserStatus","setInterval","expires","was_online","setUserToStateIfNeeded","updateUserPhoto","updateUserName","setUserNameToCache","checkPremium","contactsListCachedTime","contact","mutual_contact","pushContact","recentSearch","onContactsModified","fromServer","pushRecentSearch","clearRecentSearch","resolveUsername","resolvedPeer","processResolvedPeer","resolvePhone","popContact","getContacts","includeSaved","sortBy","_contactsList","userId1","userId2","sortName1","sortName","sortName2","localeCompare","status1","getUserStatusForSort","myUserId","testSelfSearch","getContactsPeerIds","toggleBlock","block","apiUsers","oldUser","oldSearchUsername","searchUsername","fullName","wasContact","newContact","onContactUpdated","isUserOnlineVisible","isRegularUser","support","isNonContactUser","eventTimestamp","importContact","importContacts","phones","inputContacts","j","client_id","importedContactsResult","imported","importedContact","topPeersCache","cachedTime","categories","getBlocked","contactsBlocked","getLocated","self_expires","searchContacts","pathname","my_results","curIsContact","setUserStatus","offline","updateMyOnlineStatus","addContact","showPhone","add_phone_privacy_exception","deleteContacts","photoTypeSet","AppWebPagesManager","webpages","pendingWebPages","updateWebPage","apiWebPage","oldWebPage","isUpdated","siteName","site_name","shortTitle","author","pendingSet","getWebPage","readBlobAsArrayBuffer","readBlobAs","fileNameRFC","escape","DownloadWriter","serviceMessagePort","getServiceMessagePort","write","chunk","saveToStorage","DownloadStorage","getFile","prepareWriting","headers","cancel","getWriter","MIN_PART_SIZE","IGNORE_ERRORS","ApiFileManager","cacheStorage","downloadStorage","downloadPromises","uploadPromises","downloadPulls","downloadActives","refreshReferencePromises","maxUploadParts","maxDownloadParts","uncompressTGS","uncompressTGV","svgIndex","__","fixFirefoxSvg","TextEncoder","convertWebp","convertOpus","webFileDcId","webfile_dc_id","upload_max_fileparts_premium","upload_max_fileparts_default","downloadRequest","activeDelta","downloadPull","downloadCheck","downloadLimit","setQueueId","getFileStorage","cancelDownload","canceled","requestWebFilePart","checkCancel","fileDownload","getDelta","checkedReference","getLimitPart","isUpload","maxParts","maxPartSize","inputFileLocation","isDownloading","getDownload","getUpload","getConvertMethod","IS_OPUS_SUPPORTED","allocateDeferredPromises","startOffset","delayed","writeDeferred","writePromise","originalMimeType","convertMethod","getDownloadFileNameFromOptions","cacheFileName","errorHandler","prepared","cachePrepared","downloadPrepared","possibleSize","_errorHandler","writer","truncate","downloadFileName","readBlobAsUint8Array","isWebFile","requestPart","dispatchProgress","throttledDispatchProgress","superpuper","isFinal","getParts","replaceParts","processedResult","getDownloadMediaDetails","downloadMediaURL","downloadMediaVoid","fileSize","isBigFile","partSize","totalParts","fileId","resultInputFile","parts","md5_checksum","resolved","it","_part","doneParts","file_id","file_part","file_total_parts","fileUpload","generator","ApiManagerMethods","apiPromisesSingleProcess","apiPromisesSingle","apiPromisesCacheable","afterMessageIdTemp","setUserAuth","prepareTempMessageId","queryJSON","cacheKey","oldPromise","getNewPromise","newPromise","ignore_restriction_reasons","pin","folderPin","bio","ApiManager","cachedNetworkers","cachedExportPromise","gettingNetworkers","baseDcId","afterMessageTempIds","changeTransportType","updateConfig","iterateNetworkers","getTransportType","connections","dcs","array","oldTransportType","oldObject","oldGetKey","newGetKey","info","changeNetworkerTransport","getBaseDcId","sessionStorage","setBaseDcId","userAuth","dcID","user_auth","wasDcId","getNetworker","setOnDrainIfNeeded","dc","logOut","loggingOut","storageKeys","storageResult","logoutPromises","ignoreErrors","toggleStorages","generateNetworkerGetKey","networkers","maxNetworkers","found","isOnline","ak","authKeyHex","serverSaltHex","authKey","bytesFromHex","authKeyId","serverSalt","authorizer","_error","newTransportType","removeTransport","stack","getNetworkerVoid","oldTransport","changeTransport","onNetworkerDrain","onDrain","removeNetworker","isFileNetworker","canRelease","setDrainTimeout","updatesProcessor","cachedNetworker","startTime","interval","isStopped","clearInterval","performRequest","wrapApiCall","exportResolve","exportReject","exportedAuth","newDcId","unsetConnectionInited","rawError","waitTime","floodMaxTimeout","attachPromise","originalError","PeersStorage","neededPeers","singlePeerMap","thumbFullSize","ThumbsStorage","thumbsCache","intToUint","ulongFromInts","high","low","shiftLeft","safeBigInt","ulongBigInt","pow","longBigInt","divide","bigIntFromBytes","base","boolFalse","predicate","boolTrue","vector","gzipPacked","TLSerialization","mtproto","startMaxLength","createBuffer","ArrayBuffer","intView","Int32Array","byteView","getArray","resultBuffer","resultInt32","subarray","getBuffer","getBytes","typed","resultArray","getOffset","checkLength","needBytes","previousBuffer","previousArray","writeInt","field","storeInt","storeBool","storeLongP","iHigh","iLow","storeLong","sLong","storeIntBytes","_bigInt","bigInt","isNegative","quotient","remainder","divmod","toJSNumber","storeDouble","Float64Array","storeString","sUTF8","unescape","storeBytes","bits","storeRawBytes","storeMethod","methodName","methodData","methods","m","flagsOffsets","param","condType","fieldBit","storeObject","paramName","substr","itemType","schema","isBare","constructorData","TLDeserialization","readInt","fetchInt","fetchDouble","doubleView","fetchLong","ulong","greater","minus","greaterOrEquals","abs","fetchBool","fetchObject","fetchString","String","fromCharCode","decodeURIComponent","fetchBytes","fetchIntBytes","fetchRawBytes","fetchVector","fallback","checkType","constructorCmp","uncompressed","constructorsIndex","schemaFallback","int1","int2","overrideKey","isCond","formatJSONValue","jsonValue","objectValues","objectValue","setOffset","addPadding","blockSize","zeroes","blockSizeAsTotalLength","needPadding","padding","bufferConcats","delays","disconnectDelayMin","disconnectDelayMax","pingInterval","pingMaxTime","connectionTimeout","RESEND_OPTIONS","noSchedule","notContentRelated","invokeAfterMsgConstructor","networkerTempId","MTPNetworker","lastServerMessages","sentMessages","pendingMessages","pendingAcks","pendingResendReq","nextReq","checkConnectionPeriod","lastResponseTime","activeRequests","sendPingDelayDisconnect","pingDelayDisconnectDeferred","lastPingTime","disconnectDelay","round","timeoutTime","lastPingStartTime","pingId","lastPingDelayDisconnectId","wrapMtpCall","ping_id","disconnect_delay","rejectTimeout","elapsedTime","checkLongPoll","isClean","longPollPending","sleepAfter","sendLongPoll","checkConnection","clearCheckConnectionTimeout","serializer","pingMessage","generateId","seq_no","generateSeqNo","sendEncryptedRequest","toggleOffline","checkConnectionTimeout","authKeyUint8","convertToUint8Array","isFileUpload","isFileDownload","updateSession","seqNo","prevSessionId","updateSentMessage","sentMessageId","sentMessage","container","innerSentMessageId","innerSentMessage","pushMessage","wrapMtpMessage","connectionInited","invokeWithLayer","initConnection","resultType","isAPI","nextReqTimeout","longPollInterval","clearPingDelayDisconnect","forceReconnectTimeout","sendingLongPoll","max_delay","wait_after","max_wait","noResponse","longPoll","delay","checkConnectionRetryAt","scheduleRequest","handleSentEncryptedRequestHTTP","noResponseMsgs","sqrt","pushResend","shouldResolve","onDrainTimeout","willChange","onConnectionStatusChange","innerMsgId","acked","getMsgKey","dataWithPadding","x","msgKeyLargePlain","msgKeyLarge","getAesKeyIv","msgKey","sha2aText","sha2bText","aesKey","aesIv","sha2a","sha2b","akStopped","performScheduledRequest","ackMsgIds","msg_ids","pendingResendReqLength","outMessage","messagesByteLen","hasApiCall","hasHttpWait","lengthOverflow","compare","messageByteLength","generateContainerMessage","messageWithBody","innerMessages","getEncryptedMessage","keyIv","getDecryptedMessage","encryptedData","getEncryptedOutput","dataBuffer","paddingLength","encryptedResult","requestData","baseError","responseBuffer","deserializer","bytesCmp","calcMsgKey","totalLength","messageBodyLength","messageBody","mt_message","seqno","mt_rpc_result","req_msg_id","applyServerSalt","newServerSalt","toArray","ackMessage","reqResend","notEmpty","processMessageAck","error_message","error_code","msg","applyServerTime","serverTime","shiftRight","innerMessage","new_server_salt","bad_msg_id","changedTimeOffset","badMessage","first_msg_id","server_salt","answer_msg_id","lastResendReq","lastResend","pendingResend","reqMsgId","badMsgId","pos","NetworkerFactory","startAll","stoppedNetworkers","stopAll","setLanguage","testPublicKeysHex","modulus","exponent","publisKeysHex","publicKeysParsed","preparePromise","prepare","keyParsed","RSAPublicKey","fingerprintBytes","fingerprints","fingerprintHex","fill","foundKey","fingerprint","bytesXor","bytes1","bytes2","Authorizer","sendPlainRequest","requestArray","requestLength","headerArray","errorCode","auth_key_id","msg_len","sendReqPQ","nonce","rsaKeysManager","serverNonce","server_nonce","pq","server_public_key_fingerprints","publicKey","pAndQ","sendReqDhParams","newNonce","p_q_inner_data_dc","new_nonce","pQInnerDataSerialization","dataPadReversed","keyAesEncrypted","tempKey","dataWithHash","aesEncrypted","keyAesEncryptedBigInt","publicKeyModulusBigInt","getKeyAesEncrypted","req_DH_params","public_key_fingerprint","encrypted_data","requestBytes","newNonceHash","new_nonce_hash","decryptServerDhDataAnswer","encrypted_answer","sendSetClientDhParams","encryptedAnswer","localTime","tmpAesKey","tmpAesIv","answerWithHash","answerWithPadding","g","dhPrime","dh_prime","gA","g_a","server_time","retry","verifyDhParams","dhPrimeHex","gABigInt","dhPrimeBigInt","subtract","twoPow","gBytes","gB","retry_id","authKeyHash","authKeyAux","newNonceHash1","new_nonce_hash1","newNonceHash2","new_nonce_hash2","newNonceHash3","new_nonce_hash3","getTransportTypePromise","_try","TimeManager","lastMessageId","timeOffset","timeTicks","newTimeOffset","changed","server_time_offset","AppWebDocsManager","webDocument","AppPaymentsManager","getInputInvoiceBySlug","getInputInvoiceByPeerId","getPaymentForm","invoice","paymentForm","getPaymentReceipt","validateRequestedInfo","sendPaymentForm","formId","requestedInfoId","shippingOptionId","credentials","tipAmount","form_id","requested_info_id","shipping_option_id","tip_amount","clearSavedInfo","appManagersManager","cryptoWorkersURLs","cryptoPortsAttached","cryptoPortPromise","getManagers","manager","apply","ports","originalUrl","newURLs","createManagers","appAvatarsManager","appCallsManager","appPrivacyManager","appInlineBotsManager","passwordManager","appPaymentsManager","_serviceMessagePort","_isServiceWorkerOnline","pushedKeys","clearWrite","invokeExceptSource","serviceWorkerOnline","serviceWorkerPort","detachPort","attachPort","messagePort","onConnect","onDisconnect","listenPort","sendPort","attachListenPort","attachSendPort","setOnPortDisconnect","listenMessagePort","NULL_PEER_ID","REPLIES_PEER_ID","REPLIES_HIDDEN_CHANNEL_ID","SERVICE_PEER_ID","MUTE_UNTIL","MAX_FILE_SAVE_SIZE","THUMB_TYPE_FULL","FOLDER_ID_ALL","FOLDER_ID_ARCHIVE","REAL_FOLDERS","START_LOCAL_ID","ALPHA_CHARS_REG_EXP","URL_ALPHANUMERIC_REG_EXP_PART","URL_PROTOCOL_REG_EXP_PART","URL_REG_EXP","URL_ANY_PROTOCOL_REG_EXP","FULL_REG_EXP","EMAIL_REG_EXP","MARKDOWN_REG_EXP","MARKDOWN_ENTITIES","PASS_CONFLICTING_ENTITIES","PHONE_NUMBER_REG_EXP","encodeEmoji","emojiText","unicodeSurrogates","points","char","toCodePoints","removeVS16s","vs16RegExp","zeroWidthJoiner","rawEmoji","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","getter","__esModule","definition","enumerable","chunkId","miniCssF","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","scriptUrl","importScripts","currentScript","src","scripts","getElementsByTagName","retries","realSrc","cacheBust","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","moreModules","runtime"],"sourceRoot":""}